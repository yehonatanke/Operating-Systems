
kernel:     file format elf32-i386


Disassembly of section .text:

80100000 <multiboot_header>:
80100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh
80100006:	00 00                	add    %al,(%eax)
80100008:	fe 4f 52             	decb   0x52(%edi)
8010000b:	e4                   	.byte 0xe4

8010000c <entry>:

# Entering xv6 on boot processor, with paging off.
.globl entry
entry:
  # Turn on page size extension for 4Mbyte pages
  movl    %cr4, %eax
8010000c:	0f 20 e0             	mov    %cr4,%eax
  orl     $(CR4_PSE), %eax
8010000f:	83 c8 10             	or     $0x10,%eax
  movl    %eax, %cr4
80100012:	0f 22 e0             	mov    %eax,%cr4
  # Set page directory
  movl    $(V2P_WO(entrypgdir)), %eax
80100015:	b8 00 c0 11 00       	mov    $0x11c000,%eax
  movl    %eax, %cr3
8010001a:	0f 22 d8             	mov    %eax,%cr3
  # Turn on paging.
  movl    %cr0, %eax
8010001d:	0f 20 c0             	mov    %cr0,%eax
  orl     $(CR0_PG|CR0_WP), %eax
80100020:	0d 00 00 01 80       	or     $0x80010000,%eax
  movl    %eax, %cr0
80100025:	0f 22 c0             	mov    %eax,%cr0

  # Set up the stack pointer.
  movl $(stack + KSTACKSIZE), %esp
80100028:	bc c0 f5 11 80       	mov    $0x8011f5c0,%esp

  # Jump to main(), and switch to executing at
  # high addresses. The indirect call is needed because
  # the assembler produces a PC-relative instruction
  # for a direct jump.
  mov $main, %eax
8010002d:	b8 30 3b 10 80       	mov    $0x80103b30,%eax
  jmp *%eax
80100032:	ff e0                	jmp    *%eax
80100034:	66 90                	xchg   %ax,%ax
80100036:	66 90                	xchg   %ax,%ax
80100038:	66 90                	xchg   %ax,%ax
8010003a:	66 90                	xchg   %ax,%ax
8010003c:	66 90                	xchg   %ax,%ax
8010003e:	66 90                	xchg   %ax,%ax

80100040 <binit>:
80100040:	55                   	push   %ebp
80100041:	89 e5                	mov    %esp,%ebp
80100043:	53                   	push   %ebx
80100044:	bb f4 f5 11 80       	mov    $0x8011f5f4,%ebx
80100049:	83 ec 0c             	sub    $0xc,%esp
8010004c:	68 00 eb 10 80       	push   $0x8010eb00
80100051:	68 c0 f5 11 80       	push   $0x8011f5c0
80100056:	e8 75 65 00 00       	call   801065d0 <initlock>
8010005b:	c7 05 84 79 12 80 34 	movl   $0x80127934,0x80127984
80100062:	79 12 80 
80100065:	c7 05 88 79 12 80 34 	movl   $0x80127934,0x80127988
8010006c:	79 12 80 
8010006f:	83 c4 10             	add    $0x10,%esp
80100072:	ba 34 79 12 80       	mov    $0x80127934,%edx
80100077:	eb 09                	jmp    80100082 <binit+0x42>
80100079:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80100080:	89 c3                	mov    %eax,%ebx
80100082:	8d 43 0c             	lea    0xc(%ebx),%eax
80100085:	83 ec 08             	sub    $0x8,%esp
80100088:	89 53 54             	mov    %edx,0x54(%ebx)
8010008b:	c7 43 50 34 79 12 80 	movl   $0x80127934,0x50(%ebx)
80100092:	68 07 eb 10 80       	push   $0x8010eb07
80100097:	50                   	push   %eax
80100098:	e8 23 64 00 00       	call   801064c0 <initsleeplock>
8010009d:	a1 88 79 12 80       	mov    0x80127988,%eax
801000a2:	83 c4 10             	add    $0x10,%esp
801000a5:	89 da                	mov    %ebx,%edx
801000a7:	89 58 50             	mov    %ebx,0x50(%eax)
801000aa:	8d 83 60 04 00 00    	lea    0x460(%ebx),%eax
801000b0:	89 1d 88 79 12 80    	mov    %ebx,0x80127988
801000b6:	3d 34 79 12 80       	cmp    $0x80127934,%eax
801000bb:	75 c3                	jne    80100080 <binit+0x40>
801000bd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801000c0:	c9                   	leave  
801000c1:	c3                   	ret    
801000c2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801000c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801000d0 <invalidateblocks>:
801000d0:	55                   	push   %ebp
801000d1:	89 e5                	mov    %esp,%ebp
801000d3:	53                   	push   %ebx
801000d4:	83 ec 10             	sub    $0x10,%esp
801000d7:	8b 5d 08             	mov    0x8(%ebp),%ebx
801000da:	68 c0 f5 11 80       	push   $0x8011f5c0
801000df:	e8 ec 65 00 00       	call   801066d0 <acquire>
801000e4:	a1 88 79 12 80       	mov    0x80127988,%eax
801000e9:	83 c4 10             	add    $0x10,%esp
801000ec:	3d 34 79 12 80       	cmp    $0x80127934,%eax
801000f1:	75 0f                	jne    80100102 <invalidateblocks+0x32>
801000f3:	eb 1f                	jmp    80100114 <invalidateblocks+0x44>
801000f5:	8d 76 00             	lea    0x0(%esi),%esi
801000f8:	8b 40 54             	mov    0x54(%eax),%eax
801000fb:	3d 34 79 12 80       	cmp    $0x80127934,%eax
80100100:	74 12                	je     80100114 <invalidateblocks+0x44>
80100102:	39 58 04             	cmp    %ebx,0x4(%eax)
80100105:	75 f1                	jne    801000f8 <invalidateblocks+0x28>
80100107:	83 20 f9             	andl   $0xfffffff9,(%eax)
8010010a:	8b 40 54             	mov    0x54(%eax),%eax
8010010d:	3d 34 79 12 80       	cmp    $0x80127934,%eax
80100112:	75 ee                	jne    80100102 <invalidateblocks+0x32>
80100114:	c7 45 08 c0 f5 11 80 	movl   $0x8011f5c0,0x8(%ebp)
8010011b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010011e:	c9                   	leave  
8010011f:	e9 cc 66 00 00       	jmp    801067f0 <release>
80100124:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010012a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

80100130 <devicerw>:
80100130:	55                   	push   %ebp
80100131:	89 e5                	mov    %esp,%ebp
80100133:	53                   	push   %ebx
80100134:	83 ec 04             	sub    $0x4,%esp
80100137:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8010013a:	8b 55 08             	mov    0x8(%ebp),%edx
8010013d:	f6 03 04             	testb  $0x4,(%ebx)
80100140:	74 2e                	je     80100170 <devicerw+0x40>
80100142:	68 00 04 00 00       	push   $0x400
80100147:	8b 43 08             	mov    0x8(%ebx),%eax
8010014a:	c1 e0 0a             	shl    $0xa,%eax
8010014d:	50                   	push   %eax
8010014e:	8d 43 60             	lea    0x60(%ebx),%eax
80100151:	50                   	push   %eax
80100152:	52                   	push   %edx
80100153:	e8 78 21 00 00       	call   801022d0 <writei>
80100158:	8b 03                	mov    (%ebx),%eax
8010015a:	83 c4 10             	add    $0x10,%esp
8010015d:	83 e0 fb             	and    $0xfffffffb,%eax
80100160:	83 c8 02             	or     $0x2,%eax
80100163:	89 03                	mov    %eax,(%ebx)
80100165:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80100168:	c9                   	leave  
80100169:	c3                   	ret    
8010016a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80100170:	68 00 04 00 00       	push   $0x400
80100175:	8b 43 08             	mov    0x8(%ebx),%eax
80100178:	c1 e0 0a             	shl    $0xa,%eax
8010017b:	50                   	push   %eax
8010017c:	8d 43 60             	lea    0x60(%ebx),%eax
8010017f:	50                   	push   %eax
80100180:	52                   	push   %edx
80100181:	e8 3a 20 00 00       	call   801021c0 <readi>
80100186:	8b 03                	mov    (%ebx),%eax
80100188:	83 c4 10             	add    $0x10,%esp
8010018b:	83 e0 fb             	and    $0xfffffffb,%eax
8010018e:	83 c8 02             	or     $0x2,%eax
80100191:	89 03                	mov    %eax,(%ebx)
80100193:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80100196:	c9                   	leave  
80100197:	c3                   	ret    
80100198:	90                   	nop
80100199:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

801001a0 <brw>:
801001a0:	55                   	push   %ebp
801001a1:	89 e5                	mov    %esp,%ebp
801001a3:	53                   	push   %ebx
801001a4:	83 ec 10             	sub    $0x10,%esp
801001a7:	8b 5d 08             	mov    0x8(%ebp),%ebx
801001aa:	ff 73 04             	pushl  0x4(%ebx)
801001ad:	e8 5e 0e 00 00       	call   80101010 <getinodefordevice>
801001b2:	83 c4 10             	add    $0x10,%esp
801001b5:	85 c0                	test   %eax,%eax
801001b7:	74 17                	je     801001d0 <brw+0x30>
801001b9:	83 ec 08             	sub    $0x8,%esp
801001bc:	53                   	push   %ebx
801001bd:	50                   	push   %eax
801001be:	e8 6d ff ff ff       	call   80100130 <devicerw>
801001c3:	83 c4 10             	add    $0x10,%esp
801001c6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801001c9:	c9                   	leave  
801001ca:	c3                   	ret    
801001cb:	90                   	nop
801001cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801001d0:	89 5d 08             	mov    %ebx,0x8(%ebp)
801001d3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801001d6:	c9                   	leave  
801001d7:	e9 34 29 00 00       	jmp    80102b10 <iderw>
801001dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801001e0 <bread>:
801001e0:	55                   	push   %ebp
801001e1:	89 e5                	mov    %esp,%ebp
801001e3:	57                   	push   %edi
801001e4:	56                   	push   %esi
801001e5:	53                   	push   %ebx
801001e6:	83 ec 1c             	sub    $0x1c,%esp
801001e9:	8b 7d 08             	mov    0x8(%ebp),%edi
801001ec:	8b 75 0c             	mov    0xc(%ebp),%esi
801001ef:	e8 8c 62 00 00       	call   80106480 <proc_get_cgroup>
801001f4:	83 ec 0c             	sub    $0xc,%esp
801001f7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
801001fa:	68 c0 f5 11 80       	push   $0x8011f5c0
801001ff:	e8 cc 64 00 00       	call   801066d0 <acquire>
80100204:	8b 1d 88 79 12 80    	mov    0x80127988,%ebx
8010020a:	83 c4 10             	add    $0x10,%esp
8010020d:	81 fb 34 79 12 80    	cmp    $0x80127934,%ebx
80100213:	75 16                	jne    8010022b <bread+0x4b>
80100215:	eb 59                	jmp    80100270 <bread+0x90>
80100217:	89 f6                	mov    %esi,%esi
80100219:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80100220:	8b 5b 54             	mov    0x54(%ebx),%ebx
80100223:	81 fb 34 79 12 80    	cmp    $0x80127934,%ebx
80100229:	74 45                	je     80100270 <bread+0x90>
8010022b:	3b 7b 04             	cmp    0x4(%ebx),%edi
8010022e:	75 f0                	jne    80100220 <bread+0x40>
80100230:	3b 73 08             	cmp    0x8(%ebx),%esi
80100233:	75 eb                	jne    80100220 <bread+0x40>
80100235:	83 43 4c 01          	addl   $0x1,0x4c(%ebx)
80100239:	83 ec 0c             	sub    $0xc,%esp
8010023c:	68 c0 f5 11 80       	push   $0x8011f5c0
80100241:	e8 aa 65 00 00       	call   801067f0 <release>
80100246:	8d 43 0c             	lea    0xc(%ebx),%eax
80100249:	89 04 24             	mov    %eax,(%esp)
8010024c:	e8 af 62 00 00       	call   80106500 <acquiresleep>
80100251:	59                   	pop    %ecx
80100252:	ff 75 e4             	pushl  -0x1c(%ebp)
80100255:	e8 a6 e5 00 00       	call   8010e800 <cgroup_mem_stat_pgfault_incr>
8010025a:	83 c4 10             	add    $0x10,%esp
8010025d:	f6 03 02             	testb  $0x2,(%ebx)
80100260:	74 78                	je     801002da <bread+0xfa>
80100262:	8d 65 f4             	lea    -0xc(%ebp),%esp
80100265:	89 d8                	mov    %ebx,%eax
80100267:	5b                   	pop    %ebx
80100268:	5e                   	pop    %esi
80100269:	5f                   	pop    %edi
8010026a:	5d                   	pop    %ebp
8010026b:	c3                   	ret    
8010026c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80100270:	8b 1d 84 79 12 80    	mov    0x80127984,%ebx
80100276:	81 fb 34 79 12 80    	cmp    $0x80127934,%ebx
8010027c:	75 0d                	jne    8010028b <bread+0xab>
8010027e:	eb 70                	jmp    801002f0 <bread+0x110>
80100280:	8b 5b 50             	mov    0x50(%ebx),%ebx
80100283:	81 fb 34 79 12 80    	cmp    $0x80127934,%ebx
80100289:	74 65                	je     801002f0 <bread+0x110>
8010028b:	8b 53 4c             	mov    0x4c(%ebx),%edx
8010028e:	85 d2                	test   %edx,%edx
80100290:	75 ee                	jne    80100280 <bread+0xa0>
80100292:	f6 03 04             	testb  $0x4,(%ebx)
80100295:	75 e9                	jne    80100280 <bread+0xa0>
80100297:	83 ec 0c             	sub    $0xc,%esp
8010029a:	89 7b 04             	mov    %edi,0x4(%ebx)
8010029d:	89 73 08             	mov    %esi,0x8(%ebx)
801002a0:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
801002a6:	c7 43 5c 00 00 00 00 	movl   $0x0,0x5c(%ebx)
801002ad:	c7 43 4c 01 00 00 00 	movl   $0x1,0x4c(%ebx)
801002b4:	68 c0 f5 11 80       	push   $0x8011f5c0
801002b9:	e8 32 65 00 00       	call   801067f0 <release>
801002be:	8d 43 0c             	lea    0xc(%ebx),%eax
801002c1:	89 04 24             	mov    %eax,(%esp)
801002c4:	e8 37 62 00 00       	call   80106500 <acquiresleep>
801002c9:	58                   	pop    %eax
801002ca:	ff 75 e4             	pushl  -0x1c(%ebp)
801002cd:	e8 5e e5 00 00       	call   8010e830 <cgroup_mem_stat_pgmajfault_incr>
801002d2:	83 c4 10             	add    $0x10,%esp
801002d5:	f6 03 02             	testb  $0x2,(%ebx)
801002d8:	75 88                	jne    80100262 <bread+0x82>
801002da:	83 ec 0c             	sub    $0xc,%esp
801002dd:	53                   	push   %ebx
801002de:	e8 bd fe ff ff       	call   801001a0 <brw>
801002e3:	83 c4 10             	add    $0x10,%esp
801002e6:	8d 65 f4             	lea    -0xc(%ebp),%esp
801002e9:	89 d8                	mov    %ebx,%eax
801002eb:	5b                   	pop    %ebx
801002ec:	5e                   	pop    %esi
801002ed:	5f                   	pop    %edi
801002ee:	5d                   	pop    %ebp
801002ef:	c3                   	ret    
801002f0:	83 ec 0c             	sub    $0xc,%esp
801002f3:	68 0e eb 10 80       	push   $0x8010eb0e
801002f8:	e8 d3 00 00 00       	call   801003d0 <panic>
801002fd:	8d 76 00             	lea    0x0(%esi),%esi

80100300 <bwrite>:
80100300:	55                   	push   %ebp
80100301:	89 e5                	mov    %esp,%ebp
80100303:	53                   	push   %ebx
80100304:	83 ec 10             	sub    $0x10,%esp
80100307:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010030a:	8d 43 0c             	lea    0xc(%ebx),%eax
8010030d:	50                   	push   %eax
8010030e:	e8 8d 62 00 00       	call   801065a0 <holdingsleep>
80100313:	83 c4 10             	add    $0x10,%esp
80100316:	85 c0                	test   %eax,%eax
80100318:	74 0f                	je     80100329 <bwrite+0x29>
8010031a:	83 0b 04             	orl    $0x4,(%ebx)
8010031d:	89 5d 08             	mov    %ebx,0x8(%ebp)
80100320:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80100323:	c9                   	leave  
80100324:	e9 77 fe ff ff       	jmp    801001a0 <brw>
80100329:	83 ec 0c             	sub    $0xc,%esp
8010032c:	68 1f eb 10 80       	push   $0x8010eb1f
80100331:	e8 9a 00 00 00       	call   801003d0 <panic>
80100336:	8d 76 00             	lea    0x0(%esi),%esi
80100339:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80100340 <brelse>:
80100340:	55                   	push   %ebp
80100341:	89 e5                	mov    %esp,%ebp
80100343:	56                   	push   %esi
80100344:	53                   	push   %ebx
80100345:	8b 5d 08             	mov    0x8(%ebp),%ebx
80100348:	83 ec 0c             	sub    $0xc,%esp
8010034b:	8d 73 0c             	lea    0xc(%ebx),%esi
8010034e:	56                   	push   %esi
8010034f:	e8 4c 62 00 00       	call   801065a0 <holdingsleep>
80100354:	83 c4 10             	add    $0x10,%esp
80100357:	85 c0                	test   %eax,%eax
80100359:	74 66                	je     801003c1 <brelse+0x81>
8010035b:	83 ec 0c             	sub    $0xc,%esp
8010035e:	56                   	push   %esi
8010035f:	e8 fc 61 00 00       	call   80106560 <releasesleep>
80100364:	c7 04 24 c0 f5 11 80 	movl   $0x8011f5c0,(%esp)
8010036b:	e8 60 63 00 00       	call   801066d0 <acquire>
80100370:	8b 43 4c             	mov    0x4c(%ebx),%eax
80100373:	83 c4 10             	add    $0x10,%esp
80100376:	83 e8 01             	sub    $0x1,%eax
80100379:	85 c0                	test   %eax,%eax
8010037b:	89 43 4c             	mov    %eax,0x4c(%ebx)
8010037e:	75 2f                	jne    801003af <brelse+0x6f>
80100380:	8b 43 54             	mov    0x54(%ebx),%eax
80100383:	8b 53 50             	mov    0x50(%ebx),%edx
80100386:	89 50 50             	mov    %edx,0x50(%eax)
80100389:	8b 43 50             	mov    0x50(%ebx),%eax
8010038c:	8b 53 54             	mov    0x54(%ebx),%edx
8010038f:	89 50 54             	mov    %edx,0x54(%eax)
80100392:	a1 88 79 12 80       	mov    0x80127988,%eax
80100397:	c7 43 50 34 79 12 80 	movl   $0x80127934,0x50(%ebx)
8010039e:	89 43 54             	mov    %eax,0x54(%ebx)
801003a1:	a1 88 79 12 80       	mov    0x80127988,%eax
801003a6:	89 58 50             	mov    %ebx,0x50(%eax)
801003a9:	89 1d 88 79 12 80    	mov    %ebx,0x80127988
801003af:	c7 45 08 c0 f5 11 80 	movl   $0x8011f5c0,0x8(%ebp)
801003b6:	8d 65 f8             	lea    -0x8(%ebp),%esp
801003b9:	5b                   	pop    %ebx
801003ba:	5e                   	pop    %esi
801003bb:	5d                   	pop    %ebp
801003bc:	e9 2f 64 00 00       	jmp    801067f0 <release>
801003c1:	83 ec 0c             	sub    $0xc,%esp
801003c4:	68 26 eb 10 80       	push   $0x8010eb26
801003c9:	e8 02 00 00 00       	call   801003d0 <panic>
801003ce:	66 90                	xchg   %ax,%ax

801003d0 <panic>:
    release(&cons.lock);
}

void
panic(char *s)
{
801003d0:	55                   	push   %ebp
801003d1:	89 e5                	mov    %esp,%ebp
801003d3:	56                   	push   %esi
801003d4:	53                   	push   %ebx
801003d5:	83 ec 30             	sub    $0x30,%esp
}

static inline void
cli(void)
{
  asm volatile("cli");
801003d8:	fa                   	cli    
  int i;
  uint pcs[10];

  cli();
  cons.locking = 0;
801003d9:	c7 05 54 d5 11 80 00 	movl   $0x0,0x8011d554
801003e0:	00 00 00 
  // use lapiccpunum so that we can call panic from mycpu()
  cprintf("lapicid %d: panic: ", lapicid());
  cprintf(s);
  cprintf("\n");
  getcallerpcs(&s, pcs);
801003e3:	8d 5d d0             	lea    -0x30(%ebp),%ebx
801003e6:	8d 75 f8             	lea    -0x8(%ebp),%esi
  uint pcs[10];

  cli();
  cons.locking = 0;
  // use lapiccpunum so that we can call panic from mycpu()
  cprintf("lapicid %d: panic: ", lapicid());
801003e9:	e8 82 2f 00 00       	call   80103370 <lapicid>
801003ee:	83 ec 08             	sub    $0x8,%esp
801003f1:	50                   	push   %eax
801003f2:	68 2d eb 10 80       	push   $0x8010eb2d
801003f7:	e8 64 02 00 00       	call   80100660 <cprintf>
  cprintf(s);
801003fc:	58                   	pop    %eax
801003fd:	ff 75 08             	pushl  0x8(%ebp)
80100400:	e8 5b 02 00 00       	call   80100660 <cprintf>
  cprintf("\n");
80100405:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010040c:	e8 4f 02 00 00       	call   80100660 <cprintf>
  getcallerpcs(&s, pcs);
80100411:	5a                   	pop    %edx
80100412:	8d 45 08             	lea    0x8(%ebp),%eax
80100415:	59                   	pop    %ecx
80100416:	53                   	push   %ebx
80100417:	50                   	push   %eax
80100418:	e8 d3 61 00 00       	call   801065f0 <getcallerpcs>
8010041d:	83 c4 10             	add    $0x10,%esp
  for(i=0; i<10; i++)
    cprintf(" %p", pcs[i]);
80100420:	83 ec 08             	sub    $0x8,%esp
80100423:	ff 33                	pushl  (%ebx)
80100425:	83 c3 04             	add    $0x4,%ebx
80100428:	68 41 eb 10 80       	push   $0x8010eb41
8010042d:	e8 2e 02 00 00       	call   80100660 <cprintf>
  // use lapiccpunum so that we can call panic from mycpu()
  cprintf("lapicid %d: panic: ", lapicid());
  cprintf(s);
  cprintf("\n");
  getcallerpcs(&s, pcs);
  for(i=0; i<10; i++)
80100432:	83 c4 10             	add    $0x10,%esp
80100435:	39 f3                	cmp    %esi,%ebx
80100437:	75 e7                	jne    80100420 <panic+0x50>
    cprintf(" %p", pcs[i]);
  panicked = 1; // freeze other CPU
80100439:	c7 05 58 d5 11 80 01 	movl   $0x1,0x8011d558
80100440:	00 00 00 
80100443:	eb fe                	jmp    80100443 <panic+0x73>
80100445:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80100449:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80100450 <consputc>:
}

void
consputc(int c)
{
  if(panicked){
80100450:	8b 15 58 d5 11 80    	mov    0x8011d558,%edx
80100456:	85 d2                	test   %edx,%edx
80100458:	74 06                	je     80100460 <consputc+0x10>
8010045a:	fa                   	cli    
8010045b:	eb fe                	jmp    8010045b <consputc+0xb>
8010045d:	8d 76 00             	lea    0x0(%esi),%esi
  update_pos(pos);
}

void
consputc(int c)
{
80100460:	55                   	push   %ebp
80100461:	89 e5                	mov    %esp,%ebp
80100463:	57                   	push   %edi
80100464:	56                   	push   %esi
80100465:	53                   	push   %ebx
80100466:	89 c3                	mov    %eax,%ebx
80100468:	83 ec 0c             	sub    $0xc,%esp
    cli();
    for(;;)
      ;
  }

  if(c == BACKSPACE){
8010046b:	3d 00 01 00 00       	cmp    $0x100,%eax
80100470:	0f 84 b8 00 00 00    	je     8010052e <consputc+0xde>
    uartputc('\b'); uartputc(' '); uartputc('\b');
  } else
    uartputc(c);
80100476:	83 ec 0c             	sub    $0xc,%esp
80100479:	50                   	push   %eax
8010047a:	e8 e1 84 00 00       	call   80108960 <uartputc>
8010047f:	83 c4 10             	add    $0x10,%esp
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80100482:	bf d4 03 00 00       	mov    $0x3d4,%edi
80100487:	b8 0e 00 00 00       	mov    $0xe,%eax
8010048c:	89 fa                	mov    %edi,%edx
8010048e:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
8010048f:	be d5 03 00 00       	mov    $0x3d5,%esi
80100494:	89 f2                	mov    %esi,%edx
80100496:	ec                   	in     (%dx),%al
{
  int pos;

  // Cursor position: col + 80*row.
  outb(CRTPORT, 14);
  pos = inb(CRTPORT+1) << 8;
80100497:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
8010049a:	89 fa                	mov    %edi,%edx
8010049c:	c1 e0 08             	shl    $0x8,%eax
8010049f:	89 c1                	mov    %eax,%ecx
801004a1:	b8 0f 00 00 00       	mov    $0xf,%eax
801004a6:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
801004a7:	89 f2                	mov    %esi,%edx
801004a9:	ec                   	in     (%dx),%al
  outb(CRTPORT, 15);
  pos |= inb(CRTPORT+1);
801004aa:	0f b6 c0             	movzbl %al,%eax
801004ad:	09 c8                	or     %ecx,%eax

  if(c == '\n')
801004af:	83 fb 0a             	cmp    $0xa,%ebx
801004b2:	0f 84 0b 01 00 00    	je     801005c3 <consputc+0x173>
    pos += 80 - pos%80;
  else if(c == BACKSPACE){
801004b8:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
801004be:	0f 84 e6 00 00 00    	je     801005aa <consputc+0x15a>
    if(pos > 0) --pos;
  } else
    crt[pos++] = (c&0xff) | 0x0700;  // black on white
801004c4:	0f b6 d3             	movzbl %bl,%edx
801004c7:	8d 78 01             	lea    0x1(%eax),%edi
801004ca:	80 ce 07             	or     $0x7,%dh
801004cd:	66 89 94 00 00 80 0b 	mov    %dx,-0x7ff48000(%eax,%eax,1)
801004d4:	80 

  if(pos < 0 || pos > 25*80)
801004d5:	81 ff d0 07 00 00    	cmp    $0x7d0,%edi
801004db:	0f 8f bc 00 00 00    	jg     8010059d <consputc+0x14d>
    panic("pos under/overflow");

  if((pos/80) >= 24){  // Scroll up.
801004e1:	81 ff 7f 07 00 00    	cmp    $0x77f,%edi
801004e7:	7f 6f                	jg     80100558 <consputc+0x108>
801004e9:	89 f8                	mov    %edi,%eax
801004eb:	8d 8c 3f 00 80 0b 80 	lea    -0x7ff48000(%edi,%edi,1),%ecx
801004f2:	89 fb                	mov    %edi,%ebx
801004f4:	c1 e8 08             	shr    $0x8,%eax
801004f7:	89 c6                	mov    %eax,%esi
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
801004f9:	bf d4 03 00 00       	mov    $0x3d4,%edi
801004fe:	b8 0e 00 00 00       	mov    $0xe,%eax
80100503:	89 fa                	mov    %edi,%edx
80100505:	ee                   	out    %al,(%dx)
80100506:	ba d5 03 00 00       	mov    $0x3d5,%edx
8010050b:	89 f0                	mov    %esi,%eax
8010050d:	ee                   	out    %al,(%dx)
8010050e:	b8 0f 00 00 00       	mov    $0xf,%eax
80100513:	89 fa                	mov    %edi,%edx
80100515:	ee                   	out    %al,(%dx)
80100516:	ba d5 03 00 00       	mov    $0x3d5,%edx
8010051b:	89 d8                	mov    %ebx,%eax
8010051d:	ee                   	out    %al,(%dx)
{
  outb(CRTPORT, 14);
  outb(CRTPORT+1, pos>>8);
  outb(CRTPORT, 15);
  outb(CRTPORT+1, pos);
  crt[pos] = ' ' | 0x0700;
8010051e:	b8 20 07 00 00       	mov    $0x720,%eax
80100523:	66 89 01             	mov    %ax,(%ecx)
  if(c == BACKSPACE){
    uartputc('\b'); uartputc(' '); uartputc('\b');
  } else
    uartputc(c);
  cgaputc(c);
}
80100526:	8d 65 f4             	lea    -0xc(%ebp),%esp
80100529:	5b                   	pop    %ebx
8010052a:	5e                   	pop    %esi
8010052b:	5f                   	pop    %edi
8010052c:	5d                   	pop    %ebp
8010052d:	c3                   	ret    
    for(;;)
      ;
  }

  if(c == BACKSPACE){
    uartputc('\b'); uartputc(' '); uartputc('\b');
8010052e:	83 ec 0c             	sub    $0xc,%esp
80100531:	6a 08                	push   $0x8
80100533:	e8 28 84 00 00       	call   80108960 <uartputc>
80100538:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
8010053f:	e8 1c 84 00 00       	call   80108960 <uartputc>
80100544:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
8010054b:	e8 10 84 00 00       	call   80108960 <uartputc>
80100550:	83 c4 10             	add    $0x10,%esp
80100553:	e9 2a ff ff ff       	jmp    80100482 <consputc+0x32>

  if(pos < 0 || pos > 25*80)
    panic("pos under/overflow");

  if((pos/80) >= 24){  // Scroll up.
    memmove(crt, crt+80, sizeof(crt[0])*23*80);
80100558:	83 ec 04             	sub    $0x4,%esp
    pos -= 80;
8010055b:	8d 5f b0             	lea    -0x50(%edi),%ebx

  if(pos < 0 || pos > 25*80)
    panic("pos under/overflow");

  if((pos/80) >= 24){  // Scroll up.
    memmove(crt, crt+80, sizeof(crt[0])*23*80);
8010055e:	68 60 0e 00 00       	push   $0xe60
80100563:	68 a0 80 0b 80       	push   $0x800b80a0
80100568:	68 00 80 0b 80       	push   $0x800b8000
    pos -= 80;
    memset(crt+pos, 0, sizeof(crt[0])*(24*80 - pos));
8010056d:	8d b4 1b 00 80 0b 80 	lea    -0x7ff48000(%ebx,%ebx,1),%esi

  if(pos < 0 || pos > 25*80)
    panic("pos under/overflow");

  if((pos/80) >= 24){  // Scroll up.
    memmove(crt, crt+80, sizeof(crt[0])*23*80);
80100574:	e8 77 63 00 00       	call   801068f0 <memmove>
    pos -= 80;
    memset(crt+pos, 0, sizeof(crt[0])*(24*80 - pos));
80100579:	b8 80 07 00 00       	mov    $0x780,%eax
8010057e:	83 c4 0c             	add    $0xc,%esp
80100581:	29 d8                	sub    %ebx,%eax
80100583:	01 c0                	add    %eax,%eax
80100585:	50                   	push   %eax
80100586:	6a 00                	push   $0x0
80100588:	56                   	push   %esi
80100589:	e8 b2 62 00 00       	call   80106840 <memset>
8010058e:	89 f1                	mov    %esi,%ecx
80100590:	83 c4 10             	add    $0x10,%esp
80100593:	be 07 00 00 00       	mov    $0x7,%esi
80100598:	e9 5c ff ff ff       	jmp    801004f9 <consputc+0xa9>
    if(pos > 0) --pos;
  } else
    crt[pos++] = (c&0xff) | 0x0700;  // black on white

  if(pos < 0 || pos > 25*80)
    panic("pos under/overflow");
8010059d:	83 ec 0c             	sub    $0xc,%esp
801005a0:	68 45 eb 10 80       	push   $0x8010eb45
801005a5:	e8 26 fe ff ff       	call   801003d0 <panic>
  pos |= inb(CRTPORT+1);

  if(c == '\n')
    pos += 80 - pos%80;
  else if(c == BACKSPACE){
    if(pos > 0) --pos;
801005aa:	85 c0                	test   %eax,%eax
801005ac:	8d 78 ff             	lea    -0x1(%eax),%edi
801005af:	0f 85 20 ff ff ff    	jne    801004d5 <consputc+0x85>
801005b5:	b9 00 80 0b 80       	mov    $0x800b8000,%ecx
801005ba:	31 db                	xor    %ebx,%ebx
801005bc:	31 f6                	xor    %esi,%esi
801005be:	e9 36 ff ff ff       	jmp    801004f9 <consputc+0xa9>
  pos = inb(CRTPORT+1) << 8;
  outb(CRTPORT, 15);
  pos |= inb(CRTPORT+1);

  if(c == '\n')
    pos += 80 - pos%80;
801005c3:	ba 67 66 66 66       	mov    $0x66666667,%edx
801005c8:	f7 ea                	imul   %edx
801005ca:	89 d0                	mov    %edx,%eax
801005cc:	c1 e8 05             	shr    $0x5,%eax
801005cf:	8d 04 80             	lea    (%eax,%eax,4),%eax
801005d2:	c1 e0 04             	shl    $0x4,%eax
801005d5:	8d 78 50             	lea    0x50(%eax),%edi
801005d8:	e9 f8 fe ff ff       	jmp    801004d5 <consputc+0x85>
801005dd:	8d 76 00             	lea    0x0(%esi),%esi

801005e0 <printint>:
  crt[pos] = ' ' | 0x0700;
}

static void
printint(int xx, int base, int sign)
{
801005e0:	55                   	push   %ebp
801005e1:	89 e5                	mov    %esp,%ebp
801005e3:	57                   	push   %edi
801005e4:	56                   	push   %esi
801005e5:	53                   	push   %ebx
801005e6:	89 d6                	mov    %edx,%esi
801005e8:	83 ec 2c             	sub    $0x2c,%esp
  static char digits[] = "0123456789abcdef";
  char buf[16];
  int i;
  uint x;

  if(sign && (sign = xx < 0))
801005eb:	85 c9                	test   %ecx,%ecx
  crt[pos] = ' ' | 0x0700;
}

static void
printint(int xx, int base, int sign)
{
801005ed:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
  static char digits[] = "0123456789abcdef";
  char buf[16];
  int i;
  uint x;

  if(sign && (sign = xx < 0))
801005f0:	74 0c                	je     801005fe <printint+0x1e>
801005f2:	89 c7                	mov    %eax,%edi
801005f4:	c1 ef 1f             	shr    $0x1f,%edi
801005f7:	85 c0                	test   %eax,%eax
801005f9:	89 7d d4             	mov    %edi,-0x2c(%ebp)
801005fc:	78 51                	js     8010064f <printint+0x6f>
    x = -xx;
  else
    x = xx;

  i = 0;
801005fe:	31 ff                	xor    %edi,%edi
80100600:	8d 5d d7             	lea    -0x29(%ebp),%ebx
80100603:	eb 05                	jmp    8010060a <printint+0x2a>
80100605:	8d 76 00             	lea    0x0(%esi),%esi
  do{
    buf[i++] = digits[x % base];
80100608:	89 cf                	mov    %ecx,%edi
8010060a:	31 d2                	xor    %edx,%edx
8010060c:	8d 4f 01             	lea    0x1(%edi),%ecx
8010060f:	f7 f6                	div    %esi
80100611:	0f b6 92 9c eb 10 80 	movzbl -0x7fef1464(%edx),%edx
  }while((x /= base) != 0);
80100618:	85 c0                	test   %eax,%eax
  else
    x = xx;

  i = 0;
  do{
    buf[i++] = digits[x % base];
8010061a:	88 14 0b             	mov    %dl,(%ebx,%ecx,1)
  }while((x /= base) != 0);
8010061d:	75 e9                	jne    80100608 <printint+0x28>

  if(sign)
8010061f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
80100622:	85 c0                	test   %eax,%eax
80100624:	74 08                	je     8010062e <printint+0x4e>
    buf[i++] = '-';
80100626:	c6 44 0d d8 2d       	movb   $0x2d,-0x28(%ebp,%ecx,1)
8010062b:	8d 4f 02             	lea    0x2(%edi),%ecx
8010062e:	8d 74 0d d7          	lea    -0x29(%ebp,%ecx,1),%esi
80100632:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

  while(--i >= 0)
    consputc(buf[i]);
80100638:	0f be 06             	movsbl (%esi),%eax
8010063b:	83 ee 01             	sub    $0x1,%esi
8010063e:	e8 0d fe ff ff       	call   80100450 <consputc>
  }while((x /= base) != 0);

  if(sign)
    buf[i++] = '-';

  while(--i >= 0)
80100643:	39 de                	cmp    %ebx,%esi
80100645:	75 f1                	jne    80100638 <printint+0x58>
    consputc(buf[i]);
}
80100647:	83 c4 2c             	add    $0x2c,%esp
8010064a:	5b                   	pop    %ebx
8010064b:	5e                   	pop    %esi
8010064c:	5f                   	pop    %edi
8010064d:	5d                   	pop    %ebp
8010064e:	c3                   	ret    
  char buf[16];
  int i;
  uint x;

  if(sign && (sign = xx < 0))
    x = -xx;
8010064f:	f7 d8                	neg    %eax
80100651:	eb ab                	jmp    801005fe <printint+0x1e>
80100653:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80100659:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80100660 <cprintf>:
//PAGEBREAK: 50

// Print to the console. only understands %d, %x, %p, %s.
void
cprintf(char *fmt, ...)
{
80100660:	55                   	push   %ebp
80100661:	89 e5                	mov    %esp,%ebp
80100663:	57                   	push   %edi
80100664:	56                   	push   %esi
80100665:	53                   	push   %ebx
80100666:	83 ec 1c             	sub    $0x1c,%esp
  int i, c, locking;
  uint *argp;
  char *s;

  locking = cons.locking;
80100669:	a1 54 d5 11 80       	mov    0x8011d554,%eax
  if(locking)
8010066e:	85 c0                	test   %eax,%eax
{
  int i, c, locking;
  uint *argp;
  char *s;

  locking = cons.locking;
80100670:	89 45 e0             	mov    %eax,-0x20(%ebp)
  if(locking)
80100673:	0f 85 47 01 00 00    	jne    801007c0 <cprintf+0x160>
    acquire(&cons.lock);

  if (fmt == 0)
80100679:	8b 45 08             	mov    0x8(%ebp),%eax
8010067c:	85 c0                	test   %eax,%eax
8010067e:	89 c1                	mov    %eax,%ecx
80100680:	0f 84 4f 01 00 00    	je     801007d5 <cprintf+0x175>
    panic("null fmt");

  argp = (uint*)(void*)(&fmt + 1);
  for(i = 0; (c = fmt[i] & 0xff) != 0; i++){
80100686:	0f b6 00             	movzbl (%eax),%eax
80100689:	31 db                	xor    %ebx,%ebx
8010068b:	8d 75 0c             	lea    0xc(%ebp),%esi
8010068e:	89 cf                	mov    %ecx,%edi
80100690:	85 c0                	test   %eax,%eax
80100692:	75 55                	jne    801006e9 <cprintf+0x89>
80100694:	eb 68                	jmp    801006fe <cprintf+0x9e>
80100696:	8d 76 00             	lea    0x0(%esi),%esi
80100699:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    if(c != '%'){
      consputc(c);
      continue;
    }
    c = fmt[++i] & 0xff;
801006a0:	83 c3 01             	add    $0x1,%ebx
801006a3:	0f b6 14 1f          	movzbl (%edi,%ebx,1),%edx
    if(c == 0)
801006a7:	85 d2                	test   %edx,%edx
801006a9:	74 53                	je     801006fe <cprintf+0x9e>
      break;
    switch(c){
801006ab:	83 fa 70             	cmp    $0x70,%edx
801006ae:	74 7a                	je     8010072a <cprintf+0xca>
801006b0:	7f 6e                	jg     80100720 <cprintf+0xc0>
801006b2:	83 fa 25             	cmp    $0x25,%edx
801006b5:	0f 84 ad 00 00 00    	je     80100768 <cprintf+0x108>
801006bb:	83 fa 64             	cmp    $0x64,%edx
801006be:	0f 85 84 00 00 00    	jne    80100748 <cprintf+0xe8>
    case 'd':
      printint(*argp++, 10, 1);
801006c4:	8d 46 04             	lea    0x4(%esi),%eax
801006c7:	b9 01 00 00 00       	mov    $0x1,%ecx
801006cc:	ba 0a 00 00 00       	mov    $0xa,%edx
801006d1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
801006d4:	8b 06                	mov    (%esi),%eax
801006d6:	e8 05 ff ff ff       	call   801005e0 <printint>
801006db:	8b 75 e4             	mov    -0x1c(%ebp),%esi

  if (fmt == 0)
    panic("null fmt");

  argp = (uint*)(void*)(&fmt + 1);
  for(i = 0; (c = fmt[i] & 0xff) != 0; i++){
801006de:	83 c3 01             	add    $0x1,%ebx
801006e1:	0f b6 04 1f          	movzbl (%edi,%ebx,1),%eax
801006e5:	85 c0                	test   %eax,%eax
801006e7:	74 15                	je     801006fe <cprintf+0x9e>
    if(c != '%'){
801006e9:	83 f8 25             	cmp    $0x25,%eax
801006ec:	74 b2                	je     801006a0 <cprintf+0x40>
        s = "(null)";
      for(; *s; s++)
        consputc(*s);
      break;
    case '%':
      consputc('%');
801006ee:	e8 5d fd ff ff       	call   80100450 <consputc>

  if (fmt == 0)
    panic("null fmt");

  argp = (uint*)(void*)(&fmt + 1);
  for(i = 0; (c = fmt[i] & 0xff) != 0; i++){
801006f3:	83 c3 01             	add    $0x1,%ebx
801006f6:	0f b6 04 1f          	movzbl (%edi,%ebx,1),%eax
801006fa:	85 c0                	test   %eax,%eax
801006fc:	75 eb                	jne    801006e9 <cprintf+0x89>
      consputc(c);
      break;
    }
  }

  if(locking)
801006fe:	8b 45 e0             	mov    -0x20(%ebp),%eax
80100701:	85 c0                	test   %eax,%eax
80100703:	74 10                	je     80100715 <cprintf+0xb5>
    release(&cons.lock);
80100705:	83 ec 0c             	sub    $0xc,%esp
80100708:	68 20 d5 11 80       	push   $0x8011d520
8010070d:	e8 de 60 00 00       	call   801067f0 <release>
80100712:	83 c4 10             	add    $0x10,%esp
}
80100715:	8d 65 f4             	lea    -0xc(%ebp),%esp
80100718:	5b                   	pop    %ebx
80100719:	5e                   	pop    %esi
8010071a:	5f                   	pop    %edi
8010071b:	5d                   	pop    %ebp
8010071c:	c3                   	ret    
8010071d:	8d 76 00             	lea    0x0(%esi),%esi
      continue;
    }
    c = fmt[++i] & 0xff;
    if(c == 0)
      break;
    switch(c){
80100720:	83 fa 73             	cmp    $0x73,%edx
80100723:	74 5b                	je     80100780 <cprintf+0x120>
80100725:	83 fa 78             	cmp    $0x78,%edx
80100728:	75 1e                	jne    80100748 <cprintf+0xe8>
    case 'd':
      printint(*argp++, 10, 1);
      break;
    case 'x':
    case 'p':
      printint(*argp++, 16, 0);
8010072a:	8d 46 04             	lea    0x4(%esi),%eax
8010072d:	31 c9                	xor    %ecx,%ecx
8010072f:	ba 10 00 00 00       	mov    $0x10,%edx
80100734:	89 45 e4             	mov    %eax,-0x1c(%ebp)
80100737:	8b 06                	mov    (%esi),%eax
80100739:	e8 a2 fe ff ff       	call   801005e0 <printint>
8010073e:	8b 75 e4             	mov    -0x1c(%ebp),%esi
      break;
80100741:	eb 9b                	jmp    801006de <cprintf+0x7e>
80100743:	90                   	nop
80100744:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    case '%':
      consputc('%');
      break;
    default:
      // Print unknown % sequence to draw attention.
      consputc('%');
80100748:	b8 25 00 00 00       	mov    $0x25,%eax
8010074d:	89 55 e4             	mov    %edx,-0x1c(%ebp)
80100750:	e8 fb fc ff ff       	call   80100450 <consputc>
      consputc(c);
80100755:	8b 55 e4             	mov    -0x1c(%ebp),%edx
80100758:	89 d0                	mov    %edx,%eax
8010075a:	e8 f1 fc ff ff       	call   80100450 <consputc>
      break;
8010075f:	e9 7a ff ff ff       	jmp    801006de <cprintf+0x7e>
80100764:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
        s = "(null)";
      for(; *s; s++)
        consputc(*s);
      break;
    case '%':
      consputc('%');
80100768:	b8 25 00 00 00       	mov    $0x25,%eax
8010076d:	e8 de fc ff ff       	call   80100450 <consputc>
80100772:	e9 7c ff ff ff       	jmp    801006f3 <cprintf+0x93>
80100777:	89 f6                	mov    %esi,%esi
80100779:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
    case 'x':
    case 'p':
      printint(*argp++, 16, 0);
      break;
    case 's':
      if((s = (char*)*argp++) == 0)
80100780:	8d 46 04             	lea    0x4(%esi),%eax
80100783:	8b 36                	mov    (%esi),%esi
80100785:	89 45 e4             	mov    %eax,-0x1c(%ebp)
        s = "(null)";
80100788:	b8 58 eb 10 80       	mov    $0x8010eb58,%eax
8010078d:	85 f6                	test   %esi,%esi
8010078f:	0f 44 f0             	cmove  %eax,%esi
      for(; *s; s++)
80100792:	0f be 06             	movsbl (%esi),%eax
80100795:	84 c0                	test   %al,%al
80100797:	74 16                	je     801007af <cprintf+0x14f>
80100799:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801007a0:	83 c6 01             	add    $0x1,%esi
        consputc(*s);
801007a3:	e8 a8 fc ff ff       	call   80100450 <consputc>
      printint(*argp++, 16, 0);
      break;
    case 's':
      if((s = (char*)*argp++) == 0)
        s = "(null)";
      for(; *s; s++)
801007a8:	0f be 06             	movsbl (%esi),%eax
801007ab:	84 c0                	test   %al,%al
801007ad:	75 f1                	jne    801007a0 <cprintf+0x140>
    case 'x':
    case 'p':
      printint(*argp++, 16, 0);
      break;
    case 's':
      if((s = (char*)*argp++) == 0)
801007af:	8b 75 e4             	mov    -0x1c(%ebp),%esi
801007b2:	e9 27 ff ff ff       	jmp    801006de <cprintf+0x7e>
801007b7:	89 f6                	mov    %esi,%esi
801007b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
  uint *argp;
  char *s;

  locking = cons.locking;
  if(locking)
    acquire(&cons.lock);
801007c0:	83 ec 0c             	sub    $0xc,%esp
801007c3:	68 20 d5 11 80       	push   $0x8011d520
801007c8:	e8 03 5f 00 00       	call   801066d0 <acquire>
801007cd:	83 c4 10             	add    $0x10,%esp
801007d0:	e9 a4 fe ff ff       	jmp    80100679 <cprintf+0x19>

  if (fmt == 0)
    panic("null fmt");
801007d5:	83 ec 0c             	sub    $0xc,%esp
801007d8:	68 5f eb 10 80       	push   $0x8010eb5f
801007dd:	e8 ee fb ff ff       	call   801003d0 <panic>
801007e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801007e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801007f0 <consoleclear>:
  }

  update_pos(pos);
}

void consoleclear(void){
801007f0:	55                   	push   %ebp
801007f1:	89 e5                	mov    %esp,%ebp
801007f3:	83 ec 0c             	sub    $0xc,%esp
  int pos = 0;
  memset(crt, 0, sizeof(crt[0])*(24*80));
801007f6:	68 00 0f 00 00       	push   $0xf00
801007fb:	6a 00                	push   $0x0
801007fd:	68 00 80 0b 80       	push   $0x800b8000
80100802:	e8 39 60 00 00       	call   80106840 <memset>
80100807:	ba d4 03 00 00       	mov    $0x3d4,%edx
8010080c:	b8 0e 00 00 00       	mov    $0xe,%eax
80100811:	ee                   	out    %al,(%dx)
80100812:	ba d5 03 00 00       	mov    $0x3d5,%edx
80100817:	31 c0                	xor    %eax,%eax
80100819:	ee                   	out    %al,(%dx)
8010081a:	ba d4 03 00 00       	mov    $0x3d4,%edx
8010081f:	b8 0f 00 00 00       	mov    $0xf,%eax
80100824:	ee                   	out    %al,(%dx)
80100825:	ba d5 03 00 00       	mov    $0x3d5,%edx
8010082a:	31 c0                	xor    %eax,%eax
8010082c:	ee                   	out    %al,(%dx)
{
  outb(CRTPORT, 14);
  outb(CRTPORT+1, pos>>8);
  outb(CRTPORT, 15);
  outb(CRTPORT+1, pos);
  crt[pos] = ' ' | 0x0700;
8010082d:	b8 20 07 00 00       	mov    $0x720,%eax

void consoleclear(void){
  int pos = 0;
  memset(crt, 0, sizeof(crt[0])*(24*80));
  update_pos(pos);
}
80100832:	83 c4 10             	add    $0x10,%esp
{
  outb(CRTPORT, 14);
  outb(CRTPORT+1, pos>>8);
  outb(CRTPORT, 15);
  outb(CRTPORT+1, pos);
  crt[pos] = ' ' | 0x0700;
80100835:	66 a3 00 80 0b 80    	mov    %ax,0x800b8000

void consoleclear(void){
  int pos = 0;
  memset(crt, 0, sizeof(crt[0])*(24*80));
  update_pos(pos);
}
8010083b:	c9                   	leave  
8010083c:	c3                   	ret    
8010083d:	8d 76 00             	lea    0x0(%esi),%esi

80100840 <consoleintr>:

#define C(x)  ((x)-'@')  // Control-x

void
consoleintr(int (*getc)(void))
{
80100840:	55                   	push   %ebp
80100841:	89 e5                	mov    %esp,%ebp
80100843:	57                   	push   %edi
80100844:	56                   	push   %esi
80100845:	53                   	push   %ebx
  int c, doprocdump = 0;
80100846:	31 f6                	xor    %esi,%esi

#define C(x)  ((x)-'@')  // Control-x

void
consoleintr(int (*getc)(void))
{
80100848:	83 ec 18             	sub    $0x18,%esp
8010084b:	8b 5d 08             	mov    0x8(%ebp),%ebx
  int c, doprocdump = 0;

  acquire(&cons.lock);
8010084e:	68 20 d5 11 80       	push   $0x8011d520
80100853:	e8 78 5e 00 00       	call   801066d0 <acquire>
  while((c = getc()) >= 0){
80100858:	83 c4 10             	add    $0x10,%esp
8010085b:	90                   	nop
8010085c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80100860:	ff d3                	call   *%ebx
80100862:	85 c0                	test   %eax,%eax
80100864:	89 c7                	mov    %eax,%edi
80100866:	78 48                	js     801008b0 <consoleintr+0x70>
    switch(c){
80100868:	83 ff 10             	cmp    $0x10,%edi
8010086b:	0f 84 3f 01 00 00    	je     801009b0 <consoleintr+0x170>
80100871:	7e 5d                	jle    801008d0 <consoleintr+0x90>
80100873:	83 ff 15             	cmp    $0x15,%edi
80100876:	0f 84 dc 00 00 00    	je     80100958 <consoleintr+0x118>
8010087c:	83 ff 7f             	cmp    $0x7f,%edi
8010087f:	75 54                	jne    801008d5 <consoleintr+0x95>
        input.e--;
        consputc(BACKSPACE);
      }
      break;
    case C('H'): case '\x7f':  // Backspace
      if(input.e != input.w){
80100881:	a1 28 7e 12 80       	mov    0x80127e28,%eax
80100886:	3b 05 24 7e 12 80    	cmp    0x80127e24,%eax
8010088c:	74 d2                	je     80100860 <consoleintr+0x20>
        input.e--;
8010088e:	83 e8 01             	sub    $0x1,%eax
80100891:	a3 28 7e 12 80       	mov    %eax,0x80127e28
        consputc(BACKSPACE);
80100896:	b8 00 01 00 00       	mov    $0x100,%eax
8010089b:	e8 b0 fb ff ff       	call   80100450 <consputc>
consoleintr(int (*getc)(void))
{
  int c, doprocdump = 0;

  acquire(&cons.lock);
  while((c = getc()) >= 0){
801008a0:	ff d3                	call   *%ebx
801008a2:	85 c0                	test   %eax,%eax
801008a4:	89 c7                	mov    %eax,%edi
801008a6:	79 c0                	jns    80100868 <consoleintr+0x28>
801008a8:	90                   	nop
801008a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
        }
      }
      break;
    }
  }
  release(&cons.lock);
801008b0:	83 ec 0c             	sub    $0xc,%esp
801008b3:	68 20 d5 11 80       	push   $0x8011d520
801008b8:	e8 33 5f 00 00       	call   801067f0 <release>
  if(doprocdump) {
801008bd:	83 c4 10             	add    $0x10,%esp
801008c0:	85 f6                	test   %esi,%esi
801008c2:	0f 85 f8 00 00 00    	jne    801009c0 <consoleintr+0x180>
    procdump();  // now call procdump() wo. cons.lock held
  }
}
801008c8:	8d 65 f4             	lea    -0xc(%ebp),%esp
801008cb:	5b                   	pop    %ebx
801008cc:	5e                   	pop    %esi
801008cd:	5f                   	pop    %edi
801008ce:	5d                   	pop    %ebp
801008cf:	c3                   	ret    
{
  int c, doprocdump = 0;

  acquire(&cons.lock);
  while((c = getc()) >= 0){
    switch(c){
801008d0:	83 ff 08             	cmp    $0x8,%edi
801008d3:	74 ac                	je     80100881 <consoleintr+0x41>
        input.e--;
        consputc(BACKSPACE);
      }
      break;
    default:
      if(c != 0 && input.e-input.r < INPUT_BUF){
801008d5:	85 ff                	test   %edi,%edi
801008d7:	74 87                	je     80100860 <consoleintr+0x20>
801008d9:	a1 28 7e 12 80       	mov    0x80127e28,%eax
801008de:	89 c2                	mov    %eax,%edx
801008e0:	2b 15 20 7e 12 80    	sub    0x80127e20,%edx
801008e6:	83 fa 7f             	cmp    $0x7f,%edx
801008e9:	0f 87 71 ff ff ff    	ja     80100860 <consoleintr+0x20>
        c = (c == '\r') ? '\n' : c;
        input.buf[input.e++ % INPUT_BUF] = c;
801008ef:	8d 50 01             	lea    0x1(%eax),%edx
801008f2:	83 e0 7f             	and    $0x7f,%eax
        consputc(BACKSPACE);
      }
      break;
    default:
      if(c != 0 && input.e-input.r < INPUT_BUF){
        c = (c == '\r') ? '\n' : c;
801008f5:	83 ff 0d             	cmp    $0xd,%edi
        input.buf[input.e++ % INPUT_BUF] = c;
801008f8:	89 15 28 7e 12 80    	mov    %edx,0x80127e28
        consputc(BACKSPACE);
      }
      break;
    default:
      if(c != 0 && input.e-input.r < INPUT_BUF){
        c = (c == '\r') ? '\n' : c;
801008fe:	0f 84 c8 00 00 00    	je     801009cc <consoleintr+0x18c>
        input.buf[input.e++ % INPUT_BUF] = c;
80100904:	89 f9                	mov    %edi,%ecx
80100906:	88 88 a0 7d 12 80    	mov    %cl,-0x7fed8260(%eax)
        consputc(c);
8010090c:	89 f8                	mov    %edi,%eax
8010090e:	e8 3d fb ff ff       	call   80100450 <consputc>
        if(c == '\n' || c == C('D') || input.e == input.r+INPUT_BUF){
80100913:	83 ff 0a             	cmp    $0xa,%edi
80100916:	0f 84 c1 00 00 00    	je     801009dd <consoleintr+0x19d>
8010091c:	83 ff 04             	cmp    $0x4,%edi
8010091f:	0f 84 b8 00 00 00    	je     801009dd <consoleintr+0x19d>
80100925:	a1 20 7e 12 80       	mov    0x80127e20,%eax
8010092a:	83 e8 80             	sub    $0xffffff80,%eax
8010092d:	39 05 28 7e 12 80    	cmp    %eax,0x80127e28
80100933:	0f 85 27 ff ff ff    	jne    80100860 <consoleintr+0x20>
          input.w = input.e;
          wakeup(&input.r);
80100939:	83 ec 0c             	sub    $0xc,%esp
      if(c != 0 && input.e-input.r < INPUT_BUF){
        c = (c == '\r') ? '\n' : c;
        input.buf[input.e++ % INPUT_BUF] = c;
        consputc(c);
        if(c == '\n' || c == C('D') || input.e == input.r+INPUT_BUF){
          input.w = input.e;
8010093c:	a3 24 7e 12 80       	mov    %eax,0x80127e24
          wakeup(&input.r);
80100941:	68 20 7e 12 80       	push   $0x80127e20
80100946:	e8 55 58 00 00       	call   801061a0 <wakeup>
8010094b:	83 c4 10             	add    $0x10,%esp
8010094e:	e9 0d ff ff ff       	jmp    80100860 <consoleintr+0x20>
80100953:	90                   	nop
80100954:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    case C('P'):  // Process listing.
      // procdump() locks cons.lock indirectly; invoke later
      doprocdump = 1;
      break;
    case C('U'):  // Kill line.
      while(input.e != input.w &&
80100958:	a1 28 7e 12 80       	mov    0x80127e28,%eax
8010095d:	39 05 24 7e 12 80    	cmp    %eax,0x80127e24
80100963:	75 2b                	jne    80100990 <consoleintr+0x150>
80100965:	e9 f6 fe ff ff       	jmp    80100860 <consoleintr+0x20>
8010096a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
            input.buf[(input.e-1) % INPUT_BUF] != '\n'){
        input.e--;
80100970:	a3 28 7e 12 80       	mov    %eax,0x80127e28
        consputc(BACKSPACE);
80100975:	b8 00 01 00 00       	mov    $0x100,%eax
8010097a:	e8 d1 fa ff ff       	call   80100450 <consputc>
    case C('P'):  // Process listing.
      // procdump() locks cons.lock indirectly; invoke later
      doprocdump = 1;
      break;
    case C('U'):  // Kill line.
      while(input.e != input.w &&
8010097f:	a1 28 7e 12 80       	mov    0x80127e28,%eax
80100984:	3b 05 24 7e 12 80    	cmp    0x80127e24,%eax
8010098a:	0f 84 d0 fe ff ff    	je     80100860 <consoleintr+0x20>
            input.buf[(input.e-1) % INPUT_BUF] != '\n'){
80100990:	83 e8 01             	sub    $0x1,%eax
80100993:	89 c2                	mov    %eax,%edx
80100995:	83 e2 7f             	and    $0x7f,%edx
    case C('P'):  // Process listing.
      // procdump() locks cons.lock indirectly; invoke later
      doprocdump = 1;
      break;
    case C('U'):  // Kill line.
      while(input.e != input.w &&
80100998:	80 ba a0 7d 12 80 0a 	cmpb   $0xa,-0x7fed8260(%edx)
8010099f:	75 cf                	jne    80100970 <consoleintr+0x130>
801009a1:	e9 ba fe ff ff       	jmp    80100860 <consoleintr+0x20>
801009a6:	8d 76 00             	lea    0x0(%esi),%esi
801009a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
  acquire(&cons.lock);
  while((c = getc()) >= 0){
    switch(c){
    case C('P'):  // Process listing.
      // procdump() locks cons.lock indirectly; invoke later
      doprocdump = 1;
801009b0:	be 01 00 00 00       	mov    $0x1,%esi
801009b5:	e9 a6 fe ff ff       	jmp    80100860 <consoleintr+0x20>
801009ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
  }
  release(&cons.lock);
  if(doprocdump) {
    procdump();  // now call procdump() wo. cons.lock held
  }
}
801009c0:	8d 65 f4             	lea    -0xc(%ebp),%esp
801009c3:	5b                   	pop    %ebx
801009c4:	5e                   	pop    %esi
801009c5:	5f                   	pop    %edi
801009c6:	5d                   	pop    %ebp
      break;
    }
  }
  release(&cons.lock);
  if(doprocdump) {
    procdump();  // now call procdump() wo. cons.lock held
801009c7:	e9 e4 58 00 00       	jmp    801062b0 <procdump>
      }
      break;
    default:
      if(c != 0 && input.e-input.r < INPUT_BUF){
        c = (c == '\r') ? '\n' : c;
        input.buf[input.e++ % INPUT_BUF] = c;
801009cc:	c6 80 a0 7d 12 80 0a 	movb   $0xa,-0x7fed8260(%eax)
        consputc(c);
801009d3:	b8 0a 00 00 00       	mov    $0xa,%eax
801009d8:	e8 73 fa ff ff       	call   80100450 <consputc>
801009dd:	a1 28 7e 12 80       	mov    0x80127e28,%eax
801009e2:	e9 52 ff ff ff       	jmp    80100939 <consoleintr+0xf9>
801009e7:	89 f6                	mov    %esi,%esi
801009e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801009f0 <consoleread>:
  }
}

int
consoleread(struct inode *ip, char *dst, int n)
{
801009f0:	55                   	push   %ebp
801009f1:	89 e5                	mov    %esp,%ebp
801009f3:	57                   	push   %edi
801009f4:	56                   	push   %esi
801009f5:	53                   	push   %ebx
801009f6:	83 ec 28             	sub    $0x28,%esp
801009f9:	8b 7d 08             	mov    0x8(%ebp),%edi
801009fc:	8b 75 0c             	mov    0xc(%ebp),%esi
  uint target;
  int c;

  iunlock(ip);
801009ff:	57                   	push   %edi
80100a00:	e8 ab 15 00 00       	call   80101fb0 <iunlock>
  target = n;
  acquire(&cons.lock);
80100a05:	c7 04 24 20 d5 11 80 	movl   $0x8011d520,(%esp)
80100a0c:	e8 bf 5c 00 00       	call   801066d0 <acquire>
  while(n > 0){
80100a11:	8b 5d 10             	mov    0x10(%ebp),%ebx
80100a14:	83 c4 10             	add    $0x10,%esp
80100a17:	31 c0                	xor    %eax,%eax
80100a19:	85 db                	test   %ebx,%ebx
80100a1b:	0f 8e 9a 00 00 00    	jle    80100abb <consoleread+0xcb>
    while(input.r == input.w){
80100a21:	a1 20 7e 12 80       	mov    0x80127e20,%eax
80100a26:	3b 05 24 7e 12 80    	cmp    0x80127e24,%eax
80100a2c:	74 24                	je     80100a52 <consoleread+0x62>
80100a2e:	eb 58                	jmp    80100a88 <consoleread+0x98>
      if(myproc()->killed){
        release(&cons.lock);
        ilock(ip);
        return -1;
      }
      sleep(&input.r, &cons.lock);
80100a30:	83 ec 08             	sub    $0x8,%esp
80100a33:	68 20 d5 11 80       	push   $0x8011d520
80100a38:	68 20 7e 12 80       	push   $0x80127e20
80100a3d:	e8 2e 55 00 00       	call   80105f70 <sleep>

  iunlock(ip);
  target = n;
  acquire(&cons.lock);
  while(n > 0){
    while(input.r == input.w){
80100a42:	a1 20 7e 12 80       	mov    0x80127e20,%eax
80100a47:	83 c4 10             	add    $0x10,%esp
80100a4a:	3b 05 24 7e 12 80    	cmp    0x80127e24,%eax
80100a50:	75 36                	jne    80100a88 <consoleread+0x98>
      if(myproc()->killed){
80100a52:	e8 19 4a 00 00       	call   80105470 <myproc>
80100a57:	8b 40 44             	mov    0x44(%eax),%eax
80100a5a:	85 c0                	test   %eax,%eax
80100a5c:	74 d2                	je     80100a30 <consoleread+0x40>
        release(&cons.lock);
80100a5e:	83 ec 0c             	sub    $0xc,%esp
80100a61:	68 20 d5 11 80       	push   $0x8011d520
80100a66:	e8 85 5d 00 00       	call   801067f0 <release>
        ilock(ip);
80100a6b:	89 3c 24             	mov    %edi,(%esp)
80100a6e:	e8 5d 14 00 00       	call   80101ed0 <ilock>
        return -1;
80100a73:	83 c4 10             	add    $0x10,%esp
80100a76:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  }
  release(&cons.lock);
  ilock(ip);

  return target - n;
}
80100a7b:	8d 65 f4             	lea    -0xc(%ebp),%esp
80100a7e:	5b                   	pop    %ebx
80100a7f:	5e                   	pop    %esi
80100a80:	5f                   	pop    %edi
80100a81:	5d                   	pop    %ebp
80100a82:	c3                   	ret    
80100a83:	90                   	nop
80100a84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
        ilock(ip);
        return -1;
      }
      sleep(&input.r, &cons.lock);
    }
    c = input.buf[input.r++ % INPUT_BUF];
80100a88:	8d 50 01             	lea    0x1(%eax),%edx
80100a8b:	89 15 20 7e 12 80    	mov    %edx,0x80127e20
80100a91:	89 c2                	mov    %eax,%edx
80100a93:	83 e2 7f             	and    $0x7f,%edx
80100a96:	0f be 92 a0 7d 12 80 	movsbl -0x7fed8260(%edx),%edx
    if(c == C('D')){  // EOF
80100a9d:	83 fa 04             	cmp    $0x4,%edx
80100aa0:	74 39                	je     80100adb <consoleread+0xeb>
        // caller gets a 0-byte result.
        input.r--;
      }
      break;
    }
    *dst++ = c;
80100aa2:	83 c6 01             	add    $0x1,%esi
    --n;
80100aa5:	83 eb 01             	sub    $0x1,%ebx
    if(c == '\n')
80100aa8:	83 fa 0a             	cmp    $0xa,%edx
        // caller gets a 0-byte result.
        input.r--;
      }
      break;
    }
    *dst++ = c;
80100aab:	88 56 ff             	mov    %dl,-0x1(%esi)
    --n;
    if(c == '\n')
80100aae:	74 35                	je     80100ae5 <consoleread+0xf5>
  int c;

  iunlock(ip);
  target = n;
  acquire(&cons.lock);
  while(n > 0){
80100ab0:	85 db                	test   %ebx,%ebx
80100ab2:	0f 85 69 ff ff ff    	jne    80100a21 <consoleread+0x31>
80100ab8:	8b 45 10             	mov    0x10(%ebp),%eax
    *dst++ = c;
    --n;
    if(c == '\n')
      break;
  }
  release(&cons.lock);
80100abb:	83 ec 0c             	sub    $0xc,%esp
80100abe:	89 45 e4             	mov    %eax,-0x1c(%ebp)
80100ac1:	68 20 d5 11 80       	push   $0x8011d520
80100ac6:	e8 25 5d 00 00       	call   801067f0 <release>
  ilock(ip);
80100acb:	89 3c 24             	mov    %edi,(%esp)
80100ace:	e8 fd 13 00 00       	call   80101ed0 <ilock>

  return target - n;
80100ad3:	83 c4 10             	add    $0x10,%esp
80100ad6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
80100ad9:	eb a0                	jmp    80100a7b <consoleread+0x8b>
      }
      sleep(&input.r, &cons.lock);
    }
    c = input.buf[input.r++ % INPUT_BUF];
    if(c == C('D')){  // EOF
      if(n < target){
80100adb:	39 5d 10             	cmp    %ebx,0x10(%ebp)
80100ade:	76 05                	jbe    80100ae5 <consoleread+0xf5>
        // Save ^D for next time, to make sure
        // caller gets a 0-byte result.
        input.r--;
80100ae0:	a3 20 7e 12 80       	mov    %eax,0x80127e20
80100ae5:	8b 45 10             	mov    0x10(%ebp),%eax
80100ae8:	29 d8                	sub    %ebx,%eax
80100aea:	eb cf                	jmp    80100abb <consoleread+0xcb>
80100aec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80100af0 <ttyread>:
  return target - n;
}

int
ttyread(struct inode *ip, char *dst, int n)
{
80100af0:	55                   	push   %ebp
80100af1:	89 e5                	mov    %esp,%ebp
80100af3:	53                   	push   %ebx
80100af4:	83 ec 04             	sub    $0x4,%esp
80100af7:	8b 5d 08             	mov    0x8(%ebp),%ebx
  if(tty_table[ip->minor].flags & DEV_CONNECT){
80100afa:	0f bf 43 54          	movswl 0x54(%ebx),%eax
80100afe:	6b c0 38             	imul   $0x38,%eax,%eax
80100b01:	8b 80 40 7e 12 80    	mov    -0x7fed81c0(%eax),%eax
80100b07:	f6 c4 10             	test   $0x10,%ah
80100b0a:	75 7c                	jne    80100b88 <ttyread+0x98>
    return consoleread(ip,dst,n);
  }

  if(tty_table[ip->minor].flags & DEV_ATTACH)
80100b0c:	a8 10                	test   $0x10,%al
80100b0e:	75 10                	jne    80100b20 <ttyread+0x30>
    //after wakeup has been called
    release(&tty_table[ip->minor].lock);
    ilock(ip);
  }
  return -1;
}
80100b10:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80100b15:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80100b18:	c9                   	leave  
80100b19:	c3                   	ret    
80100b1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    return consoleread(ip,dst,n);
  }

  if(tty_table[ip->minor].flags & DEV_ATTACH)
  {
    iunlock(ip);
80100b20:	83 ec 0c             	sub    $0xc,%esp
80100b23:	53                   	push   %ebx
80100b24:	e8 87 14 00 00       	call   80101fb0 <iunlock>
    acquire(&tty_table[ip->minor].lock);
80100b29:	0f bf 43 54          	movswl 0x54(%ebx),%eax
80100b2d:	6b c0 38             	imul   $0x38,%eax,%eax
80100b30:	05 44 7e 12 80       	add    $0x80127e44,%eax
80100b35:	89 04 24             	mov    %eax,(%esp)
80100b38:	e8 93 5b 00 00       	call   801066d0 <acquire>
    sleep(&tty_table[ip->minor], &tty_table[ip->minor].lock);
80100b3d:	0f bf 43 54          	movswl 0x54(%ebx),%eax
80100b41:	5a                   	pop    %edx
80100b42:	59                   	pop    %ecx
80100b43:	6b c0 38             	imul   $0x38,%eax,%eax
80100b46:	8d 90 44 7e 12 80    	lea    -0x7fed81bc(%eax),%edx
80100b4c:	05 40 7e 12 80       	add    $0x80127e40,%eax
80100b51:	52                   	push   %edx
80100b52:	50                   	push   %eax
80100b53:	e8 18 54 00 00       	call   80105f70 <sleep>
    //after wakeup has been called
    release(&tty_table[ip->minor].lock);
80100b58:	0f bf 43 54          	movswl 0x54(%ebx),%eax
80100b5c:	6b c0 38             	imul   $0x38,%eax,%eax
80100b5f:	05 44 7e 12 80       	add    $0x80127e44,%eax
80100b64:	89 04 24             	mov    %eax,(%esp)
80100b67:	e8 84 5c 00 00       	call   801067f0 <release>
    ilock(ip);
80100b6c:	89 1c 24             	mov    %ebx,(%esp)
80100b6f:	e8 5c 13 00 00       	call   80101ed0 <ilock>
80100b74:	83 c4 10             	add    $0x10,%esp
  }
  return -1;
}
80100b77:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80100b7c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80100b7f:	c9                   	leave  
80100b80:	c3                   	ret    
80100b81:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80100b88:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80100b8b:	c9                   	leave  

int
ttyread(struct inode *ip, char *dst, int n)
{
  if(tty_table[ip->minor].flags & DEV_CONNECT){
    return consoleread(ip,dst,n);
80100b8c:	e9 5f fe ff ff       	jmp    801009f0 <consoleread>
80100b91:	eb 0d                	jmp    80100ba0 <consolewrite>
80100b93:	90                   	nop
80100b94:	90                   	nop
80100b95:	90                   	nop
80100b96:	90                   	nop
80100b97:	90                   	nop
80100b98:	90                   	nop
80100b99:	90                   	nop
80100b9a:	90                   	nop
80100b9b:	90                   	nop
80100b9c:	90                   	nop
80100b9d:	90                   	nop
80100b9e:	90                   	nop
80100b9f:	90                   	nop

80100ba0 <consolewrite>:
  return -1;
}

int
consolewrite(struct inode *ip, char *buf, int n)
{
80100ba0:	55                   	push   %ebp
80100ba1:	89 e5                	mov    %esp,%ebp
80100ba3:	57                   	push   %edi
80100ba4:	56                   	push   %esi
80100ba5:	53                   	push   %ebx
80100ba6:	83 ec 18             	sub    $0x18,%esp
  int i;

  iunlock(ip);
80100ba9:	ff 75 08             	pushl  0x8(%ebp)
  return -1;
}

int
consolewrite(struct inode *ip, char *buf, int n)
{
80100bac:	8b 75 10             	mov    0x10(%ebp),%esi
  int i;

  iunlock(ip);
80100baf:	e8 fc 13 00 00       	call   80101fb0 <iunlock>
  acquire(&cons.lock);
80100bb4:	c7 04 24 20 d5 11 80 	movl   $0x8011d520,(%esp)
80100bbb:	e8 10 5b 00 00       	call   801066d0 <acquire>
80100bc0:	8b 7d 0c             	mov    0xc(%ebp),%edi
  for(i = 0; i < n; i++)
80100bc3:	83 c4 10             	add    $0x10,%esp
80100bc6:	85 f6                	test   %esi,%esi
80100bc8:	8d 1c 37             	lea    (%edi,%esi,1),%ebx
80100bcb:	7e 12                	jle    80100bdf <consolewrite+0x3f>
80100bcd:	8d 76 00             	lea    0x0(%esi),%esi
    consputc(buf[i] & 0xff);
80100bd0:	0f b6 07             	movzbl (%edi),%eax
80100bd3:	83 c7 01             	add    $0x1,%edi
80100bd6:	e8 75 f8 ff ff       	call   80100450 <consputc>
{
  int i;

  iunlock(ip);
  acquire(&cons.lock);
  for(i = 0; i < n; i++)
80100bdb:	39 df                	cmp    %ebx,%edi
80100bdd:	75 f1                	jne    80100bd0 <consolewrite+0x30>
    consputc(buf[i] & 0xff);
  release(&cons.lock);
80100bdf:	83 ec 0c             	sub    $0xc,%esp
80100be2:	68 20 d5 11 80       	push   $0x8011d520
80100be7:	e8 04 5c 00 00       	call   801067f0 <release>
  ilock(ip);
80100bec:	58                   	pop    %eax
80100bed:	ff 75 08             	pushl  0x8(%ebp)
80100bf0:	e8 db 12 00 00       	call   80101ed0 <ilock>

  return n;
}
80100bf5:	8d 65 f4             	lea    -0xc(%ebp),%esp
80100bf8:	89 f0                	mov    %esi,%eax
80100bfa:	5b                   	pop    %ebx
80100bfb:	5e                   	pop    %esi
80100bfc:	5f                   	pop    %edi
80100bfd:	5d                   	pop    %ebp
80100bfe:	c3                   	ret    
80100bff:	90                   	nop

80100c00 <ttywrite>:

int
ttywrite(struct inode *ip, char *buf, int n)
{
80100c00:	55                   	push   %ebp
80100c01:	89 e5                	mov    %esp,%ebp
80100c03:	53                   	push   %ebx
80100c04:	8b 4d 08             	mov    0x8(%ebp),%ecx
80100c07:	8b 45 10             	mov    0x10(%ebp),%eax
  if(tty_table[ip->minor].flags & DEV_CONNECT){
80100c0a:	0f bf 51 54          	movswl 0x54(%ecx),%edx
80100c0e:	6b d2 38             	imul   $0x38,%edx,%edx
80100c11:	f6 82 41 7e 12 80 10 	testb  $0x10,-0x7fed81bf(%edx)
80100c18:	75 06                	jne    80100c20 <ttywrite+0x20>
    return consolewrite(ip,buf,n);
  }
  //2DO: should return -1 when write to tty fails - filewrite panics.
  return n;
}
80100c1a:	5b                   	pop    %ebx
80100c1b:	5d                   	pop    %ebp
80100c1c:	c3                   	ret    
80100c1d:	8d 76 00             	lea    0x0(%esi),%esi
80100c20:	5b                   	pop    %ebx
80100c21:	5d                   	pop    %ebp

int
ttywrite(struct inode *ip, char *buf, int n)
{
  if(tty_table[ip->minor].flags & DEV_CONNECT){
    return consolewrite(ip,buf,n);
80100c22:	e9 79 ff ff ff       	jmp    80100ba0 <consolewrite>
80100c27:	89 f6                	mov    %esi,%esi
80100c29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80100c30 <consoleinit>:
  return n;
}

void
consoleinit(void)
{
80100c30:	55                   	push   %ebp
80100c31:	89 e5                	mov    %esp,%ebp
80100c33:	83 ec 10             	sub    $0x10,%esp
  initlock(&cons.lock, "console");
80100c36:	68 6b eb 10 80       	push   $0x8010eb6b
80100c3b:	68 20 d5 11 80       	push   $0x8011d520
80100c40:	e8 8b 59 00 00       	call   801065d0 <initlock>
  tty_table[CONSOLE_MINOR].flags = DEV_CONNECT;

  //To state that the console tty is also attached
  //this will make the console sleep whilre we are connected to another tty.
  tty_table[CONSOLE_MINOR].flags |= DEV_ATTACH;
  initlock(&tty_table[CONSOLE_MINOR].lock, "ttyconsole");
80100c45:	58                   	pop    %eax
80100c46:	5a                   	pop    %edx
80100c47:	68 68 eb 10 80       	push   $0x8010eb68
80100c4c:	68 44 7e 12 80       	push   $0x80127e44
void
consoleinit(void)
{
  initlock(&cons.lock, "console");

  devsw[CONSOLE_MAJOR].write = ttywrite;
80100c51:	c7 05 0c ad 12 80 00 	movl   $0x80100c00,0x8012ad0c
80100c58:	0c 10 80 
  devsw[CONSOLE_MAJOR].read = ttyread;
80100c5b:	c7 05 08 ad 12 80 f0 	movl   $0x80100af0,0x8012ad08
80100c62:	0a 10 80 
  tty_table[CONSOLE_MINOR].flags = DEV_CONNECT;

  //To state that the console tty is also attached
  //this will make the console sleep whilre we are connected to another tty.
  tty_table[CONSOLE_MINOR].flags |= DEV_ATTACH;
80100c65:	c7 05 40 7e 12 80 10 	movl   $0x1010,0x80127e40
80100c6c:	10 00 00 
  initlock(&tty_table[CONSOLE_MINOR].lock, "ttyconsole");
80100c6f:	e8 5c 59 00 00       	call   801065d0 <initlock>

  cons.locking = 1;

  ioapicenable(IRQ_KBD, 0);
80100c74:	59                   	pop    %ecx
80100c75:	58                   	pop    %eax
80100c76:	6a 00                	push   $0x0
80100c78:	6a 01                	push   $0x1
  //To state that the console tty is also attached
  //this will make the console sleep whilre we are connected to another tty.
  tty_table[CONSOLE_MINOR].flags |= DEV_ATTACH;
  initlock(&tty_table[CONSOLE_MINOR].lock, "ttyconsole");

  cons.locking = 1;
80100c7a:	c7 05 54 d5 11 80 01 	movl   $0x1,0x8011d554
80100c81:	00 00 00 

  ioapicenable(IRQ_KBD, 0);
80100c84:	e8 37 20 00 00       	call   80102cc0 <ioapicenable>
}
80100c89:	83 c4 10             	add    $0x10,%esp
80100c8c:	c9                   	leave  
80100c8d:	c3                   	ret    
80100c8e:	66 90                	xchg   %ax,%ax

80100c90 <ttyinit>:

void
ttyinit(void)
{
80100c90:	55                   	push   %ebp
  // we create tty devices after the console
  // therefor the tty's minor will be after the console's
  for(int i = CONSOLE_MINOR+1; i < MAX_TTY; i++){
     tty_table[i].flags = 0;
80100c91:	c7 05 78 7e 12 80 00 	movl   $0x0,0x80127e78
80100c98:	00 00 00 
80100c9b:	c7 05 b0 7e 12 80 00 	movl   $0x0,0x80127eb0
80100ca2:	00 00 00 
80100ca5:	c7 05 e8 7e 12 80 00 	movl   $0x0,0x80127ee8
80100cac:	00 00 00 
  ioapicenable(IRQ_KBD, 0);
}

void
ttyinit(void)
{
80100caf:	89 e5                	mov    %esp,%ebp
  // we create tty devices after the console
  // therefor the tty's minor will be after the console's
  for(int i = CONSOLE_MINOR+1; i < MAX_TTY; i++){
     tty_table[i].flags = 0;
  }
}
80100cb1:	5d                   	pop    %ebp
80100cb2:	c3                   	ret    
80100cb3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80100cb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80100cc0 <tty_disconnect>:

void tty_disconnect(struct inode *ip) {
80100cc0:	55                   	push   %ebp
80100cc1:	89 e5                	mov    %esp,%ebp
80100cc3:	83 ec 14             	sub    $0x14,%esp
  tty_table[ip->minor].flags &=  ~(DEV_CONNECT);
80100cc6:	8b 45 08             	mov    0x8(%ebp),%eax
80100cc9:	0f bf 40 54          	movswl 0x54(%eax),%eax
  tty_table[CONSOLE_MINOR].flags |=  DEV_CONNECT;

  //wakeup the console (it is sleeping now while being attached)
  wakeup(&tty_table[CONSOLE_MINOR]);
80100ccd:	68 40 7e 12 80       	push   $0x80127e40
     tty_table[i].flags = 0;
  }
}

void tty_disconnect(struct inode *ip) {
  tty_table[ip->minor].flags &=  ~(DEV_CONNECT);
80100cd2:	6b c0 38             	imul   $0x38,%eax,%eax
80100cd5:	81 a0 40 7e 12 80 ff 	andl   $0xffffefff,-0x7fed81c0(%eax)
80100cdc:	ef ff ff 
  tty_table[CONSOLE_MINOR].flags |=  DEV_CONNECT;
80100cdf:	81 0d 40 7e 12 80 00 	orl    $0x1000,0x80127e40
80100ce6:	10 00 00 

  //wakeup the console (it is sleeping now while being attached)
  wakeup(&tty_table[CONSOLE_MINOR]);
80100ce9:	e8 b2 54 00 00       	call   801061a0 <wakeup>

  consoleclear();
80100cee:	e8 fd fa ff ff       	call   801007f0 <consoleclear>
  cprintf("Console connected\n");
80100cf3:	83 c4 10             	add    $0x10,%esp
80100cf6:	c7 45 08 73 eb 10 80 	movl   $0x8010eb73,0x8(%ebp)
}
80100cfd:	c9                   	leave  

  //wakeup the console (it is sleeping now while being attached)
  wakeup(&tty_table[CONSOLE_MINOR]);

  consoleclear();
  cprintf("Console connected\n");
80100cfe:	e9 5d f9 ff ff       	jmp    80100660 <cprintf>
80100d03:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80100d09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80100d10 <tty_connect>:
}

void tty_connect(struct inode *ip) {
80100d10:	55                   	push   %ebp
80100d11:	ba 40 7e 12 80       	mov    $0x80127e40,%edx
80100d16:	89 e5                	mov    %esp,%ebp
80100d18:	53                   	push   %ebx
80100d19:	83 ec 04             	sub    $0x4,%esp
80100d1c:	8b 5d 08             	mov    0x8(%ebp),%ebx
  tty_table[ip->minor].flags |= DEV_CONNECT;
80100d1f:	0f bf 43 54          	movswl 0x54(%ebx),%eax
80100d23:	6b c0 38             	imul   $0x38,%eax,%eax
80100d26:	81 88 40 7e 12 80 00 	orl    $0x1000,-0x7fed81c0(%eax)
80100d2d:	10 00 00 
  for(int i = CONSOLE_MINOR; i < MAX_TTY; i++){
80100d30:	31 c0                	xor    %eax,%eax
    if(ip->minor != i){
80100d32:	0f bf 4b 54          	movswl 0x54(%ebx),%ecx
80100d36:	39 c1                	cmp    %eax,%ecx
80100d38:	74 06                	je     80100d40 <tty_connect+0x30>
      tty_table[i].flags &= ~(DEV_CONNECT);
80100d3a:	81 22 ff ef ff ff    	andl   $0xffffefff,(%edx)
  cprintf("Console connected\n");
}

void tty_connect(struct inode *ip) {
  tty_table[ip->minor].flags |= DEV_CONNECT;
  for(int i = CONSOLE_MINOR; i < MAX_TTY; i++){
80100d40:	83 c0 01             	add    $0x1,%eax
80100d43:	83 c2 38             	add    $0x38,%edx
80100d46:	83 f8 04             	cmp    $0x4,%eax
80100d49:	75 e7                	jne    80100d32 <tty_connect+0x22>
    if(ip->minor != i){
      tty_table[i].flags &= ~(DEV_CONNECT);
  }
 }
 consoleclear();
80100d4b:	e8 a0 fa ff ff       	call   801007f0 <consoleclear>
 cprintf("\ntty%d connected\n",ip->minor-(CONSOLE_MINOR+1));
80100d50:	0f bf 43 54          	movswl 0x54(%ebx),%eax
80100d54:	83 ec 08             	sub    $0x8,%esp
80100d57:	83 e8 01             	sub    $0x1,%eax
80100d5a:	50                   	push   %eax
80100d5b:	68 86 eb 10 80       	push   $0x8010eb86
80100d60:	e8 fb f8 ff ff       	call   80100660 <cprintf>

 //Wakeup the processes that slept on ttyread()
 wakeup(&tty_table[ip->minor]);
80100d65:	0f bf 43 54          	movswl 0x54(%ebx),%eax
80100d69:	83 c4 10             	add    $0x10,%esp
}
80100d6c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 }
 consoleclear();
 cprintf("\ntty%d connected\n",ip->minor-(CONSOLE_MINOR+1));

 //Wakeup the processes that slept on ttyread()
 wakeup(&tty_table[ip->minor]);
80100d6f:	6b c0 38             	imul   $0x38,%eax,%eax
80100d72:	05 40 7e 12 80       	add    $0x80127e40,%eax
80100d77:	89 45 08             	mov    %eax,0x8(%ebp)
}
80100d7a:	c9                   	leave  
 }
 consoleclear();
 cprintf("\ntty%d connected\n",ip->minor-(CONSOLE_MINOR+1));

 //Wakeup the processes that slept on ttyread()
 wakeup(&tty_table[ip->minor]);
80100d7b:	e9 20 54 00 00       	jmp    801061a0 <wakeup>

80100d80 <tty_attach>:
}

void tty_attach(struct inode *ip) {
80100d80:	55                   	push   %ebp
80100d81:	89 e5                	mov    %esp,%ebp
80100d83:	83 ec 10             	sub    $0x10,%esp
80100d86:	8b 55 08             	mov    0x8(%ebp),%edx
  tty_table[ip->minor].flags |= DEV_ATTACH;
80100d89:	0f bf 42 54          	movswl 0x54(%edx),%eax
  initlock(&(tty_table[ip->minor].lock), "tty");
80100d8d:	68 98 eb 10 80       	push   $0x8010eb98
 //Wakeup the processes that slept on ttyread()
 wakeup(&tty_table[ip->minor]);
}

void tty_attach(struct inode *ip) {
  tty_table[ip->minor].flags |= DEV_ATTACH;
80100d92:	6b c0 38             	imul   $0x38,%eax,%eax
80100d95:	83 88 40 7e 12 80 10 	orl    $0x10,-0x7fed81c0(%eax)
  initlock(&(tty_table[ip->minor].lock), "tty");
80100d9c:	0f bf 42 54          	movswl 0x54(%edx),%eax
80100da0:	6b c0 38             	imul   $0x38,%eax,%eax
80100da3:	05 44 7e 12 80       	add    $0x80127e44,%eax
80100da8:	50                   	push   %eax
80100da9:	e8 22 58 00 00       	call   801065d0 <initlock>
}
80100dae:	83 c4 10             	add    $0x10,%esp
80100db1:	c9                   	leave  
80100db2:	c3                   	ret    
80100db3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80100db9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80100dc0 <tty_detach>:

void tty_detach(struct inode *ip) {
80100dc0:	55                   	push   %ebp
80100dc1:	89 e5                	mov    %esp,%ebp
  tty_table[ip->minor].flags &= ~(DEV_ATTACH);
80100dc3:	8b 45 08             	mov    0x8(%ebp),%eax
}
80100dc6:	5d                   	pop    %ebp
  tty_table[ip->minor].flags |= DEV_ATTACH;
  initlock(&(tty_table[ip->minor].lock), "tty");
}

void tty_detach(struct inode *ip) {
  tty_table[ip->minor].flags &= ~(DEV_ATTACH);
80100dc7:	0f bf 40 54          	movswl 0x54(%eax),%eax
80100dcb:	6b c0 38             	imul   $0x38,%eax,%eax
80100dce:	83 a0 40 7e 12 80 ef 	andl   $0xffffffef,-0x7fed81c0(%eax)
}
80100dd5:	c3                   	ret    
80100dd6:	8d 76 00             	lea    0x0(%esi),%esi
80100dd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80100de0 <tty_gets>:

int tty_gets(struct inode *ip, int command) {
80100de0:	55                   	push   %ebp
80100de1:	89 e5                	mov    %esp,%ebp
  return (tty_table[ip->minor].flags & command ? 1 : 0);
80100de3:	8b 45 08             	mov    0x8(%ebp),%eax
80100de6:	8b 55 0c             	mov    0xc(%ebp),%edx
80100de9:	5d                   	pop    %ebp
void tty_detach(struct inode *ip) {
  tty_table[ip->minor].flags &= ~(DEV_ATTACH);
}

int tty_gets(struct inode *ip, int command) {
  return (tty_table[ip->minor].flags & command ? 1 : 0);
80100dea:	0f bf 40 54          	movswl 0x54(%eax),%eax
80100dee:	6b c0 38             	imul   $0x38,%eax,%eax
80100df1:	85 90 40 7e 12 80    	test   %edx,-0x7fed81c0(%eax)
80100df7:	0f 95 c0             	setne  %al
80100dfa:	0f b6 c0             	movzbl %al,%eax
80100dfd:	c3                   	ret    
80100dfe:	66 90                	xchg   %ax,%ax

80100e00 <devinit>:
80100e00:	55                   	push   %ebp
80100e01:	89 e5                	mov    %esp,%ebp
80100e03:	83 ec 10             	sub    $0x10,%esp
80100e06:	68 ad eb 10 80       	push   $0x8010ebad
80100e0b:	68 20 7f 12 80       	push   $0x80127f20
80100e10:	e8 bb 57 00 00       	call   801065d0 <initlock>
80100e15:	83 c4 10             	add    $0x10,%esp
80100e18:	c9                   	leave  
80100e19:	c3                   	ret    
80100e1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80100e20 <getorcreatedevice>:
80100e20:	55                   	push   %ebp
80100e21:	89 e5                	mov    %esp,%ebp
80100e23:	57                   	push   %edi
80100e24:	56                   	push   %esi
80100e25:	53                   	push   %ebx
80100e26:	be ff ff ff ff       	mov    $0xffffffff,%esi
80100e2b:	31 db                	xor    %ebx,%ebx
80100e2d:	83 ec 18             	sub    $0x18,%esp
80100e30:	8b 7d 08             	mov    0x8(%ebp),%edi
80100e33:	68 20 7f 12 80       	push   $0x80127f20
80100e38:	e8 93 58 00 00       	call   801066d0 <acquire>
80100e3d:	ba 70 7f 12 80       	mov    $0x80127f70,%edx
80100e42:	83 c4 10             	add    $0x10,%esp
80100e45:	eb 19                	jmp    80100e60 <getorcreatedevice+0x40>
80100e47:	89 f6                	mov    %esi,%esi
80100e49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80100e50:	39 7a 04             	cmp    %edi,0x4(%edx)
80100e53:	74 73                	je     80100ec8 <getorcreatedevice+0xa8>
80100e55:	83 c3 01             	add    $0x1,%ebx
80100e58:	83 c2 24             	add    $0x24,%edx
80100e5b:	83 fb 0a             	cmp    $0xa,%ebx
80100e5e:	74 18                	je     80100e78 <getorcreatedevice+0x58>
80100e60:	8b 0a                	mov    (%edx),%ecx
80100e62:	85 c9                	test   %ecx,%ecx
80100e64:	75 ea                	jne    80100e50 <getorcreatedevice+0x30>
80100e66:	83 fe ff             	cmp    $0xffffffff,%esi
80100e69:	75 e5                	jne    80100e50 <getorcreatedevice+0x30>
80100e6b:	89 de                	mov    %ebx,%esi
80100e6d:	83 c3 01             	add    $0x1,%ebx
80100e70:	83 c2 24             	add    $0x24,%edx
80100e73:	83 fb 0a             	cmp    $0xa,%ebx
80100e76:	75 e8                	jne    80100e60 <getorcreatedevice+0x40>
80100e78:	83 fe ff             	cmp    $0xffffffff,%esi
80100e7b:	74 7a                	je     80100ef7 <getorcreatedevice+0xd7>
80100e7d:	8d 04 f6             	lea    (%esi,%esi,8),%eax
80100e80:	83 ec 0c             	sub    $0xc,%esp
80100e83:	81 ce 00 00 07 00    	or     $0x70000,%esi
80100e89:	8d 1c 85 20 7f 12 80 	lea    -0x7fed80e0(,%eax,4),%ebx
80100e90:	c7 43 50 01 00 00 00 	movl   $0x1,0x50(%ebx)
80100e97:	57                   	push   %edi
80100e98:	e8 03 10 00 00       	call   80101ea0 <idup>
80100e9d:	89 43 54             	mov    %eax,0x54(%ebx)
80100ea0:	c7 04 24 20 7f 12 80 	movl   $0x80127f20,(%esp)
80100ea7:	e8 44 59 00 00       	call   801067f0 <release>
80100eac:	89 34 24             	mov    %esi,(%esp)
80100eaf:	e8 dc 0d 00 00       	call   80101c90 <fsinit>
80100eb4:	83 c4 10             	add    $0x10,%esp
80100eb7:	8d 65 f4             	lea    -0xc(%ebp),%esp
80100eba:	89 f0                	mov    %esi,%eax
80100ebc:	5b                   	pop    %ebx
80100ebd:	5e                   	pop    %esi
80100ebe:	5f                   	pop    %edi
80100ebf:	5d                   	pop    %ebp
80100ec0:	c3                   	ret    
80100ec1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80100ec8:	83 ec 0c             	sub    $0xc,%esp
80100ecb:	8d 04 db             	lea    (%ebx,%ebx,8),%eax
80100ece:	83 c1 01             	add    $0x1,%ecx
80100ed1:	68 20 7f 12 80       	push   $0x80127f20
80100ed6:	89 de                	mov    %ebx,%esi
80100ed8:	89 0c 85 70 7f 12 80 	mov    %ecx,-0x7fed8090(,%eax,4)
80100edf:	81 ce 00 00 07 00    	or     $0x70000,%esi
80100ee5:	e8 06 59 00 00       	call   801067f0 <release>
80100eea:	83 c4 10             	add    $0x10,%esp
80100eed:	8d 65 f4             	lea    -0xc(%ebp),%esp
80100ef0:	89 f0                	mov    %esi,%eax
80100ef2:	5b                   	pop    %ebx
80100ef3:	5e                   	pop    %esi
80100ef4:	5f                   	pop    %edi
80100ef5:	5d                   	pop    %ebp
80100ef6:	c3                   	ret    
80100ef7:	83 ec 0c             	sub    $0xc,%esp
80100efa:	68 20 7f 12 80       	push   $0x80127f20
80100eff:	e8 ec 58 00 00       	call   801067f0 <release>
80100f04:	83 c4 10             	add    $0x10,%esp
80100f07:	eb ae                	jmp    80100eb7 <getorcreatedevice+0x97>
80100f09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80100f10 <deviceget>:
80100f10:	55                   	push   %ebp
80100f11:	89 e5                	mov    %esp,%ebp
80100f13:	53                   	push   %ebx
80100f14:	83 ec 04             	sub    $0x4,%esp
80100f17:	8b 45 08             	mov    0x8(%ebp),%eax
80100f1a:	89 c2                	mov    %eax,%edx
80100f1c:	c1 ea 10             	shr    $0x10,%edx
80100f1f:	83 fa 07             	cmp    $0x7,%edx
80100f22:	74 0c                	je     80100f30 <deviceget+0x20>
80100f24:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80100f27:	c9                   	leave  
80100f28:	c3                   	ret    
80100f29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80100f30:	83 ec 0c             	sub    $0xc,%esp
80100f33:	0f b7 d8             	movzwl %ax,%ebx
80100f36:	68 20 7f 12 80       	push   $0x80127f20
80100f3b:	e8 90 57 00 00       	call   801066d0 <acquire>
80100f40:	8d 04 db             	lea    (%ebx,%ebx,8),%eax
80100f43:	83 c4 10             	add    $0x10,%esp
80100f46:	c7 45 08 20 7f 12 80 	movl   $0x80127f20,0x8(%ebp)
80100f4d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80100f50:	83 04 85 70 7f 12 80 	addl   $0x1,-0x7fed8090(,%eax,4)
80100f57:	01 
80100f58:	c9                   	leave  
80100f59:	e9 92 58 00 00       	jmp    801067f0 <release>
80100f5e:	66 90                	xchg   %ax,%ax

80100f60 <deviceput>:
80100f60:	55                   	push   %ebp
80100f61:	89 e5                	mov    %esp,%ebp
80100f63:	56                   	push   %esi
80100f64:	53                   	push   %ebx
80100f65:	8b 45 08             	mov    0x8(%ebp),%eax
80100f68:	89 c2                	mov    %eax,%edx
80100f6a:	c1 ea 10             	shr    $0x10,%edx
80100f6d:	83 fa 07             	cmp    $0x7,%edx
80100f70:	74 0e                	je     80100f80 <deviceput+0x20>
80100f72:	8d 65 f8             	lea    -0x8(%ebp),%esp
80100f75:	5b                   	pop    %ebx
80100f76:	5e                   	pop    %esi
80100f77:	5d                   	pop    %ebp
80100f78:	c3                   	ret    
80100f79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80100f80:	83 ec 0c             	sub    $0xc,%esp
80100f83:	0f b7 d8             	movzwl %ax,%ebx
80100f86:	68 20 7f 12 80       	push   $0x80127f20
80100f8b:	e8 40 57 00 00       	call   801066d0 <acquire>
80100f90:	8d 04 db             	lea    (%ebx,%ebx,8),%eax
80100f93:	83 c4 10             	add    $0x10,%esp
80100f96:	8d 34 85 20 7f 12 80 	lea    -0x7fed80e0(,%eax,4),%esi
80100f9d:	8b 46 50             	mov    0x50(%esi),%eax
80100fa0:	83 f8 01             	cmp    $0x1,%eax
80100fa3:	74 23                	je     80100fc8 <deviceput+0x68>
80100fa5:	8d 14 db             	lea    (%ebx,%ebx,8),%edx
80100fa8:	83 e8 01             	sub    $0x1,%eax
80100fab:	c7 45 08 20 7f 12 80 	movl   $0x80127f20,0x8(%ebp)
80100fb2:	89 04 95 70 7f 12 80 	mov    %eax,-0x7fed8090(,%edx,4)
80100fb9:	8d 65 f8             	lea    -0x8(%ebp),%esp
80100fbc:	5b                   	pop    %ebx
80100fbd:	5e                   	pop    %esi
80100fbe:	5d                   	pop    %ebp
80100fbf:	e9 2c 58 00 00       	jmp    801067f0 <release>
80100fc4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80100fc8:	83 ec 0c             	sub    $0xc,%esp
80100fcb:	68 20 7f 12 80       	push   $0x80127f20
80100fd0:	e8 1b 58 00 00       	call   801067f0 <release>
80100fd5:	58                   	pop    %eax
80100fd6:	ff 76 54             	pushl  0x54(%esi)
80100fd9:	e8 22 10 00 00       	call   80102000 <iput>
80100fde:	89 d8                	mov    %ebx,%eax
80100fe0:	0d 00 00 07 00       	or     $0x70000,%eax
80100fe5:	89 04 24             	mov    %eax,(%esp)
80100fe8:	e8 e3 f0 ff ff       	call   801000d0 <invalidateblocks>
80100fed:	c7 04 24 20 7f 12 80 	movl   $0x80127f20,(%esp)
80100ff4:	e8 d7 56 00 00       	call   801066d0 <acquire>
80100ff9:	c7 46 54 00 00 00 00 	movl   $0x0,0x54(%esi)
80101000:	8b 46 50             	mov    0x50(%esi),%eax
80101003:	83 c4 10             	add    $0x10,%esp
80101006:	eb 9d                	jmp    80100fa5 <deviceput+0x45>
80101008:	90                   	nop
80101009:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80101010 <getinodefordevice>:
80101010:	55                   	push   %ebp
80101011:	31 c0                	xor    %eax,%eax
80101013:	89 e5                	mov    %esp,%ebp
80101015:	8b 55 08             	mov    0x8(%ebp),%edx
80101018:	89 d1                	mov    %edx,%ecx
8010101a:	c1 e9 10             	shr    $0x10,%ecx
8010101d:	83 f9 07             	cmp    $0x7,%ecx
80101020:	75 17                	jne    80101039 <getinodefordevice+0x29>
80101022:	0f b7 d2             	movzwl %dx,%edx
80101025:	8d 14 d2             	lea    (%edx,%edx,8),%edx
80101028:	8d 14 95 20 7f 12 80 	lea    -0x7fed80e0(,%edx,4),%edx
8010102f:	8b 4a 50             	mov    0x50(%edx),%ecx
80101032:	85 c9                	test   %ecx,%ecx
80101034:	74 03                	je     80101039 <getinodefordevice+0x29>
80101036:	8b 42 54             	mov    0x54(%edx),%eax
80101039:	5d                   	pop    %ebp
8010103a:	c3                   	ret    
8010103b:	90                   	nop
8010103c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80101040 <printdevices>:
80101040:	55                   	push   %ebp
80101041:	89 e5                	mov    %esp,%ebp
80101043:	56                   	push   %esi
80101044:	53                   	push   %ebx
80101045:	be 70 7f 12 80       	mov    $0x80127f70,%esi
8010104a:	31 db                	xor    %ebx,%ebx
8010104c:	83 ec 0c             	sub    $0xc,%esp
8010104f:	68 20 7f 12 80       	push   $0x80127f20
80101054:	e8 77 56 00 00       	call   801066d0 <acquire>
80101059:	c7 04 24 b6 eb 10 80 	movl   $0x8010ebb6,(%esp)
80101060:	e8 fb f5 ff ff       	call   80100660 <cprintf>
80101065:	83 c4 10             	add    $0x10,%esp
80101068:	eb 11                	jmp    8010107b <printdevices+0x3b>
8010106a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80101070:	83 c3 01             	add    $0x1,%ebx
80101073:	83 c6 24             	add    $0x24,%esi
80101076:	83 fb 0a             	cmp    $0xa,%ebx
80101079:	74 23                	je     8010109e <printdevices+0x5e>
8010107b:	8b 06                	mov    (%esi),%eax
8010107d:	85 c0                	test   %eax,%eax
8010107f:	74 ef                	je     80101070 <printdevices+0x30>
80101081:	50                   	push   %eax
80101082:	ff 76 04             	pushl  0x4(%esi)
80101085:	83 c6 24             	add    $0x24,%esi
80101088:	53                   	push   %ebx
80101089:	68 cc eb 10 80       	push   $0x8010ebcc
8010108e:	83 c3 01             	add    $0x1,%ebx
80101091:	e8 ca f5 ff ff       	call   80100660 <cprintf>
80101096:	83 c4 10             	add    $0x10,%esp
80101099:	83 fb 0a             	cmp    $0xa,%ebx
8010109c:	75 dd                	jne    8010107b <printdevices+0x3b>
8010109e:	83 ec 0c             	sub    $0xc,%esp
801010a1:	68 20 7f 12 80       	push   $0x80127f20
801010a6:	e8 45 57 00 00       	call   801067f0 <release>
801010ab:	83 c4 10             	add    $0x10,%esp
801010ae:	8d 65 f8             	lea    -0x8(%ebp),%esp
801010b1:	5b                   	pop    %ebx
801010b2:	5e                   	pop    %esi
801010b3:	5d                   	pop    %ebp
801010b4:	c3                   	ret    
801010b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801010b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801010c0 <getsuperblock>:
801010c0:	55                   	push   %ebp
801010c1:	89 e5                	mov    %esp,%ebp
801010c3:	83 ec 08             	sub    $0x8,%esp
801010c6:	8b 45 08             	mov    0x8(%ebp),%eax
801010c9:	89 c2                	mov    %eax,%edx
801010cb:	c1 ea 10             	shr    $0x10,%edx
801010ce:	83 fa 07             	cmp    $0x7,%edx
801010d1:	74 15                	je     801010e8 <getsuperblock+0x28>
801010d3:	83 f8 01             	cmp    $0x1,%eax
801010d6:	77 2f                	ja     80101107 <getsuperblock+0x47>
801010d8:	6b c0 1c             	imul   $0x1c,%eax,%eax
801010db:	c9                   	leave  
801010dc:	05 bc 80 12 80       	add    $0x801280bc,%eax
801010e1:	c3                   	ret    
801010e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801010e8:	0f b7 c0             	movzwl %ax,%eax
801010eb:	83 f8 09             	cmp    $0x9,%eax
801010ee:	77 24                	ja     80101114 <getsuperblock+0x54>
801010f0:	8d 04 c0             	lea    (%eax,%eax,8),%eax
801010f3:	c1 e0 02             	shl    $0x2,%eax
801010f6:	8b 90 70 7f 12 80    	mov    -0x7fed8090(%eax),%edx
801010fc:	85 d2                	test   %edx,%edx
801010fe:	74 21                	je     80101121 <getsuperblock+0x61>
80101100:	05 54 7f 12 80       	add    $0x80127f54,%eax
80101105:	c9                   	leave  
80101106:	c3                   	ret    
80101107:	83 ec 0c             	sub    $0xc,%esp
8010110a:	68 70 ec 10 80       	push   $0x8010ec70
8010110f:	e8 bc f2 ff ff       	call   801003d0 <panic>
80101114:	83 ec 0c             	sub    $0xc,%esp
80101117:	68 f8 eb 10 80       	push   $0x8010ebf8
8010111c:	e8 af f2 ff ff       	call   801003d0 <panic>
80101121:	83 ec 0c             	sub    $0xc,%esp
80101124:	68 34 ec 10 80       	push   $0x8010ec34
80101129:	e8 a2 f2 ff ff       	call   801003d0 <panic>
8010112e:	66 90                	xchg   %ax,%ax

80101130 <doesbackdevice>:
80101130:	55                   	push   %ebp
80101131:	89 e5                	mov    %esp,%ebp
80101133:	53                   	push   %ebx
80101134:	83 ec 10             	sub    $0x10,%esp
80101137:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010113a:	68 20 7f 12 80       	push   $0x80127f20
8010113f:	e8 8c 55 00 00       	call   801066d0 <acquire>
80101144:	b8 74 7f 12 80       	mov    $0x80127f74,%eax
80101149:	83 c4 10             	add    $0x10,%esp
8010114c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80101150:	39 18                	cmp    %ebx,(%eax)
80101152:	74 24                	je     80101178 <doesbackdevice+0x48>
80101154:	83 c0 24             	add    $0x24,%eax
80101157:	3d dc 80 12 80       	cmp    $0x801280dc,%eax
8010115c:	75 f2                	jne    80101150 <doesbackdevice+0x20>
8010115e:	83 ec 0c             	sub    $0xc,%esp
80101161:	68 20 7f 12 80       	push   $0x80127f20
80101166:	e8 85 56 00 00       	call   801067f0 <release>
8010116b:	83 c4 10             	add    $0x10,%esp
8010116e:	31 c0                	xor    %eax,%eax
80101170:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80101173:	c9                   	leave  
80101174:	c3                   	ret    
80101175:	8d 76 00             	lea    0x0(%esi),%esi
80101178:	83 ec 0c             	sub    $0xc,%esp
8010117b:	68 20 7f 12 80       	push   $0x80127f20
80101180:	e8 6b 56 00 00       	call   801067f0 <release>
80101185:	83 c4 10             	add    $0x10,%esp
80101188:	b8 01 00 00 00       	mov    $0x1,%eax
8010118d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80101190:	c9                   	leave  
80101191:	c3                   	ret    
80101192:	66 90                	xchg   %ax,%ax
80101194:	66 90                	xchg   %ax,%ax
80101196:	66 90                	xchg   %ax,%ax
80101198:	66 90                	xchg   %ax,%ax
8010119a:	66 90                	xchg   %ax,%ax
8010119c:	66 90                	xchg   %ax,%ax
8010119e:	66 90                	xchg   %ax,%ax

801011a0 <exec>:
801011a0:	55                   	push   %ebp
801011a1:	89 e5                	mov    %esp,%ebp
801011a3:	57                   	push   %edi
801011a4:	56                   	push   %esi
801011a5:	53                   	push   %ebx
801011a6:	81 ec 0c 01 00 00    	sub    $0x10c,%esp
801011ac:	e8 bf 42 00 00       	call   80105470 <myproc>
801011b1:	89 c6                	mov    %eax,%esi
801011b3:	8b 80 ac 02 00 00    	mov    0x2ac(%eax),%eax
801011b9:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
801011bf:	e8 1c 26 00 00       	call   801037e0 <begin_op>
801011c4:	83 ec 0c             	sub    $0xc,%esp
801011c7:	ff 75 08             	pushl  0x8(%ebp)
801011ca:	e8 91 16 00 00       	call   80102860 <namei>
801011cf:	83 c4 10             	add    $0x10,%esp
801011d2:	85 c0                	test   %eax,%eax
801011d4:	0f 84 b1 01 00 00    	je     8010138b <exec+0x1eb>
801011da:	83 ec 0c             	sub    $0xc,%esp
801011dd:	89 c3                	mov    %eax,%ebx
801011df:	50                   	push   %eax
801011e0:	e8 eb 0c 00 00       	call   80101ed0 <ilock>
801011e5:	8d 85 24 ff ff ff    	lea    -0xdc(%ebp),%eax
801011eb:	6a 34                	push   $0x34
801011ed:	6a 00                	push   $0x0
801011ef:	50                   	push   %eax
801011f0:	53                   	push   %ebx
801011f1:	e8 ca 0f 00 00       	call   801021c0 <readi>
801011f6:	83 c4 20             	add    $0x20,%esp
801011f9:	83 f8 34             	cmp    $0x34,%eax
801011fc:	74 22                	je     80101220 <exec+0x80>
801011fe:	83 ec 0c             	sub    $0xc,%esp
80101201:	53                   	push   %ebx
80101202:	e8 69 0f 00 00       	call   80102170 <iunlockput>
80101207:	e8 44 26 00 00       	call   80103850 <end_op>
8010120c:	83 c4 10             	add    $0x10,%esp
8010120f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80101214:	8d 65 f4             	lea    -0xc(%ebp),%esp
80101217:	5b                   	pop    %ebx
80101218:	5e                   	pop    %esi
80101219:	5f                   	pop    %edi
8010121a:	5d                   	pop    %ebp
8010121b:	c3                   	ret    
8010121c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80101220:	81 bd 24 ff ff ff 7f 	cmpl   $0x464c457f,-0xdc(%ebp)
80101227:	45 4c 46 
8010122a:	75 d2                	jne    801011fe <exec+0x5e>
8010122c:	e8 9f 89 00 00       	call   80109bd0 <setupkvm>
80101231:	85 c0                	test   %eax,%eax
80101233:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
80101239:	74 c3                	je     801011fe <exec+0x5e>
8010123b:	66 83 bd 50 ff ff ff 	cmpw   $0x0,-0xb0(%ebp)
80101242:	00 
80101243:	8b bd 40 ff ff ff    	mov    -0xc0(%ebp),%edi
80101249:	c7 85 ec fe ff ff 00 	movl   $0x0,-0x114(%ebp)
80101250:	00 00 00 
80101253:	0f 84 d3 00 00 00    	je     8010132c <exec+0x18c>
80101259:	31 c0                	xor    %eax,%eax
8010125b:	89 b5 e8 fe ff ff    	mov    %esi,-0x118(%ebp)
80101261:	89 c6                	mov    %eax,%esi
80101263:	eb 18                	jmp    8010127d <exec+0xdd>
80101265:	8d 76 00             	lea    0x0(%esi),%esi
80101268:	0f b7 85 50 ff ff ff 	movzwl -0xb0(%ebp),%eax
8010126f:	83 c6 01             	add    $0x1,%esi
80101272:	83 c7 20             	add    $0x20,%edi
80101275:	39 f0                	cmp    %esi,%eax
80101277:	0f 8e a9 00 00 00    	jle    80101326 <exec+0x186>
8010127d:	8d 85 04 ff ff ff    	lea    -0xfc(%ebp),%eax
80101283:	6a 20                	push   $0x20
80101285:	57                   	push   %edi
80101286:	50                   	push   %eax
80101287:	53                   	push   %ebx
80101288:	e8 33 0f 00 00       	call   801021c0 <readi>
8010128d:	83 c4 10             	add    $0x10,%esp
80101290:	83 f8 20             	cmp    $0x20,%eax
80101293:	75 7b                	jne    80101310 <exec+0x170>
80101295:	83 bd 04 ff ff ff 01 	cmpl   $0x1,-0xfc(%ebp)
8010129c:	75 ca                	jne    80101268 <exec+0xc8>
8010129e:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
801012a4:	3b 85 14 ff ff ff    	cmp    -0xec(%ebp),%eax
801012aa:	72 64                	jb     80101310 <exec+0x170>
801012ac:	03 85 0c ff ff ff    	add    -0xf4(%ebp),%eax
801012b2:	72 5c                	jb     80101310 <exec+0x170>
801012b4:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)
801012ba:	50                   	push   %eax
801012bb:	ff b5 ec fe ff ff    	pushl  -0x114(%ebp)
801012c1:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
801012c7:	e8 f4 86 00 00       	call   801099c0 <allocuvm>
801012cc:	83 c4 10             	add    $0x10,%esp
801012cf:	85 c0                	test   %eax,%eax
801012d1:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
801012d7:	74 37                	je     80101310 <exec+0x170>
801012d9:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
801012df:	a9 ff 0f 00 00       	test   $0xfff,%eax
801012e4:	75 2a                	jne    80101310 <exec+0x170>
801012e6:	83 ec 0c             	sub    $0xc,%esp
801012e9:	ff b5 14 ff ff ff    	pushl  -0xec(%ebp)
801012ef:	ff b5 08 ff ff ff    	pushl  -0xf8(%ebp)
801012f5:	53                   	push   %ebx
801012f6:	50                   	push   %eax
801012f7:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
801012fd:	e8 7e 85 00 00       	call   80109880 <loaduvm>
80101302:	83 c4 20             	add    $0x20,%esp
80101305:	85 c0                	test   %eax,%eax
80101307:	0f 89 5b ff ff ff    	jns    80101268 <exec+0xc8>
8010130d:	8d 76 00             	lea    0x0(%esi),%esi
80101310:	83 ec 0c             	sub    $0xc,%esp
80101313:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
80101319:	e8 32 88 00 00       	call   80109b50 <freevm>
8010131e:	83 c4 10             	add    $0x10,%esp
80101321:	e9 d8 fe ff ff       	jmp    801011fe <exec+0x5e>
80101326:	8b b5 e8 fe ff ff    	mov    -0x118(%ebp),%esi
8010132c:	83 ec 0c             	sub    $0xc,%esp
8010132f:	53                   	push   %ebx
80101330:	e8 3b 0e 00 00       	call   80102170 <iunlockput>
80101335:	e8 16 25 00 00       	call   80103850 <end_op>
8010133a:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
80101340:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)
80101346:	05 ff 0f 00 00       	add    $0xfff,%eax
8010134b:	25 00 f0 ff ff       	and    $0xfffff000,%eax
80101350:	8d 90 00 20 00 00    	lea    0x2000(%eax),%edx
80101356:	52                   	push   %edx
80101357:	50                   	push   %eax
80101358:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
8010135e:	e8 5d 86 00 00       	call   801099c0 <allocuvm>
80101363:	83 c4 20             	add    $0x20,%esp
80101366:	85 c0                	test   %eax,%eax
80101368:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
8010136e:	75 2a                	jne    8010139a <exec+0x1fa>
80101370:	83 ec 0c             	sub    $0xc,%esp
80101373:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
80101379:	e8 d2 87 00 00       	call   80109b50 <freevm>
8010137e:	83 c4 10             	add    $0x10,%esp
80101381:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80101386:	e9 89 fe ff ff       	jmp    80101214 <exec+0x74>
8010138b:	e8 c0 24 00 00       	call   80103850 <end_op>
80101390:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80101395:	e9 7a fe ff ff       	jmp    80101214 <exec+0x74>
8010139a:	8b 9d ec fe ff ff    	mov    -0x114(%ebp),%ebx
801013a0:	83 ec 08             	sub    $0x8,%esp
801013a3:	31 ff                	xor    %edi,%edi
801013a5:	89 d8                	mov    %ebx,%eax
801013a7:	2d 00 20 00 00       	sub    $0x2000,%eax
801013ac:	50                   	push   %eax
801013ad:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
801013b3:	e8 b8 88 00 00       	call   80109c70 <clearpteu>
801013b8:	8b 45 0c             	mov    0xc(%ebp),%eax
801013bb:	83 c4 10             	add    $0x10,%esp
801013be:	8b 00                	mov    (%eax),%eax
801013c0:	85 c0                	test   %eax,%eax
801013c2:	0f 84 58 01 00 00    	je     80101520 <exec+0x380>
801013c8:	89 b5 e8 fe ff ff    	mov    %esi,-0x118(%ebp)
801013ce:	8b b5 f0 fe ff ff    	mov    -0x110(%ebp),%esi
801013d4:	eb 0f                	jmp    801013e5 <exec+0x245>
801013d6:	8d 76 00             	lea    0x0(%esi),%esi
801013d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
801013e0:	83 ff 20             	cmp    $0x20,%edi
801013e3:	74 8b                	je     80101370 <exec+0x1d0>
801013e5:	83 ec 0c             	sub    $0xc,%esp
801013e8:	50                   	push   %eax
801013e9:	e8 e2 56 00 00       	call   80106ad0 <strlen>
801013ee:	f7 d0                	not    %eax
801013f0:	01 c3                	add    %eax,%ebx
801013f2:	8b 45 0c             	mov    0xc(%ebp),%eax
801013f5:	5a                   	pop    %edx
801013f6:	83 e3 fc             	and    $0xfffffffc,%ebx
801013f9:	ff 34 b8             	pushl  (%eax,%edi,4)
801013fc:	e8 cf 56 00 00       	call   80106ad0 <strlen>
80101401:	83 c0 01             	add    $0x1,%eax
80101404:	50                   	push   %eax
80101405:	8b 45 0c             	mov    0xc(%ebp),%eax
80101408:	ff 34 b8             	pushl  (%eax,%edi,4)
8010140b:	53                   	push   %ebx
8010140c:	56                   	push   %esi
8010140d:	e8 be 89 00 00       	call   80109dd0 <copyout>
80101412:	83 c4 20             	add    $0x20,%esp
80101415:	85 c0                	test   %eax,%eax
80101417:	0f 88 53 ff ff ff    	js     80101370 <exec+0x1d0>
8010141d:	8b 45 0c             	mov    0xc(%ebp),%eax
80101420:	89 9c bd 64 ff ff ff 	mov    %ebx,-0x9c(%ebp,%edi,4)
80101427:	83 c7 01             	add    $0x1,%edi
8010142a:	8d 95 58 ff ff ff    	lea    -0xa8(%ebp),%edx
80101430:	8b 04 b8             	mov    (%eax,%edi,4),%eax
80101433:	85 c0                	test   %eax,%eax
80101435:	75 a9                	jne    801013e0 <exec+0x240>
80101437:	8b b5 e8 fe ff ff    	mov    -0x118(%ebp),%esi
8010143d:	8d 04 bd 04 00 00 00 	lea    0x4(,%edi,4),%eax
80101444:	89 d9                	mov    %ebx,%ecx
80101446:	c7 84 bd 64 ff ff ff 	movl   $0x0,-0x9c(%ebp,%edi,4)
8010144d:	00 00 00 00 
80101451:	c7 85 58 ff ff ff ff 	movl   $0xffffffff,-0xa8(%ebp)
80101458:	ff ff ff 
8010145b:	89 bd 5c ff ff ff    	mov    %edi,-0xa4(%ebp)
80101461:	29 c1                	sub    %eax,%ecx
80101463:	83 c0 0c             	add    $0xc,%eax
80101466:	29 c3                	sub    %eax,%ebx
80101468:	50                   	push   %eax
80101469:	52                   	push   %edx
8010146a:	53                   	push   %ebx
8010146b:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
80101471:	89 8d 60 ff ff ff    	mov    %ecx,-0xa0(%ebp)
80101477:	e8 54 89 00 00       	call   80109dd0 <copyout>
8010147c:	83 c4 10             	add    $0x10,%esp
8010147f:	85 c0                	test   %eax,%eax
80101481:	0f 88 e9 fe ff ff    	js     80101370 <exec+0x1d0>
80101487:	8b 45 08             	mov    0x8(%ebp),%eax
8010148a:	0f b6 10             	movzbl (%eax),%edx
8010148d:	84 d2                	test   %dl,%dl
8010148f:	74 19                	je     801014aa <exec+0x30a>
80101491:	8b 4d 08             	mov    0x8(%ebp),%ecx
80101494:	83 c0 01             	add    $0x1,%eax
80101497:	80 fa 2f             	cmp    $0x2f,%dl
8010149a:	0f b6 10             	movzbl (%eax),%edx
8010149d:	0f 44 c8             	cmove  %eax,%ecx
801014a0:	83 c0 01             	add    $0x1,%eax
801014a3:	84 d2                	test   %dl,%dl
801014a5:	75 f0                	jne    80101497 <exec+0x2f7>
801014a7:	89 4d 08             	mov    %ecx,0x8(%ebp)
801014aa:	50                   	push   %eax
801014ab:	8d 86 90 00 00 00    	lea    0x90(%esi),%eax
801014b1:	6a 10                	push   $0x10
801014b3:	ff 75 08             	pushl  0x8(%ebp)
801014b6:	50                   	push   %eax
801014b7:	e8 d4 55 00 00       	call   80106a90 <safestrcpy>
801014bc:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
801014c2:	8b 8d ec fe ff ff    	mov    -0x114(%ebp),%ecx
801014c8:	83 c4 10             	add    $0x10,%esp
801014cb:	89 ca                	mov    %ecx,%edx
801014cd:	2b 16                	sub    (%esi),%edx
801014cf:	01 90 38 03 00 00    	add    %edx,0x338(%eax)
801014d5:	8b 80 08 03 00 00    	mov    0x308(%eax),%eax
801014db:	85 c0                	test   %eax,%eax
801014dd:	75 ec                	jne    801014cb <exec+0x32b>
801014df:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
801014e5:	8b 7e 04             	mov    0x4(%esi),%edi
801014e8:	83 ec 0c             	sub    $0xc,%esp
801014eb:	89 46 04             	mov    %eax,0x4(%esi)
801014ee:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
801014f4:	89 06                	mov    %eax,(%esi)
801014f6:	8b 46 38             	mov    0x38(%esi),%eax
801014f9:	8b 95 3c ff ff ff    	mov    -0xc4(%ebp),%edx
801014ff:	89 50 38             	mov    %edx,0x38(%eax)
80101502:	8b 46 38             	mov    0x38(%esi),%eax
80101505:	89 58 44             	mov    %ebx,0x44(%eax)
80101508:	56                   	push   %esi
80101509:	e8 e2 81 00 00       	call   801096f0 <switchuvm>
8010150e:	89 3c 24             	mov    %edi,(%esp)
80101511:	e8 3a 86 00 00       	call   80109b50 <freevm>
80101516:	83 c4 10             	add    $0x10,%esp
80101519:	31 c0                	xor    %eax,%eax
8010151b:	e9 f4 fc ff ff       	jmp    80101214 <exec+0x74>
80101520:	8b 9d ec fe ff ff    	mov    -0x114(%ebp),%ebx
80101526:	8d 95 58 ff ff ff    	lea    -0xa8(%ebp),%edx
8010152c:	e9 0c ff ff ff       	jmp    8010143d <exec+0x29d>
80101531:	66 90                	xchg   %ax,%ax
80101533:	66 90                	xchg   %ax,%ax
80101535:	66 90                	xchg   %ax,%ax
80101537:	66 90                	xchg   %ax,%ax
80101539:	66 90                	xchg   %ax,%ax
8010153b:	66 90                	xchg   %ax,%ax
8010153d:	66 90                	xchg   %ax,%ax
8010153f:	90                   	nop

80101540 <fileinit>:
80101540:	55                   	push   %ebp
80101541:	89 e5                	mov    %esp,%ebp
80101543:	83 ec 10             	sub    $0x10,%esp
80101546:	68 95 ec 10 80       	push   $0x8010ec95
8010154b:	68 00 81 12 80       	push   $0x80128100
80101550:	e8 7b 50 00 00       	call   801065d0 <initlock>
80101555:	83 c4 10             	add    $0x10,%esp
80101558:	c9                   	leave  
80101559:	c3                   	ret    
8010155a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80101560 <filealloc>:
80101560:	55                   	push   %ebp
80101561:	89 e5                	mov    %esp,%ebp
80101563:	53                   	push   %ebx
80101564:	bb 34 81 12 80       	mov    $0x80128134,%ebx
80101569:	83 ec 10             	sub    $0x10,%esp
8010156c:	68 00 81 12 80       	push   $0x80128100
80101571:	e8 5a 51 00 00       	call   801066d0 <acquire>
80101576:	83 c4 10             	add    $0x10,%esp
80101579:	eb 10                	jmp    8010158b <filealloc+0x2b>
8010157b:	90                   	nop
8010157c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80101580:	83 c3 70             	add    $0x70,%ebx
80101583:	81 fb f4 ac 12 80    	cmp    $0x8012acf4,%ebx
80101589:	74 25                	je     801015b0 <filealloc+0x50>
8010158b:	8b 43 04             	mov    0x4(%ebx),%eax
8010158e:	85 c0                	test   %eax,%eax
80101590:	75 ee                	jne    80101580 <filealloc+0x20>
80101592:	83 ec 0c             	sub    $0xc,%esp
80101595:	c7 43 04 01 00 00 00 	movl   $0x1,0x4(%ebx)
8010159c:	68 00 81 12 80       	push   $0x80128100
801015a1:	e8 4a 52 00 00       	call   801067f0 <release>
801015a6:	89 d8                	mov    %ebx,%eax
801015a8:	83 c4 10             	add    $0x10,%esp
801015ab:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801015ae:	c9                   	leave  
801015af:	c3                   	ret    
801015b0:	83 ec 0c             	sub    $0xc,%esp
801015b3:	68 00 81 12 80       	push   $0x80128100
801015b8:	e8 33 52 00 00       	call   801067f0 <release>
801015bd:	83 c4 10             	add    $0x10,%esp
801015c0:	31 c0                	xor    %eax,%eax
801015c2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801015c5:	c9                   	leave  
801015c6:	c3                   	ret    
801015c7:	89 f6                	mov    %esi,%esi
801015c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801015d0 <filedup>:
801015d0:	55                   	push   %ebp
801015d1:	89 e5                	mov    %esp,%ebp
801015d3:	53                   	push   %ebx
801015d4:	83 ec 10             	sub    $0x10,%esp
801015d7:	8b 5d 08             	mov    0x8(%ebp),%ebx
801015da:	68 00 81 12 80       	push   $0x80128100
801015df:	e8 ec 50 00 00       	call   801066d0 <acquire>
801015e4:	8b 43 04             	mov    0x4(%ebx),%eax
801015e7:	83 c4 10             	add    $0x10,%esp
801015ea:	85 c0                	test   %eax,%eax
801015ec:	7e 1a                	jle    80101608 <filedup+0x38>
801015ee:	83 c0 01             	add    $0x1,%eax
801015f1:	83 ec 0c             	sub    $0xc,%esp
801015f4:	89 43 04             	mov    %eax,0x4(%ebx)
801015f7:	68 00 81 12 80       	push   $0x80128100
801015fc:	e8 ef 51 00 00       	call   801067f0 <release>
80101601:	89 d8                	mov    %ebx,%eax
80101603:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80101606:	c9                   	leave  
80101607:	c3                   	ret    
80101608:	83 ec 0c             	sub    $0xc,%esp
8010160b:	68 9c ec 10 80       	push   $0x8010ec9c
80101610:	e8 bb ed ff ff       	call   801003d0 <panic>
80101615:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80101619:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80101620 <fileclose>:
80101620:	55                   	push   %ebp
80101621:	89 e5                	mov    %esp,%ebp
80101623:	57                   	push   %edi
80101624:	56                   	push   %esi
80101625:	53                   	push   %ebx
80101626:	83 ec 28             	sub    $0x28,%esp
80101629:	8b 7d 08             	mov    0x8(%ebp),%edi
8010162c:	68 00 81 12 80       	push   $0x80128100
80101631:	e8 9a 50 00 00       	call   801066d0 <acquire>
80101636:	8b 47 04             	mov    0x4(%edi),%eax
80101639:	83 c4 10             	add    $0x10,%esp
8010163c:	85 c0                	test   %eax,%eax
8010163e:	0f 8e a3 00 00 00    	jle    801016e7 <fileclose+0xc7>
80101644:	83 e8 01             	sub    $0x1,%eax
80101647:	85 c0                	test   %eax,%eax
80101649:	89 47 04             	mov    %eax,0x4(%edi)
8010164c:	74 1a                	je     80101668 <fileclose+0x48>
8010164e:	c7 45 08 00 81 12 80 	movl   $0x80128100,0x8(%ebp)
80101655:	8d 65 f4             	lea    -0xc(%ebp),%esp
80101658:	5b                   	pop    %ebx
80101659:	5e                   	pop    %esi
8010165a:	5f                   	pop    %edi
8010165b:	5d                   	pop    %ebp
8010165c:	e9 8f 51 00 00       	jmp    801067f0 <release>
80101661:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80101668:	0f b6 47 09          	movzbl 0x9(%edi),%eax
8010166c:	8b 1f                	mov    (%edi),%ebx
8010166e:	83 ec 0c             	sub    $0xc,%esp
80101671:	8b 77 10             	mov    0x10(%edi),%esi
80101674:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
8010167a:	88 45 e7             	mov    %al,-0x19(%ebp)
8010167d:	8b 47 14             	mov    0x14(%edi),%eax
80101680:	68 00 81 12 80       	push   $0x80128100
80101685:	89 45 e0             	mov    %eax,-0x20(%ebp)
80101688:	e8 63 51 00 00       	call   801067f0 <release>
8010168d:	83 c4 10             	add    $0x10,%esp
80101690:	83 fb 01             	cmp    $0x1,%ebx
80101693:	74 13                	je     801016a8 <fileclose+0x88>
80101695:	83 fb 02             	cmp    $0x2,%ebx
80101698:	74 26                	je     801016c0 <fileclose+0xa0>
8010169a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010169d:	5b                   	pop    %ebx
8010169e:	5e                   	pop    %esi
8010169f:	5f                   	pop    %edi
801016a0:	5d                   	pop    %ebp
801016a1:	c3                   	ret    
801016a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801016a8:	0f be 5d e7          	movsbl -0x19(%ebp),%ebx
801016ac:	83 ec 08             	sub    $0x8,%esp
801016af:	53                   	push   %ebx
801016b0:	56                   	push   %esi
801016b1:	e8 6a 38 00 00       	call   80104f20 <pipeclose>
801016b6:	83 c4 10             	add    $0x10,%esp
801016b9:	eb df                	jmp    8010169a <fileclose+0x7a>
801016bb:	90                   	nop
801016bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801016c0:	83 ec 0c             	sub    $0xc,%esp
801016c3:	ff 75 e0             	pushl  -0x20(%ebp)
801016c6:	e8 15 27 00 00       	call   80103de0 <mntput>
801016cb:	e8 10 21 00 00       	call   801037e0 <begin_op>
801016d0:	89 34 24             	mov    %esi,(%esp)
801016d3:	e8 28 09 00 00       	call   80102000 <iput>
801016d8:	83 c4 10             	add    $0x10,%esp
801016db:	8d 65 f4             	lea    -0xc(%ebp),%esp
801016de:	5b                   	pop    %ebx
801016df:	5e                   	pop    %esi
801016e0:	5f                   	pop    %edi
801016e1:	5d                   	pop    %ebp
801016e2:	e9 69 21 00 00       	jmp    80103850 <end_op>
801016e7:	83 ec 0c             	sub    $0xc,%esp
801016ea:	68 a4 ec 10 80       	push   $0x8010eca4
801016ef:	e8 dc ec ff ff       	call   801003d0 <panic>
801016f4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801016fa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

80101700 <filestat>:
80101700:	55                   	push   %ebp
80101701:	89 e5                	mov    %esp,%ebp
80101703:	53                   	push   %ebx
80101704:	83 ec 04             	sub    $0x4,%esp
80101707:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010170a:	83 3b 02             	cmpl   $0x2,(%ebx)
8010170d:	75 31                	jne    80101740 <filestat+0x40>
8010170f:	83 ec 0c             	sub    $0xc,%esp
80101712:	ff 73 10             	pushl  0x10(%ebx)
80101715:	e8 b6 07 00 00       	call   80101ed0 <ilock>
8010171a:	58                   	pop    %eax
8010171b:	5a                   	pop    %edx
8010171c:	ff 75 0c             	pushl  0xc(%ebp)
8010171f:	ff 73 10             	pushl  0x10(%ebx)
80101722:	e8 69 0a 00 00       	call   80102190 <stati>
80101727:	59                   	pop    %ecx
80101728:	ff 73 10             	pushl  0x10(%ebx)
8010172b:	e8 80 08 00 00       	call   80101fb0 <iunlock>
80101730:	83 c4 10             	add    $0x10,%esp
80101733:	31 c0                	xor    %eax,%eax
80101735:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80101738:	c9                   	leave  
80101739:	c3                   	ret    
8010173a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80101740:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80101745:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80101748:	c9                   	leave  
80101749:	c3                   	ret    
8010174a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80101750 <fileread>:
80101750:	55                   	push   %ebp
80101751:	89 e5                	mov    %esp,%ebp
80101753:	57                   	push   %edi
80101754:	56                   	push   %esi
80101755:	53                   	push   %ebx
80101756:	83 ec 0c             	sub    $0xc,%esp
80101759:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010175c:	8b 75 0c             	mov    0xc(%ebp),%esi
8010175f:	8b 7d 10             	mov    0x10(%ebp),%edi
80101762:	80 7b 08 00          	cmpb   $0x0,0x8(%ebx)
80101766:	74 60                	je     801017c8 <fileread+0x78>
80101768:	8b 03                	mov    (%ebx),%eax
8010176a:	83 f8 01             	cmp    $0x1,%eax
8010176d:	74 41                	je     801017b0 <fileread+0x60>
8010176f:	83 f8 02             	cmp    $0x2,%eax
80101772:	75 5b                	jne    801017cf <fileread+0x7f>
80101774:	83 ec 0c             	sub    $0xc,%esp
80101777:	ff 73 10             	pushl  0x10(%ebx)
8010177a:	e8 51 07 00 00       	call   80101ed0 <ilock>
8010177f:	57                   	push   %edi
80101780:	ff 73 0c             	pushl  0xc(%ebx)
80101783:	56                   	push   %esi
80101784:	ff 73 10             	pushl  0x10(%ebx)
80101787:	e8 34 0a 00 00       	call   801021c0 <readi>
8010178c:	83 c4 20             	add    $0x20,%esp
8010178f:	85 c0                	test   %eax,%eax
80101791:	89 c6                	mov    %eax,%esi
80101793:	7e 03                	jle    80101798 <fileread+0x48>
80101795:	01 43 0c             	add    %eax,0xc(%ebx)
80101798:	83 ec 0c             	sub    $0xc,%esp
8010179b:	ff 73 10             	pushl  0x10(%ebx)
8010179e:	e8 0d 08 00 00       	call   80101fb0 <iunlock>
801017a3:	83 c4 10             	add    $0x10,%esp
801017a6:	89 f0                	mov    %esi,%eax
801017a8:	8d 65 f4             	lea    -0xc(%ebp),%esp
801017ab:	5b                   	pop    %ebx
801017ac:	5e                   	pop    %esi
801017ad:	5f                   	pop    %edi
801017ae:	5d                   	pop    %ebp
801017af:	c3                   	ret    
801017b0:	8b 43 10             	mov    0x10(%ebx),%eax
801017b3:	89 45 08             	mov    %eax,0x8(%ebp)
801017b6:	8d 65 f4             	lea    -0xc(%ebp),%esp
801017b9:	5b                   	pop    %ebx
801017ba:	5e                   	pop    %esi
801017bb:	5f                   	pop    %edi
801017bc:	5d                   	pop    %ebp
801017bd:	e9 fe 38 00 00       	jmp    801050c0 <piperead>
801017c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801017c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801017cd:	eb d9                	jmp    801017a8 <fileread+0x58>
801017cf:	83 ec 0c             	sub    $0xc,%esp
801017d2:	68 ae ec 10 80       	push   $0x8010ecae
801017d7:	e8 f4 eb ff ff       	call   801003d0 <panic>
801017dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801017e0 <filewrite>:
801017e0:	55                   	push   %ebp
801017e1:	89 e5                	mov    %esp,%ebp
801017e3:	57                   	push   %edi
801017e4:	56                   	push   %esi
801017e5:	53                   	push   %ebx
801017e6:	83 ec 1c             	sub    $0x1c,%esp
801017e9:	8b 75 08             	mov    0x8(%ebp),%esi
801017ec:	8b 45 0c             	mov    0xc(%ebp),%eax
801017ef:	80 7e 09 00          	cmpb   $0x0,0x9(%esi)
801017f3:	89 45 dc             	mov    %eax,-0x24(%ebp)
801017f6:	8b 45 10             	mov    0x10(%ebp),%eax
801017f9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
801017fc:	0f 84 aa 00 00 00    	je     801018ac <filewrite+0xcc>
80101802:	8b 06                	mov    (%esi),%eax
80101804:	83 f8 01             	cmp    $0x1,%eax
80101807:	0f 84 c2 00 00 00    	je     801018cf <filewrite+0xef>
8010180d:	83 f8 02             	cmp    $0x2,%eax
80101810:	0f 85 d8 00 00 00    	jne    801018ee <filewrite+0x10e>
80101816:	8b 45 e4             	mov    -0x1c(%ebp),%eax
80101819:	31 ff                	xor    %edi,%edi
8010181b:	85 c0                	test   %eax,%eax
8010181d:	7f 34                	jg     80101853 <filewrite+0x73>
8010181f:	e9 9c 00 00 00       	jmp    801018c0 <filewrite+0xe0>
80101824:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80101828:	01 46 0c             	add    %eax,0xc(%esi)
8010182b:	83 ec 0c             	sub    $0xc,%esp
8010182e:	ff 76 10             	pushl  0x10(%esi)
80101831:	89 45 e0             	mov    %eax,-0x20(%ebp)
80101834:	e8 77 07 00 00       	call   80101fb0 <iunlock>
80101839:	e8 12 20 00 00       	call   80103850 <end_op>
8010183e:	8b 45 e0             	mov    -0x20(%ebp),%eax
80101841:	83 c4 10             	add    $0x10,%esp
80101844:	39 d8                	cmp    %ebx,%eax
80101846:	0f 85 95 00 00 00    	jne    801018e1 <filewrite+0x101>
8010184c:	01 c7                	add    %eax,%edi
8010184e:	39 7d e4             	cmp    %edi,-0x1c(%ebp)
80101851:	7e 6d                	jle    801018c0 <filewrite+0xe0>
80101853:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
80101856:	b8 00 06 00 00       	mov    $0x600,%eax
8010185b:	29 fb                	sub    %edi,%ebx
8010185d:	81 fb 00 06 00 00    	cmp    $0x600,%ebx
80101863:	0f 4f d8             	cmovg  %eax,%ebx
80101866:	e8 75 1f 00 00       	call   801037e0 <begin_op>
8010186b:	83 ec 0c             	sub    $0xc,%esp
8010186e:	ff 76 10             	pushl  0x10(%esi)
80101871:	e8 5a 06 00 00       	call   80101ed0 <ilock>
80101876:	8b 45 dc             	mov    -0x24(%ebp),%eax
80101879:	53                   	push   %ebx
8010187a:	ff 76 0c             	pushl  0xc(%esi)
8010187d:	01 f8                	add    %edi,%eax
8010187f:	50                   	push   %eax
80101880:	ff 76 10             	pushl  0x10(%esi)
80101883:	e8 48 0a 00 00       	call   801022d0 <writei>
80101888:	83 c4 20             	add    $0x20,%esp
8010188b:	85 c0                	test   %eax,%eax
8010188d:	7f 99                	jg     80101828 <filewrite+0x48>
8010188f:	83 ec 0c             	sub    $0xc,%esp
80101892:	ff 76 10             	pushl  0x10(%esi)
80101895:	89 45 e0             	mov    %eax,-0x20(%ebp)
80101898:	e8 13 07 00 00       	call   80101fb0 <iunlock>
8010189d:	e8 ae 1f 00 00       	call   80103850 <end_op>
801018a2:	8b 45 e0             	mov    -0x20(%ebp),%eax
801018a5:	83 c4 10             	add    $0x10,%esp
801018a8:	85 c0                	test   %eax,%eax
801018aa:	74 98                	je     80101844 <filewrite+0x64>
801018ac:	8d 65 f4             	lea    -0xc(%ebp),%esp
801018af:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801018b4:	5b                   	pop    %ebx
801018b5:	5e                   	pop    %esi
801018b6:	5f                   	pop    %edi
801018b7:	5d                   	pop    %ebp
801018b8:	c3                   	ret    
801018b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801018c0:	3b 7d e4             	cmp    -0x1c(%ebp),%edi
801018c3:	75 e7                	jne    801018ac <filewrite+0xcc>
801018c5:	8d 65 f4             	lea    -0xc(%ebp),%esp
801018c8:	89 f8                	mov    %edi,%eax
801018ca:	5b                   	pop    %ebx
801018cb:	5e                   	pop    %esi
801018cc:	5f                   	pop    %edi
801018cd:	5d                   	pop    %ebp
801018ce:	c3                   	ret    
801018cf:	8b 46 10             	mov    0x10(%esi),%eax
801018d2:	89 45 08             	mov    %eax,0x8(%ebp)
801018d5:	8d 65 f4             	lea    -0xc(%ebp),%esp
801018d8:	5b                   	pop    %ebx
801018d9:	5e                   	pop    %esi
801018da:	5f                   	pop    %edi
801018db:	5d                   	pop    %ebp
801018dc:	e9 df 36 00 00       	jmp    80104fc0 <pipewrite>
801018e1:	83 ec 0c             	sub    $0xc,%esp
801018e4:	68 b7 ec 10 80       	push   $0x8010ecb7
801018e9:	e8 e2 ea ff ff       	call   801003d0 <panic>
801018ee:	83 ec 0c             	sub    $0xc,%esp
801018f1:	68 bd ec 10 80       	push   $0x8010ecbd
801018f6:	e8 d5 ea ff ff       	call   801003d0 <panic>
801018fb:	66 90                	xchg   %ax,%ax
801018fd:	66 90                	xchg   %ax,%ax
801018ff:	90                   	nop

80101900 <balloc>:
80101900:	55                   	push   %ebp
80101901:	89 e5                	mov    %esp,%ebp
80101903:	57                   	push   %edi
80101904:	56                   	push   %esi
80101905:	53                   	push   %ebx
80101906:	83 ec 38             	sub    $0x38,%esp
80101909:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8010190c:	50                   	push   %eax
8010190d:	e8 ae f7 ff ff       	call   801010c0 <getsuperblock>
80101912:	8b 08                	mov    (%eax),%ecx
80101914:	83 c4 10             	add    $0x10,%esp
80101917:	89 45 d8             	mov    %eax,-0x28(%ebp)
8010191a:	85 c9                	test   %ecx,%ecx
8010191c:	0f 84 84 00 00 00    	je     801019a6 <balloc+0xa6>
80101922:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
80101929:	8b 75 dc             	mov    -0x24(%ebp),%esi
8010192c:	8b 7d d8             	mov    -0x28(%ebp),%edi
8010192f:	83 ec 08             	sub    $0x8,%esp
80101932:	89 f0                	mov    %esi,%eax
80101934:	c1 f8 0d             	sar    $0xd,%eax
80101937:	03 47 18             	add    0x18(%edi),%eax
8010193a:	50                   	push   %eax
8010193b:	ff 75 d4             	pushl  -0x2c(%ebp)
8010193e:	e8 9d e8 ff ff       	call   801001e0 <bread>
80101943:	89 45 e4             	mov    %eax,-0x1c(%ebp)
80101946:	8b 07                	mov    (%edi),%eax
80101948:	83 c4 10             	add    $0x10,%esp
8010194b:	89 45 e0             	mov    %eax,-0x20(%ebp)
8010194e:	31 c0                	xor    %eax,%eax
80101950:	eb 30                	jmp    80101982 <balloc+0x82>
80101952:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80101958:	89 c1                	mov    %eax,%ecx
8010195a:	ba 01 00 00 00       	mov    $0x1,%edx
8010195f:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
80101962:	83 e1 07             	and    $0x7,%ecx
80101965:	d3 e2                	shl    %cl,%edx
80101967:	89 c1                	mov    %eax,%ecx
80101969:	c1 f9 03             	sar    $0x3,%ecx
8010196c:	0f b6 7c 0b 60       	movzbl 0x60(%ebx,%ecx,1),%edi
80101971:	85 d7                	test   %edx,%edi
80101973:	74 43                	je     801019b8 <balloc+0xb8>
80101975:	83 c0 01             	add    $0x1,%eax
80101978:	83 c6 01             	add    $0x1,%esi
8010197b:	3d 00 20 00 00       	cmp    $0x2000,%eax
80101980:	74 05                	je     80101987 <balloc+0x87>
80101982:	3b 75 e0             	cmp    -0x20(%ebp),%esi
80101985:	72 d1                	jb     80101958 <balloc+0x58>
80101987:	83 ec 0c             	sub    $0xc,%esp
8010198a:	ff 75 e4             	pushl  -0x1c(%ebp)
8010198d:	e8 ae e9 ff ff       	call   80100340 <brelse>
80101992:	8b 75 d8             	mov    -0x28(%ebp),%esi
80101995:	81 45 dc 00 20 00 00 	addl   $0x2000,-0x24(%ebp)
8010199c:	83 c4 10             	add    $0x10,%esp
8010199f:	8b 45 dc             	mov    -0x24(%ebp),%eax
801019a2:	39 06                	cmp    %eax,(%esi)
801019a4:	77 83                	ja     80101929 <balloc+0x29>
801019a6:	83 ec 0c             	sub    $0xc,%esp
801019a9:	68 c7 ec 10 80       	push   $0x8010ecc7
801019ae:	e8 1d ea ff ff       	call   801003d0 <panic>
801019b3:	90                   	nop
801019b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801019b8:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
801019bb:	83 ec 0c             	sub    $0xc,%esp
801019be:	09 fa                	or     %edi,%edx
801019c0:	88 54 0b 60          	mov    %dl,0x60(%ebx,%ecx,1)
801019c4:	53                   	push   %ebx
801019c5:	e8 f6 1f 00 00       	call   801039c0 <log_write>
801019ca:	89 1c 24             	mov    %ebx,(%esp)
801019cd:	e8 6e e9 ff ff       	call   80100340 <brelse>
801019d2:	58                   	pop    %eax
801019d3:	5a                   	pop    %edx
801019d4:	56                   	push   %esi
801019d5:	ff 75 d4             	pushl  -0x2c(%ebp)
801019d8:	e8 03 e8 ff ff       	call   801001e0 <bread>
801019dd:	89 c3                	mov    %eax,%ebx
801019df:	8d 40 60             	lea    0x60(%eax),%eax
801019e2:	83 c4 0c             	add    $0xc,%esp
801019e5:	68 00 04 00 00       	push   $0x400
801019ea:	6a 00                	push   $0x0
801019ec:	50                   	push   %eax
801019ed:	e8 4e 4e 00 00       	call   80106840 <memset>
801019f2:	89 1c 24             	mov    %ebx,(%esp)
801019f5:	e8 c6 1f 00 00       	call   801039c0 <log_write>
801019fa:	89 1c 24             	mov    %ebx,(%esp)
801019fd:	e8 3e e9 ff ff       	call   80100340 <brelse>
80101a02:	8d 65 f4             	lea    -0xc(%ebp),%esp
80101a05:	89 f0                	mov    %esi,%eax
80101a07:	5b                   	pop    %ebx
80101a08:	5e                   	pop    %esi
80101a09:	5f                   	pop    %edi
80101a0a:	5d                   	pop    %ebp
80101a0b:	c3                   	ret    
80101a0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80101a10 <iget>:
80101a10:	55                   	push   %ebp
80101a11:	89 e5                	mov    %esp,%ebp
80101a13:	57                   	push   %edi
80101a14:	56                   	push   %esi
80101a15:	53                   	push   %ebx
80101a16:	89 c7                	mov    %eax,%edi
80101a18:	31 f6                	xor    %esi,%esi
80101a1a:	bb 94 ad 12 80       	mov    $0x8012ad94,%ebx
80101a1f:	83 ec 28             	sub    $0x28,%esp
80101a22:	89 55 e4             	mov    %edx,-0x1c(%ebp)
80101a25:	68 60 ad 12 80       	push   $0x8012ad60
80101a2a:	e8 a1 4c 00 00       	call   801066d0 <acquire>
80101a2f:	83 c4 10             	add    $0x10,%esp
80101a32:	8b 55 e4             	mov    -0x1c(%ebp),%edx
80101a35:	eb 1b                	jmp    80101a52 <iget+0x42>
80101a37:	89 f6                	mov    %esi,%esi
80101a39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80101a40:	85 f6                	test   %esi,%esi
80101a42:	74 44                	je     80101a88 <iget+0x78>
80101a44:	81 c3 90 00 00 00    	add    $0x90,%ebx
80101a4a:	81 fb b4 c9 12 80    	cmp    $0x8012c9b4,%ebx
80101a50:	74 4e                	je     80101aa0 <iget+0x90>
80101a52:	8b 4b 08             	mov    0x8(%ebx),%ecx
80101a55:	85 c9                	test   %ecx,%ecx
80101a57:	7e e7                	jle    80101a40 <iget+0x30>
80101a59:	39 3b                	cmp    %edi,(%ebx)
80101a5b:	75 e3                	jne    80101a40 <iget+0x30>
80101a5d:	39 53 04             	cmp    %edx,0x4(%ebx)
80101a60:	75 de                	jne    80101a40 <iget+0x30>
80101a62:	83 ec 0c             	sub    $0xc,%esp
80101a65:	83 c1 01             	add    $0x1,%ecx
80101a68:	89 de                	mov    %ebx,%esi
80101a6a:	68 60 ad 12 80       	push   $0x8012ad60
80101a6f:	89 4b 08             	mov    %ecx,0x8(%ebx)
80101a72:	e8 79 4d 00 00       	call   801067f0 <release>
80101a77:	83 c4 10             	add    $0x10,%esp
80101a7a:	8d 65 f4             	lea    -0xc(%ebp),%esp
80101a7d:	89 f0                	mov    %esi,%eax
80101a7f:	5b                   	pop    %ebx
80101a80:	5e                   	pop    %esi
80101a81:	5f                   	pop    %edi
80101a82:	5d                   	pop    %ebp
80101a83:	c3                   	ret    
80101a84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80101a88:	85 c9                	test   %ecx,%ecx
80101a8a:	0f 44 f3             	cmove  %ebx,%esi
80101a8d:	81 c3 90 00 00 00    	add    $0x90,%ebx
80101a93:	81 fb b4 c9 12 80    	cmp    $0x8012c9b4,%ebx
80101a99:	75 b7                	jne    80101a52 <iget+0x42>
80101a9b:	90                   	nop
80101a9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80101aa0:	85 f6                	test   %esi,%esi
80101aa2:	74 3b                	je     80101adf <iget+0xcf>
80101aa4:	83 ec 0c             	sub    $0xc,%esp
80101aa7:	89 55 e4             	mov    %edx,-0x1c(%ebp)
80101aaa:	57                   	push   %edi
80101aab:	e8 60 f4 ff ff       	call   80100f10 <deviceget>
80101ab0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
80101ab3:	89 3e                	mov    %edi,(%esi)
80101ab5:	c7 46 08 01 00 00 00 	movl   $0x1,0x8(%esi)
80101abc:	c7 46 4c 00 00 00 00 	movl   $0x0,0x4c(%esi)
80101ac3:	89 56 04             	mov    %edx,0x4(%esi)
80101ac6:	c7 04 24 60 ad 12 80 	movl   $0x8012ad60,(%esp)
80101acd:	e8 1e 4d 00 00       	call   801067f0 <release>
80101ad2:	83 c4 10             	add    $0x10,%esp
80101ad5:	8d 65 f4             	lea    -0xc(%ebp),%esp
80101ad8:	89 f0                	mov    %esi,%eax
80101ada:	5b                   	pop    %ebx
80101adb:	5e                   	pop    %esi
80101adc:	5f                   	pop    %edi
80101add:	5d                   	pop    %ebp
80101ade:	c3                   	ret    
80101adf:	83 ec 0c             	sub    $0xc,%esp
80101ae2:	68 dd ec 10 80       	push   $0x8010ecdd
80101ae7:	e8 e4 e8 ff ff       	call   801003d0 <panic>
80101aec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80101af0 <bmap>:
80101af0:	55                   	push   %ebp
80101af1:	89 e5                	mov    %esp,%ebp
80101af3:	57                   	push   %edi
80101af4:	56                   	push   %esi
80101af5:	53                   	push   %ebx
80101af6:	89 c6                	mov    %eax,%esi
80101af8:	83 ec 1c             	sub    $0x1c,%esp
80101afb:	83 fa 0b             	cmp    $0xb,%edx
80101afe:	77 18                	ja     80101b18 <bmap+0x28>
80101b00:	8d 1c 90             	lea    (%eax,%edx,4),%ebx
80101b03:	8b 43 5c             	mov    0x5c(%ebx),%eax
80101b06:	85 c0                	test   %eax,%eax
80101b08:	74 76                	je     80101b80 <bmap+0x90>
80101b0a:	8d 65 f4             	lea    -0xc(%ebp),%esp
80101b0d:	5b                   	pop    %ebx
80101b0e:	5e                   	pop    %esi
80101b0f:	5f                   	pop    %edi
80101b10:	5d                   	pop    %ebp
80101b11:	c3                   	ret    
80101b12:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80101b18:	8d 5a f4             	lea    -0xc(%edx),%ebx
80101b1b:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
80101b21:	0f 87 80 00 00 00    	ja     80101ba7 <bmap+0xb7>
80101b27:	8b 80 8c 00 00 00    	mov    0x8c(%eax),%eax
80101b2d:	85 c0                	test   %eax,%eax
80101b2f:	74 67                	je     80101b98 <bmap+0xa8>
80101b31:	83 ec 08             	sub    $0x8,%esp
80101b34:	50                   	push   %eax
80101b35:	ff 36                	pushl  (%esi)
80101b37:	e8 a4 e6 ff ff       	call   801001e0 <bread>
80101b3c:	8d 54 98 60          	lea    0x60(%eax,%ebx,4),%edx
80101b40:	83 c4 10             	add    $0x10,%esp
80101b43:	89 c7                	mov    %eax,%edi
80101b45:	8b 1a                	mov    (%edx),%ebx
80101b47:	85 db                	test   %ebx,%ebx
80101b49:	75 1d                	jne    80101b68 <bmap+0x78>
80101b4b:	8b 06                	mov    (%esi),%eax
80101b4d:	89 55 e4             	mov    %edx,-0x1c(%ebp)
80101b50:	e8 ab fd ff ff       	call   80101900 <balloc>
80101b55:	8b 55 e4             	mov    -0x1c(%ebp),%edx
80101b58:	83 ec 0c             	sub    $0xc,%esp
80101b5b:	89 c3                	mov    %eax,%ebx
80101b5d:	89 02                	mov    %eax,(%edx)
80101b5f:	57                   	push   %edi
80101b60:	e8 5b 1e 00 00       	call   801039c0 <log_write>
80101b65:	83 c4 10             	add    $0x10,%esp
80101b68:	83 ec 0c             	sub    $0xc,%esp
80101b6b:	57                   	push   %edi
80101b6c:	e8 cf e7 ff ff       	call   80100340 <brelse>
80101b71:	83 c4 10             	add    $0x10,%esp
80101b74:	8d 65 f4             	lea    -0xc(%ebp),%esp
80101b77:	89 d8                	mov    %ebx,%eax
80101b79:	5b                   	pop    %ebx
80101b7a:	5e                   	pop    %esi
80101b7b:	5f                   	pop    %edi
80101b7c:	5d                   	pop    %ebp
80101b7d:	c3                   	ret    
80101b7e:	66 90                	xchg   %ax,%ax
80101b80:	8b 06                	mov    (%esi),%eax
80101b82:	e8 79 fd ff ff       	call   80101900 <balloc>
80101b87:	89 43 5c             	mov    %eax,0x5c(%ebx)
80101b8a:	8d 65 f4             	lea    -0xc(%ebp),%esp
80101b8d:	5b                   	pop    %ebx
80101b8e:	5e                   	pop    %esi
80101b8f:	5f                   	pop    %edi
80101b90:	5d                   	pop    %ebp
80101b91:	c3                   	ret    
80101b92:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80101b98:	8b 06                	mov    (%esi),%eax
80101b9a:	e8 61 fd ff ff       	call   80101900 <balloc>
80101b9f:	89 86 8c 00 00 00    	mov    %eax,0x8c(%esi)
80101ba5:	eb 8a                	jmp    80101b31 <bmap+0x41>
80101ba7:	83 ec 0c             	sub    $0xc,%esp
80101baa:	68 ed ec 10 80       	push   $0x8010eced
80101baf:	e8 1c e8 ff ff       	call   801003d0 <panic>
80101bb4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80101bba:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

80101bc0 <readsb>:
80101bc0:	55                   	push   %ebp
80101bc1:	89 e5                	mov    %esp,%ebp
80101bc3:	56                   	push   %esi
80101bc4:	53                   	push   %ebx
80101bc5:	8b 75 0c             	mov    0xc(%ebp),%esi
80101bc8:	83 ec 08             	sub    $0x8,%esp
80101bcb:	6a 01                	push   $0x1
80101bcd:	ff 75 08             	pushl  0x8(%ebp)
80101bd0:	e8 0b e6 ff ff       	call   801001e0 <bread>
80101bd5:	89 c3                	mov    %eax,%ebx
80101bd7:	8d 40 60             	lea    0x60(%eax),%eax
80101bda:	83 c4 0c             	add    $0xc,%esp
80101bdd:	6a 1c                	push   $0x1c
80101bdf:	50                   	push   %eax
80101be0:	56                   	push   %esi
80101be1:	e8 0a 4d 00 00       	call   801068f0 <memmove>
80101be6:	89 5d 08             	mov    %ebx,0x8(%ebp)
80101be9:	83 c4 10             	add    $0x10,%esp
80101bec:	8d 65 f8             	lea    -0x8(%ebp),%esp
80101bef:	5b                   	pop    %ebx
80101bf0:	5e                   	pop    %esi
80101bf1:	5d                   	pop    %ebp
80101bf2:	e9 49 e7 ff ff       	jmp    80100340 <brelse>
80101bf7:	89 f6                	mov    %esi,%esi
80101bf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80101c00 <bfree>:
80101c00:	55                   	push   %ebp
80101c01:	89 e5                	mov    %esp,%ebp
80101c03:	57                   	push   %edi
80101c04:	56                   	push   %esi
80101c05:	53                   	push   %ebx
80101c06:	89 c6                	mov    %eax,%esi
80101c08:	89 d3                	mov    %edx,%ebx
80101c0a:	83 ec 18             	sub    $0x18,%esp
80101c0d:	50                   	push   %eax
80101c0e:	e8 ad f4 ff ff       	call   801010c0 <getsuperblock>
80101c13:	5a                   	pop    %edx
80101c14:	59                   	pop    %ecx
80101c15:	50                   	push   %eax
80101c16:	56                   	push   %esi
80101c17:	89 c7                	mov    %eax,%edi
80101c19:	e8 a2 ff ff ff       	call   80101bc0 <readsb>
80101c1e:	58                   	pop    %eax
80101c1f:	8b 47 18             	mov    0x18(%edi),%eax
80101c22:	5a                   	pop    %edx
80101c23:	89 da                	mov    %ebx,%edx
80101c25:	c1 ea 0d             	shr    $0xd,%edx
80101c28:	01 d0                	add    %edx,%eax
80101c2a:	50                   	push   %eax
80101c2b:	56                   	push   %esi
80101c2c:	e8 af e5 ff ff       	call   801001e0 <bread>
80101c31:	89 d9                	mov    %ebx,%ecx
80101c33:	81 e3 ff 1f 00 00    	and    $0x1fff,%ebx
80101c39:	ba 01 00 00 00       	mov    $0x1,%edx
80101c3e:	83 e1 07             	and    $0x7,%ecx
80101c41:	c1 fb 03             	sar    $0x3,%ebx
80101c44:	83 c4 10             	add    $0x10,%esp
80101c47:	d3 e2                	shl    %cl,%edx
80101c49:	0f b6 4c 18 60       	movzbl 0x60(%eax,%ebx,1),%ecx
80101c4e:	85 d1                	test   %edx,%ecx
80101c50:	74 28                	je     80101c7a <bfree+0x7a>
80101c52:	89 c6                	mov    %eax,%esi
80101c54:	f7 d2                	not    %edx
80101c56:	89 c8                	mov    %ecx,%eax
80101c58:	83 ec 0c             	sub    $0xc,%esp
80101c5b:	21 d0                	and    %edx,%eax
80101c5d:	88 44 1e 60          	mov    %al,0x60(%esi,%ebx,1)
80101c61:	56                   	push   %esi
80101c62:	e8 59 1d 00 00       	call   801039c0 <log_write>
80101c67:	89 34 24             	mov    %esi,(%esp)
80101c6a:	e8 d1 e6 ff ff       	call   80100340 <brelse>
80101c6f:	83 c4 10             	add    $0x10,%esp
80101c72:	8d 65 f4             	lea    -0xc(%ebp),%esp
80101c75:	5b                   	pop    %ebx
80101c76:	5e                   	pop    %esi
80101c77:	5f                   	pop    %edi
80101c78:	5d                   	pop    %ebp
80101c79:	c3                   	ret    
80101c7a:	83 ec 0c             	sub    $0xc,%esp
80101c7d:	68 00 ed 10 80       	push   $0x8010ed00
80101c82:	e8 49 e7 ff ff       	call   801003d0 <panic>
80101c87:	89 f6                	mov    %esi,%esi
80101c89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80101c90 <fsinit>:
80101c90:	55                   	push   %ebp
80101c91:	89 e5                	mov    %esp,%ebp
80101c93:	56                   	push   %esi
80101c94:	53                   	push   %ebx
80101c95:	8b 75 08             	mov    0x8(%ebp),%esi
80101c98:	83 ec 0c             	sub    $0xc,%esp
80101c9b:	56                   	push   %esi
80101c9c:	e8 1f f4 ff ff       	call   801010c0 <getsuperblock>
80101ca1:	89 c3                	mov    %eax,%ebx
80101ca3:	58                   	pop    %eax
80101ca4:	5a                   	pop    %edx
80101ca5:	53                   	push   %ebx
80101ca6:	56                   	push   %esi
80101ca7:	e8 14 ff ff ff       	call   80101bc0 <readsb>
80101cac:	ff 73 18             	pushl  0x18(%ebx)
80101caf:	ff 73 14             	pushl  0x14(%ebx)
80101cb2:	ff 73 10             	pushl  0x10(%ebx)
80101cb5:	ff 73 0c             	pushl  0xc(%ebx)
80101cb8:	ff 73 08             	pushl  0x8(%ebx)
80101cbb:	ff 73 04             	pushl  0x4(%ebx)
80101cbe:	ff 33                	pushl  (%ebx)
80101cc0:	68 80 ed 10 80       	push   $0x8010ed80
80101cc5:	e8 96 e9 ff ff       	call   80100660 <cprintf>
80101cca:	83 c4 30             	add    $0x30,%esp
80101ccd:	8d 65 f8             	lea    -0x8(%ebp),%esp
80101cd0:	5b                   	pop    %ebx
80101cd1:	5e                   	pop    %esi
80101cd2:	5d                   	pop    %ebp
80101cd3:	c3                   	ret    
80101cd4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80101cda:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

80101ce0 <iinit>:
80101ce0:	55                   	push   %ebp
80101ce1:	89 e5                	mov    %esp,%ebp
80101ce3:	56                   	push   %esi
80101ce4:	53                   	push   %ebx
80101ce5:	8b 75 08             	mov    0x8(%ebp),%esi
80101ce8:	bb a0 ad 12 80       	mov    $0x8012ada0,%ebx
80101ced:	83 ec 08             	sub    $0x8,%esp
80101cf0:	68 13 ed 10 80       	push   $0x8010ed13
80101cf5:	68 60 ad 12 80       	push   $0x8012ad60
80101cfa:	e8 d1 48 00 00       	call   801065d0 <initlock>
80101cff:	83 c4 10             	add    $0x10,%esp
80101d02:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80101d08:	83 ec 08             	sub    $0x8,%esp
80101d0b:	68 1a ed 10 80       	push   $0x8010ed1a
80101d10:	53                   	push   %ebx
80101d11:	81 c3 90 00 00 00    	add    $0x90,%ebx
80101d17:	e8 a4 47 00 00       	call   801064c0 <initsleeplock>
80101d1c:	83 c4 10             	add    $0x10,%esp
80101d1f:	81 fb c0 c9 12 80    	cmp    $0x8012c9c0,%ebx
80101d25:	75 e1                	jne    80101d08 <iinit+0x28>
80101d27:	89 75 08             	mov    %esi,0x8(%ebp)
80101d2a:	8d 65 f8             	lea    -0x8(%ebp),%esp
80101d2d:	5b                   	pop    %ebx
80101d2e:	5e                   	pop    %esi
80101d2f:	5d                   	pop    %ebp
80101d30:	e9 5b ff ff ff       	jmp    80101c90 <fsinit>
80101d35:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80101d39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80101d40 <ialloc>:
80101d40:	55                   	push   %ebp
80101d41:	89 e5                	mov    %esp,%ebp
80101d43:	57                   	push   %edi
80101d44:	56                   	push   %esi
80101d45:	53                   	push   %ebx
80101d46:	83 ec 28             	sub    $0x28,%esp
80101d49:	8b 7d 08             	mov    0x8(%ebp),%edi
80101d4c:	8b 45 0c             	mov    0xc(%ebp),%eax
80101d4f:	57                   	push   %edi
80101d50:	89 45 e4             	mov    %eax,-0x1c(%ebp)
80101d53:	e8 68 f3 ff ff       	call   801010c0 <getsuperblock>
80101d58:	83 c4 10             	add    $0x10,%esp
80101d5b:	83 78 08 01          	cmpl   $0x1,0x8(%eax)
80101d5f:	0f 86 91 00 00 00    	jbe    80101df6 <ialloc+0xb6>
80101d65:	89 c6                	mov    %eax,%esi
80101d67:	bb 01 00 00 00       	mov    $0x1,%ebx
80101d6c:	eb 16                	jmp    80101d84 <ialloc+0x44>
80101d6e:	66 90                	xchg   %ax,%ax
80101d70:	83 ec 0c             	sub    $0xc,%esp
80101d73:	83 c3 01             	add    $0x1,%ebx
80101d76:	52                   	push   %edx
80101d77:	e8 c4 e5 ff ff       	call   80100340 <brelse>
80101d7c:	83 c4 10             	add    $0x10,%esp
80101d7f:	39 5e 08             	cmp    %ebx,0x8(%esi)
80101d82:	76 72                	jbe    80101df6 <ialloc+0xb6>
80101d84:	89 d8                	mov    %ebx,%eax
80101d86:	83 ec 08             	sub    $0x8,%esp
80101d89:	c1 e8 04             	shr    $0x4,%eax
80101d8c:	03 46 14             	add    0x14(%esi),%eax
80101d8f:	50                   	push   %eax
80101d90:	57                   	push   %edi
80101d91:	e8 4a e4 ff ff       	call   801001e0 <bread>
80101d96:	89 c2                	mov    %eax,%edx
80101d98:	89 d8                	mov    %ebx,%eax
80101d9a:	83 c4 10             	add    $0x10,%esp
80101d9d:	83 e0 0f             	and    $0xf,%eax
80101da0:	c1 e0 06             	shl    $0x6,%eax
80101da3:	8d 4c 02 60          	lea    0x60(%edx,%eax,1),%ecx
80101da7:	66 83 39 00          	cmpw   $0x0,(%ecx)
80101dab:	75 c3                	jne    80101d70 <ialloc+0x30>
80101dad:	83 ec 04             	sub    $0x4,%esp
80101db0:	89 55 dc             	mov    %edx,-0x24(%ebp)
80101db3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
80101db6:	6a 40                	push   $0x40
80101db8:	6a 00                	push   $0x0
80101dba:	51                   	push   %ecx
80101dbb:	e8 80 4a 00 00       	call   80106840 <memset>
80101dc0:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax
80101dc4:	8b 4d e0             	mov    -0x20(%ebp),%ecx
80101dc7:	8b 55 dc             	mov    -0x24(%ebp),%edx
80101dca:	66 89 01             	mov    %ax,(%ecx)
80101dcd:	89 55 e4             	mov    %edx,-0x1c(%ebp)
80101dd0:	89 14 24             	mov    %edx,(%esp)
80101dd3:	e8 e8 1b 00 00       	call   801039c0 <log_write>
80101dd8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
80101ddb:	89 14 24             	mov    %edx,(%esp)
80101dde:	e8 5d e5 ff ff       	call   80100340 <brelse>
80101de3:	83 c4 10             	add    $0x10,%esp
80101de6:	8d 65 f4             	lea    -0xc(%ebp),%esp
80101de9:	89 da                	mov    %ebx,%edx
80101deb:	89 f8                	mov    %edi,%eax
80101ded:	5b                   	pop    %ebx
80101dee:	5e                   	pop    %esi
80101def:	5f                   	pop    %edi
80101df0:	5d                   	pop    %ebp
80101df1:	e9 1a fc ff ff       	jmp    80101a10 <iget>
80101df6:	83 ec 0c             	sub    $0xc,%esp
80101df9:	68 20 ed 10 80       	push   $0x8010ed20
80101dfe:	e8 cd e5 ff ff       	call   801003d0 <panic>
80101e03:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80101e09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80101e10 <iupdate>:
80101e10:	55                   	push   %ebp
80101e11:	89 e5                	mov    %esp,%ebp
80101e13:	56                   	push   %esi
80101e14:	53                   	push   %ebx
80101e15:	8b 5d 08             	mov    0x8(%ebp),%ebx
80101e18:	83 ec 0c             	sub    $0xc,%esp
80101e1b:	ff 33                	pushl  (%ebx)
80101e1d:	83 c3 5c             	add    $0x5c,%ebx
80101e20:	e8 9b f2 ff ff       	call   801010c0 <getsuperblock>
80101e25:	5a                   	pop    %edx
80101e26:	8b 53 a8             	mov    -0x58(%ebx),%edx
80101e29:	59                   	pop    %ecx
80101e2a:	c1 ea 04             	shr    $0x4,%edx
80101e2d:	03 50 14             	add    0x14(%eax),%edx
80101e30:	52                   	push   %edx
80101e31:	ff 73 a4             	pushl  -0x5c(%ebx)
80101e34:	e8 a7 e3 ff ff       	call   801001e0 <bread>
80101e39:	89 c6                	mov    %eax,%esi
80101e3b:	8b 43 a8             	mov    -0x58(%ebx),%eax
80101e3e:	0f b7 53 f4          	movzwl -0xc(%ebx),%edx
80101e42:	83 c4 0c             	add    $0xc,%esp
80101e45:	83 e0 0f             	and    $0xf,%eax
80101e48:	c1 e0 06             	shl    $0x6,%eax
80101e4b:	8d 44 06 60          	lea    0x60(%esi,%eax,1),%eax
80101e4f:	66 89 10             	mov    %dx,(%eax)
80101e52:	0f b7 53 f6          	movzwl -0xa(%ebx),%edx
80101e56:	83 c0 0c             	add    $0xc,%eax
80101e59:	66 89 50 f6          	mov    %dx,-0xa(%eax)
80101e5d:	0f b7 53 f8          	movzwl -0x8(%ebx),%edx
80101e61:	66 89 50 f8          	mov    %dx,-0x8(%eax)
80101e65:	0f b7 53 fa          	movzwl -0x6(%ebx),%edx
80101e69:	66 89 50 fa          	mov    %dx,-0x6(%eax)
80101e6d:	8b 53 fc             	mov    -0x4(%ebx),%edx
80101e70:	89 50 fc             	mov    %edx,-0x4(%eax)
80101e73:	6a 34                	push   $0x34
80101e75:	53                   	push   %ebx
80101e76:	50                   	push   %eax
80101e77:	e8 74 4a 00 00       	call   801068f0 <memmove>
80101e7c:	89 34 24             	mov    %esi,(%esp)
80101e7f:	e8 3c 1b 00 00       	call   801039c0 <log_write>
80101e84:	89 75 08             	mov    %esi,0x8(%ebp)
80101e87:	83 c4 10             	add    $0x10,%esp
80101e8a:	8d 65 f8             	lea    -0x8(%ebp),%esp
80101e8d:	5b                   	pop    %ebx
80101e8e:	5e                   	pop    %esi
80101e8f:	5d                   	pop    %ebp
80101e90:	e9 ab e4 ff ff       	jmp    80100340 <brelse>
80101e95:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80101e99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80101ea0 <idup>:
80101ea0:	55                   	push   %ebp
80101ea1:	89 e5                	mov    %esp,%ebp
80101ea3:	53                   	push   %ebx
80101ea4:	83 ec 10             	sub    $0x10,%esp
80101ea7:	8b 5d 08             	mov    0x8(%ebp),%ebx
80101eaa:	68 60 ad 12 80       	push   $0x8012ad60
80101eaf:	e8 1c 48 00 00       	call   801066d0 <acquire>
80101eb4:	83 43 08 01          	addl   $0x1,0x8(%ebx)
80101eb8:	c7 04 24 60 ad 12 80 	movl   $0x8012ad60,(%esp)
80101ebf:	e8 2c 49 00 00       	call   801067f0 <release>
80101ec4:	89 d8                	mov    %ebx,%eax
80101ec6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80101ec9:	c9                   	leave  
80101eca:	c3                   	ret    
80101ecb:	90                   	nop
80101ecc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80101ed0 <ilock>:
80101ed0:	55                   	push   %ebp
80101ed1:	89 e5                	mov    %esp,%ebp
80101ed3:	56                   	push   %esi
80101ed4:	53                   	push   %ebx
80101ed5:	8b 5d 08             	mov    0x8(%ebp),%ebx
80101ed8:	85 db                	test   %ebx,%ebx
80101eda:	0f 84 bd 00 00 00    	je     80101f9d <ilock+0xcd>
80101ee0:	8b 43 08             	mov    0x8(%ebx),%eax
80101ee3:	85 c0                	test   %eax,%eax
80101ee5:	0f 8e b2 00 00 00    	jle    80101f9d <ilock+0xcd>
80101eeb:	8d 43 0c             	lea    0xc(%ebx),%eax
80101eee:	83 ec 0c             	sub    $0xc,%esp
80101ef1:	50                   	push   %eax
80101ef2:	e8 09 46 00 00       	call   80106500 <acquiresleep>
80101ef7:	8b 73 4c             	mov    0x4c(%ebx),%esi
80101efa:	83 c4 10             	add    $0x10,%esp
80101efd:	85 f6                	test   %esi,%esi
80101eff:	74 0f                	je     80101f10 <ilock+0x40>
80101f01:	8d 65 f8             	lea    -0x8(%ebp),%esp
80101f04:	5b                   	pop    %ebx
80101f05:	5e                   	pop    %esi
80101f06:	5d                   	pop    %ebp
80101f07:	c3                   	ret    
80101f08:	90                   	nop
80101f09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80101f10:	83 ec 0c             	sub    $0xc,%esp
80101f13:	ff 33                	pushl  (%ebx)
80101f15:	e8 a6 f1 ff ff       	call   801010c0 <getsuperblock>
80101f1a:	5a                   	pop    %edx
80101f1b:	8b 53 04             	mov    0x4(%ebx),%edx
80101f1e:	59                   	pop    %ecx
80101f1f:	c1 ea 04             	shr    $0x4,%edx
80101f22:	03 50 14             	add    0x14(%eax),%edx
80101f25:	52                   	push   %edx
80101f26:	ff 33                	pushl  (%ebx)
80101f28:	e8 b3 e2 ff ff       	call   801001e0 <bread>
80101f2d:	89 c6                	mov    %eax,%esi
80101f2f:	8b 43 04             	mov    0x4(%ebx),%eax
80101f32:	83 c4 0c             	add    $0xc,%esp
80101f35:	83 e0 0f             	and    $0xf,%eax
80101f38:	c1 e0 06             	shl    $0x6,%eax
80101f3b:	8d 44 06 60          	lea    0x60(%esi,%eax,1),%eax
80101f3f:	0f b7 10             	movzwl (%eax),%edx
80101f42:	83 c0 0c             	add    $0xc,%eax
80101f45:	66 89 53 50          	mov    %dx,0x50(%ebx)
80101f49:	0f b7 50 f6          	movzwl -0xa(%eax),%edx
80101f4d:	66 89 53 52          	mov    %dx,0x52(%ebx)
80101f51:	0f b7 50 f8          	movzwl -0x8(%eax),%edx
80101f55:	66 89 53 54          	mov    %dx,0x54(%ebx)
80101f59:	0f b7 50 fa          	movzwl -0x6(%eax),%edx
80101f5d:	66 89 53 56          	mov    %dx,0x56(%ebx)
80101f61:	8b 50 fc             	mov    -0x4(%eax),%edx
80101f64:	89 53 58             	mov    %edx,0x58(%ebx)
80101f67:	6a 34                	push   $0x34
80101f69:	50                   	push   %eax
80101f6a:	8d 43 5c             	lea    0x5c(%ebx),%eax
80101f6d:	50                   	push   %eax
80101f6e:	e8 7d 49 00 00       	call   801068f0 <memmove>
80101f73:	89 34 24             	mov    %esi,(%esp)
80101f76:	e8 c5 e3 ff ff       	call   80100340 <brelse>
80101f7b:	83 c4 10             	add    $0x10,%esp
80101f7e:	66 83 7b 50 00       	cmpw   $0x0,0x50(%ebx)
80101f83:	c7 43 4c 01 00 00 00 	movl   $0x1,0x4c(%ebx)
80101f8a:	0f 85 71 ff ff ff    	jne    80101f01 <ilock+0x31>
80101f90:	83 ec 0c             	sub    $0xc,%esp
80101f93:	68 38 ed 10 80       	push   $0x8010ed38
80101f98:	e8 33 e4 ff ff       	call   801003d0 <panic>
80101f9d:	83 ec 0c             	sub    $0xc,%esp
80101fa0:	68 32 ed 10 80       	push   $0x8010ed32
80101fa5:	e8 26 e4 ff ff       	call   801003d0 <panic>
80101faa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80101fb0 <iunlock>:
80101fb0:	55                   	push   %ebp
80101fb1:	89 e5                	mov    %esp,%ebp
80101fb3:	56                   	push   %esi
80101fb4:	53                   	push   %ebx
80101fb5:	8b 5d 08             	mov    0x8(%ebp),%ebx
80101fb8:	85 db                	test   %ebx,%ebx
80101fba:	74 28                	je     80101fe4 <iunlock+0x34>
80101fbc:	8d 73 0c             	lea    0xc(%ebx),%esi
80101fbf:	83 ec 0c             	sub    $0xc,%esp
80101fc2:	56                   	push   %esi
80101fc3:	e8 d8 45 00 00       	call   801065a0 <holdingsleep>
80101fc8:	83 c4 10             	add    $0x10,%esp
80101fcb:	85 c0                	test   %eax,%eax
80101fcd:	74 15                	je     80101fe4 <iunlock+0x34>
80101fcf:	8b 43 08             	mov    0x8(%ebx),%eax
80101fd2:	85 c0                	test   %eax,%eax
80101fd4:	7e 0e                	jle    80101fe4 <iunlock+0x34>
80101fd6:	89 75 08             	mov    %esi,0x8(%ebp)
80101fd9:	8d 65 f8             	lea    -0x8(%ebp),%esp
80101fdc:	5b                   	pop    %ebx
80101fdd:	5e                   	pop    %esi
80101fde:	5d                   	pop    %ebp
80101fdf:	e9 7c 45 00 00       	jmp    80106560 <releasesleep>
80101fe4:	83 ec 0c             	sub    $0xc,%esp
80101fe7:	68 47 ed 10 80       	push   $0x8010ed47
80101fec:	e8 df e3 ff ff       	call   801003d0 <panic>
80101ff1:	eb 0d                	jmp    80102000 <iput>
80101ff3:	90                   	nop
80101ff4:	90                   	nop
80101ff5:	90                   	nop
80101ff6:	90                   	nop
80101ff7:	90                   	nop
80101ff8:	90                   	nop
80101ff9:	90                   	nop
80101ffa:	90                   	nop
80101ffb:	90                   	nop
80101ffc:	90                   	nop
80101ffd:	90                   	nop
80101ffe:	90                   	nop
80101fff:	90                   	nop

80102000 <iput>:
80102000:	55                   	push   %ebp
80102001:	89 e5                	mov    %esp,%ebp
80102003:	57                   	push   %edi
80102004:	56                   	push   %esi
80102005:	53                   	push   %ebx
80102006:	83 ec 28             	sub    $0x28,%esp
80102009:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010200c:	8d 7b 0c             	lea    0xc(%ebx),%edi
8010200f:	57                   	push   %edi
80102010:	e8 eb 44 00 00       	call   80106500 <acquiresleep>
80102015:	8b 53 4c             	mov    0x4c(%ebx),%edx
80102018:	83 c4 10             	add    $0x10,%esp
8010201b:	85 d2                	test   %edx,%edx
8010201d:	74 07                	je     80102026 <iput+0x26>
8010201f:	66 83 7b 56 00       	cmpw   $0x0,0x56(%ebx)
80102024:	74 4a                	je     80102070 <iput+0x70>
80102026:	83 ec 0c             	sub    $0xc,%esp
80102029:	57                   	push   %edi
8010202a:	e8 31 45 00 00       	call   80106560 <releasesleep>
8010202f:	c7 04 24 60 ad 12 80 	movl   $0x8012ad60,(%esp)
80102036:	e8 95 46 00 00       	call   801066d0 <acquire>
8010203b:	8b 43 08             	mov    0x8(%ebx),%eax
8010203e:	83 c4 10             	add    $0x10,%esp
80102041:	83 e8 01             	sub    $0x1,%eax
80102044:	85 c0                	test   %eax,%eax
80102046:	89 43 08             	mov    %eax,0x8(%ebx)
80102049:	75 0d                	jne    80102058 <iput+0x58>
8010204b:	83 ec 0c             	sub    $0xc,%esp
8010204e:	ff 33                	pushl  (%ebx)
80102050:	e8 0b ef ff ff       	call   80100f60 <deviceput>
80102055:	83 c4 10             	add    $0x10,%esp
80102058:	c7 45 08 60 ad 12 80 	movl   $0x8012ad60,0x8(%ebp)
8010205f:	8d 65 f4             	lea    -0xc(%ebp),%esp
80102062:	5b                   	pop    %ebx
80102063:	5e                   	pop    %esi
80102064:	5f                   	pop    %edi
80102065:	5d                   	pop    %ebp
80102066:	e9 85 47 00 00       	jmp    801067f0 <release>
8010206b:	90                   	nop
8010206c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80102070:	83 ec 0c             	sub    $0xc,%esp
80102073:	68 60 ad 12 80       	push   $0x8012ad60
80102078:	e8 53 46 00 00       	call   801066d0 <acquire>
8010207d:	8b 73 08             	mov    0x8(%ebx),%esi
80102080:	c7 04 24 60 ad 12 80 	movl   $0x8012ad60,(%esp)
80102087:	e8 64 47 00 00       	call   801067f0 <release>
8010208c:	83 c4 10             	add    $0x10,%esp
8010208f:	83 fe 01             	cmp    $0x1,%esi
80102092:	75 92                	jne    80102026 <iput+0x26>
80102094:	8d 8b 8c 00 00 00    	lea    0x8c(%ebx),%ecx
8010209a:	89 7d e4             	mov    %edi,-0x1c(%ebp)
8010209d:	8d 73 5c             	lea    0x5c(%ebx),%esi
801020a0:	89 cf                	mov    %ecx,%edi
801020a2:	eb 0b                	jmp    801020af <iput+0xaf>
801020a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801020a8:	83 c6 04             	add    $0x4,%esi
801020ab:	39 fe                	cmp    %edi,%esi
801020ad:	74 19                	je     801020c8 <iput+0xc8>
801020af:	8b 16                	mov    (%esi),%edx
801020b1:	85 d2                	test   %edx,%edx
801020b3:	74 f3                	je     801020a8 <iput+0xa8>
801020b5:	8b 03                	mov    (%ebx),%eax
801020b7:	e8 44 fb ff ff       	call   80101c00 <bfree>
801020bc:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
801020c2:	eb e4                	jmp    801020a8 <iput+0xa8>
801020c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801020c8:	8b 83 8c 00 00 00    	mov    0x8c(%ebx),%eax
801020ce:	8b 7d e4             	mov    -0x1c(%ebp),%edi
801020d1:	85 c0                	test   %eax,%eax
801020d3:	75 2d                	jne    80102102 <iput+0x102>
801020d5:	83 ec 0c             	sub    $0xc,%esp
801020d8:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)
801020df:	53                   	push   %ebx
801020e0:	e8 2b fd ff ff       	call   80101e10 <iupdate>
801020e5:	31 c0                	xor    %eax,%eax
801020e7:	66 89 43 50          	mov    %ax,0x50(%ebx)
801020eb:	89 1c 24             	mov    %ebx,(%esp)
801020ee:	e8 1d fd ff ff       	call   80101e10 <iupdate>
801020f3:	c7 43 4c 00 00 00 00 	movl   $0x0,0x4c(%ebx)
801020fa:	83 c4 10             	add    $0x10,%esp
801020fd:	e9 24 ff ff ff       	jmp    80102026 <iput+0x26>
80102102:	83 ec 08             	sub    $0x8,%esp
80102105:	50                   	push   %eax
80102106:	ff 33                	pushl  (%ebx)
80102108:	e8 d3 e0 ff ff       	call   801001e0 <bread>
8010210d:	8d 88 60 04 00 00    	lea    0x460(%eax),%ecx
80102113:	89 7d e0             	mov    %edi,-0x20(%ebp)
80102116:	89 45 e4             	mov    %eax,-0x1c(%ebp)
80102119:	8d 70 60             	lea    0x60(%eax),%esi
8010211c:	83 c4 10             	add    $0x10,%esp
8010211f:	89 cf                	mov    %ecx,%edi
80102121:	eb 0c                	jmp    8010212f <iput+0x12f>
80102123:	90                   	nop
80102124:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80102128:	83 c6 04             	add    $0x4,%esi
8010212b:	39 fe                	cmp    %edi,%esi
8010212d:	74 0f                	je     8010213e <iput+0x13e>
8010212f:	8b 16                	mov    (%esi),%edx
80102131:	85 d2                	test   %edx,%edx
80102133:	74 f3                	je     80102128 <iput+0x128>
80102135:	8b 03                	mov    (%ebx),%eax
80102137:	e8 c4 fa ff ff       	call   80101c00 <bfree>
8010213c:	eb ea                	jmp    80102128 <iput+0x128>
8010213e:	83 ec 0c             	sub    $0xc,%esp
80102141:	ff 75 e4             	pushl  -0x1c(%ebp)
80102144:	8b 7d e0             	mov    -0x20(%ebp),%edi
80102147:	e8 f4 e1 ff ff       	call   80100340 <brelse>
8010214c:	8b 93 8c 00 00 00    	mov    0x8c(%ebx),%edx
80102152:	8b 03                	mov    (%ebx),%eax
80102154:	e8 a7 fa ff ff       	call   80101c00 <bfree>
80102159:	c7 83 8c 00 00 00 00 	movl   $0x0,0x8c(%ebx)
80102160:	00 00 00 
80102163:	83 c4 10             	add    $0x10,%esp
80102166:	e9 6a ff ff ff       	jmp    801020d5 <iput+0xd5>
8010216b:	90                   	nop
8010216c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80102170 <iunlockput>:
80102170:	55                   	push   %ebp
80102171:	89 e5                	mov    %esp,%ebp
80102173:	53                   	push   %ebx
80102174:	83 ec 10             	sub    $0x10,%esp
80102177:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010217a:	53                   	push   %ebx
8010217b:	e8 30 fe ff ff       	call   80101fb0 <iunlock>
80102180:	89 5d 08             	mov    %ebx,0x8(%ebp)
80102183:	83 c4 10             	add    $0x10,%esp
80102186:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80102189:	c9                   	leave  
8010218a:	e9 71 fe ff ff       	jmp    80102000 <iput>
8010218f:	90                   	nop

80102190 <stati>:
80102190:	55                   	push   %ebp
80102191:	89 e5                	mov    %esp,%ebp
80102193:	8b 55 08             	mov    0x8(%ebp),%edx
80102196:	8b 45 0c             	mov    0xc(%ebp),%eax
80102199:	8b 0a                	mov    (%edx),%ecx
8010219b:	89 48 04             	mov    %ecx,0x4(%eax)
8010219e:	8b 4a 04             	mov    0x4(%edx),%ecx
801021a1:	89 48 08             	mov    %ecx,0x8(%eax)
801021a4:	0f b7 4a 50          	movzwl 0x50(%edx),%ecx
801021a8:	66 89 08             	mov    %cx,(%eax)
801021ab:	0f b7 4a 56          	movzwl 0x56(%edx),%ecx
801021af:	66 89 48 0c          	mov    %cx,0xc(%eax)
801021b3:	8b 52 58             	mov    0x58(%edx),%edx
801021b6:	89 50 10             	mov    %edx,0x10(%eax)
801021b9:	5d                   	pop    %ebp
801021ba:	c3                   	ret    
801021bb:	90                   	nop
801021bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801021c0 <readi>:
801021c0:	55                   	push   %ebp
801021c1:	89 e5                	mov    %esp,%ebp
801021c3:	57                   	push   %edi
801021c4:	56                   	push   %esi
801021c5:	53                   	push   %ebx
801021c6:	83 ec 1c             	sub    $0x1c,%esp
801021c9:	8b 45 08             	mov    0x8(%ebp),%eax
801021cc:	8b 7d 0c             	mov    0xc(%ebp),%edi
801021cf:	8b 75 10             	mov    0x10(%ebp),%esi
801021d2:	66 83 78 50 03       	cmpw   $0x3,0x50(%eax)
801021d7:	89 7d e0             	mov    %edi,-0x20(%ebp)
801021da:	8b 7d 14             	mov    0x14(%ebp),%edi
801021dd:	89 45 d8             	mov    %eax,-0x28(%ebp)
801021e0:	89 7d e4             	mov    %edi,-0x1c(%ebp)
801021e3:	0f 84 a7 00 00 00    	je     80102290 <readi+0xd0>
801021e9:	8b 45 d8             	mov    -0x28(%ebp),%eax
801021ec:	8b 40 58             	mov    0x58(%eax),%eax
801021ef:	39 f0                	cmp    %esi,%eax
801021f1:	0f 82 c9 00 00 00    	jb     801022c0 <readi+0x100>
801021f7:	8b 7d e4             	mov    -0x1c(%ebp),%edi
801021fa:	89 fa                	mov    %edi,%edx
801021fc:	01 f2                	add    %esi,%edx
801021fe:	0f 82 bc 00 00 00    	jb     801022c0 <readi+0x100>
80102204:	89 c1                	mov    %eax,%ecx
80102206:	29 f1                	sub    %esi,%ecx
80102208:	39 d0                	cmp    %edx,%eax
8010220a:	0f 43 cf             	cmovae %edi,%ecx
8010220d:	31 ff                	xor    %edi,%edi
8010220f:	85 c9                	test   %ecx,%ecx
80102211:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
80102214:	74 6d                	je     80102283 <readi+0xc3>
80102216:	8d 76 00             	lea    0x0(%esi),%esi
80102219:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80102220:	8b 5d d8             	mov    -0x28(%ebp),%ebx
80102223:	89 f2                	mov    %esi,%edx
80102225:	c1 ea 0a             	shr    $0xa,%edx
80102228:	89 d8                	mov    %ebx,%eax
8010222a:	e8 c1 f8 ff ff       	call   80101af0 <bmap>
8010222f:	83 ec 08             	sub    $0x8,%esp
80102232:	50                   	push   %eax
80102233:	ff 33                	pushl  (%ebx)
80102235:	bb 00 04 00 00       	mov    $0x400,%ebx
8010223a:	e8 a1 df ff ff       	call   801001e0 <bread>
8010223f:	89 c2                	mov    %eax,%edx
80102241:	8b 45 e4             	mov    -0x1c(%ebp),%eax
80102244:	89 f1                	mov    %esi,%ecx
80102246:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
8010224c:	83 c4 0c             	add    $0xc,%esp
8010224f:	89 55 dc             	mov    %edx,-0x24(%ebp)
80102252:	29 cb                	sub    %ecx,%ebx
80102254:	29 f8                	sub    %edi,%eax
80102256:	39 c3                	cmp    %eax,%ebx
80102258:	0f 47 d8             	cmova  %eax,%ebx
8010225b:	8d 44 0a 60          	lea    0x60(%edx,%ecx,1),%eax
8010225f:	53                   	push   %ebx
80102260:	01 df                	add    %ebx,%edi
80102262:	01 de                	add    %ebx,%esi
80102264:	50                   	push   %eax
80102265:	ff 75 e0             	pushl  -0x20(%ebp)
80102268:	e8 83 46 00 00       	call   801068f0 <memmove>
8010226d:	8b 55 dc             	mov    -0x24(%ebp),%edx
80102270:	89 14 24             	mov    %edx,(%esp)
80102273:	e8 c8 e0 ff ff       	call   80100340 <brelse>
80102278:	01 5d e0             	add    %ebx,-0x20(%ebp)
8010227b:	83 c4 10             	add    $0x10,%esp
8010227e:	39 7d e4             	cmp    %edi,-0x1c(%ebp)
80102281:	77 9d                	ja     80102220 <readi+0x60>
80102283:	8b 45 e4             	mov    -0x1c(%ebp),%eax
80102286:	8d 65 f4             	lea    -0xc(%ebp),%esp
80102289:	5b                   	pop    %ebx
8010228a:	5e                   	pop    %esi
8010228b:	5f                   	pop    %edi
8010228c:	5d                   	pop    %ebp
8010228d:	c3                   	ret    
8010228e:	66 90                	xchg   %ax,%ax
80102290:	89 c6                	mov    %eax,%esi
80102292:	0f bf 40 52          	movswl 0x52(%eax),%eax
80102296:	66 83 f8 09          	cmp    $0x9,%ax
8010229a:	77 24                	ja     801022c0 <readi+0x100>
8010229c:	66 83 7e 54 03       	cmpw   $0x3,0x54(%esi)
801022a1:	77 1d                	ja     801022c0 <readi+0x100>
801022a3:	8b 04 c5 00 ad 12 80 	mov    -0x7fed5300(,%eax,8),%eax
801022aa:	85 c0                	test   %eax,%eax
801022ac:	74 12                	je     801022c0 <readi+0x100>
801022ae:	89 7d 10             	mov    %edi,0x10(%ebp)
801022b1:	8d 65 f4             	lea    -0xc(%ebp),%esp
801022b4:	5b                   	pop    %ebx
801022b5:	5e                   	pop    %esi
801022b6:	5f                   	pop    %edi
801022b7:	5d                   	pop    %ebp
801022b8:	ff e0                	jmp    *%eax
801022ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801022c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801022c5:	eb bf                	jmp    80102286 <readi+0xc6>
801022c7:	89 f6                	mov    %esi,%esi
801022c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801022d0 <writei>:
801022d0:	55                   	push   %ebp
801022d1:	89 e5                	mov    %esp,%ebp
801022d3:	57                   	push   %edi
801022d4:	56                   	push   %esi
801022d5:	53                   	push   %ebx
801022d6:	83 ec 1c             	sub    $0x1c,%esp
801022d9:	8b 45 08             	mov    0x8(%ebp),%eax
801022dc:	8b 75 0c             	mov    0xc(%ebp),%esi
801022df:	8b 7d 14             	mov    0x14(%ebp),%edi
801022e2:	66 83 78 50 03       	cmpw   $0x3,0x50(%eax)
801022e7:	89 75 dc             	mov    %esi,-0x24(%ebp)
801022ea:	89 45 d8             	mov    %eax,-0x28(%ebp)
801022ed:	8b 75 10             	mov    0x10(%ebp),%esi
801022f0:	89 7d e0             	mov    %edi,-0x20(%ebp)
801022f3:	0f 84 b7 00 00 00    	je     801023b0 <writei+0xe0>
801022f9:	8b 45 d8             	mov    -0x28(%ebp),%eax
801022fc:	39 70 58             	cmp    %esi,0x58(%eax)
801022ff:	0f 82 f3 00 00 00    	jb     801023f8 <writei+0x128>
80102305:	8b 7d e0             	mov    -0x20(%ebp),%edi
80102308:	89 f8                	mov    %edi,%eax
8010230a:	01 f0                	add    %esi,%eax
8010230c:	3d 00 30 04 00       	cmp    $0x43000,%eax
80102311:	0f 87 e1 00 00 00    	ja     801023f8 <writei+0x128>
80102317:	39 c6                	cmp    %eax,%esi
80102319:	0f 87 d9 00 00 00    	ja     801023f8 <writei+0x128>
8010231f:	85 ff                	test   %edi,%edi
80102321:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
80102328:	74 78                	je     801023a2 <writei+0xd2>
8010232a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80102330:	8b 7d d8             	mov    -0x28(%ebp),%edi
80102333:	89 f2                	mov    %esi,%edx
80102335:	bb 00 04 00 00       	mov    $0x400,%ebx
8010233a:	c1 ea 0a             	shr    $0xa,%edx
8010233d:	89 f8                	mov    %edi,%eax
8010233f:	e8 ac f7 ff ff       	call   80101af0 <bmap>
80102344:	83 ec 08             	sub    $0x8,%esp
80102347:	50                   	push   %eax
80102348:	ff 37                	pushl  (%edi)
8010234a:	e8 91 de ff ff       	call   801001e0 <bread>
8010234f:	89 c7                	mov    %eax,%edi
80102351:	8b 45 e0             	mov    -0x20(%ebp),%eax
80102354:	2b 45 e4             	sub    -0x1c(%ebp),%eax
80102357:	89 f1                	mov    %esi,%ecx
80102359:	83 c4 0c             	add    $0xc,%esp
8010235c:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
80102362:	29 cb                	sub    %ecx,%ebx
80102364:	39 c3                	cmp    %eax,%ebx
80102366:	0f 47 d8             	cmova  %eax,%ebx
80102369:	8d 44 0f 60          	lea    0x60(%edi,%ecx,1),%eax
8010236d:	53                   	push   %ebx
8010236e:	ff 75 dc             	pushl  -0x24(%ebp)
80102371:	01 de                	add    %ebx,%esi
80102373:	50                   	push   %eax
80102374:	e8 77 45 00 00       	call   801068f0 <memmove>
80102379:	89 3c 24             	mov    %edi,(%esp)
8010237c:	e8 3f 16 00 00       	call   801039c0 <log_write>
80102381:	89 3c 24             	mov    %edi,(%esp)
80102384:	e8 b7 df ff ff       	call   80100340 <brelse>
80102389:	01 5d e4             	add    %ebx,-0x1c(%ebp)
8010238c:	01 5d dc             	add    %ebx,-0x24(%ebp)
8010238f:	83 c4 10             	add    $0x10,%esp
80102392:	8b 55 e4             	mov    -0x1c(%ebp),%edx
80102395:	39 55 e0             	cmp    %edx,-0x20(%ebp)
80102398:	77 96                	ja     80102330 <writei+0x60>
8010239a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8010239d:	3b 70 58             	cmp    0x58(%eax),%esi
801023a0:	77 3e                	ja     801023e0 <writei+0x110>
801023a2:	8b 45 e0             	mov    -0x20(%ebp),%eax
801023a5:	8d 65 f4             	lea    -0xc(%ebp),%esp
801023a8:	5b                   	pop    %ebx
801023a9:	5e                   	pop    %esi
801023aa:	5f                   	pop    %edi
801023ab:	5d                   	pop    %ebp
801023ac:	c3                   	ret    
801023ad:	8d 76 00             	lea    0x0(%esi),%esi
801023b0:	89 c6                	mov    %eax,%esi
801023b2:	0f bf 40 52          	movswl 0x52(%eax),%eax
801023b6:	66 83 f8 09          	cmp    $0x9,%ax
801023ba:	77 3c                	ja     801023f8 <writei+0x128>
801023bc:	66 83 7e 54 03       	cmpw   $0x3,0x54(%esi)
801023c1:	77 35                	ja     801023f8 <writei+0x128>
801023c3:	8b 04 c5 04 ad 12 80 	mov    -0x7fed52fc(,%eax,8),%eax
801023ca:	85 c0                	test   %eax,%eax
801023cc:	74 2a                	je     801023f8 <writei+0x128>
801023ce:	89 7d 10             	mov    %edi,0x10(%ebp)
801023d1:	8d 65 f4             	lea    -0xc(%ebp),%esp
801023d4:	5b                   	pop    %ebx
801023d5:	5e                   	pop    %esi
801023d6:	5f                   	pop    %edi
801023d7:	5d                   	pop    %ebp
801023d8:	ff e0                	jmp    *%eax
801023da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801023e0:	8b 45 d8             	mov    -0x28(%ebp),%eax
801023e3:	83 ec 0c             	sub    $0xc,%esp
801023e6:	89 70 58             	mov    %esi,0x58(%eax)
801023e9:	50                   	push   %eax
801023ea:	e8 21 fa ff ff       	call   80101e10 <iupdate>
801023ef:	83 c4 10             	add    $0x10,%esp
801023f2:	eb ae                	jmp    801023a2 <writei+0xd2>
801023f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801023f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801023fd:	eb a6                	jmp    801023a5 <writei+0xd5>
801023ff:	90                   	nop

80102400 <namecmp>:
80102400:	55                   	push   %ebp
80102401:	89 e5                	mov    %esp,%ebp
80102403:	83 ec 0c             	sub    $0xc,%esp
80102406:	6a 0e                	push   $0xe
80102408:	ff 75 0c             	pushl  0xc(%ebp)
8010240b:	ff 75 08             	pushl  0x8(%ebp)
8010240e:	e8 5d 45 00 00       	call   80106970 <strncmp>
80102413:	c9                   	leave  
80102414:	c3                   	ret    
80102415:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80102419:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80102420 <dirlookup>:
80102420:	55                   	push   %ebp
80102421:	89 e5                	mov    %esp,%ebp
80102423:	57                   	push   %edi
80102424:	56                   	push   %esi
80102425:	53                   	push   %ebx
80102426:	83 ec 1c             	sub    $0x1c,%esp
80102429:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010242c:	66 83 7b 50 01       	cmpw   $0x1,0x50(%ebx)
80102431:	0f 85 80 00 00 00    	jne    801024b7 <dirlookup+0x97>
80102437:	8b 53 58             	mov    0x58(%ebx),%edx
8010243a:	31 ff                	xor    %edi,%edi
8010243c:	8d 75 d8             	lea    -0x28(%ebp),%esi
8010243f:	85 d2                	test   %edx,%edx
80102441:	75 0d                	jne    80102450 <dirlookup+0x30>
80102443:	eb 5b                	jmp    801024a0 <dirlookup+0x80>
80102445:	8d 76 00             	lea    0x0(%esi),%esi
80102448:	83 c7 10             	add    $0x10,%edi
8010244b:	39 7b 58             	cmp    %edi,0x58(%ebx)
8010244e:	76 50                	jbe    801024a0 <dirlookup+0x80>
80102450:	6a 10                	push   $0x10
80102452:	57                   	push   %edi
80102453:	56                   	push   %esi
80102454:	53                   	push   %ebx
80102455:	e8 66 fd ff ff       	call   801021c0 <readi>
8010245a:	83 c4 10             	add    $0x10,%esp
8010245d:	83 f8 10             	cmp    $0x10,%eax
80102460:	75 48                	jne    801024aa <dirlookup+0x8a>
80102462:	66 83 7d d8 00       	cmpw   $0x0,-0x28(%ebp)
80102467:	74 df                	je     80102448 <dirlookup+0x28>
80102469:	8d 45 da             	lea    -0x26(%ebp),%eax
8010246c:	83 ec 04             	sub    $0x4,%esp
8010246f:	6a 0e                	push   $0xe
80102471:	50                   	push   %eax
80102472:	ff 75 0c             	pushl  0xc(%ebp)
80102475:	e8 f6 44 00 00       	call   80106970 <strncmp>
8010247a:	83 c4 10             	add    $0x10,%esp
8010247d:	85 c0                	test   %eax,%eax
8010247f:	75 c7                	jne    80102448 <dirlookup+0x28>
80102481:	8b 45 10             	mov    0x10(%ebp),%eax
80102484:	85 c0                	test   %eax,%eax
80102486:	74 05                	je     8010248d <dirlookup+0x6d>
80102488:	8b 45 10             	mov    0x10(%ebp),%eax
8010248b:	89 38                	mov    %edi,(%eax)
8010248d:	0f b7 55 d8          	movzwl -0x28(%ebp),%edx
80102491:	8b 03                	mov    (%ebx),%eax
80102493:	e8 78 f5 ff ff       	call   80101a10 <iget>
80102498:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010249b:	5b                   	pop    %ebx
8010249c:	5e                   	pop    %esi
8010249d:	5f                   	pop    %edi
8010249e:	5d                   	pop    %ebp
8010249f:	c3                   	ret    
801024a0:	8d 65 f4             	lea    -0xc(%ebp),%esp
801024a3:	31 c0                	xor    %eax,%eax
801024a5:	5b                   	pop    %ebx
801024a6:	5e                   	pop    %esi
801024a7:	5f                   	pop    %edi
801024a8:	5d                   	pop    %ebp
801024a9:	c3                   	ret    
801024aa:	83 ec 0c             	sub    $0xc,%esp
801024ad:	68 61 ed 10 80       	push   $0x8010ed61
801024b2:	e8 19 df ff ff       	call   801003d0 <panic>
801024b7:	83 ec 0c             	sub    $0xc,%esp
801024ba:	68 4f ed 10 80       	push   $0x8010ed4f
801024bf:	e8 0c df ff ff       	call   801003d0 <panic>
801024c4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801024ca:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

801024d0 <namex>:
801024d0:	55                   	push   %ebp
801024d1:	89 e5                	mov    %esp,%ebp
801024d3:	57                   	push   %edi
801024d4:	56                   	push   %esi
801024d5:	53                   	push   %ebx
801024d6:	89 c3                	mov    %eax,%ebx
801024d8:	83 ec 2c             	sub    $0x2c,%esp
801024db:	80 38 2f             	cmpb   $0x2f,(%eax)
801024de:	89 55 d4             	mov    %edx,-0x2c(%ebp)
801024e1:	89 4d e0             	mov    %ecx,-0x20(%ebp)
801024e4:	0f 84 2b 02 00 00    	je     80102715 <namex+0x245>
801024ea:	e8 81 2f 00 00       	call   80105470 <myproc>
801024ef:	83 ec 0c             	sub    $0xc,%esp
801024f2:	ff b0 8c 00 00 00    	pushl  0x8c(%eax)
801024f8:	e8 b3 18 00 00       	call   80103db0 <mntdup>
801024fd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
80102500:	e8 6b 2f 00 00       	call   80105470 <myproc>
80102505:	8b b8 88 00 00 00    	mov    0x88(%eax),%edi
8010250b:	c7 04 24 60 ad 12 80 	movl   $0x8012ad60,(%esp)
80102512:	e8 b9 41 00 00       	call   801066d0 <acquire>
80102517:	83 47 08 01          	addl   $0x1,0x8(%edi)
8010251b:	c7 04 24 60 ad 12 80 	movl   $0x8012ad60,(%esp)
80102522:	e8 c9 42 00 00       	call   801067f0 <release>
80102527:	83 c4 10             	add    $0x10,%esp
8010252a:	eb 07                	jmp    80102533 <namex+0x63>
8010252c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80102530:	83 c3 01             	add    $0x1,%ebx
80102533:	0f b6 03             	movzbl (%ebx),%eax
80102536:	3c 2f                	cmp    $0x2f,%al
80102538:	74 f6                	je     80102530 <namex+0x60>
8010253a:	84 c0                	test   %al,%al
8010253c:	0f 84 60 01 00 00    	je     801026a2 <namex+0x1d2>
80102542:	0f b6 03             	movzbl (%ebx),%eax
80102545:	89 de                	mov    %ebx,%esi
80102547:	84 c0                	test   %al,%al
80102549:	0f 84 2a 01 00 00    	je     80102679 <namex+0x1a9>
8010254f:	3c 2f                	cmp    $0x2f,%al
80102551:	75 11                	jne    80102564 <namex+0x94>
80102553:	e9 21 01 00 00       	jmp    80102679 <namex+0x1a9>
80102558:	90                   	nop
80102559:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80102560:	84 c0                	test   %al,%al
80102562:	74 0a                	je     8010256e <namex+0x9e>
80102564:	83 c6 01             	add    $0x1,%esi
80102567:	0f b6 06             	movzbl (%esi),%eax
8010256a:	3c 2f                	cmp    $0x2f,%al
8010256c:	75 f2                	jne    80102560 <namex+0x90>
8010256e:	89 f2                	mov    %esi,%edx
80102570:	29 da                	sub    %ebx,%edx
80102572:	83 fa 0d             	cmp    $0xd,%edx
80102575:	0f 8e 05 01 00 00    	jle    80102680 <namex+0x1b0>
8010257b:	83 ec 04             	sub    $0x4,%esp
8010257e:	6a 0e                	push   $0xe
80102580:	53                   	push   %ebx
80102581:	89 f3                	mov    %esi,%ebx
80102583:	ff 75 e0             	pushl  -0x20(%ebp)
80102586:	e8 65 43 00 00       	call   801068f0 <memmove>
8010258b:	83 c4 10             	add    $0x10,%esp
8010258e:	80 3e 2f             	cmpb   $0x2f,(%esi)
80102591:	75 0d                	jne    801025a0 <namex+0xd0>
80102593:	90                   	nop
80102594:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80102598:	83 c3 01             	add    $0x1,%ebx
8010259b:	80 3b 2f             	cmpb   $0x2f,(%ebx)
8010259e:	74 f8                	je     80102598 <namex+0xc8>
801025a0:	83 ec 0c             	sub    $0xc,%esp
801025a3:	57                   	push   %edi
801025a4:	e8 27 f9 ff ff       	call   80101ed0 <ilock>
801025a9:	83 c4 10             	add    $0x10,%esp
801025ac:	66 83 7f 50 01       	cmpw   $0x1,0x50(%edi)
801025b1:	0f 85 37 01 00 00    	jne    801026ee <namex+0x21e>
801025b7:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
801025ba:	85 c9                	test   %ecx,%ecx
801025bc:	74 09                	je     801025c7 <namex+0xf7>
801025be:	80 3b 00             	cmpb   $0x0,(%ebx)
801025c1:	0f 84 78 01 00 00    	je     8010273f <namex+0x26f>
801025c7:	83 ec 04             	sub    $0x4,%esp
801025ca:	6a 00                	push   $0x0
801025cc:	ff 75 e0             	pushl  -0x20(%ebp)
801025cf:	57                   	push   %edi
801025d0:	e8 4b fe ff ff       	call   80102420 <dirlookup>
801025d5:	83 c4 10             	add    $0x10,%esp
801025d8:	85 c0                	test   %eax,%eax
801025da:	89 c6                	mov    %eax,%esi
801025dc:	0f 84 0c 01 00 00    	je     801026ee <namex+0x21e>
801025e2:	83 ec 0c             	sub    $0xc,%esp
801025e5:	8b 47 04             	mov    0x4(%edi),%eax
801025e8:	57                   	push   %edi
801025e9:	89 45 dc             	mov    %eax,-0x24(%ebp)
801025ec:	e8 bf f9 ff ff       	call   80101fb0 <iunlock>
801025f1:	89 3c 24             	mov    %edi,(%esp)
801025f4:	e8 07 fa ff ff       	call   80102000 <iput>
801025f9:	83 c4 0c             	add    $0xc,%esp
801025fc:	6a 0e                	push   $0xe
801025fe:	68 70 ed 10 80       	push   $0x8010ed70
80102603:	ff 75 e0             	pushl  -0x20(%ebp)
80102606:	e8 65 43 00 00       	call   80106970 <strncmp>
8010260b:	83 c4 10             	add    $0x10,%esp
8010260e:	85 c0                	test   %eax,%eax
80102610:	75 13                	jne    80102625 <namex+0x155>
80102612:	8b 45 e4             	mov    -0x1c(%ebp),%eax
80102615:	83 78 0c 01          	cmpl   $0x1,0xc(%eax)
80102619:	74 0a                	je     80102625 <namex+0x155>
8010261b:	83 7d dc 01          	cmpl   $0x1,-0x24(%ebp)
8010261f:	0f 84 9a 00 00 00    	je     801026bf <namex+0x1ef>
80102625:	83 ec 08             	sub    $0x8,%esp
80102628:	ff 75 e4             	pushl  -0x1c(%ebp)
8010262b:	56                   	push   %esi
8010262c:	e8 ef 1a 00 00       	call   80104120 <mntlookup>
80102631:	83 c4 10             	add    $0x10,%esp
80102634:	89 c1                	mov    %eax,%ecx
80102636:	ba 01 00 00 00       	mov    $0x1,%edx
8010263b:	85 c9                	test   %ecx,%ecx
8010263d:	89 55 d8             	mov    %edx,-0x28(%ebp)
80102640:	89 f7                	mov    %esi,%edi
80102642:	89 4d dc             	mov    %ecx,-0x24(%ebp)
80102645:	0f 84 e8 fe ff ff    	je     80102533 <namex+0x63>
8010264b:	83 ec 0c             	sub    $0xc,%esp
8010264e:	ff 75 e4             	pushl  -0x1c(%ebp)
80102651:	e8 8a 17 00 00       	call   80103de0 <mntput>
80102656:	89 34 24             	mov    %esi,(%esp)
80102659:	e8 a2 f9 ff ff       	call   80102000 <iput>
8010265e:	8b 4d dc             	mov    -0x24(%ebp),%ecx
80102661:	8b 55 d8             	mov    -0x28(%ebp),%edx
80102664:	8b 41 0c             	mov    0xc(%ecx),%eax
80102667:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
8010266a:	e8 a1 f3 ff ff       	call   80101a10 <iget>
8010266f:	83 c4 10             	add    $0x10,%esp
80102672:	89 c7                	mov    %eax,%edi
80102674:	e9 ba fe ff ff       	jmp    80102533 <namex+0x63>
80102679:	31 d2                	xor    %edx,%edx
8010267b:	90                   	nop
8010267c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80102680:	83 ec 04             	sub    $0x4,%esp
80102683:	89 55 dc             	mov    %edx,-0x24(%ebp)
80102686:	52                   	push   %edx
80102687:	53                   	push   %ebx
80102688:	8b 5d e0             	mov    -0x20(%ebp),%ebx
8010268b:	53                   	push   %ebx
8010268c:	e8 5f 42 00 00       	call   801068f0 <memmove>
80102691:	8b 55 dc             	mov    -0x24(%ebp),%edx
80102694:	83 c4 10             	add    $0x10,%esp
80102697:	c6 04 13 00          	movb   $0x0,(%ebx,%edx,1)
8010269b:	89 f3                	mov    %esi,%ebx
8010269d:	e9 ec fe ff ff       	jmp    8010258e <namex+0xbe>
801026a2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
801026a5:	85 c0                	test   %eax,%eax
801026a7:	0f 85 b0 00 00 00    	jne    8010275d <namex+0x28d>
801026ad:	8b 45 08             	mov    0x8(%ebp),%eax
801026b0:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
801026b3:	89 08                	mov    %ecx,(%eax)
801026b5:	8d 65 f4             	lea    -0xc(%ebp),%esp
801026b8:	89 f8                	mov    %edi,%eax
801026ba:	5b                   	pop    %ebx
801026bb:	5e                   	pop    %esi
801026bc:	5f                   	pop    %edi
801026bd:	5d                   	pop    %ebp
801026be:	c3                   	ret    
801026bf:	83 ec 0c             	sub    $0xc,%esp
801026c2:	ff 30                	pushl  (%eax)
801026c4:	89 c7                	mov    %eax,%edi
801026c6:	e8 e5 16 00 00       	call   80103db0 <mntdup>
801026cb:	83 c4 0c             	add    $0xc,%esp
801026ce:	89 45 dc             	mov    %eax,-0x24(%ebp)
801026d1:	6a 00                	push   $0x0
801026d3:	68 70 ed 10 80       	push   $0x8010ed70
801026d8:	ff 77 04             	pushl  0x4(%edi)
801026db:	e8 40 fd ff ff       	call   80102420 <dirlookup>
801026e0:	83 c4 10             	add    $0x10,%esp
801026e3:	8b 50 04             	mov    0x4(%eax),%edx
801026e6:	8b 4d dc             	mov    -0x24(%ebp),%ecx
801026e9:	e9 4d ff ff ff       	jmp    8010263b <namex+0x16b>
801026ee:	83 ec 0c             	sub    $0xc,%esp
801026f1:	57                   	push   %edi
801026f2:	e8 b9 f8 ff ff       	call   80101fb0 <iunlock>
801026f7:	89 3c 24             	mov    %edi,(%esp)
801026fa:	e8 01 f9 ff ff       	call   80102000 <iput>
801026ff:	5a                   	pop    %edx
80102700:	ff 75 e4             	pushl  -0x1c(%ebp)
80102703:	e8 d8 16 00 00       	call   80103de0 <mntput>
80102708:	83 c4 10             	add    $0x10,%esp
8010270b:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010270e:	31 c0                	xor    %eax,%eax
80102710:	5b                   	pop    %ebx
80102711:	5e                   	pop    %esi
80102712:	5f                   	pop    %edi
80102713:	5d                   	pop    %ebp
80102714:	c3                   	ret    
80102715:	e8 e6 15 00 00       	call   80103d00 <getrootmount>
8010271a:	83 ec 0c             	sub    $0xc,%esp
8010271d:	50                   	push   %eax
8010271e:	e8 8d 16 00 00       	call   80103db0 <mntdup>
80102723:	ba 01 00 00 00       	mov    $0x1,%edx
80102728:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8010272b:	b8 01 00 00 00       	mov    $0x1,%eax
80102730:	e8 db f2 ff ff       	call   80101a10 <iget>
80102735:	83 c4 10             	add    $0x10,%esp
80102738:	89 c7                	mov    %eax,%edi
8010273a:	e9 f4 fd ff ff       	jmp    80102533 <namex+0x63>
8010273f:	83 ec 0c             	sub    $0xc,%esp
80102742:	57                   	push   %edi
80102743:	e8 68 f8 ff ff       	call   80101fb0 <iunlock>
80102748:	8b 45 08             	mov    0x8(%ebp),%eax
8010274b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
8010274e:	83 c4 10             	add    $0x10,%esp
80102751:	89 08                	mov    %ecx,(%eax)
80102753:	8d 65 f4             	lea    -0xc(%ebp),%esp
80102756:	89 f8                	mov    %edi,%eax
80102758:	5b                   	pop    %ebx
80102759:	5e                   	pop    %esi
8010275a:	5f                   	pop    %edi
8010275b:	5d                   	pop    %ebp
8010275c:	c3                   	ret    
8010275d:	83 ec 0c             	sub    $0xc,%esp
80102760:	57                   	push   %edi
80102761:	eb 97                	jmp    801026fa <namex+0x22a>
80102763:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80102769:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80102770 <dirlink>:
80102770:	55                   	push   %ebp
80102771:	89 e5                	mov    %esp,%ebp
80102773:	57                   	push   %edi
80102774:	56                   	push   %esi
80102775:	53                   	push   %ebx
80102776:	83 ec 20             	sub    $0x20,%esp
80102779:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010277c:	6a 00                	push   $0x0
8010277e:	ff 75 0c             	pushl  0xc(%ebp)
80102781:	53                   	push   %ebx
80102782:	e8 99 fc ff ff       	call   80102420 <dirlookup>
80102787:	83 c4 10             	add    $0x10,%esp
8010278a:	85 c0                	test   %eax,%eax
8010278c:	75 67                	jne    801027f5 <dirlink+0x85>
8010278e:	8b 7b 58             	mov    0x58(%ebx),%edi
80102791:	8d 75 d8             	lea    -0x28(%ebp),%esi
80102794:	85 ff                	test   %edi,%edi
80102796:	74 29                	je     801027c1 <dirlink+0x51>
80102798:	31 ff                	xor    %edi,%edi
8010279a:	8d 75 d8             	lea    -0x28(%ebp),%esi
8010279d:	eb 09                	jmp    801027a8 <dirlink+0x38>
8010279f:	90                   	nop
801027a0:	83 c7 10             	add    $0x10,%edi
801027a3:	39 7b 58             	cmp    %edi,0x58(%ebx)
801027a6:	76 19                	jbe    801027c1 <dirlink+0x51>
801027a8:	6a 10                	push   $0x10
801027aa:	57                   	push   %edi
801027ab:	56                   	push   %esi
801027ac:	53                   	push   %ebx
801027ad:	e8 0e fa ff ff       	call   801021c0 <readi>
801027b2:	83 c4 10             	add    $0x10,%esp
801027b5:	83 f8 10             	cmp    $0x10,%eax
801027b8:	75 4e                	jne    80102808 <dirlink+0x98>
801027ba:	66 83 7d d8 00       	cmpw   $0x0,-0x28(%ebp)
801027bf:	75 df                	jne    801027a0 <dirlink+0x30>
801027c1:	8d 45 da             	lea    -0x26(%ebp),%eax
801027c4:	83 ec 04             	sub    $0x4,%esp
801027c7:	6a 0e                	push   $0xe
801027c9:	ff 75 0c             	pushl  0xc(%ebp)
801027cc:	50                   	push   %eax
801027cd:	e8 5e 42 00 00       	call   80106a30 <strncpy>
801027d2:	8b 45 10             	mov    0x10(%ebp),%eax
801027d5:	6a 10                	push   $0x10
801027d7:	57                   	push   %edi
801027d8:	56                   	push   %esi
801027d9:	53                   	push   %ebx
801027da:	66 89 45 d8          	mov    %ax,-0x28(%ebp)
801027de:	e8 ed fa ff ff       	call   801022d0 <writei>
801027e3:	83 c4 20             	add    $0x20,%esp
801027e6:	83 f8 10             	cmp    $0x10,%eax
801027e9:	75 2a                	jne    80102815 <dirlink+0xa5>
801027eb:	31 c0                	xor    %eax,%eax
801027ed:	8d 65 f4             	lea    -0xc(%ebp),%esp
801027f0:	5b                   	pop    %ebx
801027f1:	5e                   	pop    %esi
801027f2:	5f                   	pop    %edi
801027f3:	5d                   	pop    %ebp
801027f4:	c3                   	ret    
801027f5:	83 ec 0c             	sub    $0xc,%esp
801027f8:	50                   	push   %eax
801027f9:	e8 02 f8 ff ff       	call   80102000 <iput>
801027fe:	83 c4 10             	add    $0x10,%esp
80102801:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80102806:	eb e5                	jmp    801027ed <dirlink+0x7d>
80102808:	83 ec 0c             	sub    $0xc,%esp
8010280b:	68 73 ed 10 80       	push   $0x8010ed73
80102810:	e8 bb db ff ff       	call   801003d0 <panic>
80102815:	83 ec 0c             	sub    $0xc,%esp
80102818:	68 87 f5 10 80       	push   $0x8010f587
8010281d:	e8 ae db ff ff       	call   801003d0 <panic>
80102822:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80102829:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80102830 <initprocessroot>:
80102830:	55                   	push   %ebp
80102831:	89 e5                	mov    %esp,%ebp
80102833:	53                   	push   %ebx
80102834:	83 ec 04             	sub    $0x4,%esp
80102837:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010283a:	e8 b1 14 00 00       	call   80103cf0 <getinitialrootmount>
8010283f:	ba 01 00 00 00       	mov    $0x1,%edx
80102844:	89 03                	mov    %eax,(%ebx)
80102846:	83 c4 04             	add    $0x4,%esp
80102849:	b8 01 00 00 00       	mov    $0x1,%eax
8010284e:	5b                   	pop    %ebx
8010284f:	5d                   	pop    %ebp
80102850:	e9 bb f1 ff ff       	jmp    80101a10 <iget>
80102855:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80102859:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80102860 <namei>:
80102860:	55                   	push   %ebp
80102861:	31 d2                	xor    %edx,%edx
80102863:	89 e5                	mov    %esp,%ebp
80102865:	53                   	push   %ebx
80102866:	8d 45 e4             	lea    -0x1c(%ebp),%eax
80102869:	8d 4d ea             	lea    -0x16(%ebp),%ecx
8010286c:	83 ec 30             	sub    $0x30,%esp
8010286f:	50                   	push   %eax
80102870:	8b 45 08             	mov    0x8(%ebp),%eax
80102873:	e8 58 fc ff ff       	call   801024d0 <namex>
80102878:	83 c4 10             	add    $0x10,%esp
8010287b:	85 c0                	test   %eax,%eax
8010287d:	89 c3                	mov    %eax,%ebx
8010287f:	74 0e                	je     8010288f <namei+0x2f>
80102881:	83 ec 0c             	sub    $0xc,%esp
80102884:	ff 75 e4             	pushl  -0x1c(%ebp)
80102887:	e8 54 15 00 00       	call   80103de0 <mntput>
8010288c:	83 c4 10             	add    $0x10,%esp
8010288f:	89 d8                	mov    %ebx,%eax
80102891:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80102894:	c9                   	leave  
80102895:	c3                   	ret    
80102896:	8d 76 00             	lea    0x0(%esi),%esi
80102899:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801028a0 <nameiparent>:
801028a0:	55                   	push   %ebp
801028a1:	ba 01 00 00 00       	mov    $0x1,%edx
801028a6:	89 e5                	mov    %esp,%ebp
801028a8:	53                   	push   %ebx
801028a9:	8d 45 f4             	lea    -0xc(%ebp),%eax
801028ac:	83 ec 20             	sub    $0x20,%esp
801028af:	8b 4d 0c             	mov    0xc(%ebp),%ecx
801028b2:	50                   	push   %eax
801028b3:	8b 45 08             	mov    0x8(%ebp),%eax
801028b6:	e8 15 fc ff ff       	call   801024d0 <namex>
801028bb:	83 c4 10             	add    $0x10,%esp
801028be:	85 c0                	test   %eax,%eax
801028c0:	89 c3                	mov    %eax,%ebx
801028c2:	74 0e                	je     801028d2 <nameiparent+0x32>
801028c4:	83 ec 0c             	sub    $0xc,%esp
801028c7:	ff 75 f4             	pushl  -0xc(%ebp)
801028ca:	e8 11 15 00 00       	call   80103de0 <mntput>
801028cf:	83 c4 10             	add    $0x10,%esp
801028d2:	89 d8                	mov    %ebx,%eax
801028d4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801028d7:	c9                   	leave  
801028d8:	c3                   	ret    
801028d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

801028e0 <nameiparentmount>:
801028e0:	55                   	push   %ebp
801028e1:	89 e5                	mov    %esp,%ebp
801028e3:	8b 55 10             	mov    0x10(%ebp),%edx
801028e6:	8b 45 08             	mov    0x8(%ebp),%eax
801028e9:	8b 4d 0c             	mov    0xc(%ebp),%ecx
801028ec:	89 55 08             	mov    %edx,0x8(%ebp)
801028ef:	ba 01 00 00 00       	mov    $0x1,%edx
801028f4:	5d                   	pop    %ebp
801028f5:	e9 d6 fb ff ff       	jmp    801024d0 <namex>
801028fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80102900 <nameimount>:
80102900:	55                   	push   %ebp
80102901:	31 d2                	xor    %edx,%edx
80102903:	89 e5                	mov    %esp,%ebp
80102905:	83 ec 24             	sub    $0x24,%esp
80102908:	8b 45 08             	mov    0x8(%ebp),%eax
8010290b:	ff 75 0c             	pushl  0xc(%ebp)
8010290e:	8d 4d ea             	lea    -0x16(%ebp),%ecx
80102911:	e8 ba fb ff ff       	call   801024d0 <namex>
80102916:	c9                   	leave  
80102917:	c3                   	ret    
80102918:	66 90                	xchg   %ax,%ax
8010291a:	66 90                	xchg   %ax,%ax
8010291c:	66 90                	xchg   %ax,%ax
8010291e:	66 90                	xchg   %ax,%ax

80102920 <idestart>:
80102920:	55                   	push   %ebp
80102921:	85 c0                	test   %eax,%eax
80102923:	89 e5                	mov    %esp,%ebp
80102925:	56                   	push   %esi
80102926:	53                   	push   %ebx
80102927:	0f 84 ad 00 00 00    	je     801029da <idestart+0xba>
8010292d:	8b 48 08             	mov    0x8(%eax),%ecx
80102930:	89 c3                	mov    %eax,%ebx
80102932:	81 f9 cf 07 00 00    	cmp    $0x7cf,%ecx
80102938:	0f 87 8f 00 00 00    	ja     801029cd <idestart+0xad>
8010293e:	01 c9                	add    %ecx,%ecx
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
80102940:	ba f7 01 00 00       	mov    $0x1f7,%edx
80102945:	8d 76 00             	lea    0x0(%esi),%esi
80102948:	ec                   	in     (%dx),%al
80102949:	83 e0 c0             	and    $0xffffffc0,%eax
8010294c:	3c 40                	cmp    $0x40,%al
8010294e:	75 f8                	jne    80102948 <idestart+0x28>
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80102950:	31 f6                	xor    %esi,%esi
80102952:	ba f6 03 00 00       	mov    $0x3f6,%edx
80102957:	89 f0                	mov    %esi,%eax
80102959:	ee                   	out    %al,(%dx)
8010295a:	ba f2 01 00 00       	mov    $0x1f2,%edx
8010295f:	b8 02 00 00 00       	mov    $0x2,%eax
80102964:	ee                   	out    %al,(%dx)
80102965:	ba f3 01 00 00       	mov    $0x1f3,%edx
8010296a:	89 c8                	mov    %ecx,%eax
8010296c:	ee                   	out    %al,(%dx)
8010296d:	89 c8                	mov    %ecx,%eax
8010296f:	ba f4 01 00 00       	mov    $0x1f4,%edx
80102974:	c1 f8 08             	sar    $0x8,%eax
80102977:	ee                   	out    %al,(%dx)
80102978:	ba f5 01 00 00       	mov    $0x1f5,%edx
8010297d:	89 f0                	mov    %esi,%eax
8010297f:	ee                   	out    %al,(%dx)
80102980:	0f b6 43 04          	movzbl 0x4(%ebx),%eax
80102984:	ba f6 01 00 00       	mov    $0x1f6,%edx
80102989:	83 e0 01             	and    $0x1,%eax
8010298c:	c1 e0 04             	shl    $0x4,%eax
8010298f:	83 c8 e0             	or     $0xffffffe0,%eax
80102992:	ee                   	out    %al,(%dx)
80102993:	f6 03 04             	testb  $0x4,(%ebx)
80102996:	ba f7 01 00 00       	mov    $0x1f7,%edx
8010299b:	75 13                	jne    801029b0 <idestart+0x90>
8010299d:	b8 c4 ff ff ff       	mov    $0xffffffc4,%eax
801029a2:	ee                   	out    %al,(%dx)
801029a3:	8d 65 f8             	lea    -0x8(%ebp),%esp
801029a6:	5b                   	pop    %ebx
801029a7:	5e                   	pop    %esi
801029a8:	5d                   	pop    %ebp
801029a9:	c3                   	ret    
801029aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801029b0:	b8 c5 ff ff ff       	mov    $0xffffffc5,%eax
801029b5:	ee                   	out    %al,(%dx)
}

static inline void
outsl(int port, const void *addr, int cnt)
{
  asm volatile("cld; rep outsl" :
801029b6:	b9 00 01 00 00       	mov    $0x100,%ecx
801029bb:	8d 73 60             	lea    0x60(%ebx),%esi
801029be:	ba f0 01 00 00       	mov    $0x1f0,%edx
801029c3:	fc                   	cld    
801029c4:	f3 6f                	rep outsl %ds:(%esi),(%dx)
801029c6:	8d 65 f8             	lea    -0x8(%ebp),%esp
801029c9:	5b                   	pop    %ebx
801029ca:	5e                   	pop    %esi
801029cb:	5d                   	pop    %ebp
801029cc:	c3                   	ret    
801029cd:	83 ec 0c             	sub    $0xc,%esp
801029d0:	68 dc ed 10 80       	push   $0x8010eddc
801029d5:	e8 f6 d9 ff ff       	call   801003d0 <panic>
801029da:	83 ec 0c             	sub    $0xc,%esp
801029dd:	68 d3 ed 10 80       	push   $0x8010edd3
801029e2:	e8 e9 d9 ff ff       	call   801003d0 <panic>
801029e7:	89 f6                	mov    %esi,%esi
801029e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801029f0 <ideinit>:
801029f0:	55                   	push   %ebp
801029f1:	89 e5                	mov    %esp,%ebp
801029f3:	83 ec 10             	sub    $0x10,%esp
801029f6:	68 ee ed 10 80       	push   $0x8010edee
801029fb:	68 80 d5 11 80       	push   $0x8011d580
80102a00:	e8 cb 3b 00 00       	call   801065d0 <initlock>
80102a05:	58                   	pop    %eax
80102a06:	a1 60 eb 12 80       	mov    0x8012eb60,%eax
80102a0b:	5a                   	pop    %edx
80102a0c:	83 e8 01             	sub    $0x1,%eax
80102a0f:	50                   	push   %eax
80102a10:	6a 0e                	push   $0xe
80102a12:	e8 a9 02 00 00       	call   80102cc0 <ioapicenable>
80102a17:	83 c4 10             	add    $0x10,%esp
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
80102a1a:	ba f7 01 00 00       	mov    $0x1f7,%edx
80102a1f:	90                   	nop
80102a20:	ec                   	in     (%dx),%al
80102a21:	83 e0 c0             	and    $0xffffffc0,%eax
80102a24:	3c 40                	cmp    $0x40,%al
80102a26:	75 f8                	jne    80102a20 <ideinit+0x30>
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80102a28:	ba f6 01 00 00       	mov    $0x1f6,%edx
80102a2d:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
80102a32:	ee                   	out    %al,(%dx)
80102a33:	b9 e8 03 00 00       	mov    $0x3e8,%ecx
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
80102a38:	ba f7 01 00 00       	mov    $0x1f7,%edx
80102a3d:	eb 06                	jmp    80102a45 <ideinit+0x55>
80102a3f:	90                   	nop
80102a40:	83 e9 01             	sub    $0x1,%ecx
80102a43:	74 0f                	je     80102a54 <ideinit+0x64>
80102a45:	ec                   	in     (%dx),%al
80102a46:	84 c0                	test   %al,%al
80102a48:	74 f6                	je     80102a40 <ideinit+0x50>
80102a4a:	c7 05 60 d5 11 80 01 	movl   $0x1,0x8011d560
80102a51:	00 00 00 
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80102a54:	ba f6 01 00 00       	mov    $0x1f6,%edx
80102a59:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
80102a5e:	ee                   	out    %al,(%dx)
80102a5f:	c9                   	leave  
80102a60:	c3                   	ret    
80102a61:	eb 0d                	jmp    80102a70 <ideintr>
80102a63:	90                   	nop
80102a64:	90                   	nop
80102a65:	90                   	nop
80102a66:	90                   	nop
80102a67:	90                   	nop
80102a68:	90                   	nop
80102a69:	90                   	nop
80102a6a:	90                   	nop
80102a6b:	90                   	nop
80102a6c:	90                   	nop
80102a6d:	90                   	nop
80102a6e:	90                   	nop
80102a6f:	90                   	nop

80102a70 <ideintr>:
80102a70:	55                   	push   %ebp
80102a71:	89 e5                	mov    %esp,%ebp
80102a73:	57                   	push   %edi
80102a74:	56                   	push   %esi
80102a75:	53                   	push   %ebx
80102a76:	83 ec 18             	sub    $0x18,%esp
80102a79:	68 80 d5 11 80       	push   $0x8011d580
80102a7e:	e8 4d 3c 00 00       	call   801066d0 <acquire>
80102a83:	8b 1d 64 d5 11 80    	mov    0x8011d564,%ebx
80102a89:	83 c4 10             	add    $0x10,%esp
80102a8c:	85 db                	test   %ebx,%ebx
80102a8e:	74 34                	je     80102ac4 <ideintr+0x54>
80102a90:	8b 43 58             	mov    0x58(%ebx),%eax
80102a93:	a3 64 d5 11 80       	mov    %eax,0x8011d564
80102a98:	8b 33                	mov    (%ebx),%esi
80102a9a:	f7 c6 04 00 00 00    	test   $0x4,%esi
80102aa0:	74 3e                	je     80102ae0 <ideintr+0x70>
80102aa2:	83 e6 fb             	and    $0xfffffffb,%esi
80102aa5:	83 ec 0c             	sub    $0xc,%esp
80102aa8:	83 ce 02             	or     $0x2,%esi
80102aab:	89 33                	mov    %esi,(%ebx)
80102aad:	53                   	push   %ebx
80102aae:	e8 ed 36 00 00       	call   801061a0 <wakeup>
80102ab3:	a1 64 d5 11 80       	mov    0x8011d564,%eax
80102ab8:	83 c4 10             	add    $0x10,%esp
80102abb:	85 c0                	test   %eax,%eax
80102abd:	74 05                	je     80102ac4 <ideintr+0x54>
80102abf:	e8 5c fe ff ff       	call   80102920 <idestart>
80102ac4:	83 ec 0c             	sub    $0xc,%esp
80102ac7:	68 80 d5 11 80       	push   $0x8011d580
80102acc:	e8 1f 3d 00 00       	call   801067f0 <release>
80102ad1:	8d 65 f4             	lea    -0xc(%ebp),%esp
80102ad4:	5b                   	pop    %ebx
80102ad5:	5e                   	pop    %esi
80102ad6:	5f                   	pop    %edi
80102ad7:	5d                   	pop    %ebp
80102ad8:	c3                   	ret    
80102ad9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
80102ae0:	ba f7 01 00 00       	mov    $0x1f7,%edx
80102ae5:	8d 76 00             	lea    0x0(%esi),%esi
80102ae8:	ec                   	in     (%dx),%al
80102ae9:	89 c1                	mov    %eax,%ecx
80102aeb:	83 e1 c0             	and    $0xffffffc0,%ecx
80102aee:	80 f9 40             	cmp    $0x40,%cl
80102af1:	75 f5                	jne    80102ae8 <ideintr+0x78>
80102af3:	a8 21                	test   $0x21,%al
80102af5:	75 ab                	jne    80102aa2 <ideintr+0x32>
80102af7:	8d 7b 60             	lea    0x60(%ebx),%edi
}

static inline void
insl(int port, void *addr, int cnt)
{
  asm volatile("cld; rep insl" :
80102afa:	b9 00 01 00 00       	mov    $0x100,%ecx
80102aff:	ba f0 01 00 00       	mov    $0x1f0,%edx
80102b04:	fc                   	cld    
80102b05:	f3 6d                	rep insl (%dx),%es:(%edi)
80102b07:	8b 33                	mov    (%ebx),%esi
80102b09:	eb 97                	jmp    80102aa2 <ideintr+0x32>
80102b0b:	90                   	nop
80102b0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80102b10 <iderw>:
80102b10:	55                   	push   %ebp
80102b11:	89 e5                	mov    %esp,%ebp
80102b13:	53                   	push   %ebx
80102b14:	83 ec 10             	sub    $0x10,%esp
80102b17:	8b 5d 08             	mov    0x8(%ebp),%ebx
80102b1a:	8d 43 0c             	lea    0xc(%ebx),%eax
80102b1d:	50                   	push   %eax
80102b1e:	e8 7d 3a 00 00       	call   801065a0 <holdingsleep>
80102b23:	83 c4 10             	add    $0x10,%esp
80102b26:	85 c0                	test   %eax,%eax
80102b28:	0f 84 ad 00 00 00    	je     80102bdb <iderw+0xcb>
80102b2e:	8b 03                	mov    (%ebx),%eax
80102b30:	83 e0 06             	and    $0x6,%eax
80102b33:	83 f8 02             	cmp    $0x2,%eax
80102b36:	0f 84 b9 00 00 00    	je     80102bf5 <iderw+0xe5>
80102b3c:	8b 53 04             	mov    0x4(%ebx),%edx
80102b3f:	85 d2                	test   %edx,%edx
80102b41:	74 0d                	je     80102b50 <iderw+0x40>
80102b43:	a1 60 d5 11 80       	mov    0x8011d560,%eax
80102b48:	85 c0                	test   %eax,%eax
80102b4a:	0f 84 98 00 00 00    	je     80102be8 <iderw+0xd8>
80102b50:	83 ec 0c             	sub    $0xc,%esp
80102b53:	68 80 d5 11 80       	push   $0x8011d580
80102b58:	e8 73 3b 00 00       	call   801066d0 <acquire>
80102b5d:	8b 15 64 d5 11 80    	mov    0x8011d564,%edx
80102b63:	83 c4 10             	add    $0x10,%esp
80102b66:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)
80102b6d:	85 d2                	test   %edx,%edx
80102b6f:	75 09                	jne    80102b7a <iderw+0x6a>
80102b71:	eb 58                	jmp    80102bcb <iderw+0xbb>
80102b73:	90                   	nop
80102b74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80102b78:	89 c2                	mov    %eax,%edx
80102b7a:	8b 42 58             	mov    0x58(%edx),%eax
80102b7d:	85 c0                	test   %eax,%eax
80102b7f:	75 f7                	jne    80102b78 <iderw+0x68>
80102b81:	83 c2 58             	add    $0x58,%edx
80102b84:	89 1a                	mov    %ebx,(%edx)
80102b86:	3b 1d 64 d5 11 80    	cmp    0x8011d564,%ebx
80102b8c:	74 44                	je     80102bd2 <iderw+0xc2>
80102b8e:	8b 03                	mov    (%ebx),%eax
80102b90:	83 e0 06             	and    $0x6,%eax
80102b93:	83 f8 02             	cmp    $0x2,%eax
80102b96:	74 23                	je     80102bbb <iderw+0xab>
80102b98:	90                   	nop
80102b99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80102ba0:	83 ec 08             	sub    $0x8,%esp
80102ba3:	68 80 d5 11 80       	push   $0x8011d580
80102ba8:	53                   	push   %ebx
80102ba9:	e8 c2 33 00 00       	call   80105f70 <sleep>
80102bae:	8b 03                	mov    (%ebx),%eax
80102bb0:	83 c4 10             	add    $0x10,%esp
80102bb3:	83 e0 06             	and    $0x6,%eax
80102bb6:	83 f8 02             	cmp    $0x2,%eax
80102bb9:	75 e5                	jne    80102ba0 <iderw+0x90>
80102bbb:	c7 45 08 80 d5 11 80 	movl   $0x8011d580,0x8(%ebp)
80102bc2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80102bc5:	c9                   	leave  
80102bc6:	e9 25 3c 00 00       	jmp    801067f0 <release>
80102bcb:	ba 64 d5 11 80       	mov    $0x8011d564,%edx
80102bd0:	eb b2                	jmp    80102b84 <iderw+0x74>
80102bd2:	89 d8                	mov    %ebx,%eax
80102bd4:	e8 47 fd ff ff       	call   80102920 <idestart>
80102bd9:	eb b3                	jmp    80102b8e <iderw+0x7e>
80102bdb:	83 ec 0c             	sub    $0xc,%esp
80102bde:	68 f2 ed 10 80       	push   $0x8010edf2
80102be3:	e8 e8 d7 ff ff       	call   801003d0 <panic>
80102be8:	83 ec 0c             	sub    $0xc,%esp
80102beb:	68 1d ee 10 80       	push   $0x8010ee1d
80102bf0:	e8 db d7 ff ff       	call   801003d0 <panic>
80102bf5:	83 ec 0c             	sub    $0xc,%esp
80102bf8:	68 08 ee 10 80       	push   $0x8010ee08
80102bfd:	e8 ce d7 ff ff       	call   801003d0 <panic>
80102c02:	66 90                	xchg   %ax,%ax
80102c04:	66 90                	xchg   %ax,%ax
80102c06:	66 90                	xchg   %ax,%ax
80102c08:	66 90                	xchg   %ax,%ax
80102c0a:	66 90                	xchg   %ax,%ax
80102c0c:	66 90                	xchg   %ax,%ax
80102c0e:	66 90                	xchg   %ax,%ax

80102c10 <ioapicinit>:
80102c10:	55                   	push   %ebp
80102c11:	c7 05 b4 c9 12 80 00 	movl   $0xfec00000,0x8012c9b4
80102c18:	00 c0 fe 
80102c1b:	89 e5                	mov    %esp,%ebp
80102c1d:	56                   	push   %esi
80102c1e:	53                   	push   %ebx
80102c1f:	c7 05 00 00 c0 fe 01 	movl   $0x1,0xfec00000
80102c26:	00 00 00 
80102c29:	8b 15 b4 c9 12 80    	mov    0x8012c9b4,%edx
80102c2f:	8b 72 10             	mov    0x10(%edx),%esi
80102c32:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
80102c38:	8b 0d b4 c9 12 80    	mov    0x8012c9b4,%ecx
80102c3e:	0f b6 15 c0 e5 12 80 	movzbl 0x8012e5c0,%edx
80102c45:	89 f0                	mov    %esi,%eax
80102c47:	c1 e8 10             	shr    $0x10,%eax
80102c4a:	0f b6 f0             	movzbl %al,%esi
80102c4d:	8b 41 10             	mov    0x10(%ecx),%eax
80102c50:	c1 e8 18             	shr    $0x18,%eax
80102c53:	39 d0                	cmp    %edx,%eax
80102c55:	74 16                	je     80102c6d <ioapicinit+0x5d>
80102c57:	83 ec 0c             	sub    $0xc,%esp
80102c5a:	68 3c ee 10 80       	push   $0x8010ee3c
80102c5f:	e8 fc d9 ff ff       	call   80100660 <cprintf>
80102c64:	8b 0d b4 c9 12 80    	mov    0x8012c9b4,%ecx
80102c6a:	83 c4 10             	add    $0x10,%esp
80102c6d:	83 c6 21             	add    $0x21,%esi
80102c70:	ba 10 00 00 00       	mov    $0x10,%edx
80102c75:	b8 20 00 00 00       	mov    $0x20,%eax
80102c7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80102c80:	89 11                	mov    %edx,(%ecx)
80102c82:	8b 0d b4 c9 12 80    	mov    0x8012c9b4,%ecx
80102c88:	89 c3                	mov    %eax,%ebx
80102c8a:	81 cb 00 00 01 00    	or     $0x10000,%ebx
80102c90:	83 c0 01             	add    $0x1,%eax
80102c93:	89 59 10             	mov    %ebx,0x10(%ecx)
80102c96:	8d 5a 01             	lea    0x1(%edx),%ebx
80102c99:	83 c2 02             	add    $0x2,%edx
80102c9c:	39 f0                	cmp    %esi,%eax
80102c9e:	89 19                	mov    %ebx,(%ecx)
80102ca0:	8b 0d b4 c9 12 80    	mov    0x8012c9b4,%ecx
80102ca6:	c7 41 10 00 00 00 00 	movl   $0x0,0x10(%ecx)
80102cad:	75 d1                	jne    80102c80 <ioapicinit+0x70>
80102caf:	8d 65 f8             	lea    -0x8(%ebp),%esp
80102cb2:	5b                   	pop    %ebx
80102cb3:	5e                   	pop    %esi
80102cb4:	5d                   	pop    %ebp
80102cb5:	c3                   	ret    
80102cb6:	8d 76 00             	lea    0x0(%esi),%esi
80102cb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80102cc0 <ioapicenable>:
80102cc0:	55                   	push   %ebp
80102cc1:	8b 0d b4 c9 12 80    	mov    0x8012c9b4,%ecx
80102cc7:	89 e5                	mov    %esp,%ebp
80102cc9:	8b 45 08             	mov    0x8(%ebp),%eax
80102ccc:	8d 50 20             	lea    0x20(%eax),%edx
80102ccf:	8d 44 00 10          	lea    0x10(%eax,%eax,1),%eax
80102cd3:	89 01                	mov    %eax,(%ecx)
80102cd5:	8b 0d b4 c9 12 80    	mov    0x8012c9b4,%ecx
80102cdb:	83 c0 01             	add    $0x1,%eax
80102cde:	89 51 10             	mov    %edx,0x10(%ecx)
80102ce1:	8b 55 0c             	mov    0xc(%ebp),%edx
80102ce4:	89 01                	mov    %eax,(%ecx)
80102ce6:	a1 b4 c9 12 80       	mov    0x8012c9b4,%eax
80102ceb:	c1 e2 18             	shl    $0x18,%edx
80102cee:	89 50 10             	mov    %edx,0x10(%eax)
80102cf1:	5d                   	pop    %ebp
80102cf2:	c3                   	ret    
80102cf3:	66 90                	xchg   %ax,%ax
80102cf5:	66 90                	xchg   %ax,%ax
80102cf7:	66 90                	xchg   %ax,%ax
80102cf9:	66 90                	xchg   %ax,%ax
80102cfb:	66 90                	xchg   %ax,%ax
80102cfd:	66 90                	xchg   %ax,%ax
80102cff:	90                   	nop

80102d00 <kfree>:
80102d00:	55                   	push   %ebp
80102d01:	89 e5                	mov    %esp,%ebp
80102d03:	53                   	push   %ebx
80102d04:	83 ec 04             	sub    $0x4,%esp
80102d07:	8b 5d 08             	mov    0x8(%ebp),%ebx
80102d0a:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx
80102d10:	0f 85 7c 00 00 00    	jne    80102d92 <kfree+0x92>
80102d16:	81 fb 94 87 14 80    	cmp    $0x80148794,%ebx
80102d1c:	72 74                	jb     80102d92 <kfree+0x92>
80102d1e:	8d 83 00 00 00 80    	lea    -0x80000000(%ebx),%eax
80102d24:	3d ff ff ff 0d       	cmp    $0xdffffff,%eax
80102d29:	77 67                	ja     80102d92 <kfree+0x92>
80102d2b:	83 ec 04             	sub    $0x4,%esp
80102d2e:	68 00 10 00 00       	push   $0x1000
80102d33:	6a 01                	push   $0x1
80102d35:	53                   	push   %ebx
80102d36:	e8 05 3b 00 00       	call   80106840 <memset>
80102d3b:	8b 15 f4 c9 12 80    	mov    0x8012c9f4,%edx
80102d41:	83 c4 10             	add    $0x10,%esp
80102d44:	85 d2                	test   %edx,%edx
80102d46:	75 38                	jne    80102d80 <kfree+0x80>
80102d48:	a1 00 ca 12 80       	mov    0x8012ca00,%eax
80102d4d:	89 03                	mov    %eax,(%ebx)
80102d4f:	a1 f4 c9 12 80       	mov    0x8012c9f4,%eax
80102d54:	83 05 f8 c9 12 80 01 	addl   $0x1,0x8012c9f8
80102d5b:	89 1d 00 ca 12 80    	mov    %ebx,0x8012ca00
80102d61:	85 c0                	test   %eax,%eax
80102d63:	75 0b                	jne    80102d70 <kfree+0x70>
80102d65:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80102d68:	c9                   	leave  
80102d69:	c3                   	ret    
80102d6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80102d70:	c7 45 08 c0 c9 12 80 	movl   $0x8012c9c0,0x8(%ebp)
80102d77:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80102d7a:	c9                   	leave  
80102d7b:	e9 70 3a 00 00       	jmp    801067f0 <release>
80102d80:	83 ec 0c             	sub    $0xc,%esp
80102d83:	68 c0 c9 12 80       	push   $0x8012c9c0
80102d88:	e8 43 39 00 00       	call   801066d0 <acquire>
80102d8d:	83 c4 10             	add    $0x10,%esp
80102d90:	eb b6                	jmp    80102d48 <kfree+0x48>
80102d92:	83 ec 0c             	sub    $0xc,%esp
80102d95:	68 6e ee 10 80       	push   $0x8010ee6e
80102d9a:	e8 31 d6 ff ff       	call   801003d0 <panic>
80102d9f:	90                   	nop

80102da0 <freerange>:
80102da0:	55                   	push   %ebp
80102da1:	89 e5                	mov    %esp,%ebp
80102da3:	56                   	push   %esi
80102da4:	53                   	push   %ebx
80102da5:	8b 45 08             	mov    0x8(%ebp),%eax
80102da8:	8b 75 0c             	mov    0xc(%ebp),%esi
80102dab:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx
80102db1:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx
80102db7:	81 c3 00 10 00 00    	add    $0x1000,%ebx
80102dbd:	39 de                	cmp    %ebx,%esi
80102dbf:	72 23                	jb     80102de4 <freerange+0x44>
80102dc1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80102dc8:	8d 83 00 f0 ff ff    	lea    -0x1000(%ebx),%eax
80102dce:	83 ec 0c             	sub    $0xc,%esp
80102dd1:	81 c3 00 10 00 00    	add    $0x1000,%ebx
80102dd7:	50                   	push   %eax
80102dd8:	e8 23 ff ff ff       	call   80102d00 <kfree>
80102ddd:	83 c4 10             	add    $0x10,%esp
80102de0:	39 f3                	cmp    %esi,%ebx
80102de2:	76 e4                	jbe    80102dc8 <freerange+0x28>
80102de4:	8d 65 f8             	lea    -0x8(%ebp),%esp
80102de7:	5b                   	pop    %ebx
80102de8:	5e                   	pop    %esi
80102de9:	5d                   	pop    %ebp
80102dea:	c3                   	ret    
80102deb:	90                   	nop
80102dec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80102df0 <kinit1>:
80102df0:	55                   	push   %ebp
80102df1:	89 e5                	mov    %esp,%ebp
80102df3:	56                   	push   %esi
80102df4:	53                   	push   %ebx
80102df5:	8b 75 0c             	mov    0xc(%ebp),%esi
80102df8:	83 ec 08             	sub    $0x8,%esp
80102dfb:	68 74 ee 10 80       	push   $0x8010ee74
80102e00:	68 c0 c9 12 80       	push   $0x8012c9c0
80102e05:	e8 c6 37 00 00       	call   801065d0 <initlock>
80102e0a:	8b 45 08             	mov    0x8(%ebp),%eax
80102e0d:	83 c4 10             	add    $0x10,%esp
80102e10:	c7 05 f4 c9 12 80 00 	movl   $0x0,0x8012c9f4
80102e17:	00 00 00 
80102e1a:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx
80102e20:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx
80102e26:	81 c3 00 10 00 00    	add    $0x1000,%ebx
80102e2c:	39 de                	cmp    %ebx,%esi
80102e2e:	72 1c                	jb     80102e4c <kinit1+0x5c>
80102e30:	8d 83 00 f0 ff ff    	lea    -0x1000(%ebx),%eax
80102e36:	83 ec 0c             	sub    $0xc,%esp
80102e39:	81 c3 00 10 00 00    	add    $0x1000,%ebx
80102e3f:	50                   	push   %eax
80102e40:	e8 bb fe ff ff       	call   80102d00 <kfree>
80102e45:	83 c4 10             	add    $0x10,%esp
80102e48:	39 de                	cmp    %ebx,%esi
80102e4a:	73 e4                	jae    80102e30 <kinit1+0x40>
80102e4c:	8d 65 f8             	lea    -0x8(%ebp),%esp
80102e4f:	5b                   	pop    %ebx
80102e50:	5e                   	pop    %esi
80102e51:	5d                   	pop    %ebp
80102e52:	c3                   	ret    
80102e53:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80102e59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80102e60 <kinit2>:
80102e60:	55                   	push   %ebp
80102e61:	89 e5                	mov    %esp,%ebp
80102e63:	56                   	push   %esi
80102e64:	53                   	push   %ebx
80102e65:	8b 45 08             	mov    0x8(%ebp),%eax
80102e68:	8b 75 0c             	mov    0xc(%ebp),%esi
80102e6b:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx
80102e71:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx
80102e77:	81 c3 00 10 00 00    	add    $0x1000,%ebx
80102e7d:	39 de                	cmp    %ebx,%esi
80102e7f:	72 23                	jb     80102ea4 <kinit2+0x44>
80102e81:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80102e88:	8d 83 00 f0 ff ff    	lea    -0x1000(%ebx),%eax
80102e8e:	83 ec 0c             	sub    $0xc,%esp
80102e91:	81 c3 00 10 00 00    	add    $0x1000,%ebx
80102e97:	50                   	push   %eax
80102e98:	e8 63 fe ff ff       	call   80102d00 <kfree>
80102e9d:	83 c4 10             	add    $0x10,%esp
80102ea0:	39 de                	cmp    %ebx,%esi
80102ea2:	73 e4                	jae    80102e88 <kinit2+0x28>
80102ea4:	c7 05 fc c9 12 80 00 	movl   $0x0,0x8012c9fc
80102eab:	00 00 00 
80102eae:	c7 05 f4 c9 12 80 01 	movl   $0x1,0x8012c9f4
80102eb5:	00 00 00 
80102eb8:	8d 65 f8             	lea    -0x8(%ebp),%esp
80102ebb:	5b                   	pop    %ebx
80102ebc:	5e                   	pop    %esi
80102ebd:	5d                   	pop    %ebp
80102ebe:	c3                   	ret    
80102ebf:	90                   	nop

80102ec0 <decrese_protect_counter>:
80102ec0:	55                   	push   %ebp
80102ec1:	89 e5                	mov    %esp,%ebp
80102ec3:	83 ec 08             	sub    $0x8,%esp
80102ec6:	8b 15 f4 c9 12 80    	mov    0x8012c9f4,%edx
80102ecc:	85 d2                	test   %edx,%edx
80102ece:	75 10                	jne    80102ee0 <decrese_protect_counter+0x20>
80102ed0:	8b 45 08             	mov    0x8(%ebp),%eax
80102ed3:	29 05 fc c9 12 80    	sub    %eax,0x8012c9fc
80102ed9:	31 c0                	xor    %eax,%eax
80102edb:	c9                   	leave  
80102edc:	c3                   	ret    
80102edd:	8d 76 00             	lea    0x0(%esi),%esi
80102ee0:	83 ec 0c             	sub    $0xc,%esp
80102ee3:	68 c0 c9 12 80       	push   $0x8012c9c0
80102ee8:	e8 e3 37 00 00       	call   801066d0 <acquire>
80102eed:	8b 45 08             	mov    0x8(%ebp),%eax
80102ef0:	29 05 fc c9 12 80    	sub    %eax,0x8012c9fc
80102ef6:	83 c4 10             	add    $0x10,%esp
80102ef9:	a1 f4 c9 12 80       	mov    0x8012c9f4,%eax
80102efe:	85 c0                	test   %eax,%eax
80102f00:	74 d7                	je     80102ed9 <decrese_protect_counter+0x19>
80102f02:	83 ec 0c             	sub    $0xc,%esp
80102f05:	68 c0 c9 12 80       	push   $0x8012c9c0
80102f0a:	e8 e1 38 00 00       	call   801067f0 <release>
80102f0f:	83 c4 10             	add    $0x10,%esp
80102f12:	31 c0                	xor    %eax,%eax
80102f14:	c9                   	leave  
80102f15:	c3                   	ret    
80102f16:	8d 76 00             	lea    0x0(%esi),%esi
80102f19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80102f20 <increse_protect_counter>:
80102f20:	55                   	push   %ebp
80102f21:	89 e5                	mov    %esp,%ebp
80102f23:	53                   	push   %ebx
80102f24:	83 ec 04             	sub    $0x4,%esp
80102f27:	8b 5d 08             	mov    0x8(%ebp),%ebx
80102f2a:	85 db                	test   %ebx,%ebx
80102f2c:	0f 88 7e 00 00 00    	js     80102fb0 <increse_protect_counter+0x90>
80102f32:	a1 f4 c9 12 80       	mov    0x8012c9f4,%eax
80102f37:	85 c0                	test   %eax,%eax
80102f39:	75 45                	jne    80102f80 <increse_protect_counter+0x60>
80102f3b:	03 1d fc c9 12 80    	add    0x8012c9fc,%ebx
80102f41:	3b 1d f8 c9 12 80    	cmp    0x8012c9f8,%ebx
80102f47:	7f 27                	jg     80102f70 <increse_protect_counter+0x50>
80102f49:	89 1d fc c9 12 80    	mov    %ebx,0x8012c9fc
80102f4f:	31 db                	xor    %ebx,%ebx
80102f51:	85 c0                	test   %eax,%eax
80102f53:	74 10                	je     80102f65 <increse_protect_counter+0x45>
80102f55:	83 ec 0c             	sub    $0xc,%esp
80102f58:	68 c0 c9 12 80       	push   $0x8012c9c0
80102f5d:	e8 8e 38 00 00       	call   801067f0 <release>
80102f62:	83 c4 10             	add    $0x10,%esp
80102f65:	89 d8                	mov    %ebx,%eax
80102f67:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80102f6a:	c9                   	leave  
80102f6b:	c3                   	ret    
80102f6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80102f70:	bb 01 00 00 00       	mov    $0x1,%ebx
80102f75:	89 d8                	mov    %ebx,%eax
80102f77:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80102f7a:	c9                   	leave  
80102f7b:	c3                   	ret    
80102f7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80102f80:	83 ec 0c             	sub    $0xc,%esp
80102f83:	68 c0 c9 12 80       	push   $0x8012c9c0
80102f88:	e8 43 37 00 00       	call   801066d0 <acquire>
80102f8d:	03 1d fc c9 12 80    	add    0x8012c9fc,%ebx
80102f93:	83 c4 10             	add    $0x10,%esp
80102f96:	a1 f4 c9 12 80       	mov    0x8012c9f4,%eax
80102f9b:	3b 1d f8 c9 12 80    	cmp    0x8012c9f8,%ebx
80102fa1:	7e a6                	jle    80102f49 <increse_protect_counter+0x29>
80102fa3:	bb 01 00 00 00       	mov    $0x1,%ebx
80102fa8:	eb a7                	jmp    80102f51 <increse_protect_counter+0x31>
80102faa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80102fb0:	f7 db                	neg    %ebx
80102fb2:	89 5d 08             	mov    %ebx,0x8(%ebp)
80102fb5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80102fb8:	c9                   	leave  
80102fb9:	e9 02 ff ff ff       	jmp    80102ec0 <decrese_protect_counter>
80102fbe:	66 90                	xchg   %ax,%ax

80102fc0 <get_total_memory>:
80102fc0:	55                   	push   %ebp
80102fc1:	a1 f8 c9 12 80       	mov    0x8012c9f8,%eax
80102fc6:	89 e5                	mov    %esp,%ebp
80102fc8:	5d                   	pop    %ebp
80102fc9:	c3                   	ret    
80102fca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80102fd0 <kalloc>:
80102fd0:	55                   	push   %ebp
80102fd1:	89 e5                	mov    %esp,%ebp
80102fd3:	53                   	push   %ebx
80102fd4:	83 ec 14             	sub    $0x14,%esp
80102fd7:	8b 15 f8 c9 12 80    	mov    0x8012c9f8,%edx
80102fdd:	3b 15 fc c9 12 80    	cmp    0x8012c9fc,%edx
80102fe3:	7e 7b                	jle    80103060 <kalloc+0x90>
80102fe5:	8b 0d f4 c9 12 80    	mov    0x8012c9f4,%ecx
80102feb:	85 c9                	test   %ecx,%ecx
80102fed:	75 49                	jne    80103038 <kalloc+0x68>
80102fef:	a1 00 ca 12 80       	mov    0x8012ca00,%eax
80102ff4:	85 c0                	test   %eax,%eax
80102ff6:	74 15                	je     8010300d <kalloc+0x3d>
80102ff8:	8b 18                	mov    (%eax),%ebx
80102ffa:	83 ea 01             	sub    $0x1,%edx
80102ffd:	89 15 f8 c9 12 80    	mov    %edx,0x8012c9f8
80103003:	89 1d 00 ca 12 80    	mov    %ebx,0x8012ca00
80103009:	85 c9                	test   %ecx,%ecx
8010300b:	75 0b                	jne    80103018 <kalloc+0x48>
8010300d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80103010:	c9                   	leave  
80103011:	c3                   	ret    
80103012:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80103018:	83 ec 0c             	sub    $0xc,%esp
8010301b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8010301e:	68 c0 c9 12 80       	push   $0x8012c9c0
80103023:	e8 c8 37 00 00       	call   801067f0 <release>
80103028:	8b 45 f4             	mov    -0xc(%ebp),%eax
8010302b:	83 c4 10             	add    $0x10,%esp
8010302e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80103031:	c9                   	leave  
80103032:	c3                   	ret    
80103033:	90                   	nop
80103034:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80103038:	83 ec 0c             	sub    $0xc,%esp
8010303b:	68 c0 c9 12 80       	push   $0x8012c9c0
80103040:	e8 8b 36 00 00       	call   801066d0 <acquire>
80103045:	a1 00 ca 12 80       	mov    0x8012ca00,%eax
8010304a:	83 c4 10             	add    $0x10,%esp
8010304d:	8b 15 f8 c9 12 80    	mov    0x8012c9f8,%edx
80103053:	8b 0d f4 c9 12 80    	mov    0x8012c9f4,%ecx
80103059:	85 c0                	test   %eax,%eax
8010305b:	75 9b                	jne    80102ff8 <kalloc+0x28>
8010305d:	eb aa                	jmp    80103009 <kalloc+0x39>
8010305f:	90                   	nop
80103060:	31 c0                	xor    %eax,%eax
80103062:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80103065:	c9                   	leave  
80103066:	c3                   	ret    
80103067:	89 f6                	mov    %esi,%esi
80103069:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80103070 <kmemtest>:
80103070:	55                   	push   %ebp
80103071:	89 e5                	mov    %esp,%ebp
80103073:	57                   	push   %edi
80103074:	56                   	push   %esi
80103075:	53                   	push   %ebx
80103076:	83 ec 1c             	sub    $0x1c,%esp
80103079:	a1 f4 c9 12 80       	mov    0x8012c9f4,%eax
8010307e:	85 c0                	test   %eax,%eax
80103080:	89 45 e0             	mov    %eax,-0x20(%ebp)
80103083:	0f 85 97 00 00 00    	jne    80103120 <kmemtest+0xb0>
80103089:	8b 35 00 ca 12 80    	mov    0x8012ca00,%esi
8010308f:	a1 f8 c9 12 80       	mov    0x8012c9f8,%eax
80103094:	85 f6                	test   %esi,%esi
80103096:	89 45 dc             	mov    %eax,-0x24(%ebp)
80103099:	0f 84 c9 00 00 00    	je     80103168 <kmemtest+0xf8>
8010309f:	31 ff                	xor    %edi,%edi
801030a1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
801030a8:	bb 01 00 00 00       	mov    $0x1,%ebx
801030ad:	8d 76 00             	lea    0x0(%esi),%esi
801030b0:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
801030b4:	8d 46 04             	lea    0x4(%esi),%eax
801030b7:	8d 8e 00 10 00 00    	lea    0x1000(%esi),%ecx
801030bd:	31 d2                	xor    %edx,%edx
801030bf:	90                   	nop
801030c0:	80 38 01             	cmpb   $0x1,(%eax)
801030c3:	0f 45 d3             	cmovne %ebx,%edx
801030c6:	83 c0 01             	add    $0x1,%eax
801030c9:	39 c1                	cmp    %eax,%ecx
801030cb:	75 f3                	jne    801030c0 <kmemtest+0x50>
801030cd:	8b 36                	mov    (%esi),%esi
801030cf:	01 d7                	add    %edx,%edi
801030d1:	85 f6                	test   %esi,%esi
801030d3:	75 db                	jne    801030b0 <kmemtest+0x40>
801030d5:	85 ff                	test   %edi,%edi
801030d7:	0f 94 c3             	sete   %bl
801030da:	8b 45 e0             	mov    -0x20(%ebp),%eax
801030dd:	85 c0                	test   %eax,%eax
801030df:	74 10                	je     801030f1 <kmemtest+0x81>
801030e1:	83 ec 0c             	sub    $0xc,%esp
801030e4:	68 c0 c9 12 80       	push   $0x8012c9c0
801030e9:	e8 02 37 00 00       	call   801067f0 <release>
801030ee:	83 c4 10             	add    $0x10,%esp
801030f1:	57                   	push   %edi
801030f2:	8b 75 e4             	mov    -0x1c(%ebp),%esi
801030f5:	8b 7d dc             	mov    -0x24(%ebp),%edi
801030f8:	56                   	push   %esi
801030f9:	57                   	push   %edi
801030fa:	68 7c ee 10 80       	push   $0x8010ee7c
801030ff:	e8 5c d5 ff ff       	call   80100660 <cprintf>
80103104:	89 f8                	mov    %edi,%eax
80103106:	83 c4 10             	add    $0x10,%esp
80103109:	39 f0                	cmp    %esi,%eax
8010310b:	0f 94 c0             	sete   %al
8010310e:	8d 65 f4             	lea    -0xc(%ebp),%esp
80103111:	21 d8                	and    %ebx,%eax
80103113:	83 f0 01             	xor    $0x1,%eax
80103116:	0f b6 c0             	movzbl %al,%eax
80103119:	5b                   	pop    %ebx
8010311a:	f7 d8                	neg    %eax
8010311c:	5e                   	pop    %esi
8010311d:	5f                   	pop    %edi
8010311e:	5d                   	pop    %ebp
8010311f:	c3                   	ret    
80103120:	83 ec 0c             	sub    $0xc,%esp
80103123:	68 c0 c9 12 80       	push   $0x8012c9c0
80103128:	e8 a3 35 00 00       	call   801066d0 <acquire>
8010312d:	a1 f8 c9 12 80       	mov    0x8012c9f8,%eax
80103132:	8b 35 00 ca 12 80    	mov    0x8012ca00,%esi
80103138:	83 c4 10             	add    $0x10,%esp
8010313b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8010313e:	a1 f4 c9 12 80       	mov    0x8012c9f4,%eax
80103143:	85 f6                	test   %esi,%esi
80103145:	89 45 e0             	mov    %eax,-0x20(%ebp)
80103148:	0f 85 51 ff ff ff    	jne    8010309f <kmemtest+0x2f>
8010314e:	bb 01 00 00 00       	mov    $0x1,%ebx
80103153:	31 ff                	xor    %edi,%edi
80103155:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8010315c:	e9 79 ff ff ff       	jmp    801030da <kmemtest+0x6a>
80103161:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80103168:	bb 01 00 00 00       	mov    $0x1,%ebx
8010316d:	31 ff                	xor    %edi,%edi
8010316f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
80103176:	e9 76 ff ff ff       	jmp    801030f1 <kmemtest+0x81>
8010317b:	66 90                	xchg   %ax,%ax
8010317d:	66 90                	xchg   %ax,%ax
8010317f:	90                   	nop

80103180 <kbdgetc>:
80103180:	55                   	push   %ebp
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
80103181:	ba 64 00 00 00       	mov    $0x64,%edx
80103186:	89 e5                	mov    %esp,%ebp
80103188:	ec                   	in     (%dx),%al
80103189:	a8 01                	test   $0x1,%al
8010318b:	0f 84 af 00 00 00    	je     80103240 <kbdgetc+0xc0>
80103191:	ba 60 00 00 00       	mov    $0x60,%edx
80103196:	ec                   	in     (%dx),%al
80103197:	0f b6 d0             	movzbl %al,%edx
8010319a:	81 fa e0 00 00 00    	cmp    $0xe0,%edx
801031a0:	74 7e                	je     80103220 <kbdgetc+0xa0>
801031a2:	84 c0                	test   %al,%al
801031a4:	8b 0d b4 d5 11 80    	mov    0x8011d5b4,%ecx
801031aa:	79 24                	jns    801031d0 <kbdgetc+0x50>
801031ac:	f6 c1 40             	test   $0x40,%cl
801031af:	75 05                	jne    801031b6 <kbdgetc+0x36>
801031b1:	89 c2                	mov    %eax,%edx
801031b3:	83 e2 7f             	and    $0x7f,%edx
801031b6:	0f b6 82 e0 ef 10 80 	movzbl -0x7fef1020(%edx),%eax
801031bd:	83 c8 40             	or     $0x40,%eax
801031c0:	0f b6 c0             	movzbl %al,%eax
801031c3:	f7 d0                	not    %eax
801031c5:	21 c8                	and    %ecx,%eax
801031c7:	a3 b4 d5 11 80       	mov    %eax,0x8011d5b4
801031cc:	31 c0                	xor    %eax,%eax
801031ce:	5d                   	pop    %ebp
801031cf:	c3                   	ret    
801031d0:	f6 c1 40             	test   $0x40,%cl
801031d3:	74 09                	je     801031de <kbdgetc+0x5e>
801031d5:	83 c8 80             	or     $0xffffff80,%eax
801031d8:	83 e1 bf             	and    $0xffffffbf,%ecx
801031db:	0f b6 d0             	movzbl %al,%edx
801031de:	0f b6 82 e0 ef 10 80 	movzbl -0x7fef1020(%edx),%eax
801031e5:	09 c1                	or     %eax,%ecx
801031e7:	0f b6 82 e0 ee 10 80 	movzbl -0x7fef1120(%edx),%eax
801031ee:	31 c1                	xor    %eax,%ecx
801031f0:	89 c8                	mov    %ecx,%eax
801031f2:	89 0d b4 d5 11 80    	mov    %ecx,0x8011d5b4
801031f8:	83 e0 03             	and    $0x3,%eax
801031fb:	83 e1 08             	and    $0x8,%ecx
801031fe:	8b 04 85 c0 ee 10 80 	mov    -0x7fef1140(,%eax,4),%eax
80103205:	0f b6 04 10          	movzbl (%eax,%edx,1),%eax
80103209:	74 c3                	je     801031ce <kbdgetc+0x4e>
8010320b:	8d 50 9f             	lea    -0x61(%eax),%edx
8010320e:	83 fa 19             	cmp    $0x19,%edx
80103211:	77 1d                	ja     80103230 <kbdgetc+0xb0>
80103213:	83 e8 20             	sub    $0x20,%eax
80103216:	5d                   	pop    %ebp
80103217:	c3                   	ret    
80103218:	90                   	nop
80103219:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80103220:	31 c0                	xor    %eax,%eax
80103222:	83 0d b4 d5 11 80 40 	orl    $0x40,0x8011d5b4
80103229:	5d                   	pop    %ebp
8010322a:	c3                   	ret    
8010322b:	90                   	nop
8010322c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80103230:	8d 48 bf             	lea    -0x41(%eax),%ecx
80103233:	8d 50 20             	lea    0x20(%eax),%edx
80103236:	5d                   	pop    %ebp
80103237:	83 f9 19             	cmp    $0x19,%ecx
8010323a:	0f 46 c2             	cmovbe %edx,%eax
8010323d:	c3                   	ret    
8010323e:	66 90                	xchg   %ax,%ax
80103240:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80103245:	5d                   	pop    %ebp
80103246:	c3                   	ret    
80103247:	89 f6                	mov    %esi,%esi
80103249:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80103250 <kbdintr>:
80103250:	55                   	push   %ebp
80103251:	89 e5                	mov    %esp,%ebp
80103253:	83 ec 14             	sub    $0x14,%esp
80103256:	68 80 31 10 80       	push   $0x80103180
8010325b:	e8 e0 d5 ff ff       	call   80100840 <consoleintr>
80103260:	83 c4 10             	add    $0x10,%esp
80103263:	c9                   	leave  
80103264:	c3                   	ret    
80103265:	66 90                	xchg   %ax,%ax
80103267:	66 90                	xchg   %ax,%ax
80103269:	66 90                	xchg   %ax,%ax
8010326b:	66 90                	xchg   %ax,%ax
8010326d:	66 90                	xchg   %ax,%ax
8010326f:	90                   	nop

80103270 <lapicinit>:
80103270:	a1 04 ca 12 80       	mov    0x8012ca04,%eax
80103275:	55                   	push   %ebp
80103276:	89 e5                	mov    %esp,%ebp
80103278:	85 c0                	test   %eax,%eax
8010327a:	0f 84 c8 00 00 00    	je     80103348 <lapicinit+0xd8>
80103280:	c7 80 f0 00 00 00 3f 	movl   $0x13f,0xf0(%eax)
80103287:	01 00 00 
8010328a:	8b 50 20             	mov    0x20(%eax),%edx
8010328d:	c7 80 e0 03 00 00 0b 	movl   $0xb,0x3e0(%eax)
80103294:	00 00 00 
80103297:	8b 50 20             	mov    0x20(%eax),%edx
8010329a:	c7 80 20 03 00 00 20 	movl   $0x20020,0x320(%eax)
801032a1:	00 02 00 
801032a4:	8b 50 20             	mov    0x20(%eax),%edx
801032a7:	c7 80 80 03 00 00 80 	movl   $0x989680,0x380(%eax)
801032ae:	96 98 00 
801032b1:	8b 50 20             	mov    0x20(%eax),%edx
801032b4:	c7 80 50 03 00 00 00 	movl   $0x10000,0x350(%eax)
801032bb:	00 01 00 
801032be:	8b 50 20             	mov    0x20(%eax),%edx
801032c1:	c7 80 60 03 00 00 00 	movl   $0x10000,0x360(%eax)
801032c8:	00 01 00 
801032cb:	8b 50 20             	mov    0x20(%eax),%edx
801032ce:	8b 50 30             	mov    0x30(%eax),%edx
801032d1:	c1 ea 10             	shr    $0x10,%edx
801032d4:	80 fa 03             	cmp    $0x3,%dl
801032d7:	77 77                	ja     80103350 <lapicinit+0xe0>
801032d9:	c7 80 70 03 00 00 33 	movl   $0x33,0x370(%eax)
801032e0:	00 00 00 
801032e3:	8b 50 20             	mov    0x20(%eax),%edx
801032e6:	c7 80 80 02 00 00 00 	movl   $0x0,0x280(%eax)
801032ed:	00 00 00 
801032f0:	8b 50 20             	mov    0x20(%eax),%edx
801032f3:	c7 80 80 02 00 00 00 	movl   $0x0,0x280(%eax)
801032fa:	00 00 00 
801032fd:	8b 50 20             	mov    0x20(%eax),%edx
80103300:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)
80103307:	00 00 00 
8010330a:	8b 50 20             	mov    0x20(%eax),%edx
8010330d:	c7 80 10 03 00 00 00 	movl   $0x0,0x310(%eax)
80103314:	00 00 00 
80103317:	8b 50 20             	mov    0x20(%eax),%edx
8010331a:	c7 80 00 03 00 00 00 	movl   $0x88500,0x300(%eax)
80103321:	85 08 00 
80103324:	8b 50 20             	mov    0x20(%eax),%edx
80103327:	89 f6                	mov    %esi,%esi
80103329:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80103330:	8b 90 00 03 00 00    	mov    0x300(%eax),%edx
80103336:	80 e6 10             	and    $0x10,%dh
80103339:	75 f5                	jne    80103330 <lapicinit+0xc0>
8010333b:	c7 80 80 00 00 00 00 	movl   $0x0,0x80(%eax)
80103342:	00 00 00 
80103345:	8b 40 20             	mov    0x20(%eax),%eax
80103348:	5d                   	pop    %ebp
80103349:	c3                   	ret    
8010334a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80103350:	c7 80 40 03 00 00 00 	movl   $0x10000,0x340(%eax)
80103357:	00 01 00 
8010335a:	8b 50 20             	mov    0x20(%eax),%edx
8010335d:	e9 77 ff ff ff       	jmp    801032d9 <lapicinit+0x69>
80103362:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80103369:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80103370 <lapicid>:
80103370:	a1 04 ca 12 80       	mov    0x8012ca04,%eax
80103375:	55                   	push   %ebp
80103376:	89 e5                	mov    %esp,%ebp
80103378:	85 c0                	test   %eax,%eax
8010337a:	74 0c                	je     80103388 <lapicid+0x18>
8010337c:	8b 40 20             	mov    0x20(%eax),%eax
8010337f:	5d                   	pop    %ebp
80103380:	c1 e8 18             	shr    $0x18,%eax
80103383:	c3                   	ret    
80103384:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80103388:	31 c0                	xor    %eax,%eax
8010338a:	5d                   	pop    %ebp
8010338b:	c3                   	ret    
8010338c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80103390 <lapiceoi>:
80103390:	a1 04 ca 12 80       	mov    0x8012ca04,%eax
80103395:	55                   	push   %ebp
80103396:	89 e5                	mov    %esp,%ebp
80103398:	85 c0                	test   %eax,%eax
8010339a:	74 0d                	je     801033a9 <lapiceoi+0x19>
8010339c:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)
801033a3:	00 00 00 
801033a6:	8b 40 20             	mov    0x20(%eax),%eax
801033a9:	5d                   	pop    %ebp
801033aa:	c3                   	ret    
801033ab:	90                   	nop
801033ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801033b0 <microdelay>:
801033b0:	55                   	push   %ebp
801033b1:	89 e5                	mov    %esp,%ebp
801033b3:	5d                   	pop    %ebp
801033b4:	c3                   	ret    
801033b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801033b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801033c0 <lapicstartap>:
801033c0:	55                   	push   %ebp
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
801033c1:	ba 70 00 00 00       	mov    $0x70,%edx
801033c6:	b8 0f 00 00 00       	mov    $0xf,%eax
801033cb:	89 e5                	mov    %esp,%ebp
801033cd:	53                   	push   %ebx
801033ce:	8b 4d 0c             	mov    0xc(%ebp),%ecx
801033d1:	8b 5d 08             	mov    0x8(%ebp),%ebx
801033d4:	ee                   	out    %al,(%dx)
801033d5:	ba 71 00 00 00       	mov    $0x71,%edx
801033da:	b8 0a 00 00 00       	mov    $0xa,%eax
801033df:	ee                   	out    %al,(%dx)
801033e0:	31 c0                	xor    %eax,%eax
801033e2:	c1 e3 18             	shl    $0x18,%ebx
801033e5:	66 a3 67 04 00 80    	mov    %ax,0x80000467
801033eb:	89 c8                	mov    %ecx,%eax
801033ed:	c1 e9 0c             	shr    $0xc,%ecx
801033f0:	c1 e8 04             	shr    $0x4,%eax
801033f3:	89 da                	mov    %ebx,%edx
801033f5:	80 cd 06             	or     $0x6,%ch
801033f8:	66 a3 69 04 00 80    	mov    %ax,0x80000469
801033fe:	a1 04 ca 12 80       	mov    0x8012ca04,%eax
80103403:	89 98 10 03 00 00    	mov    %ebx,0x310(%eax)
80103409:	8b 58 20             	mov    0x20(%eax),%ebx
8010340c:	c7 80 00 03 00 00 00 	movl   $0xc500,0x300(%eax)
80103413:	c5 00 00 
80103416:	8b 58 20             	mov    0x20(%eax),%ebx
80103419:	c7 80 00 03 00 00 00 	movl   $0x8500,0x300(%eax)
80103420:	85 00 00 
80103423:	8b 58 20             	mov    0x20(%eax),%ebx
80103426:	89 90 10 03 00 00    	mov    %edx,0x310(%eax)
8010342c:	8b 58 20             	mov    0x20(%eax),%ebx
8010342f:	89 88 00 03 00 00    	mov    %ecx,0x300(%eax)
80103435:	8b 58 20             	mov    0x20(%eax),%ebx
80103438:	89 90 10 03 00 00    	mov    %edx,0x310(%eax)
8010343e:	8b 50 20             	mov    0x20(%eax),%edx
80103441:	89 88 00 03 00 00    	mov    %ecx,0x300(%eax)
80103447:	8b 40 20             	mov    0x20(%eax),%eax
8010344a:	5b                   	pop    %ebx
8010344b:	5d                   	pop    %ebp
8010344c:	c3                   	ret    
8010344d:	8d 76 00             	lea    0x0(%esi),%esi

80103450 <cmostime>:
80103450:	55                   	push   %ebp
80103451:	ba 70 00 00 00       	mov    $0x70,%edx
80103456:	b8 0b 00 00 00       	mov    $0xb,%eax
8010345b:	89 e5                	mov    %esp,%ebp
8010345d:	57                   	push   %edi
8010345e:	56                   	push   %esi
8010345f:	53                   	push   %ebx
80103460:	83 ec 4c             	sub    $0x4c,%esp
80103463:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
80103464:	ba 71 00 00 00       	mov    $0x71,%edx
80103469:	ec                   	in     (%dx),%al
8010346a:	83 e0 04             	and    $0x4,%eax
8010346d:	8d 75 d0             	lea    -0x30(%ebp),%esi
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80103470:	31 db                	xor    %ebx,%ebx
80103472:	88 45 b7             	mov    %al,-0x49(%ebp)
80103475:	bf 70 00 00 00       	mov    $0x70,%edi
8010347a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80103480:	89 d8                	mov    %ebx,%eax
80103482:	89 fa                	mov    %edi,%edx
80103484:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
80103485:	b9 71 00 00 00       	mov    $0x71,%ecx
8010348a:	89 ca                	mov    %ecx,%edx
8010348c:	ec                   	in     (%dx),%al
8010348d:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80103490:	89 fa                	mov    %edi,%edx
80103492:	89 45 b8             	mov    %eax,-0x48(%ebp)
80103495:	b8 02 00 00 00       	mov    $0x2,%eax
8010349a:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
8010349b:	89 ca                	mov    %ecx,%edx
8010349d:	ec                   	in     (%dx),%al
8010349e:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
801034a1:	89 fa                	mov    %edi,%edx
801034a3:	89 45 bc             	mov    %eax,-0x44(%ebp)
801034a6:	b8 04 00 00 00       	mov    $0x4,%eax
801034ab:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
801034ac:	89 ca                	mov    %ecx,%edx
801034ae:	ec                   	in     (%dx),%al
801034af:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
801034b2:	89 fa                	mov    %edi,%edx
801034b4:	89 45 c0             	mov    %eax,-0x40(%ebp)
801034b7:	b8 07 00 00 00       	mov    $0x7,%eax
801034bc:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
801034bd:	89 ca                	mov    %ecx,%edx
801034bf:	ec                   	in     (%dx),%al
801034c0:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
801034c3:	89 fa                	mov    %edi,%edx
801034c5:	89 45 c4             	mov    %eax,-0x3c(%ebp)
801034c8:	b8 08 00 00 00       	mov    $0x8,%eax
801034cd:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
801034ce:	89 ca                	mov    %ecx,%edx
801034d0:	ec                   	in     (%dx),%al
801034d1:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
801034d4:	89 fa                	mov    %edi,%edx
801034d6:	89 45 c8             	mov    %eax,-0x38(%ebp)
801034d9:	b8 09 00 00 00       	mov    $0x9,%eax
801034de:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
801034df:	89 ca                	mov    %ecx,%edx
801034e1:	ec                   	in     (%dx),%al
801034e2:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
801034e5:	89 fa                	mov    %edi,%edx
801034e7:	89 45 cc             	mov    %eax,-0x34(%ebp)
801034ea:	b8 0a 00 00 00       	mov    $0xa,%eax
801034ef:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
801034f0:	89 ca                	mov    %ecx,%edx
801034f2:	ec                   	in     (%dx),%al
801034f3:	84 c0                	test   %al,%al
801034f5:	78 89                	js     80103480 <cmostime+0x30>
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
801034f7:	89 d8                	mov    %ebx,%eax
801034f9:	89 fa                	mov    %edi,%edx
801034fb:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
801034fc:	89 ca                	mov    %ecx,%edx
801034fe:	ec                   	in     (%dx),%al
801034ff:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80103502:	89 fa                	mov    %edi,%edx
80103504:	89 45 d0             	mov    %eax,-0x30(%ebp)
80103507:	b8 02 00 00 00       	mov    $0x2,%eax
8010350c:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
8010350d:	89 ca                	mov    %ecx,%edx
8010350f:	ec                   	in     (%dx),%al
80103510:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80103513:	89 fa                	mov    %edi,%edx
80103515:	89 45 d4             	mov    %eax,-0x2c(%ebp)
80103518:	b8 04 00 00 00       	mov    $0x4,%eax
8010351d:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
8010351e:	89 ca                	mov    %ecx,%edx
80103520:	ec                   	in     (%dx),%al
80103521:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80103524:	89 fa                	mov    %edi,%edx
80103526:	89 45 d8             	mov    %eax,-0x28(%ebp)
80103529:	b8 07 00 00 00       	mov    $0x7,%eax
8010352e:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
8010352f:	89 ca                	mov    %ecx,%edx
80103531:	ec                   	in     (%dx),%al
80103532:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80103535:	89 fa                	mov    %edi,%edx
80103537:	89 45 dc             	mov    %eax,-0x24(%ebp)
8010353a:	b8 08 00 00 00       	mov    $0x8,%eax
8010353f:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
80103540:	89 ca                	mov    %ecx,%edx
80103542:	ec                   	in     (%dx),%al
80103543:	0f b6 c0             	movzbl %al,%eax
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80103546:	89 fa                	mov    %edi,%edx
80103548:	89 45 e0             	mov    %eax,-0x20(%ebp)
8010354b:	b8 09 00 00 00       	mov    $0x9,%eax
80103550:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
80103551:	89 ca                	mov    %ecx,%edx
80103553:	ec                   	in     (%dx),%al
80103554:	0f b6 c0             	movzbl %al,%eax
80103557:	83 ec 04             	sub    $0x4,%esp
8010355a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8010355d:	8d 45 b8             	lea    -0x48(%ebp),%eax
80103560:	6a 18                	push   $0x18
80103562:	56                   	push   %esi
80103563:	50                   	push   %eax
80103564:	e8 27 33 00 00       	call   80106890 <memcmp>
80103569:	83 c4 10             	add    $0x10,%esp
8010356c:	85 c0                	test   %eax,%eax
8010356e:	0f 85 0c ff ff ff    	jne    80103480 <cmostime+0x30>
80103574:	80 7d b7 00          	cmpb   $0x0,-0x49(%ebp)
80103578:	75 78                	jne    801035f2 <cmostime+0x1a2>
8010357a:	8b 45 b8             	mov    -0x48(%ebp),%eax
8010357d:	89 c2                	mov    %eax,%edx
8010357f:	83 e0 0f             	and    $0xf,%eax
80103582:	c1 ea 04             	shr    $0x4,%edx
80103585:	8d 14 92             	lea    (%edx,%edx,4),%edx
80103588:	8d 04 50             	lea    (%eax,%edx,2),%eax
8010358b:	89 45 b8             	mov    %eax,-0x48(%ebp)
8010358e:	8b 45 bc             	mov    -0x44(%ebp),%eax
80103591:	89 c2                	mov    %eax,%edx
80103593:	83 e0 0f             	and    $0xf,%eax
80103596:	c1 ea 04             	shr    $0x4,%edx
80103599:	8d 14 92             	lea    (%edx,%edx,4),%edx
8010359c:	8d 04 50             	lea    (%eax,%edx,2),%eax
8010359f:	89 45 bc             	mov    %eax,-0x44(%ebp)
801035a2:	8b 45 c0             	mov    -0x40(%ebp),%eax
801035a5:	89 c2                	mov    %eax,%edx
801035a7:	83 e0 0f             	and    $0xf,%eax
801035aa:	c1 ea 04             	shr    $0x4,%edx
801035ad:	8d 14 92             	lea    (%edx,%edx,4),%edx
801035b0:	8d 04 50             	lea    (%eax,%edx,2),%eax
801035b3:	89 45 c0             	mov    %eax,-0x40(%ebp)
801035b6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
801035b9:	89 c2                	mov    %eax,%edx
801035bb:	83 e0 0f             	and    $0xf,%eax
801035be:	c1 ea 04             	shr    $0x4,%edx
801035c1:	8d 14 92             	lea    (%edx,%edx,4),%edx
801035c4:	8d 04 50             	lea    (%eax,%edx,2),%eax
801035c7:	89 45 c4             	mov    %eax,-0x3c(%ebp)
801035ca:	8b 45 c8             	mov    -0x38(%ebp),%eax
801035cd:	89 c2                	mov    %eax,%edx
801035cf:	83 e0 0f             	and    $0xf,%eax
801035d2:	c1 ea 04             	shr    $0x4,%edx
801035d5:	8d 14 92             	lea    (%edx,%edx,4),%edx
801035d8:	8d 04 50             	lea    (%eax,%edx,2),%eax
801035db:	89 45 c8             	mov    %eax,-0x38(%ebp)
801035de:	8b 45 cc             	mov    -0x34(%ebp),%eax
801035e1:	89 c2                	mov    %eax,%edx
801035e3:	83 e0 0f             	and    $0xf,%eax
801035e6:	c1 ea 04             	shr    $0x4,%edx
801035e9:	8d 14 92             	lea    (%edx,%edx,4),%edx
801035ec:	8d 04 50             	lea    (%eax,%edx,2),%eax
801035ef:	89 45 cc             	mov    %eax,-0x34(%ebp)
801035f2:	8b 75 08             	mov    0x8(%ebp),%esi
801035f5:	8b 45 b8             	mov    -0x48(%ebp),%eax
801035f8:	89 06                	mov    %eax,(%esi)
801035fa:	8b 45 bc             	mov    -0x44(%ebp),%eax
801035fd:	89 46 04             	mov    %eax,0x4(%esi)
80103600:	8b 45 c0             	mov    -0x40(%ebp),%eax
80103603:	89 46 08             	mov    %eax,0x8(%esi)
80103606:	8b 45 c4             	mov    -0x3c(%ebp),%eax
80103609:	89 46 0c             	mov    %eax,0xc(%esi)
8010360c:	8b 45 c8             	mov    -0x38(%ebp),%eax
8010360f:	89 46 10             	mov    %eax,0x10(%esi)
80103612:	8b 45 cc             	mov    -0x34(%ebp),%eax
80103615:	89 46 14             	mov    %eax,0x14(%esi)
80103618:	81 46 14 d0 07 00 00 	addl   $0x7d0,0x14(%esi)
8010361f:	8d 65 f4             	lea    -0xc(%ebp),%esp
80103622:	5b                   	pop    %ebx
80103623:	5e                   	pop    %esi
80103624:	5f                   	pop    %edi
80103625:	5d                   	pop    %ebp
80103626:	c3                   	ret    
80103627:	66 90                	xchg   %ax,%ax
80103629:	66 90                	xchg   %ax,%ax
8010362b:	66 90                	xchg   %ax,%ax
8010362d:	66 90                	xchg   %ax,%ax
8010362f:	90                   	nop

80103630 <write_head>:
80103630:	55                   	push   %ebp
80103631:	89 e5                	mov    %esp,%ebp
80103633:	53                   	push   %ebx
80103634:	83 ec 0c             	sub    $0xc,%esp
80103637:	ff 35 54 ca 12 80    	pushl  0x8012ca54
8010363d:	ff 35 64 ca 12 80    	pushl  0x8012ca64
80103643:	e8 98 cb ff ff       	call   801001e0 <bread>
80103648:	8b 0d 68 ca 12 80    	mov    0x8012ca68,%ecx
8010364e:	83 c4 10             	add    $0x10,%esp
80103651:	89 c3                	mov    %eax,%ebx
80103653:	85 c9                	test   %ecx,%ecx
80103655:	89 48 60             	mov    %ecx,0x60(%eax)
80103658:	7e 1f                	jle    80103679 <write_head+0x49>
8010365a:	8d 04 8d 00 00 00 00 	lea    0x0(,%ecx,4),%eax
80103661:	31 d2                	xor    %edx,%edx
80103663:	90                   	nop
80103664:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80103668:	8b 8a 6c ca 12 80    	mov    -0x7fed3594(%edx),%ecx
8010366e:	89 4c 13 64          	mov    %ecx,0x64(%ebx,%edx,1)
80103672:	83 c2 04             	add    $0x4,%edx
80103675:	39 c2                	cmp    %eax,%edx
80103677:	75 ef                	jne    80103668 <write_head+0x38>
80103679:	83 ec 0c             	sub    $0xc,%esp
8010367c:	53                   	push   %ebx
8010367d:	e8 7e cc ff ff       	call   80100300 <bwrite>
80103682:	89 1c 24             	mov    %ebx,(%esp)
80103685:	e8 b6 cc ff ff       	call   80100340 <brelse>
8010368a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010368d:	c9                   	leave  
8010368e:	c3                   	ret    
8010368f:	90                   	nop

80103690 <install_trans>:
80103690:	a1 68 ca 12 80       	mov    0x8012ca68,%eax
80103695:	85 c0                	test   %eax,%eax
80103697:	0f 8e 98 00 00 00    	jle    80103735 <install_trans+0xa5>
8010369d:	55                   	push   %ebp
8010369e:	89 e5                	mov    %esp,%ebp
801036a0:	57                   	push   %edi
801036a1:	56                   	push   %esi
801036a2:	53                   	push   %ebx
801036a3:	31 f6                	xor    %esi,%esi
801036a5:	83 ec 0c             	sub    $0xc,%esp
801036a8:	90                   	nop
801036a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801036b0:	a1 54 ca 12 80       	mov    0x8012ca54,%eax
801036b5:	83 ec 08             	sub    $0x8,%esp
801036b8:	01 f0                	add    %esi,%eax
801036ba:	83 c0 01             	add    $0x1,%eax
801036bd:	50                   	push   %eax
801036be:	ff 35 64 ca 12 80    	pushl  0x8012ca64
801036c4:	e8 17 cb ff ff       	call   801001e0 <bread>
801036c9:	89 c7                	mov    %eax,%edi
801036cb:	58                   	pop    %eax
801036cc:	5a                   	pop    %edx
801036cd:	ff 34 b5 6c ca 12 80 	pushl  -0x7fed3594(,%esi,4)
801036d4:	ff 35 64 ca 12 80    	pushl  0x8012ca64
801036da:	83 c6 01             	add    $0x1,%esi
801036dd:	e8 fe ca ff ff       	call   801001e0 <bread>
801036e2:	89 c3                	mov    %eax,%ebx
801036e4:	8d 47 60             	lea    0x60(%edi),%eax
801036e7:	83 c4 0c             	add    $0xc,%esp
801036ea:	68 00 04 00 00       	push   $0x400
801036ef:	50                   	push   %eax
801036f0:	8d 43 60             	lea    0x60(%ebx),%eax
801036f3:	50                   	push   %eax
801036f4:	e8 f7 31 00 00       	call   801068f0 <memmove>
801036f9:	89 1c 24             	mov    %ebx,(%esp)
801036fc:	e8 ff cb ff ff       	call   80100300 <bwrite>
80103701:	59                   	pop    %ecx
80103702:	ff 73 5c             	pushl  0x5c(%ebx)
80103705:	e8 96 b0 00 00       	call   8010e7a0 <cgroup_mem_stat_file_dirty_decr>
8010370a:	58                   	pop    %eax
8010370b:	ff 73 5c             	pushl  0x5c(%ebx)
8010370e:	e8 bd b0 00 00       	call   8010e7d0 <cgroup_mem_stat_file_dirty_aggregated_incr>
80103713:	89 3c 24             	mov    %edi,(%esp)
80103716:	e8 25 cc ff ff       	call   80100340 <brelse>
8010371b:	89 1c 24             	mov    %ebx,(%esp)
8010371e:	e8 1d cc ff ff       	call   80100340 <brelse>
80103723:	83 c4 10             	add    $0x10,%esp
80103726:	39 35 68 ca 12 80    	cmp    %esi,0x8012ca68
8010372c:	7f 82                	jg     801036b0 <install_trans+0x20>
8010372e:	8d 65 f4             	lea    -0xc(%ebp),%esp
80103731:	5b                   	pop    %ebx
80103732:	5e                   	pop    %esi
80103733:	5f                   	pop    %edi
80103734:	5d                   	pop    %ebp
80103735:	f3 c3                	repz ret 
80103737:	89 f6                	mov    %esi,%esi
80103739:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80103740 <initlog>:
80103740:	55                   	push   %ebp
80103741:	89 e5                	mov    %esp,%ebp
80103743:	53                   	push   %ebx
80103744:	83 ec 2c             	sub    $0x2c,%esp
80103747:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010374a:	68 e0 f0 10 80       	push   $0x8010f0e0
8010374f:	68 20 ca 12 80       	push   $0x8012ca20
80103754:	e8 77 2e 00 00       	call   801065d0 <initlock>
80103759:	58                   	pop    %eax
8010375a:	8d 45 dc             	lea    -0x24(%ebp),%eax
8010375d:	5a                   	pop    %edx
8010375e:	50                   	push   %eax
8010375f:	53                   	push   %ebx
80103760:	e8 5b e4 ff ff       	call   80101bc0 <readsb>
80103765:	8b 55 e8             	mov    -0x18(%ebp),%edx
80103768:	8b 45 ec             	mov    -0x14(%ebp),%eax
8010376b:	59                   	pop    %ecx
8010376c:	89 1d 64 ca 12 80    	mov    %ebx,0x8012ca64
80103772:	89 15 58 ca 12 80    	mov    %edx,0x8012ca58
80103778:	a3 54 ca 12 80       	mov    %eax,0x8012ca54
8010377d:	5a                   	pop    %edx
8010377e:	50                   	push   %eax
8010377f:	53                   	push   %ebx
80103780:	e8 5b ca ff ff       	call   801001e0 <bread>
80103785:	8b 48 60             	mov    0x60(%eax),%ecx
80103788:	83 c4 10             	add    $0x10,%esp
8010378b:	85 c9                	test   %ecx,%ecx
8010378d:	89 0d 68 ca 12 80    	mov    %ecx,0x8012ca68
80103793:	7e 1c                	jle    801037b1 <initlog+0x71>
80103795:	8d 1c 8d 00 00 00 00 	lea    0x0(,%ecx,4),%ebx
8010379c:	31 d2                	xor    %edx,%edx
8010379e:	66 90                	xchg   %ax,%ax
801037a0:	8b 4c 10 64          	mov    0x64(%eax,%edx,1),%ecx
801037a4:	83 c2 04             	add    $0x4,%edx
801037a7:	89 8a 68 ca 12 80    	mov    %ecx,-0x7fed3598(%edx)
801037ad:	39 da                	cmp    %ebx,%edx
801037af:	75 ef                	jne    801037a0 <initlog+0x60>
801037b1:	83 ec 0c             	sub    $0xc,%esp
801037b4:	50                   	push   %eax
801037b5:	e8 86 cb ff ff       	call   80100340 <brelse>
801037ba:	e8 d1 fe ff ff       	call   80103690 <install_trans>
801037bf:	c7 05 68 ca 12 80 00 	movl   $0x0,0x8012ca68
801037c6:	00 00 00 
801037c9:	e8 62 fe ff ff       	call   80103630 <write_head>
801037ce:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801037d1:	c9                   	leave  
801037d2:	c3                   	ret    
801037d3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801037d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801037e0 <begin_op>:
801037e0:	55                   	push   %ebp
801037e1:	89 e5                	mov    %esp,%ebp
801037e3:	83 ec 14             	sub    $0x14,%esp
801037e6:	68 20 ca 12 80       	push   $0x8012ca20
801037eb:	e8 e0 2e 00 00       	call   801066d0 <acquire>
801037f0:	83 c4 10             	add    $0x10,%esp
801037f3:	eb 18                	jmp    8010380d <begin_op+0x2d>
801037f5:	8d 76 00             	lea    0x0(%esi),%esi
801037f8:	83 ec 08             	sub    $0x8,%esp
801037fb:	68 20 ca 12 80       	push   $0x8012ca20
80103800:	68 20 ca 12 80       	push   $0x8012ca20
80103805:	e8 66 27 00 00       	call   80105f70 <sleep>
8010380a:	83 c4 10             	add    $0x10,%esp
8010380d:	a1 60 ca 12 80       	mov    0x8012ca60,%eax
80103812:	85 c0                	test   %eax,%eax
80103814:	75 e2                	jne    801037f8 <begin_op+0x18>
80103816:	a1 5c ca 12 80       	mov    0x8012ca5c,%eax
8010381b:	8b 15 68 ca 12 80    	mov    0x8012ca68,%edx
80103821:	83 c0 01             	add    $0x1,%eax
80103824:	8d 0c 80             	lea    (%eax,%eax,4),%ecx
80103827:	8d 14 4a             	lea    (%edx,%ecx,2),%edx
8010382a:	83 fa 1e             	cmp    $0x1e,%edx
8010382d:	7f c9                	jg     801037f8 <begin_op+0x18>
8010382f:	83 ec 0c             	sub    $0xc,%esp
80103832:	a3 5c ca 12 80       	mov    %eax,0x8012ca5c
80103837:	68 20 ca 12 80       	push   $0x8012ca20
8010383c:	e8 af 2f 00 00       	call   801067f0 <release>
80103841:	83 c4 10             	add    $0x10,%esp
80103844:	c9                   	leave  
80103845:	c3                   	ret    
80103846:	8d 76 00             	lea    0x0(%esi),%esi
80103849:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80103850 <end_op>:
80103850:	55                   	push   %ebp
80103851:	89 e5                	mov    %esp,%ebp
80103853:	57                   	push   %edi
80103854:	56                   	push   %esi
80103855:	53                   	push   %ebx
80103856:	83 ec 18             	sub    $0x18,%esp
80103859:	68 20 ca 12 80       	push   $0x8012ca20
8010385e:	e8 6d 2e 00 00       	call   801066d0 <acquire>
80103863:	a1 5c ca 12 80       	mov    0x8012ca5c,%eax
80103868:	8b 1d 60 ca 12 80    	mov    0x8012ca60,%ebx
8010386e:	83 c4 10             	add    $0x10,%esp
80103871:	83 e8 01             	sub    $0x1,%eax
80103874:	85 db                	test   %ebx,%ebx
80103876:	a3 5c ca 12 80       	mov    %eax,0x8012ca5c
8010387b:	0f 85 23 01 00 00    	jne    801039a4 <end_op+0x154>
80103881:	85 c0                	test   %eax,%eax
80103883:	0f 85 f7 00 00 00    	jne    80103980 <end_op+0x130>
80103889:	83 ec 0c             	sub    $0xc,%esp
8010388c:	c7 05 60 ca 12 80 01 	movl   $0x1,0x8012ca60
80103893:	00 00 00 
80103896:	31 db                	xor    %ebx,%ebx
80103898:	68 20 ca 12 80       	push   $0x8012ca20
8010389d:	e8 4e 2f 00 00       	call   801067f0 <release>
801038a2:	8b 0d 68 ca 12 80    	mov    0x8012ca68,%ecx
801038a8:	83 c4 10             	add    $0x10,%esp
801038ab:	85 c9                	test   %ecx,%ecx
801038ad:	0f 8e 8a 00 00 00    	jle    8010393d <end_op+0xed>
801038b3:	90                   	nop
801038b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801038b8:	a1 54 ca 12 80       	mov    0x8012ca54,%eax
801038bd:	83 ec 08             	sub    $0x8,%esp
801038c0:	01 d8                	add    %ebx,%eax
801038c2:	83 c0 01             	add    $0x1,%eax
801038c5:	50                   	push   %eax
801038c6:	ff 35 64 ca 12 80    	pushl  0x8012ca64
801038cc:	e8 0f c9 ff ff       	call   801001e0 <bread>
801038d1:	89 c6                	mov    %eax,%esi
801038d3:	58                   	pop    %eax
801038d4:	5a                   	pop    %edx
801038d5:	ff 34 9d 6c ca 12 80 	pushl  -0x7fed3594(,%ebx,4)
801038dc:	ff 35 64 ca 12 80    	pushl  0x8012ca64
801038e2:	83 c3 01             	add    $0x1,%ebx
801038e5:	e8 f6 c8 ff ff       	call   801001e0 <bread>
801038ea:	89 c7                	mov    %eax,%edi
801038ec:	8d 40 60             	lea    0x60(%eax),%eax
801038ef:	83 c4 0c             	add    $0xc,%esp
801038f2:	68 00 04 00 00       	push   $0x400
801038f7:	50                   	push   %eax
801038f8:	8d 46 60             	lea    0x60(%esi),%eax
801038fb:	50                   	push   %eax
801038fc:	e8 ef 2f 00 00       	call   801068f0 <memmove>
80103901:	89 34 24             	mov    %esi,(%esp)
80103904:	e8 f7 c9 ff ff       	call   80100300 <bwrite>
80103909:	89 3c 24             	mov    %edi,(%esp)
8010390c:	e8 2f ca ff ff       	call   80100340 <brelse>
80103911:	89 34 24             	mov    %esi,(%esp)
80103914:	e8 27 ca ff ff       	call   80100340 <brelse>
80103919:	83 c4 10             	add    $0x10,%esp
8010391c:	3b 1d 68 ca 12 80    	cmp    0x8012ca68,%ebx
80103922:	7c 94                	jl     801038b8 <end_op+0x68>
80103924:	e8 07 fd ff ff       	call   80103630 <write_head>
80103929:	e8 62 fd ff ff       	call   80103690 <install_trans>
8010392e:	c7 05 68 ca 12 80 00 	movl   $0x0,0x8012ca68
80103935:	00 00 00 
80103938:	e8 f3 fc ff ff       	call   80103630 <write_head>
8010393d:	83 ec 0c             	sub    $0xc,%esp
80103940:	68 20 ca 12 80       	push   $0x8012ca20
80103945:	e8 86 2d 00 00       	call   801066d0 <acquire>
8010394a:	c7 04 24 20 ca 12 80 	movl   $0x8012ca20,(%esp)
80103951:	c7 05 60 ca 12 80 00 	movl   $0x0,0x8012ca60
80103958:	00 00 00 
8010395b:	e8 40 28 00 00       	call   801061a0 <wakeup>
80103960:	c7 04 24 20 ca 12 80 	movl   $0x8012ca20,(%esp)
80103967:	e8 84 2e 00 00       	call   801067f0 <release>
8010396c:	83 c4 10             	add    $0x10,%esp
8010396f:	8d 65 f4             	lea    -0xc(%ebp),%esp
80103972:	5b                   	pop    %ebx
80103973:	5e                   	pop    %esi
80103974:	5f                   	pop    %edi
80103975:	5d                   	pop    %ebp
80103976:	c3                   	ret    
80103977:	89 f6                	mov    %esi,%esi
80103979:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80103980:	83 ec 0c             	sub    $0xc,%esp
80103983:	68 20 ca 12 80       	push   $0x8012ca20
80103988:	e8 13 28 00 00       	call   801061a0 <wakeup>
8010398d:	c7 04 24 20 ca 12 80 	movl   $0x8012ca20,(%esp)
80103994:	e8 57 2e 00 00       	call   801067f0 <release>
80103999:	83 c4 10             	add    $0x10,%esp
8010399c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010399f:	5b                   	pop    %ebx
801039a0:	5e                   	pop    %esi
801039a1:	5f                   	pop    %edi
801039a2:	5d                   	pop    %ebp
801039a3:	c3                   	ret    
801039a4:	83 ec 0c             	sub    $0xc,%esp
801039a7:	68 e4 f0 10 80       	push   $0x8010f0e4
801039ac:	e8 1f ca ff ff       	call   801003d0 <panic>
801039b1:	eb 0d                	jmp    801039c0 <log_write>
801039b3:	90                   	nop
801039b4:	90                   	nop
801039b5:	90                   	nop
801039b6:	90                   	nop
801039b7:	90                   	nop
801039b8:	90                   	nop
801039b9:	90                   	nop
801039ba:	90                   	nop
801039bb:	90                   	nop
801039bc:	90                   	nop
801039bd:	90                   	nop
801039be:	90                   	nop
801039bf:	90                   	nop

801039c0 <log_write>:
801039c0:	55                   	push   %ebp
801039c1:	89 e5                	mov    %esp,%ebp
801039c3:	53                   	push   %ebx
801039c4:	83 ec 04             	sub    $0x4,%esp
801039c7:	8b 15 68 ca 12 80    	mov    0x8012ca68,%edx
801039cd:	8b 5d 08             	mov    0x8(%ebp),%ebx
801039d0:	83 fa 1d             	cmp    $0x1d,%edx
801039d3:	0f 8f d7 00 00 00    	jg     80103ab0 <log_write+0xf0>
801039d9:	a1 58 ca 12 80       	mov    0x8012ca58,%eax
801039de:	83 e8 01             	sub    $0x1,%eax
801039e1:	39 c2                	cmp    %eax,%edx
801039e3:	0f 8d c7 00 00 00    	jge    80103ab0 <log_write+0xf0>
801039e9:	a1 5c ca 12 80       	mov    0x8012ca5c,%eax
801039ee:	85 c0                	test   %eax,%eax
801039f0:	0f 8e c7 00 00 00    	jle    80103abd <log_write+0xfd>
801039f6:	66 83 7b 06 07       	cmpw   $0x7,0x6(%ebx)
801039fb:	0f 84 8f 00 00 00    	je     80103a90 <log_write+0xd0>
80103a01:	83 ec 0c             	sub    $0xc,%esp
80103a04:	68 20 ca 12 80       	push   $0x8012ca20
80103a09:	e8 c2 2c 00 00       	call   801066d0 <acquire>
80103a0e:	8b 15 68 ca 12 80    	mov    0x8012ca68,%edx
80103a14:	83 c4 10             	add    $0x10,%esp
80103a17:	83 fa 00             	cmp    $0x0,%edx
80103a1a:	0f 8e 7c 00 00 00    	jle    80103a9c <log_write+0xdc>
80103a20:	8b 4b 08             	mov    0x8(%ebx),%ecx
80103a23:	31 c0                	xor    %eax,%eax
80103a25:	3b 0d 6c ca 12 80    	cmp    0x8012ca6c,%ecx
80103a2b:	75 0c                	jne    80103a39 <log_write+0x79>
80103a2d:	eb 51                	jmp    80103a80 <log_write+0xc0>
80103a2f:	90                   	nop
80103a30:	39 0c 85 6c ca 12 80 	cmp    %ecx,-0x7fed3594(,%eax,4)
80103a37:	74 47                	je     80103a80 <log_write+0xc0>
80103a39:	83 c0 01             	add    $0x1,%eax
80103a3c:	39 d0                	cmp    %edx,%eax
80103a3e:	75 f0                	jne    80103a30 <log_write+0x70>
80103a40:	89 0c 95 6c ca 12 80 	mov    %ecx,-0x7fed3594(,%edx,4)
80103a47:	83 c2 01             	add    $0x1,%edx
80103a4a:	89 15 68 ca 12 80    	mov    %edx,0x8012ca68
80103a50:	e8 2b 2a 00 00       	call   80106480 <proc_get_cgroup>
80103a55:	83 ec 0c             	sub    $0xc,%esp
80103a58:	89 43 5c             	mov    %eax,0x5c(%ebx)
80103a5b:	50                   	push   %eax
80103a5c:	e8 0f ad 00 00       	call   8010e770 <cgroup_mem_stat_file_dirty_incr>
80103a61:	83 c4 10             	add    $0x10,%esp
80103a64:	83 0b 04             	orl    $0x4,(%ebx)
80103a67:	c7 45 08 20 ca 12 80 	movl   $0x8012ca20,0x8(%ebp)
80103a6e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80103a71:	c9                   	leave  
80103a72:	e9 79 2d 00 00       	jmp    801067f0 <release>
80103a77:	89 f6                	mov    %esi,%esi
80103a79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80103a80:	89 0c 85 6c ca 12 80 	mov    %ecx,-0x7fed3594(,%eax,4)
80103a87:	eb db                	jmp    80103a64 <log_write+0xa4>
80103a89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80103a90:	89 5d 08             	mov    %ebx,0x8(%ebp)
80103a93:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80103a96:	c9                   	leave  
80103a97:	e9 64 c8 ff ff       	jmp    80100300 <bwrite>
80103a9c:	8b 43 08             	mov    0x8(%ebx),%eax
80103a9f:	a3 6c ca 12 80       	mov    %eax,0x8012ca6c
80103aa4:	75 be                	jne    80103a64 <log_write+0xa4>
80103aa6:	eb 9f                	jmp    80103a47 <log_write+0x87>
80103aa8:	90                   	nop
80103aa9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80103ab0:	83 ec 0c             	sub    $0xc,%esp
80103ab3:	68 f3 f0 10 80       	push   $0x8010f0f3
80103ab8:	e8 13 c9 ff ff       	call   801003d0 <panic>
80103abd:	83 ec 0c             	sub    $0xc,%esp
80103ac0:	68 09 f1 10 80       	push   $0x8010f109
80103ac5:	e8 06 c9 ff ff       	call   801003d0 <panic>
80103aca:	66 90                	xchg   %ax,%ax
80103acc:	66 90                	xchg   %ax,%ax
80103ace:	66 90                	xchg   %ax,%ax

80103ad0 <mpmain>:
80103ad0:	55                   	push   %ebp
80103ad1:	89 e5                	mov    %esp,%ebp
80103ad3:	53                   	push   %ebx
80103ad4:	83 ec 04             	sub    $0x4,%esp
80103ad7:	e8 24 19 00 00       	call   80105400 <cpuid>
80103adc:	89 c3                	mov    %eax,%ebx
80103ade:	e8 1d 19 00 00       	call   80105400 <cpuid>
80103ae3:	83 ec 04             	sub    $0x4,%esp
80103ae6:	53                   	push   %ebx
80103ae7:	50                   	push   %eax
80103ae8:	68 24 f1 10 80       	push   $0x8010f124
80103aed:	e8 6e cb ff ff       	call   80100660 <cprintf>
80103af2:	e8 69 4a 00 00       	call   80108560 <idtinit>
80103af7:	e8 84 18 00 00       	call   80105380 <mycpu>
80103afc:	89 c2                	mov    %eax,%edx
xchg(volatile uint *addr, uint newval)
{
  uint result;

  // The + in "+m" denotes a read-modify-write operand.
  asm volatile("lock; xchgl %0, %1" :
80103afe:	b8 01 00 00 00       	mov    $0x1,%eax
80103b03:	f0 87 82 a0 00 00 00 	lock xchg %eax,0xa0(%edx)
80103b0a:	e8 d1 1f 00 00       	call   80105ae0 <scheduler>
80103b0f:	90                   	nop

80103b10 <mpenter>:
80103b10:	55                   	push   %ebp
80103b11:	89 e5                	mov    %esp,%ebp
80103b13:	83 ec 08             	sub    $0x8,%esp
80103b16:	e8 b5 5b 00 00       	call   801096d0 <switchkvm>
80103b1b:	e8 b0 5a 00 00       	call   801095d0 <seginit>
80103b20:	e8 4b f7 ff ff       	call   80103270 <lapicinit>
80103b25:	e8 a6 ff ff ff       	call   80103ad0 <mpmain>
80103b2a:	66 90                	xchg   %ax,%ax
80103b2c:	66 90                	xchg   %ax,%ax
80103b2e:	66 90                	xchg   %ax,%ax

80103b30 <main>:
80103b30:	8d 4c 24 04          	lea    0x4(%esp),%ecx
80103b34:	83 e4 f0             	and    $0xfffffff0,%esp
80103b37:	ff 71 fc             	pushl  -0x4(%ecx)
80103b3a:	55                   	push   %ebp
80103b3b:	89 e5                	mov    %esp,%ebp
80103b3d:	53                   	push   %ebx
80103b3e:	51                   	push   %ecx
80103b3f:	bb e0 e5 12 80       	mov    $0x8012e5e0,%ebx
80103b44:	83 ec 08             	sub    $0x8,%esp
80103b47:	68 00 00 40 80       	push   $0x80400000
80103b4c:	68 94 87 14 80       	push   $0x80148794
80103b51:	e8 9a f2 ff ff       	call   80102df0 <kinit1>
80103b56:	e8 f5 60 00 00       	call   80109c50 <kvmalloc>
80103b5b:	e8 c0 0d 00 00       	call   80104920 <mpinit>
80103b60:	e8 0b f7 ff ff       	call   80103270 <lapicinit>
80103b65:	e8 66 5a 00 00       	call   801095d0 <seginit>
80103b6a:	e8 91 12 00 00       	call   80104e00 <picinit>
80103b6f:	e8 9c f0 ff ff       	call   80102c10 <ioapicinit>
80103b74:	e8 b7 d0 ff ff       	call   80100c30 <consoleinit>
80103b79:	e8 12 d1 ff ff       	call   80100c90 <ttyinit>
80103b7e:	e8 1d 4d 00 00       	call   801088a0 <uartinit>
80103b83:	e8 d8 17 00 00       	call   80105360 <pinit>
80103b88:	e8 33 49 00 00       	call   801084c0 <tvinit>
80103b8d:	e8 ae c4 ff ff       	call   80100040 <binit>
80103b92:	e8 a9 d9 ff ff       	call   80101540 <fileinit>
80103b97:	e8 54 ee ff ff       	call   801029f0 <ideinit>
80103b9c:	83 c4 0c             	add    $0xc,%esp
80103b9f:	68 8a 00 00 00       	push   $0x8a
80103ba4:	68 8c d4 11 80       	push   $0x8011d48c
80103ba9:	68 00 70 00 80       	push   $0x80007000
80103bae:	e8 3d 2d 00 00       	call   801068f0 <memmove>
80103bb3:	69 05 60 eb 12 80 b0 	imul   $0xb0,0x8012eb60,%eax
80103bba:	00 00 00 
80103bbd:	83 c4 10             	add    $0x10,%esp
80103bc0:	05 e0 e5 12 80       	add    $0x8012e5e0,%eax
80103bc5:	39 d8                	cmp    %ebx,%eax
80103bc7:	76 6a                	jbe    80103c33 <main+0x103>
80103bc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80103bd0:	e8 ab 17 00 00       	call   80105380 <mycpu>
80103bd5:	39 d8                	cmp    %ebx,%eax
80103bd7:	74 41                	je     80103c1a <main+0xea>
80103bd9:	e8 f2 f3 ff ff       	call   80102fd0 <kalloc>
80103bde:	05 00 10 00 00       	add    $0x1000,%eax
80103be3:	c7 05 f8 6f 00 80 10 	movl   $0x80103b10,0x80006ff8
80103bea:	3b 10 80 
80103bed:	c7 05 f4 6f 00 80 00 	movl   $0x11c000,0x80006ff4
80103bf4:	c0 11 00 
80103bf7:	a3 fc 6f 00 80       	mov    %eax,0x80006ffc
80103bfc:	0f b6 03             	movzbl (%ebx),%eax
80103bff:	83 ec 08             	sub    $0x8,%esp
80103c02:	68 00 70 00 00       	push   $0x7000
80103c07:	50                   	push   %eax
80103c08:	e8 b3 f7 ff ff       	call   801033c0 <lapicstartap>
80103c0d:	83 c4 10             	add    $0x10,%esp
80103c10:	8b 83 a0 00 00 00    	mov    0xa0(%ebx),%eax
80103c16:	85 c0                	test   %eax,%eax
80103c18:	74 f6                	je     80103c10 <main+0xe0>
80103c1a:	69 05 60 eb 12 80 b0 	imul   $0xb0,0x8012eb60,%eax
80103c21:	00 00 00 
80103c24:	81 c3 b0 00 00 00    	add    $0xb0,%ebx
80103c2a:	05 e0 e5 12 80       	add    $0x8012e5e0,%eax
80103c2f:	39 c3                	cmp    %eax,%ebx
80103c31:	72 9d                	jb     80103bd0 <main+0xa0>
80103c33:	83 ec 08             	sub    $0x8,%esp
80103c36:	68 00 00 00 8e       	push   $0x8e000000
80103c3b:	68 00 00 40 80       	push   $0x80400000
80103c40:	e8 1b f2 ff ff       	call   80102e60 <kinit2>
80103c45:	e8 76 94 00 00       	call   8010d0c0 <cginit>
80103c4a:	e8 51 18 00 00       	call   801054a0 <userinit>
80103c4f:	e8 ac d1 ff ff       	call   80100e00 <devinit>
80103c54:	e8 e7 0e 00 00       	call   80104b40 <namespaceinit>
80103c59:	e8 72 fe ff ff       	call   80103ad0 <mpmain>
80103c5e:	66 90                	xchg   %ax,%ax

80103c60 <allocmntlist>:
80103c60:	55                   	push   %ebp
80103c61:	89 e5                	mov    %esp,%ebp
80103c63:	53                   	push   %ebx
80103c64:	83 ec 10             	sub    $0x10,%esp
80103c67:	68 00 cb 12 80       	push   $0x8012cb00
80103c6c:	e8 5f 2a 00 00       	call   801066d0 <acquire>
80103c71:	ba 3c cb 12 80       	mov    $0x8012cb3c,%edx
80103c76:	83 c4 10             	add    $0x10,%esp
80103c79:	31 c0                	xor    %eax,%eax
80103c7b:	eb 10                	jmp    80103c8d <allocmntlist+0x2d>
80103c7d:	8d 76 00             	lea    0x0(%esi),%esi
80103c80:	83 c0 01             	add    $0x1,%eax
80103c83:	83 c2 14             	add    $0x14,%edx
80103c86:	3d c8 00 00 00       	cmp    $0xc8,%eax
80103c8b:	74 33                	je     80103cc0 <allocmntlist+0x60>
80103c8d:	8b 0a                	mov    (%edx),%ecx
80103c8f:	85 c9                	test   %ecx,%ecx
80103c91:	75 ed                	jne    80103c80 <allocmntlist+0x20>
80103c93:	8d 1c 80             	lea    (%eax,%eax,4),%ebx
80103c96:	83 ec 0c             	sub    $0xc,%esp
80103c99:	68 00 cb 12 80       	push   $0x8012cb00
80103c9e:	c1 e3 02             	shl    $0x2,%ebx
80103ca1:	c7 83 3c cb 12 80 01 	movl   $0x1,-0x7fed34c4(%ebx)
80103ca8:	00 00 00 
80103cab:	e8 40 2b 00 00       	call   801067f0 <release>
80103cb0:	8d 83 34 cb 12 80    	lea    -0x7fed34cc(%ebx),%eax
80103cb6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80103cb9:	c9                   	leave  
80103cba:	c3                   	ret    
80103cbb:	90                   	nop
80103cbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80103cc0:	83 ec 0c             	sub    $0xc,%esp
80103cc3:	68 38 f1 10 80       	push   $0x8010f138
80103cc8:	e8 03 c7 ff ff       	call   801003d0 <panic>
80103ccd:	8d 76 00             	lea    0x0(%esi),%esi

80103cd0 <getactivemounts>:
80103cd0:	55                   	push   %ebp
80103cd1:	89 e5                	mov    %esp,%ebp
80103cd3:	83 ec 08             	sub    $0x8,%esp
80103cd6:	e8 95 17 00 00       	call   80105470 <myproc>
80103cdb:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103ce1:	8b 40 04             	mov    0x4(%eax),%eax
80103ce4:	8b 40 3c             	mov    0x3c(%eax),%eax
80103ce7:	c9                   	leave  
80103ce8:	c3                   	ret    
80103ce9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80103cf0 <getinitialrootmount>:
80103cf0:	55                   	push   %ebp
80103cf1:	b8 34 cb 12 80       	mov    $0x8012cb34,%eax
80103cf6:	89 e5                	mov    %esp,%ebp
80103cf8:	5d                   	pop    %ebp
80103cf9:	c3                   	ret    
80103cfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80103d00 <getrootmount>:
80103d00:	55                   	push   %ebp
80103d01:	89 e5                	mov    %esp,%ebp
80103d03:	83 ec 08             	sub    $0x8,%esp
80103d06:	e8 65 17 00 00       	call   80105470 <myproc>
80103d0b:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103d11:	8b 40 04             	mov    0x4(%eax),%eax
80103d14:	8b 40 38             	mov    0x38(%eax),%eax
80103d17:	c9                   	leave  
80103d18:	c3                   	ret    
80103d19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80103d20 <mntinit>:
80103d20:	55                   	push   %ebp
80103d21:	89 e5                	mov    %esp,%ebp
80103d23:	83 ec 10             	sub    $0x10,%esp
80103d26:	68 52 f1 10 80       	push   $0x8010f152
80103d2b:	68 00 cb 12 80       	push   $0x8012cb00
80103d30:	e8 9b 28 00 00       	call   801065d0 <initlock>
80103d35:	c7 05 38 cb 12 80 00 	movl   $0x0,0x8012cb38
80103d3c:	00 00 00 
80103d3f:	c7 05 40 cb 12 80 01 	movl   $0x1,0x8012cb40
80103d46:	00 00 00 
80103d49:	c7 05 34 cb 12 80 00 	movl   $0x0,0x8012cb34
80103d50:	00 00 00 
80103d53:	e8 18 17 00 00       	call   80105470 <myproc>
80103d58:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103d5e:	8b 40 04             	mov    0x4(%eax),%eax
80103d61:	8b 40 3c             	mov    0x3c(%eax),%eax
80103d64:	a3 44 cb 12 80       	mov    %eax,0x8012cb44
80103d69:	e8 02 17 00 00       	call   80105470 <myproc>
80103d6e:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103d74:	8b 40 04             	mov    0x4(%eax),%eax
80103d77:	c7 40 3c 34 cb 12 80 	movl   $0x8012cb34,0x3c(%eax)
80103d7e:	c7 05 3c cb 12 80 01 	movl   $0x1,0x8012cb3c
80103d85:	00 00 00 
80103d88:	e8 e3 16 00 00       	call   80105470 <myproc>
80103d8d:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103d93:	83 c4 10             	add    $0x10,%esp
80103d96:	8b 40 04             	mov    0x4(%eax),%eax
80103d99:	c7 40 38 34 cb 12 80 	movl   $0x8012cb34,0x38(%eax)
80103da0:	c9                   	leave  
80103da1:	c3                   	ret    
80103da2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80103da9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80103db0 <mntdup>:
80103db0:	55                   	push   %ebp
80103db1:	89 e5                	mov    %esp,%ebp
80103db3:	53                   	push   %ebx
80103db4:	83 ec 10             	sub    $0x10,%esp
80103db7:	8b 5d 08             	mov    0x8(%ebp),%ebx
80103dba:	68 00 cb 12 80       	push   $0x8012cb00
80103dbf:	e8 0c 29 00 00       	call   801066d0 <acquire>
80103dc4:	83 43 08 01          	addl   $0x1,0x8(%ebx)
80103dc8:	c7 04 24 00 cb 12 80 	movl   $0x8012cb00,(%esp)
80103dcf:	e8 1c 2a 00 00       	call   801067f0 <release>
80103dd4:	89 d8                	mov    %ebx,%eax
80103dd6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80103dd9:	c9                   	leave  
80103dda:	c3                   	ret    
80103ddb:	90                   	nop
80103ddc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80103de0 <mntput>:
80103de0:	55                   	push   %ebp
80103de1:	89 e5                	mov    %esp,%ebp
80103de3:	53                   	push   %ebx
80103de4:	83 ec 10             	sub    $0x10,%esp
80103de7:	8b 5d 08             	mov    0x8(%ebp),%ebx
80103dea:	68 00 cb 12 80       	push   $0x8012cb00
80103def:	e8 dc 28 00 00       	call   801066d0 <acquire>
80103df4:	83 6b 08 01          	subl   $0x1,0x8(%ebx)
80103df8:	83 c4 10             	add    $0x10,%esp
80103dfb:	c7 45 08 00 cb 12 80 	movl   $0x8012cb00,0x8(%ebp)
80103e02:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80103e05:	c9                   	leave  
80103e06:	e9 e5 29 00 00       	jmp    801067f0 <release>
80103e0b:	90                   	nop
80103e0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80103e10 <mount>:
80103e10:	55                   	push   %ebp
80103e11:	89 e5                	mov    %esp,%ebp
80103e13:	57                   	push   %edi
80103e14:	56                   	push   %esi
80103e15:	53                   	push   %ebx
80103e16:	83 ec 0c             	sub    $0xc,%esp
80103e19:	8b 75 10             	mov    0x10(%ebp),%esi
80103e1c:	e8 3f fe ff ff       	call   80103c60 <allocmntlist>
80103e21:	83 ec 0c             	sub    $0xc,%esp
80103e24:	ff 75 0c             	pushl  0xc(%ebp)
80103e27:	89 c3                	mov    %eax,%ebx
80103e29:	e8 f2 cf ff ff       	call   80100e20 <getorcreatedevice>
80103e2e:	83 c4 10             	add    $0x10,%esp
80103e31:	85 c0                	test   %eax,%eax
80103e33:	0f 88 0a 01 00 00    	js     80103f43 <mount+0x133>
80103e39:	89 c7                	mov    %eax,%edi
80103e3b:	e8 30 16 00 00       	call   80105470 <myproc>
80103e40:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103e46:	83 ec 0c             	sub    $0xc,%esp
80103e49:	8b 40 04             	mov    0x4(%eax),%eax
80103e4c:	83 c0 04             	add    $0x4,%eax
80103e4f:	50                   	push   %eax
80103e50:	e8 7b 28 00 00       	call   801066d0 <acquire>
80103e55:	e8 16 16 00 00       	call   80105470 <myproc>
80103e5a:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103e60:	83 c4 10             	add    $0x10,%esp
80103e63:	8b 40 04             	mov    0x4(%eax),%eax
80103e66:	8b 40 3c             	mov    0x3c(%eax),%eax
80103e69:	85 c0                	test   %eax,%eax
80103e6b:	75 0a                	jne    80103e77 <mount+0x67>
80103e6d:	eb 61                	jmp    80103ed0 <mount+0xc0>
80103e6f:	90                   	nop
80103e70:	8b 40 10             	mov    0x10(%eax),%eax
80103e73:	85 c0                	test   %eax,%eax
80103e75:	74 59                	je     80103ed0 <mount+0xc0>
80103e77:	39 30                	cmp    %esi,(%eax)
80103e79:	75 f5                	jne    80103e70 <mount+0x60>
80103e7b:	8b 55 08             	mov    0x8(%ebp),%edx
80103e7e:	39 50 04             	cmp    %edx,0x4(%eax)
80103e81:	75 ed                	jne    80103e70 <mount+0x60>
80103e83:	e8 e8 15 00 00       	call   80105470 <myproc>
80103e88:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103e8e:	83 ec 0c             	sub    $0xc,%esp
80103e91:	8b 40 04             	mov    0x4(%eax),%eax
80103e94:	83 c0 04             	add    $0x4,%eax
80103e97:	50                   	push   %eax
80103e98:	e8 53 29 00 00       	call   801067f0 <release>
80103e9d:	89 3c 24             	mov    %edi,(%esp)
80103ea0:	e8 bb d0 ff ff       	call   80100f60 <deviceput>
80103ea5:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
80103eac:	c7 04 24 cc f1 10 80 	movl   $0x8010f1cc,(%esp)
80103eb3:	e8 a8 c7 ff ff       	call   80100660 <cprintf>
80103eb8:	83 c4 10             	add    $0x10,%esp
80103ebb:	8d 65 f4             	lea    -0xc(%ebp),%esp
80103ebe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80103ec3:	5b                   	pop    %ebx
80103ec4:	5e                   	pop    %esi
80103ec5:	5f                   	pop    %edi
80103ec6:	5d                   	pop    %ebp
80103ec7:	c3                   	ret    
80103ec8:	90                   	nop
80103ec9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80103ed0:	83 ec 0c             	sub    $0xc,%esp
80103ed3:	68 00 cb 12 80       	push   $0x8012cb00
80103ed8:	e8 f3 27 00 00       	call   801066d0 <acquire>
80103edd:	83 46 08 01          	addl   $0x1,0x8(%esi)
80103ee1:	c7 04 24 00 cb 12 80 	movl   $0x8012cb00,(%esp)
80103ee8:	e8 03 29 00 00       	call   801067f0 <release>
80103eed:	8b 45 08             	mov    0x8(%ebp),%eax
80103ef0:	89 7b 0c             	mov    %edi,0xc(%ebx)
80103ef3:	89 33                	mov    %esi,(%ebx)
80103ef5:	89 43 04             	mov    %eax,0x4(%ebx)
80103ef8:	e8 73 15 00 00       	call   80105470 <myproc>
80103efd:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103f03:	8b 40 04             	mov    0x4(%eax),%eax
80103f06:	8b 40 3c             	mov    0x3c(%eax),%eax
80103f09:	89 43 10             	mov    %eax,0x10(%ebx)
80103f0c:	e8 5f 15 00 00       	call   80105470 <myproc>
80103f11:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103f17:	8b 40 04             	mov    0x4(%eax),%eax
80103f1a:	89 58 3c             	mov    %ebx,0x3c(%eax)
80103f1d:	e8 4e 15 00 00       	call   80105470 <myproc>
80103f22:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103f28:	8b 40 04             	mov    0x4(%eax),%eax
80103f2b:	83 c0 04             	add    $0x4,%eax
80103f2e:	89 04 24             	mov    %eax,(%esp)
80103f31:	e8 ba 28 00 00       	call   801067f0 <release>
80103f36:	83 c4 10             	add    $0x10,%esp
80103f39:	31 c0                	xor    %eax,%eax
80103f3b:	8d 65 f4             	lea    -0xc(%ebp),%esp
80103f3e:	5b                   	pop    %ebx
80103f3f:	5e                   	pop    %esi
80103f40:	5f                   	pop    %edi
80103f41:	5d                   	pop    %ebp
80103f42:	c3                   	ret    
80103f43:	83 ec 0c             	sub    $0xc,%esp
80103f46:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
80103f4d:	68 5d f1 10 80       	push   $0x8010f15d
80103f52:	e8 09 c7 ff ff       	call   80100660 <cprintf>
80103f57:	83 c4 10             	add    $0x10,%esp
80103f5a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80103f5f:	eb da                	jmp    80103f3b <mount+0x12b>
80103f61:	eb 0d                	jmp    80103f70 <umount>
80103f63:	90                   	nop
80103f64:	90                   	nop
80103f65:	90                   	nop
80103f66:	90                   	nop
80103f67:	90                   	nop
80103f68:	90                   	nop
80103f69:	90                   	nop
80103f6a:	90                   	nop
80103f6b:	90                   	nop
80103f6c:	90                   	nop
80103f6d:	90                   	nop
80103f6e:	90                   	nop
80103f6f:	90                   	nop

80103f70 <umount>:
80103f70:	55                   	push   %ebp
80103f71:	89 e5                	mov    %esp,%ebp
80103f73:	57                   	push   %edi
80103f74:	56                   	push   %esi
80103f75:	53                   	push   %ebx
80103f76:	83 ec 0c             	sub    $0xc,%esp
80103f79:	8b 7d 08             	mov    0x8(%ebp),%edi
80103f7c:	e8 ef 14 00 00       	call   80105470 <myproc>
80103f81:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103f87:	83 ec 0c             	sub    $0xc,%esp
80103f8a:	8b 40 04             	mov    0x4(%eax),%eax
80103f8d:	83 c0 04             	add    $0x4,%eax
80103f90:	50                   	push   %eax
80103f91:	e8 3a 27 00 00       	call   801066d0 <acquire>
80103f96:	e8 d5 14 00 00       	call   80105470 <myproc>
80103f9b:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103fa1:	8b 40 04             	mov    0x4(%eax),%eax
80103fa4:	8b 70 3c             	mov    0x3c(%eax),%esi
80103fa7:	e8 c4 14 00 00       	call   80105470 <myproc>
80103fac:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103fb2:	83 c4 10             	add    $0x10,%esp
80103fb5:	85 f6                	test   %esi,%esi
80103fb7:	8b 40 04             	mov    0x4(%eax),%eax
80103fba:	74 19                	je     80103fd5 <umount+0x65>
80103fbc:	39 f7                	cmp    %esi,%edi
80103fbe:	75 0e                	jne    80103fce <umount+0x5e>
80103fc0:	e9 de 00 00 00       	jmp    801040a3 <umount+0x133>
80103fc5:	8d 76 00             	lea    0x0(%esi),%esi
80103fc8:	39 fb                	cmp    %edi,%ebx
80103fca:	74 44                	je     80104010 <umount+0xa0>
80103fcc:	89 de                	mov    %ebx,%esi
80103fce:	8b 5e 10             	mov    0x10(%esi),%ebx
80103fd1:	85 db                	test   %ebx,%ebx
80103fd3:	75 f3                	jne    80103fc8 <umount+0x58>
80103fd5:	e8 96 14 00 00       	call   80105470 <myproc>
80103fda:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80103fe0:	83 ec 0c             	sub    $0xc,%esp
80103fe3:	8b 40 04             	mov    0x4(%eax),%eax
80103fe6:	83 c0 04             	add    $0x4,%eax
80103fe9:	50                   	push   %eax
80103fea:	e8 01 28 00 00       	call   801067f0 <release>
80103fef:	c7 04 24 91 f1 10 80 	movl   $0x8010f191,(%esp)
80103ff6:	e8 65 c6 ff ff       	call   80100660 <cprintf>
80103ffb:	83 c4 10             	add    $0x10,%esp
80103ffe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80104003:	8d 65 f4             	lea    -0xc(%ebp),%esp
80104006:	5b                   	pop    %ebx
80104007:	5e                   	pop    %esi
80104008:	5f                   	pop    %edi
80104009:	5d                   	pop    %ebp
8010400a:	c3                   	ret    
8010400b:	90                   	nop
8010400c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80104010:	83 c6 10             	add    $0x10,%esi
80104013:	8b 03                	mov    (%ebx),%eax
80104015:	85 c0                	test   %eax,%eax
80104017:	0f 84 c3 00 00 00    	je     801040e0 <umount+0x170>
8010401d:	83 ec 0c             	sub    $0xc,%esp
80104020:	68 00 cb 12 80       	push   $0x8012cb00
80104025:	e8 a6 26 00 00       	call   801066d0 <acquire>
8010402a:	83 c4 10             	add    $0x10,%esp
8010402d:	83 7b 08 02          	cmpl   $0x2,0x8(%ebx)
80104031:	7f 7a                	jg     801040ad <umount+0x13d>
80104033:	8b 43 10             	mov    0x10(%ebx),%eax
80104036:	89 06                	mov    %eax,(%esi)
80104038:	e8 33 14 00 00       	call   80105470 <myproc>
8010403d:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80104043:	83 ec 0c             	sub    $0xc,%esp
80104046:	8b 40 04             	mov    0x4(%eax),%eax
80104049:	83 c0 04             	add    $0x4,%eax
8010404c:	50                   	push   %eax
8010404d:	e8 9e 27 00 00       	call   801067f0 <release>
80104052:	8b 03                	mov    (%ebx),%eax
80104054:	8b 7b 04             	mov    0x4(%ebx),%edi
80104057:	8b 73 0c             	mov    0xc(%ebx),%esi
8010405a:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
80104061:	83 68 08 01          	subl   $0x1,0x8(%eax)
80104065:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8010406c:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
80104073:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
8010407a:	c7 04 24 00 cb 12 80 	movl   $0x8012cb00,(%esp)
80104081:	e8 6a 27 00 00       	call   801067f0 <release>
80104086:	89 3c 24             	mov    %edi,(%esp)
80104089:	e8 72 df ff ff       	call   80102000 <iput>
8010408e:	89 34 24             	mov    %esi,(%esp)
80104091:	e8 ca ce ff ff       	call   80100f60 <deviceput>
80104096:	83 c4 10             	add    $0x10,%esp
80104099:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010409c:	31 c0                	xor    %eax,%eax
8010409e:	5b                   	pop    %ebx
8010409f:	5e                   	pop    %esi
801040a0:	5f                   	pop    %edi
801040a1:	5d                   	pop    %ebp
801040a2:	c3                   	ret    
801040a3:	8d 70 3c             	lea    0x3c(%eax),%esi
801040a6:	89 fb                	mov    %edi,%ebx
801040a8:	e9 66 ff ff ff       	jmp    80104013 <umount+0xa3>
801040ad:	83 ec 0c             	sub    $0xc,%esp
801040b0:	68 00 cb 12 80       	push   $0x8012cb00
801040b5:	e8 36 27 00 00       	call   801067f0 <release>
801040ba:	e8 b1 13 00 00       	call   80105470 <myproc>
801040bf:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
801040c5:	8b 40 04             	mov    0x4(%eax),%eax
801040c8:	83 c0 04             	add    $0x4,%eax
801040cb:	89 04 24             	mov    %eax,(%esp)
801040ce:	e8 1d 27 00 00       	call   801067f0 <release>
801040d3:	83 c4 10             	add    $0x10,%esp
801040d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801040db:	e9 23 ff ff ff       	jmp    80104003 <umount+0x93>
801040e0:	e8 8b 13 00 00       	call   80105470 <myproc>
801040e5:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
801040eb:	83 ec 0c             	sub    $0xc,%esp
801040ee:	8b 40 04             	mov    0x4(%eax),%eax
801040f1:	83 c0 04             	add    $0x4,%eax
801040f4:	50                   	push   %eax
801040f5:	e8 f6 26 00 00       	call   801067f0 <release>
801040fa:	c7 04 24 77 f1 10 80 	movl   $0x8010f177,(%esp)
80104101:	e8 5a c5 ff ff       	call   80100660 <cprintf>
80104106:	83 c4 10             	add    $0x10,%esp
80104109:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010410e:	e9 f0 fe ff ff       	jmp    80104003 <umount+0x93>
80104113:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80104119:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80104120 <mntlookup>:
80104120:	55                   	push   %ebp
80104121:	89 e5                	mov    %esp,%ebp
80104123:	57                   	push   %edi
80104124:	56                   	push   %esi
80104125:	53                   	push   %ebx
80104126:	83 ec 1c             	sub    $0x1c,%esp
80104129:	8b 75 08             	mov    0x8(%ebp),%esi
8010412c:	8b 7d 0c             	mov    0xc(%ebp),%edi
8010412f:	e8 3c 13 00 00       	call   80105470 <myproc>
80104134:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
8010413a:	83 ec 0c             	sub    $0xc,%esp
8010413d:	8b 40 04             	mov    0x4(%eax),%eax
80104140:	83 c0 04             	add    $0x4,%eax
80104143:	50                   	push   %eax
80104144:	e8 87 25 00 00       	call   801066d0 <acquire>
80104149:	e8 22 13 00 00       	call   80105470 <myproc>
8010414e:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80104154:	83 c4 10             	add    $0x10,%esp
80104157:	8b 40 04             	mov    0x4(%eax),%eax
8010415a:	8b 58 3c             	mov    0x3c(%eax),%ebx
8010415d:	85 db                	test   %ebx,%ebx
8010415f:	75 0e                	jne    8010416f <mntlookup+0x4f>
80104161:	eb 65                	jmp    801041c8 <mntlookup+0xa8>
80104163:	90                   	nop
80104164:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80104168:	8b 5b 10             	mov    0x10(%ebx),%ebx
8010416b:	85 db                	test   %ebx,%ebx
8010416d:	74 59                	je     801041c8 <mntlookup+0xa8>
8010416f:	39 73 04             	cmp    %esi,0x4(%ebx)
80104172:	75 f4                	jne    80104168 <mntlookup+0x48>
80104174:	39 3b                	cmp    %edi,(%ebx)
80104176:	75 f0                	jne    80104168 <mntlookup+0x48>
80104178:	e8 f3 12 00 00       	call   80105470 <myproc>
8010417d:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80104183:	83 ec 0c             	sub    $0xc,%esp
80104186:	8b 40 04             	mov    0x4(%eax),%eax
80104189:	83 c0 04             	add    $0x4,%eax
8010418c:	50                   	push   %eax
8010418d:	e8 5e 26 00 00       	call   801067f0 <release>
80104192:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
80104195:	c7 04 24 00 cb 12 80 	movl   $0x8012cb00,(%esp)
8010419c:	e8 2f 25 00 00       	call   801066d0 <acquire>
801041a1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
801041a4:	83 40 08 01          	addl   $0x1,0x8(%eax)
801041a8:	c7 04 24 00 cb 12 80 	movl   $0x8012cb00,(%esp)
801041af:	e8 3c 26 00 00       	call   801067f0 <release>
801041b4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
801041b7:	83 c4 10             	add    $0x10,%esp
801041ba:	8d 65 f4             	lea    -0xc(%ebp),%esp
801041bd:	5b                   	pop    %ebx
801041be:	5e                   	pop    %esi
801041bf:	5f                   	pop    %edi
801041c0:	5d                   	pop    %ebp
801041c1:	c3                   	ret    
801041c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801041c8:	e8 a3 12 00 00       	call   80105470 <myproc>
801041cd:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
801041d3:	83 ec 0c             	sub    $0xc,%esp
801041d6:	8b 40 04             	mov    0x4(%eax),%eax
801041d9:	83 c0 04             	add    $0x4,%eax
801041dc:	50                   	push   %eax
801041dd:	e8 0e 26 00 00       	call   801067f0 <release>
801041e2:	83 c4 10             	add    $0x10,%esp
801041e5:	8d 65 f4             	lea    -0xc(%ebp),%esp
801041e8:	31 c0                	xor    %eax,%eax
801041ea:	5b                   	pop    %ebx
801041eb:	5e                   	pop    %esi
801041ec:	5f                   	pop    %edi
801041ed:	5d                   	pop    %ebp
801041ee:	c3                   	ret    
801041ef:	90                   	nop

801041f0 <printmounts>:
801041f0:	55                   	push   %ebp
801041f1:	89 e5                	mov    %esp,%ebp
801041f3:	56                   	push   %esi
801041f4:	53                   	push   %ebx
801041f5:	31 f6                	xor    %esi,%esi
801041f7:	e8 74 12 00 00       	call   80105470 <myproc>
801041fc:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80104202:	83 ec 0c             	sub    $0xc,%esp
80104205:	8b 40 04             	mov    0x4(%eax),%eax
80104208:	83 c0 04             	add    $0x4,%eax
8010420b:	50                   	push   %eax
8010420c:	e8 bf 24 00 00       	call   801066d0 <acquire>
80104211:	e8 5a 12 00 00       	call   80105470 <myproc>
80104216:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
8010421c:	8b 40 04             	mov    0x4(%eax),%eax
8010421f:	8b 58 3c             	mov    0x3c(%eax),%ebx
80104222:	c7 04 24 9c f1 10 80 	movl   $0x8010f19c,(%esp)
80104229:	e8 32 c4 ff ff       	call   80100660 <cprintf>
8010422e:	83 c4 10             	add    $0x10,%esp
80104231:	85 db                	test   %ebx,%ebx
80104233:	74 27                	je     8010425c <printmounts+0x6c>
80104235:	8d 76 00             	lea    0x0(%esi),%esi
80104238:	83 ec 08             	sub    $0x8,%esp
8010423b:	83 c6 01             	add    $0x1,%esi
8010423e:	ff 73 08             	pushl  0x8(%ebx)
80104241:	ff 33                	pushl  (%ebx)
80104243:	ff 73 04             	pushl  0x4(%ebx)
80104246:	53                   	push   %ebx
80104247:	56                   	push   %esi
80104248:	68 f4 f1 10 80       	push   $0x8010f1f4
8010424d:	e8 0e c4 ff ff       	call   80100660 <cprintf>
80104252:	8b 5b 10             	mov    0x10(%ebx),%ebx
80104255:	83 c4 20             	add    $0x20,%esp
80104258:	85 db                	test   %ebx,%ebx
8010425a:	75 dc                	jne    80104238 <printmounts+0x48>
8010425c:	e8 0f 12 00 00       	call   80105470 <myproc>
80104261:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80104267:	83 ec 0c             	sub    $0xc,%esp
8010426a:	8b 40 04             	mov    0x4(%eax),%eax
8010426d:	83 c0 04             	add    $0x4,%eax
80104270:	50                   	push   %eax
80104271:	e8 7a 25 00 00       	call   801067f0 <release>
80104276:	8d 65 f8             	lea    -0x8(%ebp),%esp
80104279:	5b                   	pop    %ebx
8010427a:	5e                   	pop    %esi
8010427b:	5d                   	pop    %ebp
8010427c:	c3                   	ret    
8010427d:	8d 76 00             	lea    0x0(%esi),%esi

80104280 <umountall>:
80104280:	55                   	push   %ebp
80104281:	89 e5                	mov    %esp,%ebp
80104283:	53                   	push   %ebx
80104284:	83 ec 04             	sub    $0x4,%esp
80104287:	8b 45 08             	mov    0x8(%ebp),%eax
8010428a:	85 c0                	test   %eax,%eax
8010428c:	75 18                	jne    801042a6 <umountall+0x26>
8010428e:	eb 2c                	jmp    801042bc <umountall+0x3c>
80104290:	83 ec 0c             	sub    $0xc,%esp
80104293:	50                   	push   %eax
80104294:	e8 d7 fc ff ff       	call   80103f70 <umount>
80104299:	83 c4 10             	add    $0x10,%esp
8010429c:	85 c0                	test   %eax,%eax
8010429e:	75 21                	jne    801042c1 <umountall+0x41>
801042a0:	85 db                	test   %ebx,%ebx
801042a2:	89 d8                	mov    %ebx,%eax
801042a4:	74 16                	je     801042bc <umountall+0x3c>
801042a6:	8b 10                	mov    (%eax),%edx
801042a8:	8b 58 10             	mov    0x10(%eax),%ebx
801042ab:	85 d2                	test   %edx,%edx
801042ad:	75 e1                	jne    80104290 <umountall+0x10>
801042af:	85 db                	test   %ebx,%ebx
801042b1:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
801042b8:	89 d8                	mov    %ebx,%eax
801042ba:	75 ea                	jne    801042a6 <umountall+0x26>
801042bc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801042bf:	c9                   	leave  
801042c0:	c3                   	ret    
801042c1:	83 ec 0c             	sub    $0xc,%esp
801042c4:	68 2c f2 10 80       	push   $0x8010f22c
801042c9:	e8 02 c1 ff ff       	call   801003d0 <panic>
801042ce:	66 90                	xchg   %ax,%ax

801042d0 <copyactivemounts>:
801042d0:	55                   	push   %ebp
801042d1:	89 e5                	mov    %esp,%ebp
801042d3:	57                   	push   %edi
801042d4:	56                   	push   %esi
801042d5:	53                   	push   %ebx
801042d6:	83 ec 1c             	sub    $0x1c,%esp
801042d9:	e8 92 11 00 00       	call   80105470 <myproc>
801042de:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
801042e4:	83 ec 0c             	sub    $0xc,%esp
801042e7:	8b 40 04             	mov    0x4(%eax),%eax
801042ea:	83 c0 04             	add    $0x4,%eax
801042ed:	50                   	push   %eax
801042ee:	e8 dd 23 00 00       	call   801066d0 <acquire>
801042f3:	e8 78 11 00 00       	call   80105470 <myproc>
801042f8:	8b 80 8c 00 00 00    	mov    0x8c(%eax),%eax
801042fe:	89 45 dc             	mov    %eax,-0x24(%ebp)
80104301:	e8 6a 11 00 00       	call   80105470 <myproc>
80104306:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
8010430c:	83 c4 10             	add    $0x10,%esp
8010430f:	8b 40 04             	mov    0x4(%eax),%eax
80104312:	8b 78 3c             	mov    0x3c(%eax),%edi
80104315:	85 ff                	test   %edi,%edi
80104317:	0f 84 80 01 00 00    	je     8010449d <copyactivemounts+0x1cd>
8010431d:	e8 3e f9 ff ff       	call   80103c60 <allocmntlist>
80104322:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
80104329:	89 c6                	mov    %eax,%esi
8010432b:	89 c3                	mov    %eax,%ebx
8010432d:	31 d2                	xor    %edx,%edx
8010432f:	eb 15                	jmp    80104346 <copyactivemounts+0x76>
80104331:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80104338:	e8 23 f9 ff ff       	call   80103c60 <allocmntlist>
8010433d:	85 f6                	test   %esi,%esi
8010433f:	89 da                	mov    %ebx,%edx
80104341:	89 c3                	mov    %eax,%ebx
80104343:	0f 44 f0             	cmove  %eax,%esi
80104346:	83 ec 0c             	sub    $0xc,%esp
80104349:	c7 43 08 01 00 00 00 	movl   $0x1,0x8(%ebx)
80104350:	ff 77 04             	pushl  0x4(%edi)
80104353:	89 55 e0             	mov    %edx,-0x20(%ebp)
80104356:	e8 45 db ff ff       	call   80101ea0 <idup>
8010435b:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
80104361:	89 43 04             	mov    %eax,0x4(%ebx)
80104364:	8b 47 0c             	mov    0xc(%edi),%eax
80104367:	89 43 0c             	mov    %eax,0xc(%ebx)
8010436a:	89 04 24             	mov    %eax,(%esp)
8010436d:	e8 9e cb ff ff       	call   80100f10 <deviceget>
80104372:	8b 55 e0             	mov    -0x20(%ebp),%edx
80104375:	83 c4 10             	add    $0x10,%esp
80104378:	85 d2                	test   %edx,%edx
8010437a:	74 03                	je     8010437f <copyactivemounts+0xaf>
8010437c:	89 5a 10             	mov    %ebx,0x10(%edx)
8010437f:	e8 ec 10 00 00       	call   80105470 <myproc>
80104384:	39 b8 8c 00 00 00    	cmp    %edi,0x8c(%eax)
8010438a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8010438d:	8b 7f 10             	mov    0x10(%edi),%edi
80104390:	0f 44 c3             	cmove  %ebx,%eax
80104393:	85 ff                	test   %edi,%edi
80104395:	89 45 e4             	mov    %eax,-0x1c(%ebp)
80104398:	75 9e                	jne    80104338 <copyactivemounts+0x68>
8010439a:	89 75 e0             	mov    %esi,-0x20(%ebp)
8010439d:	e8 ce 10 00 00       	call   80105470 <myproc>
801043a2:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
801043a8:	8b 75 e0             	mov    -0x20(%ebp),%esi
801043ab:	8b 40 04             	mov    0x4(%eax),%eax
801043ae:	8b 78 3c             	mov    0x3c(%eax),%edi
801043b1:	85 ff                	test   %edi,%edi
801043b3:	74 69                	je     8010441e <copyactivemounts+0x14e>
801043b5:	8d 76 00             	lea    0x0(%esi),%esi
801043b8:	8b 07                	mov    (%edi),%eax
801043ba:	85 c0                	test   %eax,%eax
801043bc:	74 56                	je     80104414 <copyactivemounts+0x144>
801043be:	e8 ad 10 00 00       	call   80105470 <myproc>
801043c3:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
801043c9:	8b 40 04             	mov    0x4(%eax),%eax
801043cc:	8b 40 3c             	mov    0x3c(%eax),%eax
801043cf:	85 c0                	test   %eax,%eax
801043d1:	0f 84 b9 00 00 00    	je     80104490 <copyactivemounts+0x1c0>
801043d7:	8b 17                	mov    (%edi),%edx
801043d9:	89 f3                	mov    %esi,%ebx
801043db:	eb 11                	jmp    801043ee <copyactivemounts+0x11e>
801043dd:	8d 76 00             	lea    0x0(%esi),%esi
801043e0:	8b 40 10             	mov    0x10(%eax),%eax
801043e3:	8b 5b 10             	mov    0x10(%ebx),%ebx
801043e6:	85 c0                	test   %eax,%eax
801043e8:	0f 84 a2 00 00 00    	je     80104490 <copyactivemounts+0x1c0>
801043ee:	39 c2                	cmp    %eax,%edx
801043f0:	75 ee                	jne    801043e0 <copyactivemounts+0x110>
801043f2:	83 ec 0c             	sub    $0xc,%esp
801043f5:	68 00 cb 12 80       	push   $0x8012cb00
801043fa:	e8 d1 22 00 00       	call   801066d0 <acquire>
801043ff:	83 43 08 01          	addl   $0x1,0x8(%ebx)
80104403:	c7 04 24 00 cb 12 80 	movl   $0x8012cb00,(%esp)
8010440a:	e8 e1 23 00 00       	call   801067f0 <release>
8010440f:	89 1e                	mov    %ebx,(%esi)
80104411:	83 c4 10             	add    $0x10,%esp
80104414:	8b 7f 10             	mov    0x10(%edi),%edi
80104417:	8b 76 10             	mov    0x10(%esi),%esi
8010441a:	85 ff                	test   %edi,%edi
8010441c:	75 9a                	jne    801043b8 <copyactivemounts+0xe8>
8010441e:	e8 4d 10 00 00       	call   80105470 <myproc>
80104423:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80104429:	83 ec 0c             	sub    $0xc,%esp
8010442c:	8b 40 04             	mov    0x4(%eax),%eax
8010442f:	83 c0 04             	add    $0x4,%eax
80104432:	50                   	push   %eax
80104433:	e8 b8 23 00 00       	call   801067f0 <release>
80104438:	e8 33 10 00 00       	call   80105470 <myproc>
8010443d:	c7 04 24 00 cb 12 80 	movl   $0x8012cb00,(%esp)
80104444:	89 c3                	mov    %eax,%ebx
80104446:	e8 85 22 00 00       	call   801066d0 <acquire>
8010444b:	8b 75 e4             	mov    -0x1c(%ebp),%esi
8010444e:	83 46 08 01          	addl   $0x1,0x8(%esi)
80104452:	c7 04 24 00 cb 12 80 	movl   $0x8012cb00,(%esp)
80104459:	e8 92 23 00 00       	call   801067f0 <release>
8010445e:	89 b3 8c 00 00 00    	mov    %esi,0x8c(%ebx)
80104464:	c7 04 24 00 cb 12 80 	movl   $0x8012cb00,(%esp)
8010446b:	e8 60 22 00 00       	call   801066d0 <acquire>
80104470:	8b 45 dc             	mov    -0x24(%ebp),%eax
80104473:	83 68 08 01          	subl   $0x1,0x8(%eax)
80104477:	c7 04 24 00 cb 12 80 	movl   $0x8012cb00,(%esp)
8010447e:	e8 6d 23 00 00       	call   801067f0 <release>
80104483:	8b 45 e0             	mov    -0x20(%ebp),%eax
80104486:	8d 65 f4             	lea    -0xc(%ebp),%esp
80104489:	5b                   	pop    %ebx
8010448a:	5e                   	pop    %esi
8010448b:	5f                   	pop    %edi
8010448c:	5d                   	pop    %ebp
8010448d:	c3                   	ret    
8010448e:	66 90                	xchg   %ax,%ax
80104490:	83 ec 0c             	sub    $0xc,%esp
80104493:	68 ae f1 10 80       	push   $0x8010f1ae
80104498:	e8 33 bf ff ff       	call   801003d0 <panic>
8010449d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
801044a4:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
801044ab:	e9 ed fe ff ff       	jmp    8010439d <copyactivemounts+0xcd>

801044b0 <getroot>:
801044b0:	55                   	push   %ebp
801044b1:	89 e5                	mov    %esp,%ebp
801044b3:	8b 45 08             	mov    0x8(%ebp),%eax
801044b6:	85 c0                	test   %eax,%eax
801044b8:	75 08                	jne    801044c2 <getroot+0x12>
801044ba:	eb 0e                	jmp    801044ca <getroot+0x1a>
801044bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801044c0:	89 d0                	mov    %edx,%eax
801044c2:	8b 10                	mov    (%eax),%edx
801044c4:	85 d2                	test   %edx,%edx
801044c6:	75 f8                	jne    801044c0 <getroot+0x10>
801044c8:	5d                   	pop    %ebp
801044c9:	c3                   	ret    
801044ca:	31 c0                	xor    %eax,%eax
801044cc:	5d                   	pop    %ebp
801044cd:	c3                   	ret    
801044ce:	66 90                	xchg   %ax,%ax

801044d0 <allocmount_ns>:
801044d0:	55                   	push   %ebp
801044d1:	89 e5                	mov    %esp,%ebp
801044d3:	53                   	push   %ebx
801044d4:	83 ec 10             	sub    $0x10,%esp
801044d7:	68 e0 da 12 80       	push   $0x8012dae0
801044dc:	e8 ef 21 00 00       	call   801066d0 <acquire>
801044e1:	83 c4 10             	add    $0x10,%esp
801044e4:	31 d2                	xor    %edx,%edx
801044e6:	8d 76 00             	lea    0x0(%esi),%esi
801044e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
801044f0:	89 d3                	mov    %edx,%ebx
801044f2:	c1 e3 06             	shl    $0x6,%ebx
801044f5:	8b 83 14 db 12 80    	mov    -0x7fed24ec(%ebx),%eax
801044fb:	85 c0                	test   %eax,%eax
801044fd:	74 21                	je     80104520 <allocmount_ns+0x50>
801044ff:	83 c2 01             	add    $0x1,%edx
80104502:	83 fa 14             	cmp    $0x14,%edx
80104505:	75 e9                	jne    801044f0 <allocmount_ns+0x20>
80104507:	83 ec 0c             	sub    $0xc,%esp
8010450a:	68 e0 da 12 80       	push   $0x8012dae0
8010450f:	e8 dc 22 00 00       	call   801067f0 <release>
80104514:	c7 04 24 52 f2 10 80 	movl   $0x8010f252,(%esp)
8010451b:	e8 b0 be ff ff       	call   801003d0 <panic>
80104520:	83 ec 0c             	sub    $0xc,%esp
80104523:	c7 83 14 db 12 80 01 	movl   $0x1,-0x7fed24ec(%ebx)
8010452a:	00 00 00 
8010452d:	68 e0 da 12 80       	push   $0x8012dae0
80104532:	e8 b9 22 00 00       	call   801067f0 <release>
80104537:	8d 83 14 db 12 80    	lea    -0x7fed24ec(%ebx),%eax
8010453d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80104540:	c9                   	leave  
80104541:	c3                   	ret    
80104542:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80104549:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80104550 <mount_nsinit>:
80104550:	55                   	push   %ebp
80104551:	89 e5                	mov    %esp,%ebp
80104553:	53                   	push   %ebx
80104554:	bb 18 db 12 80       	mov    $0x8012db18,%ebx
80104559:	83 ec 0c             	sub    $0xc,%esp
8010455c:	68 6a f2 10 80       	push   $0x8010f26a
80104561:	68 e0 da 12 80       	push   $0x8012dae0
80104566:	e8 65 20 00 00       	call   801065d0 <initlock>
8010456b:	83 c4 10             	add    $0x10,%esp
8010456e:	66 90                	xchg   %ax,%ax
80104570:	83 ec 08             	sub    $0x8,%esp
80104573:	68 72 f2 10 80       	push   $0x8010f272
80104578:	53                   	push   %ebx
80104579:	83 c3 40             	add    $0x40,%ebx
8010457c:	e8 4f 20 00 00       	call   801065d0 <initlock>
80104581:	83 c4 10             	add    $0x10,%esp
80104584:	81 fb 18 e0 12 80    	cmp    $0x8012e018,%ebx
8010458a:	75 e4                	jne    80104570 <mount_nsinit+0x20>
8010458c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010458f:	c9                   	leave  
80104590:	c3                   	ret    
80104591:	eb 0d                	jmp    801045a0 <mount_nsdup>
80104593:	90                   	nop
80104594:	90                   	nop
80104595:	90                   	nop
80104596:	90                   	nop
80104597:	90                   	nop
80104598:	90                   	nop
80104599:	90                   	nop
8010459a:	90                   	nop
8010459b:	90                   	nop
8010459c:	90                   	nop
8010459d:	90                   	nop
8010459e:	90                   	nop
8010459f:	90                   	nop

801045a0 <mount_nsdup>:
801045a0:	55                   	push   %ebp
801045a1:	89 e5                	mov    %esp,%ebp
801045a3:	53                   	push   %ebx
801045a4:	83 ec 10             	sub    $0x10,%esp
801045a7:	8b 5d 08             	mov    0x8(%ebp),%ebx
801045aa:	68 e0 da 12 80       	push   $0x8012dae0
801045af:	e8 1c 21 00 00       	call   801066d0 <acquire>
801045b4:	83 03 01             	addl   $0x1,(%ebx)
801045b7:	c7 04 24 e0 da 12 80 	movl   $0x8012dae0,(%esp)
801045be:	e8 2d 22 00 00       	call   801067f0 <release>
801045c3:	89 d8                	mov    %ebx,%eax
801045c5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801045c8:	c9                   	leave  
801045c9:	c3                   	ret    
801045ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

801045d0 <mount_nsput>:
801045d0:	55                   	push   %ebp
801045d1:	89 e5                	mov    %esp,%ebp
801045d3:	53                   	push   %ebx
801045d4:	83 ec 10             	sub    $0x10,%esp
801045d7:	8b 5d 08             	mov    0x8(%ebp),%ebx
801045da:	68 e0 da 12 80       	push   $0x8012dae0
801045df:	e8 ec 20 00 00       	call   801066d0 <acquire>
801045e4:	8b 03                	mov    (%ebx),%eax
801045e6:	83 c4 10             	add    $0x10,%esp
801045e9:	83 f8 01             	cmp    $0x1,%eax
801045ec:	74 1a                	je     80104608 <mount_nsput+0x38>
801045ee:	83 e8 01             	sub    $0x1,%eax
801045f1:	89 03                	mov    %eax,(%ebx)
801045f3:	c7 45 08 e0 da 12 80 	movl   $0x8012dae0,0x8(%ebp)
801045fa:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801045fd:	c9                   	leave  
801045fe:	e9 ed 21 00 00       	jmp    801067f0 <release>
80104603:	90                   	nop
80104604:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80104608:	83 ec 0c             	sub    $0xc,%esp
8010460b:	68 e0 da 12 80       	push   $0x8012dae0
80104610:	e8 db 21 00 00       	call   801067f0 <release>
80104615:	58                   	pop    %eax
80104616:	ff 73 3c             	pushl  0x3c(%ebx)
80104619:	e8 62 fc ff ff       	call   80104280 <umountall>
8010461e:	c7 43 3c 00 00 00 00 	movl   $0x0,0x3c(%ebx)
80104625:	c7 04 24 e0 da 12 80 	movl   $0x8012dae0,(%esp)
8010462c:	e8 9f 20 00 00       	call   801066d0 <acquire>
80104631:	8b 03                	mov    (%ebx),%eax
80104633:	83 c4 10             	add    $0x10,%esp
80104636:	eb b6                	jmp    801045ee <mount_nsput+0x1e>
80104638:	90                   	nop
80104639:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80104640 <copymount_ns>:
80104640:	55                   	push   %ebp
80104641:	89 e5                	mov    %esp,%ebp
80104643:	53                   	push   %ebx
80104644:	83 ec 04             	sub    $0x4,%esp
80104647:	e8 84 fe ff ff       	call   801044d0 <allocmount_ns>
8010464c:	89 c3                	mov    %eax,%ebx
8010464e:	e8 7d fc ff ff       	call   801042d0 <copyactivemounts>
80104653:	83 ec 0c             	sub    $0xc,%esp
80104656:	89 43 3c             	mov    %eax,0x3c(%ebx)
80104659:	50                   	push   %eax
8010465a:	e8 51 fe ff ff       	call   801044b0 <getroot>
8010465f:	89 43 38             	mov    %eax,0x38(%ebx)
80104662:	89 d8                	mov    %ebx,%eax
80104664:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80104667:	c9                   	leave  
80104668:	c3                   	ret    
80104669:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80104670 <newmount_ns>:
80104670:	55                   	push   %ebp
80104671:	89 e5                	mov    %esp,%ebp
80104673:	5d                   	pop    %ebp
80104674:	e9 57 fe ff ff       	jmp    801044d0 <allocmount_ns>
80104679:	66 90                	xchg   %ax,%ax
8010467b:	66 90                	xchg   %ax,%ax
8010467d:	66 90                	xchg   %ax,%ax
8010467f:	90                   	nop

80104680 <pid_ns_init>:
80104680:	55                   	push   %ebp
80104681:	89 e5                	mov    %esp,%ebp
80104683:	53                   	push   %ebx
80104684:	bb 5c e0 12 80       	mov    $0x8012e05c,%ebx
80104689:	83 ec 0c             	sub    $0xc,%esp
8010468c:	68 7b f2 10 80       	push   $0x8010f27b
80104691:	68 20 e0 12 80       	push   $0x8012e020
80104696:	e8 35 1f 00 00       	call   801065d0 <initlock>
8010469b:	83 c4 10             	add    $0x10,%esp
8010469e:	66 90                	xchg   %ax,%ax
801046a0:	83 ec 08             	sub    $0x8,%esp
801046a3:	68 7b f2 10 80       	push   $0x8010f27b
801046a8:	53                   	push   %ebx
801046a9:	83 c3 44             	add    $0x44,%ebx
801046ac:	e8 1f 1f 00 00       	call   801065d0 <initlock>
801046b1:	c7 43 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebx)
801046b8:	83 c4 10             	add    $0x10,%esp
801046bb:	81 fb ac e5 12 80    	cmp    $0x8012e5ac,%ebx
801046c1:	75 dd                	jne    801046a0 <pid_ns_init+0x20>
801046c3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801046c6:	c9                   	leave  
801046c7:	c3                   	ret    
801046c8:	90                   	nop
801046c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

801046d0 <pid_ns_put>:
801046d0:	55                   	push   %ebp
801046d1:	89 e5                	mov    %esp,%ebp
801046d3:	53                   	push   %ebx
801046d4:	83 ec 10             	sub    $0x10,%esp
801046d7:	8b 5d 08             	mov    0x8(%ebp),%ebx
801046da:	68 20 e0 12 80       	push   $0x8012e020
801046df:	e8 ec 1f 00 00       	call   801066d0 <acquire>
801046e4:	8b 03                	mov    (%ebx),%eax
801046e6:	83 c4 10             	add    $0x10,%esp
801046e9:	85 c0                	test   %eax,%eax
801046eb:	74 15                	je     80104702 <pid_ns_put+0x32>
801046ed:	83 e8 01             	sub    $0x1,%eax
801046f0:	89 03                	mov    %eax,(%ebx)
801046f2:	c7 45 08 20 e0 12 80 	movl   $0x8012e020,0x8(%ebp)
801046f9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801046fc:	c9                   	leave  
801046fd:	e9 ee 20 00 00       	jmp    801067f0 <release>
80104702:	83 ec 0c             	sub    $0xc,%esp
80104705:	68 81 f2 10 80       	push   $0x8010f281
8010470a:	e8 c1 bc ff ff       	call   801003d0 <panic>
8010470f:	90                   	nop

80104710 <pid_ns_get>:
80104710:	55                   	push   %ebp
80104711:	89 e5                	mov    %esp,%ebp
80104713:	53                   	push   %ebx
80104714:	83 ec 10             	sub    $0x10,%esp
80104717:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010471a:	68 20 e0 12 80       	push   $0x8012e020
8010471f:	e8 ac 1f 00 00       	call   801066d0 <acquire>
80104724:	83 03 01             	addl   $0x1,(%ebx)
80104727:	83 c4 10             	add    $0x10,%esp
8010472a:	c7 45 08 20 e0 12 80 	movl   $0x8012e020,0x8(%ebp)
80104731:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80104734:	c9                   	leave  
80104735:	e9 b6 20 00 00       	jmp    801067f0 <release>
8010473a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80104740 <pid_ns_alloc>:
80104740:	55                   	push   %ebp
80104741:	89 e5                	mov    %esp,%ebp
80104743:	53                   	push   %ebx
80104744:	83 ec 10             	sub    $0x10,%esp
80104747:	68 20 e0 12 80       	push   $0x8012e020
8010474c:	e8 7f 1f 00 00       	call   801066d0 <acquire>
80104751:	ba 54 e0 12 80       	mov    $0x8012e054,%edx
80104756:	83 c4 10             	add    $0x10,%esp
80104759:	31 c0                	xor    %eax,%eax
8010475b:	90                   	nop
8010475c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80104760:	8b 0a                	mov    (%edx),%ecx
80104762:	85 c9                	test   %ecx,%ecx
80104764:	74 2a                	je     80104790 <pid_ns_alloc+0x50>
80104766:	83 c0 01             	add    $0x1,%eax
80104769:	83 c2 44             	add    $0x44,%edx
8010476c:	83 f8 14             	cmp    $0x14,%eax
8010476f:	75 ef                	jne    80104760 <pid_ns_alloc+0x20>
80104771:	83 ec 0c             	sub    $0xc,%esp
80104774:	68 20 e0 12 80       	push   $0x8012e020
80104779:	e8 72 20 00 00       	call   801067f0 <release>
8010477e:	c7 04 24 96 f2 10 80 	movl   $0x8010f296,(%esp)
80104785:	e8 46 bc ff ff       	call   801003d0 <panic>
8010478a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80104790:	89 c2                	mov    %eax,%edx
80104792:	83 ec 0c             	sub    $0xc,%esp
80104795:	c1 e2 06             	shl    $0x6,%edx
80104798:	68 20 e0 12 80       	push   $0x8012e020
8010479d:	8d 1c 82             	lea    (%edx,%eax,4),%ebx
801047a0:	c7 83 54 e0 12 80 01 	movl   $0x1,-0x7fed1fac(%ebx)
801047a7:	00 00 00 
801047aa:	e8 41 20 00 00       	call   801067f0 <release>
801047af:	8d 83 54 e0 12 80    	lea    -0x7fed1fac(%ebx),%eax
801047b5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801047b8:	c9                   	leave  
801047b9:	c3                   	ret    
801047ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

801047c0 <pid_ns_init_ns>:
801047c0:	55                   	push   %ebp
801047c1:	89 e5                	mov    %esp,%ebp
801047c3:	8b 45 08             	mov    0x8(%ebp),%eax
801047c6:	8b 55 0c             	mov    0xc(%ebp),%edx
801047c9:	c7 40 3c 01 00 00 00 	movl   $0x1,0x3c(%eax)
801047d0:	89 50 04             	mov    %edx,0x4(%eax)
801047d3:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%eax)
801047da:	5d                   	pop    %ebp
801047db:	c3                   	ret    
801047dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801047e0 <pid_ns_dup>:
801047e0:	55                   	push   %ebp
801047e1:	89 e5                	mov    %esp,%ebp
801047e3:	53                   	push   %ebx
801047e4:	83 ec 10             	sub    $0x10,%esp
801047e7:	8b 5d 08             	mov    0x8(%ebp),%ebx
801047ea:	68 20 e0 12 80       	push   $0x8012e020
801047ef:	e8 dc 1e 00 00       	call   801066d0 <acquire>
801047f4:	83 03 01             	addl   $0x1,(%ebx)
801047f7:	c7 04 24 20 e0 12 80 	movl   $0x8012e020,(%esp)
801047fe:	e8 ed 1f 00 00       	call   801067f0 <release>
80104803:	89 d8                	mov    %ebx,%eax
80104805:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80104808:	c9                   	leave  
80104809:	c3                   	ret    
8010480a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80104810 <pid_ns_new>:
80104810:	55                   	push   %ebp
80104811:	89 e5                	mov    %esp,%ebp
80104813:	83 ec 08             	sub    $0x8,%esp
80104816:	e8 25 ff ff ff       	call   80104740 <pid_ns_alloc>
8010481b:	8b 55 08             	mov    0x8(%ebp),%edx
8010481e:	c7 40 3c 01 00 00 00 	movl   $0x1,0x3c(%eax)
80104825:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%eax)
8010482c:	89 50 04             	mov    %edx,0x4(%eax)
8010482f:	c9                   	leave  
80104830:	c3                   	ret    
80104831:	eb 0d                	jmp    80104840 <pid_ns_next_pid>
80104833:	90                   	nop
80104834:	90                   	nop
80104835:	90                   	nop
80104836:	90                   	nop
80104837:	90                   	nop
80104838:	90                   	nop
80104839:	90                   	nop
8010483a:	90                   	nop
8010483b:	90                   	nop
8010483c:	90                   	nop
8010483d:	90                   	nop
8010483e:	90                   	nop
8010483f:	90                   	nop

80104840 <pid_ns_next_pid>:
80104840:	55                   	push   %ebp
80104841:	89 e5                	mov    %esp,%ebp
80104843:	57                   	push   %edi
80104844:	56                   	push   %esi
80104845:	53                   	push   %ebx
80104846:	83 ec 18             	sub    $0x18,%esp
80104849:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010484c:	8d 7b 08             	lea    0x8(%ebx),%edi
8010484f:	57                   	push   %edi
80104850:	e8 7b 1e 00 00       	call   801066d0 <acquire>
80104855:	8b 73 3c             	mov    0x3c(%ebx),%esi
80104858:	8d 46 01             	lea    0x1(%esi),%eax
8010485b:	89 43 3c             	mov    %eax,0x3c(%ebx)
8010485e:	89 3c 24             	mov    %edi,(%esp)
80104861:	e8 8a 1f 00 00       	call   801067f0 <release>
80104866:	8d 65 f4             	lea    -0xc(%ebp),%esp
80104869:	89 f0                	mov    %esi,%eax
8010486b:	5b                   	pop    %ebx
8010486c:	5e                   	pop    %esi
8010486d:	5f                   	pop    %edi
8010486e:	5d                   	pop    %ebp
8010486f:	c3                   	ret    

80104870 <pid_ns_is_max_depth>:
80104870:	55                   	push   %ebp
80104871:	89 e5                	mov    %esp,%ebp
80104873:	8b 45 08             	mov    0x8(%ebp),%eax
80104876:	85 c0                	test   %eax,%eax
80104878:	74 1a                	je     80104894 <pid_ns_is_max_depth+0x24>
8010487a:	31 d2                	xor    %edx,%edx
8010487c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80104880:	8b 40 04             	mov    0x4(%eax),%eax
80104883:	83 c2 01             	add    $0x1,%edx
80104886:	85 c0                	test   %eax,%eax
80104888:	75 f6                	jne    80104880 <pid_ns_is_max_depth+0x10>
8010488a:	31 c0                	xor    %eax,%eax
8010488c:	83 fa 03             	cmp    $0x3,%edx
8010488f:	0f 9f c0             	setg   %al
80104892:	5d                   	pop    %ebp
80104893:	c3                   	ret    
80104894:	31 c0                	xor    %eax,%eax
80104896:	5d                   	pop    %ebp
80104897:	c3                   	ret    
80104898:	66 90                	xchg   %ax,%ax
8010489a:	66 90                	xchg   %ax,%ax
8010489c:	66 90                	xchg   %ax,%ax
8010489e:	66 90                	xchg   %ax,%ax

801048a0 <mpsearch1>:
801048a0:	55                   	push   %ebp
801048a1:	89 e5                	mov    %esp,%ebp
801048a3:	57                   	push   %edi
801048a4:	56                   	push   %esi
801048a5:	8d b0 00 00 00 80    	lea    -0x80000000(%eax),%esi
801048ab:	53                   	push   %ebx
801048ac:	8d 1c 16             	lea    (%esi,%edx,1),%ebx
801048af:	83 ec 0c             	sub    $0xc,%esp
801048b2:	39 de                	cmp    %ebx,%esi
801048b4:	73 48                	jae    801048fe <mpsearch1+0x5e>
801048b6:	8d 76 00             	lea    0x0(%esi),%esi
801048b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
801048c0:	83 ec 04             	sub    $0x4,%esp
801048c3:	8d 7e 10             	lea    0x10(%esi),%edi
801048c6:	6a 04                	push   $0x4
801048c8:	68 ac f2 10 80       	push   $0x8010f2ac
801048cd:	56                   	push   %esi
801048ce:	e8 bd 1f 00 00       	call   80106890 <memcmp>
801048d3:	83 c4 10             	add    $0x10,%esp
801048d6:	85 c0                	test   %eax,%eax
801048d8:	75 1e                	jne    801048f8 <mpsearch1+0x58>
801048da:	8d 7e 10             	lea    0x10(%esi),%edi
801048dd:	89 f2                	mov    %esi,%edx
801048df:	31 c9                	xor    %ecx,%ecx
801048e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801048e8:	0f b6 02             	movzbl (%edx),%eax
801048eb:	83 c2 01             	add    $0x1,%edx
801048ee:	01 c1                	add    %eax,%ecx
801048f0:	39 fa                	cmp    %edi,%edx
801048f2:	75 f4                	jne    801048e8 <mpsearch1+0x48>
801048f4:	84 c9                	test   %cl,%cl
801048f6:	74 10                	je     80104908 <mpsearch1+0x68>
801048f8:	39 fb                	cmp    %edi,%ebx
801048fa:	89 fe                	mov    %edi,%esi
801048fc:	77 c2                	ja     801048c0 <mpsearch1+0x20>
801048fe:	8d 65 f4             	lea    -0xc(%ebp),%esp
80104901:	31 c0                	xor    %eax,%eax
80104903:	5b                   	pop    %ebx
80104904:	5e                   	pop    %esi
80104905:	5f                   	pop    %edi
80104906:	5d                   	pop    %ebp
80104907:	c3                   	ret    
80104908:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010490b:	89 f0                	mov    %esi,%eax
8010490d:	5b                   	pop    %ebx
8010490e:	5e                   	pop    %esi
8010490f:	5f                   	pop    %edi
80104910:	5d                   	pop    %ebp
80104911:	c3                   	ret    
80104912:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80104919:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80104920 <mpinit>:
80104920:	55                   	push   %ebp
80104921:	89 e5                	mov    %esp,%ebp
80104923:	57                   	push   %edi
80104924:	56                   	push   %esi
80104925:	53                   	push   %ebx
80104926:	83 ec 1c             	sub    $0x1c,%esp
80104929:	0f b6 05 0f 04 00 80 	movzbl 0x8000040f,%eax
80104930:	0f b6 15 0e 04 00 80 	movzbl 0x8000040e,%edx
80104937:	c1 e0 08             	shl    $0x8,%eax
8010493a:	09 d0                	or     %edx,%eax
8010493c:	c1 e0 04             	shl    $0x4,%eax
8010493f:	85 c0                	test   %eax,%eax
80104941:	75 1b                	jne    8010495e <mpinit+0x3e>
80104943:	0f b6 05 14 04 00 80 	movzbl 0x80000414,%eax
8010494a:	0f b6 15 13 04 00 80 	movzbl 0x80000413,%edx
80104951:	c1 e0 08             	shl    $0x8,%eax
80104954:	09 d0                	or     %edx,%eax
80104956:	c1 e0 0a             	shl    $0xa,%eax
80104959:	2d 00 04 00 00       	sub    $0x400,%eax
8010495e:	ba 00 04 00 00       	mov    $0x400,%edx
80104963:	e8 38 ff ff ff       	call   801048a0 <mpsearch1>
80104968:	85 c0                	test   %eax,%eax
8010496a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8010496d:	0f 84 37 01 00 00    	je     80104aaa <mpinit+0x18a>
80104973:	8b 45 e4             	mov    -0x1c(%ebp),%eax
80104976:	8b 58 04             	mov    0x4(%eax),%ebx
80104979:	85 db                	test   %ebx,%ebx
8010497b:	0f 84 43 01 00 00    	je     80104ac4 <mpinit+0x1a4>
80104981:	8d b3 00 00 00 80    	lea    -0x80000000(%ebx),%esi
80104987:	83 ec 04             	sub    $0x4,%esp
8010498a:	6a 04                	push   $0x4
8010498c:	68 b1 f2 10 80       	push   $0x8010f2b1
80104991:	56                   	push   %esi
80104992:	e8 f9 1e 00 00       	call   80106890 <memcmp>
80104997:	83 c4 10             	add    $0x10,%esp
8010499a:	85 c0                	test   %eax,%eax
8010499c:	0f 85 22 01 00 00    	jne    80104ac4 <mpinit+0x1a4>
801049a2:	0f b6 83 06 00 00 80 	movzbl -0x7ffffffa(%ebx),%eax
801049a9:	3c 01                	cmp    $0x1,%al
801049ab:	74 08                	je     801049b5 <mpinit+0x95>
801049ad:	3c 04                	cmp    $0x4,%al
801049af:	0f 85 0f 01 00 00    	jne    80104ac4 <mpinit+0x1a4>
801049b5:	0f b7 bb 04 00 00 80 	movzwl -0x7ffffffc(%ebx),%edi
801049bc:	85 ff                	test   %edi,%edi
801049be:	74 21                	je     801049e1 <mpinit+0xc1>
801049c0:	31 d2                	xor    %edx,%edx
801049c2:	31 c0                	xor    %eax,%eax
801049c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801049c8:	0f b6 8c 03 00 00 00 	movzbl -0x80000000(%ebx,%eax,1),%ecx
801049cf:	80 
801049d0:	83 c0 01             	add    $0x1,%eax
801049d3:	01 ca                	add    %ecx,%edx
801049d5:	39 c7                	cmp    %eax,%edi
801049d7:	75 ef                	jne    801049c8 <mpinit+0xa8>
801049d9:	84 d2                	test   %dl,%dl
801049db:	0f 85 e3 00 00 00    	jne    80104ac4 <mpinit+0x1a4>
801049e1:	85 f6                	test   %esi,%esi
801049e3:	0f 84 db 00 00 00    	je     80104ac4 <mpinit+0x1a4>
801049e9:	8b 83 24 00 00 80    	mov    -0x7fffffdc(%ebx),%eax
801049ef:	a3 04 ca 12 80       	mov    %eax,0x8012ca04
801049f4:	0f b7 93 04 00 00 80 	movzwl -0x7ffffffc(%ebx),%edx
801049fb:	8d 83 2c 00 00 80    	lea    -0x7fffffd4(%ebx),%eax
80104a01:	bb 01 00 00 00       	mov    $0x1,%ebx
80104a06:	01 d6                	add    %edx,%esi
80104a08:	90                   	nop
80104a09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80104a10:	39 c6                	cmp    %eax,%esi
80104a12:	76 23                	jbe    80104a37 <mpinit+0x117>
80104a14:	0f b6 10             	movzbl (%eax),%edx
80104a17:	80 fa 04             	cmp    $0x4,%dl
80104a1a:	0f 87 c0 00 00 00    	ja     80104ae0 <mpinit+0x1c0>
80104a20:	ff 24 95 f0 f2 10 80 	jmp    *-0x7fef0d10(,%edx,4)
80104a27:	89 f6                	mov    %esi,%esi
80104a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80104a30:	83 c0 08             	add    $0x8,%eax
80104a33:	39 c6                	cmp    %eax,%esi
80104a35:	77 dd                	ja     80104a14 <mpinit+0xf4>
80104a37:	85 db                	test   %ebx,%ebx
80104a39:	0f 84 92 00 00 00    	je     80104ad1 <mpinit+0x1b1>
80104a3f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
80104a42:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)
80104a46:	74 15                	je     80104a5d <mpinit+0x13d>
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80104a48:	ba 22 00 00 00       	mov    $0x22,%edx
80104a4d:	b8 70 00 00 00       	mov    $0x70,%eax
80104a52:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
80104a53:	ba 23 00 00 00       	mov    $0x23,%edx
80104a58:	ec                   	in     (%dx),%al
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80104a59:	83 c8 01             	or     $0x1,%eax
80104a5c:	ee                   	out    %al,(%dx)
80104a5d:	8d 65 f4             	lea    -0xc(%ebp),%esp
80104a60:	5b                   	pop    %ebx
80104a61:	5e                   	pop    %esi
80104a62:	5f                   	pop    %edi
80104a63:	5d                   	pop    %ebp
80104a64:	c3                   	ret    
80104a65:	8d 76 00             	lea    0x0(%esi),%esi
80104a68:	8b 0d 60 eb 12 80    	mov    0x8012eb60,%ecx
80104a6e:	83 f9 07             	cmp    $0x7,%ecx
80104a71:	7f 19                	jg     80104a8c <mpinit+0x16c>
80104a73:	0f b6 50 01          	movzbl 0x1(%eax),%edx
80104a77:	69 f9 b0 00 00 00    	imul   $0xb0,%ecx,%edi
80104a7d:	83 c1 01             	add    $0x1,%ecx
80104a80:	89 0d 60 eb 12 80    	mov    %ecx,0x8012eb60
80104a86:	88 97 e0 e5 12 80    	mov    %dl,-0x7fed1a20(%edi)
80104a8c:	83 c0 14             	add    $0x14,%eax
80104a8f:	e9 7c ff ff ff       	jmp    80104a10 <mpinit+0xf0>
80104a94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80104a98:	0f b6 50 01          	movzbl 0x1(%eax),%edx
80104a9c:	83 c0 08             	add    $0x8,%eax
80104a9f:	88 15 c0 e5 12 80    	mov    %dl,0x8012e5c0
80104aa5:	e9 66 ff ff ff       	jmp    80104a10 <mpinit+0xf0>
80104aaa:	ba 00 00 01 00       	mov    $0x10000,%edx
80104aaf:	b8 00 00 0f 00       	mov    $0xf0000,%eax
80104ab4:	e8 e7 fd ff ff       	call   801048a0 <mpsearch1>
80104ab9:	85 c0                	test   %eax,%eax
80104abb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
80104abe:	0f 85 af fe ff ff    	jne    80104973 <mpinit+0x53>
80104ac4:	83 ec 0c             	sub    $0xc,%esp
80104ac7:	68 b6 f2 10 80       	push   $0x8010f2b6
80104acc:	e8 ff b8 ff ff       	call   801003d0 <panic>
80104ad1:	83 ec 0c             	sub    $0xc,%esp
80104ad4:	68 d0 f2 10 80       	push   $0x8010f2d0
80104ad9:	e8 f2 b8 ff ff       	call   801003d0 <panic>
80104ade:	66 90                	xchg   %ax,%ax
80104ae0:	31 db                	xor    %ebx,%ebx
80104ae2:	e9 30 ff ff ff       	jmp    80104a17 <mpinit+0xf7>
80104ae7:	66 90                	xchg   %ax,%ax
80104ae9:	66 90                	xchg   %ax,%ax
80104aeb:	66 90                	xchg   %ax,%ax
80104aed:	66 90                	xchg   %ax,%ax
80104aef:	90                   	nop

80104af0 <allocnsproxyinternal>:
80104af0:	ba b4 eb 12 80       	mov    $0x8012ebb4,%edx
80104af5:	31 c0                	xor    %eax,%eax
80104af7:	89 f6                	mov    %esi,%esi
80104af9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80104b00:	8b 0a                	mov    (%edx),%ecx
80104b02:	85 c9                	test   %ecx,%ecx
80104b04:	74 22                	je     80104b28 <allocnsproxyinternal+0x38>
80104b06:	83 c0 01             	add    $0x1,%eax
80104b09:	83 c2 0c             	add    $0xc,%edx
80104b0c:	83 f8 14             	cmp    $0x14,%eax
80104b0f:	75 ef                	jne    80104b00 <allocnsproxyinternal+0x10>
80104b11:	55                   	push   %ebp
80104b12:	89 e5                	mov    %esp,%ebp
80104b14:	83 ec 14             	sub    $0x14,%esp
80104b17:	68 04 f3 10 80       	push   $0x8010f304
80104b1c:	e8 af b8 ff ff       	call   801003d0 <panic>
80104b21:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80104b28:	8d 04 40             	lea    (%eax,%eax,2),%eax
80104b2b:	c1 e0 02             	shl    $0x2,%eax
80104b2e:	c7 80 b4 eb 12 80 01 	movl   $0x1,-0x7fed144c(%eax)
80104b35:	00 00 00 
80104b38:	05 b4 eb 12 80       	add    $0x8012ebb4,%eax
80104b3d:	c3                   	ret    
80104b3e:	66 90                	xchg   %ax,%ax

80104b40 <namespaceinit>:
80104b40:	55                   	push   %ebp
80104b41:	89 e5                	mov    %esp,%ebp
80104b43:	83 ec 10             	sub    $0x10,%esp
80104b46:	68 1b f3 10 80       	push   $0x8010f31b
80104b4b:	68 80 eb 12 80       	push   $0x8012eb80
80104b50:	e8 7b 1a 00 00       	call   801065d0 <initlock>
80104b55:	e8 f6 f9 ff ff       	call   80104550 <mount_nsinit>
80104b5a:	83 c4 10             	add    $0x10,%esp
80104b5d:	c9                   	leave  
80104b5e:	e9 1d fb ff ff       	jmp    80104680 <pid_ns_init>
80104b63:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80104b69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80104b70 <namespaceput>:
80104b70:	55                   	push   %ebp
80104b71:	89 e5                	mov    %esp,%ebp
80104b73:	53                   	push   %ebx
80104b74:	83 ec 10             	sub    $0x10,%esp
80104b77:	8b 5d 08             	mov    0x8(%ebp),%ebx
80104b7a:	68 80 eb 12 80       	push   $0x8012eb80
80104b7f:	e8 4c 1b 00 00       	call   801066d0 <acquire>
80104b84:	8b 03                	mov    (%ebx),%eax
80104b86:	83 c4 10             	add    $0x10,%esp
80104b89:	83 f8 01             	cmp    $0x1,%eax
80104b8c:	74 1a                	je     80104ba8 <namespaceput+0x38>
80104b8e:	83 e8 01             	sub    $0x1,%eax
80104b91:	89 03                	mov    %eax,(%ebx)
80104b93:	c7 45 08 80 eb 12 80 	movl   $0x8012eb80,0x8(%ebp)
80104b9a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80104b9d:	c9                   	leave  
80104b9e:	e9 4d 1c 00 00       	jmp    801067f0 <release>
80104ba3:	90                   	nop
80104ba4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80104ba8:	83 ec 0c             	sub    $0xc,%esp
80104bab:	68 80 eb 12 80       	push   $0x8012eb80
80104bb0:	e8 3b 1c 00 00       	call   801067f0 <release>
80104bb5:	58                   	pop    %eax
80104bb6:	ff 73 04             	pushl  0x4(%ebx)
80104bb9:	e8 12 fa ff ff       	call   801045d0 <mount_nsput>
80104bbe:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
80104bc5:	5a                   	pop    %edx
80104bc6:	ff 73 08             	pushl  0x8(%ebx)
80104bc9:	e8 02 fb ff ff       	call   801046d0 <pid_ns_put>
80104bce:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
80104bd5:	c7 04 24 80 eb 12 80 	movl   $0x8012eb80,(%esp)
80104bdc:	e8 ef 1a 00 00       	call   801066d0 <acquire>
80104be1:	8b 03                	mov    (%ebx),%eax
80104be3:	83 c4 10             	add    $0x10,%esp
80104be6:	eb a6                	jmp    80104b8e <namespaceput+0x1e>
80104be8:	90                   	nop
80104be9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80104bf0 <namespacedup>:
80104bf0:	55                   	push   %ebp
80104bf1:	89 e5                	mov    %esp,%ebp
80104bf3:	53                   	push   %ebx
80104bf4:	83 ec 10             	sub    $0x10,%esp
80104bf7:	8b 5d 08             	mov    0x8(%ebp),%ebx
80104bfa:	68 80 eb 12 80       	push   $0x8012eb80
80104bff:	e8 cc 1a 00 00       	call   801066d0 <acquire>
80104c04:	83 03 01             	addl   $0x1,(%ebx)
80104c07:	c7 04 24 80 eb 12 80 	movl   $0x8012eb80,(%esp)
80104c0e:	e8 dd 1b 00 00       	call   801067f0 <release>
80104c13:	89 d8                	mov    %ebx,%eax
80104c15:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80104c18:	c9                   	leave  
80104c19:	c3                   	ret    
80104c1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80104c20 <emptynsproxy>:
80104c20:	55                   	push   %ebp
80104c21:	89 e5                	mov    %esp,%ebp
80104c23:	53                   	push   %ebx
80104c24:	83 ec 10             	sub    $0x10,%esp
80104c27:	68 80 eb 12 80       	push   $0x8012eb80
80104c2c:	e8 9f 1a 00 00       	call   801066d0 <acquire>
80104c31:	e8 ba fe ff ff       	call   80104af0 <allocnsproxyinternal>
80104c36:	89 c3                	mov    %eax,%ebx
80104c38:	e8 33 fa ff ff       	call   80104670 <newmount_ns>
80104c3d:	89 43 04             	mov    %eax,0x4(%ebx)
80104c40:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
80104c47:	e8 c4 fb ff ff       	call   80104810 <pid_ns_new>
80104c4c:	89 43 08             	mov    %eax,0x8(%ebx)
80104c4f:	c7 04 24 80 eb 12 80 	movl   $0x8012eb80,(%esp)
80104c56:	e8 95 1b 00 00       	call   801067f0 <release>
80104c5b:	89 d8                	mov    %ebx,%eax
80104c5d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80104c60:	c9                   	leave  
80104c61:	c3                   	ret    
80104c62:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80104c69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80104c70 <namespace_replace_pid_ns>:
80104c70:	55                   	push   %ebp
80104c71:	89 e5                	mov    %esp,%ebp
80104c73:	53                   	push   %ebx
80104c74:	83 ec 04             	sub    $0x4,%esp
80104c77:	e8 74 fe ff ff       	call   80104af0 <allocnsproxyinternal>
80104c7c:	89 c3                	mov    %eax,%ebx
80104c7e:	8b 45 08             	mov    0x8(%ebp),%eax
80104c81:	83 ec 0c             	sub    $0xc,%esp
80104c84:	ff 70 04             	pushl  0x4(%eax)
80104c87:	e8 14 f9 ff ff       	call   801045a0 <mount_nsdup>
80104c8c:	89 43 04             	mov    %eax,0x4(%ebx)
80104c8f:	58                   	pop    %eax
80104c90:	ff 75 0c             	pushl  0xc(%ebp)
80104c93:	e8 48 fb ff ff       	call   801047e0 <pid_ns_dup>
80104c98:	89 43 08             	mov    %eax,0x8(%ebx)
80104c9b:	89 d8                	mov    %ebx,%eax
80104c9d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80104ca0:	c9                   	leave  
80104ca1:	c3                   	ret    
80104ca2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80104ca9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80104cb0 <unshare>:
80104cb0:	55                   	push   %ebp
80104cb1:	89 e5                	mov    %esp,%ebp
80104cb3:	57                   	push   %edi
80104cb4:	56                   	push   %esi
80104cb5:	53                   	push   %ebx
80104cb6:	83 ec 18             	sub    $0x18,%esp
80104cb9:	8b 5d 08             	mov    0x8(%ebp),%ebx
80104cbc:	68 80 eb 12 80       	push   $0x8012eb80
80104cc1:	e8 0a 1a 00 00       	call   801066d0 <acquire>
80104cc6:	e8 a5 07 00 00       	call   80105470 <myproc>
80104ccb:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80104cd1:	83 c4 10             	add    $0x10,%esp
80104cd4:	83 38 01             	cmpl   $0x1,(%eax)
80104cd7:	7e 53                	jle    80104d2c <unshare+0x7c>
80104cd9:	e8 92 07 00 00       	call   80105470 <myproc>
80104cde:	8b b0 a0 00 00 00    	mov    0xa0(%eax),%esi
80104ce4:	e8 87 07 00 00       	call   80105470 <myproc>
80104ce9:	89 c7                	mov    %eax,%edi
80104ceb:	e8 00 fe ff ff       	call   80104af0 <allocnsproxyinternal>
80104cf0:	89 87 a0 00 00 00    	mov    %eax,0xa0(%edi)
80104cf6:	e8 75 07 00 00       	call   80105470 <myproc>
80104cfb:	8b b8 a0 00 00 00    	mov    0xa0(%eax),%edi
80104d01:	83 ec 0c             	sub    $0xc,%esp
80104d04:	ff 76 04             	pushl  0x4(%esi)
80104d07:	e8 94 f8 ff ff       	call   801045a0 <mount_nsdup>
80104d0c:	89 47 04             	mov    %eax,0x4(%edi)
80104d0f:	e8 5c 07 00 00       	call   80105470 <myproc>
80104d14:	5a                   	pop    %edx
80104d15:	8b b8 a0 00 00 00    	mov    0xa0(%eax),%edi
80104d1b:	ff 76 08             	pushl  0x8(%esi)
80104d1e:	e8 bd fa ff ff       	call   801047e0 <pid_ns_dup>
80104d23:	89 47 08             	mov    %eax,0x8(%edi)
80104d26:	83 2e 01             	subl   $0x1,(%esi)
80104d29:	83 c4 10             	add    $0x10,%esp
80104d2c:	83 ec 0c             	sub    $0xc,%esp
80104d2f:	68 80 eb 12 80       	push   $0x8012eb80
80104d34:	e8 b7 1a 00 00       	call   801067f0 <release>
80104d39:	83 c4 10             	add    $0x10,%esp
80104d3c:	83 fb 01             	cmp    $0x1,%ebx
80104d3f:	74 7f                	je     80104dc0 <unshare+0x110>
80104d41:	83 fb 02             	cmp    $0x2,%ebx
80104d44:	75 62                	jne    80104da8 <unshare+0xf8>
80104d46:	e8 25 07 00 00       	call   80105470 <myproc>
80104d4b:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
80104d51:	85 c0                	test   %eax,%eax
80104d53:	75 53                	jne    80104da8 <unshare+0xf8>
80104d55:	e8 16 07 00 00       	call   80105470 <myproc>
80104d5a:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80104d60:	83 ec 0c             	sub    $0xc,%esp
80104d63:	ff 70 08             	pushl  0x8(%eax)
80104d66:	e8 05 fb ff ff       	call   80104870 <pid_ns_is_max_depth>
80104d6b:	83 c4 10             	add    $0x10,%esp
80104d6e:	85 c0                	test   %eax,%eax
80104d70:	89 c3                	mov    %eax,%ebx
80104d72:	75 34                	jne    80104da8 <unshare+0xf8>
80104d74:	e8 f7 06 00 00       	call   80105470 <myproc>
80104d79:	89 c6                	mov    %eax,%esi
80104d7b:	e8 f0 06 00 00       	call   80105470 <myproc>
80104d80:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80104d86:	83 ec 0c             	sub    $0xc,%esp
80104d89:	ff 70 08             	pushl  0x8(%eax)
80104d8c:	e8 7f fa ff ff       	call   80104810 <pid_ns_new>
80104d91:	83 c4 10             	add    $0x10,%esp
80104d94:	89 86 a4 00 00 00    	mov    %eax,0xa4(%esi)
80104d9a:	8d 65 f4             	lea    -0xc(%ebp),%esp
80104d9d:	89 d8                	mov    %ebx,%eax
80104d9f:	5b                   	pop    %ebx
80104da0:	5e                   	pop    %esi
80104da1:	5f                   	pop    %edi
80104da2:	5d                   	pop    %ebp
80104da3:	c3                   	ret    
80104da4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80104da8:	8d 65 f4             	lea    -0xc(%ebp),%esp
80104dab:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
80104db0:	89 d8                	mov    %ebx,%eax
80104db2:	5b                   	pop    %ebx
80104db3:	5e                   	pop    %esi
80104db4:	5f                   	pop    %edi
80104db5:	5d                   	pop    %ebp
80104db6:	c3                   	ret    
80104db7:	89 f6                	mov    %esi,%esi
80104db9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80104dc0:	e8 ab 06 00 00       	call   80105470 <myproc>
80104dc5:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
80104dcb:	8b 58 04             	mov    0x4(%eax),%ebx
80104dce:	e8 9d 06 00 00       	call   80105470 <myproc>
80104dd3:	8b b0 a0 00 00 00    	mov    0xa0(%eax),%esi
80104dd9:	e8 62 f8 ff ff       	call   80104640 <copymount_ns>
80104dde:	83 ec 0c             	sub    $0xc,%esp
80104de1:	89 46 04             	mov    %eax,0x4(%esi)
80104de4:	53                   	push   %ebx
80104de5:	31 db                	xor    %ebx,%ebx
80104de7:	e8 e4 f7 ff ff       	call   801045d0 <mount_nsput>
80104dec:	83 c4 10             	add    $0x10,%esp
80104def:	8d 65 f4             	lea    -0xc(%ebp),%esp
80104df2:	89 d8                	mov    %ebx,%eax
80104df4:	5b                   	pop    %ebx
80104df5:	5e                   	pop    %esi
80104df6:	5f                   	pop    %edi
80104df7:	5d                   	pop    %ebp
80104df8:	c3                   	ret    
80104df9:	66 90                	xchg   %ax,%ax
80104dfb:	66 90                	xchg   %ax,%ax
80104dfd:	66 90                	xchg   %ax,%ax
80104dff:	90                   	nop

80104e00 <picinit>:
80104e00:	55                   	push   %ebp
80104e01:	ba 21 00 00 00       	mov    $0x21,%edx
80104e06:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80104e0b:	89 e5                	mov    %esp,%ebp
80104e0d:	ee                   	out    %al,(%dx)
80104e0e:	ba a1 00 00 00       	mov    $0xa1,%edx
80104e13:	ee                   	out    %al,(%dx)
80104e14:	5d                   	pop    %ebp
80104e15:	c3                   	ret    
80104e16:	66 90                	xchg   %ax,%ax
80104e18:	66 90                	xchg   %ax,%ax
80104e1a:	66 90                	xchg   %ax,%ax
80104e1c:	66 90                	xchg   %ax,%ax
80104e1e:	66 90                	xchg   %ax,%ax

80104e20 <pipealloc>:
80104e20:	55                   	push   %ebp
80104e21:	89 e5                	mov    %esp,%ebp
80104e23:	57                   	push   %edi
80104e24:	56                   	push   %esi
80104e25:	53                   	push   %ebx
80104e26:	83 ec 0c             	sub    $0xc,%esp
80104e29:	8b 75 08             	mov    0x8(%ebp),%esi
80104e2c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
80104e2f:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
80104e35:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
80104e3b:	e8 20 c7 ff ff       	call   80101560 <filealloc>
80104e40:	85 c0                	test   %eax,%eax
80104e42:	89 06                	mov    %eax,(%esi)
80104e44:	0f 84 a8 00 00 00    	je     80104ef2 <pipealloc+0xd2>
80104e4a:	e8 11 c7 ff ff       	call   80101560 <filealloc>
80104e4f:	85 c0                	test   %eax,%eax
80104e51:	89 03                	mov    %eax,(%ebx)
80104e53:	0f 84 87 00 00 00    	je     80104ee0 <pipealloc+0xc0>
80104e59:	e8 72 e1 ff ff       	call   80102fd0 <kalloc>
80104e5e:	85 c0                	test   %eax,%eax
80104e60:	89 c7                	mov    %eax,%edi
80104e62:	0f 84 b0 00 00 00    	je     80104f18 <pipealloc+0xf8>
80104e68:	83 ec 08             	sub    $0x8,%esp
80104e6b:	c7 80 3c 02 00 00 01 	movl   $0x1,0x23c(%eax)
80104e72:	00 00 00 
80104e75:	c7 80 40 02 00 00 01 	movl   $0x1,0x240(%eax)
80104e7c:	00 00 00 
80104e7f:	c7 80 38 02 00 00 00 	movl   $0x0,0x238(%eax)
80104e86:	00 00 00 
80104e89:	c7 80 34 02 00 00 00 	movl   $0x0,0x234(%eax)
80104e90:	00 00 00 
80104e93:	68 25 f3 10 80       	push   $0x8010f325
80104e98:	50                   	push   %eax
80104e99:	e8 32 17 00 00       	call   801065d0 <initlock>
80104e9e:	8b 06                	mov    (%esi),%eax
80104ea0:	83 c4 10             	add    $0x10,%esp
80104ea3:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
80104ea9:	8b 06                	mov    (%esi),%eax
80104eab:	c6 40 08 01          	movb   $0x1,0x8(%eax)
80104eaf:	8b 06                	mov    (%esi),%eax
80104eb1:	c6 40 09 00          	movb   $0x0,0x9(%eax)
80104eb5:	8b 06                	mov    (%esi),%eax
80104eb7:	89 78 10             	mov    %edi,0x10(%eax)
80104eba:	8b 03                	mov    (%ebx),%eax
80104ebc:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
80104ec2:	8b 03                	mov    (%ebx),%eax
80104ec4:	c6 40 08 00          	movb   $0x0,0x8(%eax)
80104ec8:	8b 03                	mov    (%ebx),%eax
80104eca:	c6 40 09 01          	movb   $0x1,0x9(%eax)
80104ece:	8b 03                	mov    (%ebx),%eax
80104ed0:	89 78 10             	mov    %edi,0x10(%eax)
80104ed3:	8d 65 f4             	lea    -0xc(%ebp),%esp
80104ed6:	31 c0                	xor    %eax,%eax
80104ed8:	5b                   	pop    %ebx
80104ed9:	5e                   	pop    %esi
80104eda:	5f                   	pop    %edi
80104edb:	5d                   	pop    %ebp
80104edc:	c3                   	ret    
80104edd:	8d 76 00             	lea    0x0(%esi),%esi
80104ee0:	8b 06                	mov    (%esi),%eax
80104ee2:	85 c0                	test   %eax,%eax
80104ee4:	74 1e                	je     80104f04 <pipealloc+0xe4>
80104ee6:	83 ec 0c             	sub    $0xc,%esp
80104ee9:	50                   	push   %eax
80104eea:	e8 31 c7 ff ff       	call   80101620 <fileclose>
80104eef:	83 c4 10             	add    $0x10,%esp
80104ef2:	8b 03                	mov    (%ebx),%eax
80104ef4:	85 c0                	test   %eax,%eax
80104ef6:	74 0c                	je     80104f04 <pipealloc+0xe4>
80104ef8:	83 ec 0c             	sub    $0xc,%esp
80104efb:	50                   	push   %eax
80104efc:	e8 1f c7 ff ff       	call   80101620 <fileclose>
80104f01:	83 c4 10             	add    $0x10,%esp
80104f04:	8d 65 f4             	lea    -0xc(%ebp),%esp
80104f07:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80104f0c:	5b                   	pop    %ebx
80104f0d:	5e                   	pop    %esi
80104f0e:	5f                   	pop    %edi
80104f0f:	5d                   	pop    %ebp
80104f10:	c3                   	ret    
80104f11:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80104f18:	8b 06                	mov    (%esi),%eax
80104f1a:	85 c0                	test   %eax,%eax
80104f1c:	75 c8                	jne    80104ee6 <pipealloc+0xc6>
80104f1e:	eb d2                	jmp    80104ef2 <pipealloc+0xd2>

80104f20 <pipeclose>:
80104f20:	55                   	push   %ebp
80104f21:	89 e5                	mov    %esp,%ebp
80104f23:	56                   	push   %esi
80104f24:	53                   	push   %ebx
80104f25:	8b 5d 08             	mov    0x8(%ebp),%ebx
80104f28:	8b 75 0c             	mov    0xc(%ebp),%esi
80104f2b:	83 ec 0c             	sub    $0xc,%esp
80104f2e:	53                   	push   %ebx
80104f2f:	e8 9c 17 00 00       	call   801066d0 <acquire>
80104f34:	83 c4 10             	add    $0x10,%esp
80104f37:	85 f6                	test   %esi,%esi
80104f39:	74 45                	je     80104f80 <pipeclose+0x60>
80104f3b:	8d 83 34 02 00 00    	lea    0x234(%ebx),%eax
80104f41:	83 ec 0c             	sub    $0xc,%esp
80104f44:	c7 83 40 02 00 00 00 	movl   $0x0,0x240(%ebx)
80104f4b:	00 00 00 
80104f4e:	50                   	push   %eax
80104f4f:	e8 4c 12 00 00       	call   801061a0 <wakeup>
80104f54:	83 c4 10             	add    $0x10,%esp
80104f57:	8b 93 3c 02 00 00    	mov    0x23c(%ebx),%edx
80104f5d:	85 d2                	test   %edx,%edx
80104f5f:	75 0a                	jne    80104f6b <pipeclose+0x4b>
80104f61:	8b 83 40 02 00 00    	mov    0x240(%ebx),%eax
80104f67:	85 c0                	test   %eax,%eax
80104f69:	74 35                	je     80104fa0 <pipeclose+0x80>
80104f6b:	89 5d 08             	mov    %ebx,0x8(%ebp)
80104f6e:	8d 65 f8             	lea    -0x8(%ebp),%esp
80104f71:	5b                   	pop    %ebx
80104f72:	5e                   	pop    %esi
80104f73:	5d                   	pop    %ebp
80104f74:	e9 77 18 00 00       	jmp    801067f0 <release>
80104f79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80104f80:	8d 83 38 02 00 00    	lea    0x238(%ebx),%eax
80104f86:	83 ec 0c             	sub    $0xc,%esp
80104f89:	c7 83 3c 02 00 00 00 	movl   $0x0,0x23c(%ebx)
80104f90:	00 00 00 
80104f93:	50                   	push   %eax
80104f94:	e8 07 12 00 00       	call   801061a0 <wakeup>
80104f99:	83 c4 10             	add    $0x10,%esp
80104f9c:	eb b9                	jmp    80104f57 <pipeclose+0x37>
80104f9e:	66 90                	xchg   %ax,%ax
80104fa0:	83 ec 0c             	sub    $0xc,%esp
80104fa3:	53                   	push   %ebx
80104fa4:	e8 47 18 00 00       	call   801067f0 <release>
80104fa9:	89 5d 08             	mov    %ebx,0x8(%ebp)
80104fac:	83 c4 10             	add    $0x10,%esp
80104faf:	8d 65 f8             	lea    -0x8(%ebp),%esp
80104fb2:	5b                   	pop    %ebx
80104fb3:	5e                   	pop    %esi
80104fb4:	5d                   	pop    %ebp
80104fb5:	e9 46 dd ff ff       	jmp    80102d00 <kfree>
80104fba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80104fc0 <pipewrite>:
80104fc0:	55                   	push   %ebp
80104fc1:	89 e5                	mov    %esp,%ebp
80104fc3:	57                   	push   %edi
80104fc4:	56                   	push   %esi
80104fc5:	53                   	push   %ebx
80104fc6:	83 ec 28             	sub    $0x28,%esp
80104fc9:	8b 5d 08             	mov    0x8(%ebp),%ebx
80104fcc:	53                   	push   %ebx
80104fcd:	e8 fe 16 00 00       	call   801066d0 <acquire>
80104fd2:	8b 45 10             	mov    0x10(%ebp),%eax
80104fd5:	83 c4 10             	add    $0x10,%esp
80104fd8:	85 c0                	test   %eax,%eax
80104fda:	0f 8e b9 00 00 00    	jle    80105099 <pipewrite+0xd9>
80104fe0:	8b 4d 0c             	mov    0xc(%ebp),%ecx
80104fe3:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax
80104fe9:	8d bb 34 02 00 00    	lea    0x234(%ebx),%edi
80104fef:	8d b3 38 02 00 00    	lea    0x238(%ebx),%esi
80104ff5:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
80104ff8:	03 4d 10             	add    0x10(%ebp),%ecx
80104ffb:	89 4d e0             	mov    %ecx,-0x20(%ebp)
80104ffe:	8b 8b 34 02 00 00    	mov    0x234(%ebx),%ecx
80105004:	8d 91 00 02 00 00    	lea    0x200(%ecx),%edx
8010500a:	39 d0                	cmp    %edx,%eax
8010500c:	74 38                	je     80105046 <pipewrite+0x86>
8010500e:	eb 59                	jmp    80105069 <pipewrite+0xa9>
80105010:	e8 5b 04 00 00       	call   80105470 <myproc>
80105015:	8b 48 44             	mov    0x44(%eax),%ecx
80105018:	85 c9                	test   %ecx,%ecx
8010501a:	75 34                	jne    80105050 <pipewrite+0x90>
8010501c:	83 ec 0c             	sub    $0xc,%esp
8010501f:	57                   	push   %edi
80105020:	e8 7b 11 00 00       	call   801061a0 <wakeup>
80105025:	58                   	pop    %eax
80105026:	5a                   	pop    %edx
80105027:	53                   	push   %ebx
80105028:	56                   	push   %esi
80105029:	e8 42 0f 00 00       	call   80105f70 <sleep>
8010502e:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
80105034:	8b 93 38 02 00 00    	mov    0x238(%ebx),%edx
8010503a:	83 c4 10             	add    $0x10,%esp
8010503d:	05 00 02 00 00       	add    $0x200,%eax
80105042:	39 c2                	cmp    %eax,%edx
80105044:	75 2a                	jne    80105070 <pipewrite+0xb0>
80105046:	8b 83 3c 02 00 00    	mov    0x23c(%ebx),%eax
8010504c:	85 c0                	test   %eax,%eax
8010504e:	75 c0                	jne    80105010 <pipewrite+0x50>
80105050:	83 ec 0c             	sub    $0xc,%esp
80105053:	53                   	push   %ebx
80105054:	e8 97 17 00 00       	call   801067f0 <release>
80105059:	83 c4 10             	add    $0x10,%esp
8010505c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80105061:	8d 65 f4             	lea    -0xc(%ebp),%esp
80105064:	5b                   	pop    %ebx
80105065:	5e                   	pop    %esi
80105066:	5f                   	pop    %edi
80105067:	5d                   	pop    %ebp
80105068:	c3                   	ret    
80105069:	89 c2                	mov    %eax,%edx
8010506b:	90                   	nop
8010506c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105070:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
80105073:	8d 42 01             	lea    0x1(%edx),%eax
80105076:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8010507a:	81 e2 ff 01 00 00    	and    $0x1ff,%edx
80105080:	89 83 38 02 00 00    	mov    %eax,0x238(%ebx)
80105086:	0f b6 09             	movzbl (%ecx),%ecx
80105089:	88 4c 13 34          	mov    %cl,0x34(%ebx,%edx,1)
8010508d:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
80105090:	3b 4d e0             	cmp    -0x20(%ebp),%ecx
80105093:	0f 85 65 ff ff ff    	jne    80104ffe <pipewrite+0x3e>
80105099:	8d 83 34 02 00 00    	lea    0x234(%ebx),%eax
8010509f:	83 ec 0c             	sub    $0xc,%esp
801050a2:	50                   	push   %eax
801050a3:	e8 f8 10 00 00       	call   801061a0 <wakeup>
801050a8:	89 1c 24             	mov    %ebx,(%esp)
801050ab:	e8 40 17 00 00       	call   801067f0 <release>
801050b0:	83 c4 10             	add    $0x10,%esp
801050b3:	8b 45 10             	mov    0x10(%ebp),%eax
801050b6:	eb a9                	jmp    80105061 <pipewrite+0xa1>
801050b8:	90                   	nop
801050b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

801050c0 <piperead>:
801050c0:	55                   	push   %ebp
801050c1:	89 e5                	mov    %esp,%ebp
801050c3:	57                   	push   %edi
801050c4:	56                   	push   %esi
801050c5:	53                   	push   %ebx
801050c6:	83 ec 18             	sub    $0x18,%esp
801050c9:	8b 5d 08             	mov    0x8(%ebp),%ebx
801050cc:	8b 7d 0c             	mov    0xc(%ebp),%edi
801050cf:	53                   	push   %ebx
801050d0:	e8 fb 15 00 00       	call   801066d0 <acquire>
801050d5:	83 c4 10             	add    $0x10,%esp
801050d8:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
801050de:	39 83 38 02 00 00    	cmp    %eax,0x238(%ebx)
801050e4:	75 6a                	jne    80105150 <piperead+0x90>
801050e6:	8b b3 40 02 00 00    	mov    0x240(%ebx),%esi
801050ec:	85 f6                	test   %esi,%esi
801050ee:	0f 84 cc 00 00 00    	je     801051c0 <piperead+0x100>
801050f4:	8d b3 34 02 00 00    	lea    0x234(%ebx),%esi
801050fa:	eb 2d                	jmp    80105129 <piperead+0x69>
801050fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105100:	83 ec 08             	sub    $0x8,%esp
80105103:	53                   	push   %ebx
80105104:	56                   	push   %esi
80105105:	e8 66 0e 00 00       	call   80105f70 <sleep>
8010510a:	83 c4 10             	add    $0x10,%esp
8010510d:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax
80105113:	39 83 34 02 00 00    	cmp    %eax,0x234(%ebx)
80105119:	75 35                	jne    80105150 <piperead+0x90>
8010511b:	8b 93 40 02 00 00    	mov    0x240(%ebx),%edx
80105121:	85 d2                	test   %edx,%edx
80105123:	0f 84 97 00 00 00    	je     801051c0 <piperead+0x100>
80105129:	e8 42 03 00 00       	call   80105470 <myproc>
8010512e:	8b 48 44             	mov    0x44(%eax),%ecx
80105131:	85 c9                	test   %ecx,%ecx
80105133:	74 cb                	je     80105100 <piperead+0x40>
80105135:	83 ec 0c             	sub    $0xc,%esp
80105138:	53                   	push   %ebx
80105139:	e8 b2 16 00 00       	call   801067f0 <release>
8010513e:	83 c4 10             	add    $0x10,%esp
80105141:	8d 65 f4             	lea    -0xc(%ebp),%esp
80105144:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80105149:	5b                   	pop    %ebx
8010514a:	5e                   	pop    %esi
8010514b:	5f                   	pop    %edi
8010514c:	5d                   	pop    %ebp
8010514d:	c3                   	ret    
8010514e:	66 90                	xchg   %ax,%ax
80105150:	8b 45 10             	mov    0x10(%ebp),%eax
80105153:	85 c0                	test   %eax,%eax
80105155:	7e 69                	jle    801051c0 <piperead+0x100>
80105157:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
8010515d:	31 c9                	xor    %ecx,%ecx
8010515f:	eb 15                	jmp    80105176 <piperead+0xb6>
80105161:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80105168:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax
8010516e:	3b 83 38 02 00 00    	cmp    0x238(%ebx),%eax
80105174:	74 5a                	je     801051d0 <piperead+0x110>
80105176:	8d 70 01             	lea    0x1(%eax),%esi
80105179:	25 ff 01 00 00       	and    $0x1ff,%eax
8010517e:	89 b3 34 02 00 00    	mov    %esi,0x234(%ebx)
80105184:	0f b6 44 03 34       	movzbl 0x34(%ebx,%eax,1),%eax
80105189:	88 04 0f             	mov    %al,(%edi,%ecx,1)
8010518c:	83 c1 01             	add    $0x1,%ecx
8010518f:	39 4d 10             	cmp    %ecx,0x10(%ebp)
80105192:	75 d4                	jne    80105168 <piperead+0xa8>
80105194:	8d 83 38 02 00 00    	lea    0x238(%ebx),%eax
8010519a:	83 ec 0c             	sub    $0xc,%esp
8010519d:	50                   	push   %eax
8010519e:	e8 fd 0f 00 00       	call   801061a0 <wakeup>
801051a3:	89 1c 24             	mov    %ebx,(%esp)
801051a6:	e8 45 16 00 00       	call   801067f0 <release>
801051ab:	8b 45 10             	mov    0x10(%ebp),%eax
801051ae:	83 c4 10             	add    $0x10,%esp
801051b1:	8d 65 f4             	lea    -0xc(%ebp),%esp
801051b4:	5b                   	pop    %ebx
801051b5:	5e                   	pop    %esi
801051b6:	5f                   	pop    %edi
801051b7:	5d                   	pop    %ebp
801051b8:	c3                   	ret    
801051b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801051c0:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%ebp)
801051c7:	eb cb                	jmp    80105194 <piperead+0xd4>
801051c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801051d0:	89 4d 10             	mov    %ecx,0x10(%ebp)
801051d3:	eb bf                	jmp    80105194 <piperead+0xd4>
801051d5:	66 90                	xchg   %ax,%ax
801051d7:	66 90                	xchg   %ax,%ax
801051d9:	66 90                	xchg   %ax,%ax
801051db:	66 90                	xchg   %ax,%ax
801051dd:	66 90                	xchg   %ax,%ax
801051df:	90                   	nop

801051e0 <allocproc>:
801051e0:	55                   	push   %ebp
801051e1:	89 e5                	mov    %esp,%ebp
801051e3:	53                   	push   %ebx
801051e4:	bb f4 ec 12 80       	mov    $0x8012ecf4,%ebx
801051e9:	83 ec 10             	sub    $0x10,%esp
801051ec:	68 c0 ec 12 80       	push   $0x8012ecc0
801051f1:	e8 da 14 00 00       	call   801066d0 <acquire>
801051f6:	83 c4 10             	add    $0x10,%esp
801051f9:	eb 17                	jmp    80105212 <allocproc+0x32>
801051fb:	90                   	nop
801051fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105200:	81 c3 c0 02 00 00    	add    $0x2c0,%ebx
80105206:	81 fb f4 9c 13 80    	cmp    $0x80139cf4,%ebx
8010520c:	0f 84 a6 00 00 00    	je     801052b8 <allocproc+0xd8>
80105212:	8b 43 0c             	mov    0xc(%ebx),%eax
80105215:	85 c0                	test   %eax,%eax
80105217:	75 e7                	jne    80105200 <allocproc+0x20>
80105219:	83 ec 0c             	sub    $0xc,%esp
8010521c:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
80105223:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
8010522a:	68 c0 ec 12 80       	push   $0x8012ecc0
8010522f:	e8 bc 15 00 00       	call   801067f0 <release>
80105234:	e8 97 dd ff ff       	call   80102fd0 <kalloc>
80105239:	83 c4 10             	add    $0x10,%esp
8010523c:	85 c0                	test   %eax,%eax
8010523e:	89 43 08             	mov    %eax,0x8(%ebx)
80105241:	0f 84 88 00 00 00    	je     801052cf <allocproc+0xef>
80105247:	8d 90 b4 0f 00 00    	lea    0xfb4(%eax),%edx
8010524d:	83 ec 04             	sub    $0x4,%esp
80105250:	05 9c 0f 00 00       	add    $0xf9c,%eax
80105255:	89 53 38             	mov    %edx,0x38(%ebx)
80105258:	c7 40 14 b1 84 10 80 	movl   $0x801084b1,0x14(%eax)
8010525f:	6a 14                	push   $0x14
80105261:	6a 00                	push   $0x0
80105263:	50                   	push   %eax
80105264:	89 43 3c             	mov    %eax,0x3c(%ebx)
80105267:	e8 d4 15 00 00       	call   80106840 <memset>
8010526c:	8b 43 3c             	mov    0x3c(%ebx),%eax
8010526f:	83 c4 10             	add    $0x10,%esp
80105272:	c7 40 10 e0 52 10 80 	movl   $0x801052e0,0x10(%eax)
80105279:	c7 83 ac 02 00 00 00 	movl   $0x0,0x2ac(%ebx)
80105280:	00 00 00 
80105283:	89 d8                	mov    %ebx,%eax
80105285:	c7 83 bc 02 00 00 00 	movl   $0x0,0x2bc(%ebx)
8010528c:	00 00 00 
8010528f:	c7 83 b0 02 00 00 00 	movl   $0x0,0x2b0(%ebx)
80105296:	00 00 00 
80105299:	c7 83 b4 02 00 00 00 	movl   $0x0,0x2b4(%ebx)
801052a0:	00 00 00 
801052a3:	c7 83 b8 02 00 00 00 	movl   $0x0,0x2b8(%ebx)
801052aa:	00 00 00 
801052ad:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801052b0:	c9                   	leave  
801052b1:	c3                   	ret    
801052b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801052b8:	83 ec 0c             	sub    $0xc,%esp
801052bb:	68 c0 ec 12 80       	push   $0x8012ecc0
801052c0:	e8 2b 15 00 00       	call   801067f0 <release>
801052c5:	83 c4 10             	add    $0x10,%esp
801052c8:	31 c0                	xor    %eax,%eax
801052ca:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801052cd:	c9                   	leave  
801052ce:	c3                   	ret    
801052cf:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
801052d6:	eb d5                	jmp    801052ad <allocproc+0xcd>
801052d8:	90                   	nop
801052d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

801052e0 <forkret>:
801052e0:	55                   	push   %ebp
801052e1:	89 e5                	mov    %esp,%ebp
801052e3:	83 ec 14             	sub    $0x14,%esp
801052e6:	68 c0 ec 12 80       	push   $0x8012ecc0
801052eb:	e8 00 15 00 00       	call   801067f0 <release>
801052f0:	a1 00 d0 11 80       	mov    0x8011d000,%eax
801052f5:	83 c4 10             	add    $0x10,%esp
801052f8:	85 c0                	test   %eax,%eax
801052fa:	75 04                	jne    80105300 <forkret+0x20>
801052fc:	c9                   	leave  
801052fd:	c3                   	ret    
801052fe:	66 90                	xchg   %ax,%ax
80105300:	83 ec 0c             	sub    $0xc,%esp
80105303:	c7 05 00 d0 11 80 00 	movl   $0x0,0x8011d000
8010530a:	00 00 00 
8010530d:	6a 01                	push   $0x1
8010530f:	e8 cc c9 ff ff       	call   80101ce0 <iinit>
80105314:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
8010531b:	e8 20 e4 ff ff       	call   80103740 <initlog>
80105320:	83 c4 10             	add    $0x10,%esp
80105323:	c9                   	leave  
80105324:	e9 f7 e9 ff ff       	jmp    80103d20 <mntinit>
80105329:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80105330 <get_pid_for_ns>:
80105330:	55                   	push   %ebp
80105331:	31 c0                	xor    %eax,%eax
80105333:	89 e5                	mov    %esp,%ebp
80105335:	8b 55 08             	mov    0x8(%ebp),%edx
80105338:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8010533b:	39 4c c2 14          	cmp    %ecx,0x14(%edx,%eax,8)
8010533f:	74 0f                	je     80105350 <get_pid_for_ns+0x20>
80105341:	83 c0 01             	add    $0x1,%eax
80105344:	83 f8 04             	cmp    $0x4,%eax
80105347:	75 f2                	jne    8010533b <get_pid_for_ns+0xb>
80105349:	31 c0                	xor    %eax,%eax
8010534b:	5d                   	pop    %ebp
8010534c:	c3                   	ret    
8010534d:	8d 76 00             	lea    0x0(%esi),%esi
80105350:	8b 44 c2 18          	mov    0x18(%edx,%eax,8),%eax
80105354:	5d                   	pop    %ebp
80105355:	c3                   	ret    
80105356:	8d 76 00             	lea    0x0(%esi),%esi
80105359:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80105360 <pinit>:
80105360:	55                   	push   %ebp
80105361:	89 e5                	mov    %esp,%ebp
80105363:	83 ec 10             	sub    $0x10,%esp
80105366:	68 2a f3 10 80       	push   $0x8010f32a
8010536b:	68 c0 ec 12 80       	push   $0x8012ecc0
80105370:	e8 5b 12 00 00       	call   801065d0 <initlock>
80105375:	83 c4 10             	add    $0x10,%esp
80105378:	c9                   	leave  
80105379:	c3                   	ret    
8010537a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80105380 <mycpu>:
80105380:	55                   	push   %ebp
80105381:	89 e5                	mov    %esp,%ebp
80105383:	56                   	push   %esi
80105384:	53                   	push   %ebx
80105385:	9c                   	pushf  
80105386:	58                   	pop    %eax
80105387:	f6 c4 02             	test   $0x2,%ah
8010538a:	75 5b                	jne    801053e7 <mycpu+0x67>
8010538c:	e8 df df ff ff       	call   80103370 <lapicid>
80105391:	8b 35 60 eb 12 80    	mov    0x8012eb60,%esi
80105397:	85 f6                	test   %esi,%esi
80105399:	7e 3f                	jle    801053da <mycpu+0x5a>
8010539b:	0f b6 15 e0 e5 12 80 	movzbl 0x8012e5e0,%edx
801053a2:	39 d0                	cmp    %edx,%eax
801053a4:	74 30                	je     801053d6 <mycpu+0x56>
801053a6:	b9 90 e6 12 80       	mov    $0x8012e690,%ecx
801053ab:	31 d2                	xor    %edx,%edx
801053ad:	8d 76 00             	lea    0x0(%esi),%esi
801053b0:	83 c2 01             	add    $0x1,%edx
801053b3:	39 f2                	cmp    %esi,%edx
801053b5:	74 23                	je     801053da <mycpu+0x5a>
801053b7:	0f b6 19             	movzbl (%ecx),%ebx
801053ba:	81 c1 b0 00 00 00    	add    $0xb0,%ecx
801053c0:	39 d8                	cmp    %ebx,%eax
801053c2:	75 ec                	jne    801053b0 <mycpu+0x30>
801053c4:	69 c2 b0 00 00 00    	imul   $0xb0,%edx,%eax
801053ca:	8d 65 f8             	lea    -0x8(%ebp),%esp
801053cd:	5b                   	pop    %ebx
801053ce:	05 e0 e5 12 80       	add    $0x8012e5e0,%eax
801053d3:	5e                   	pop    %esi
801053d4:	5d                   	pop    %ebp
801053d5:	c3                   	ret    
801053d6:	31 d2                	xor    %edx,%edx
801053d8:	eb ea                	jmp    801053c4 <mycpu+0x44>
801053da:	83 ec 0c             	sub    $0xc,%esp
801053dd:	68 31 f3 10 80       	push   $0x8010f331
801053e2:	e8 e9 af ff ff       	call   801003d0 <panic>
801053e7:	83 ec 0c             	sub    $0xc,%esp
801053ea:	68 30 f4 10 80       	push   $0x8010f430
801053ef:	e8 dc af ff ff       	call   801003d0 <panic>
801053f4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801053fa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

80105400 <cpuid>:
80105400:	55                   	push   %ebp
80105401:	89 e5                	mov    %esp,%ebp
80105403:	83 ec 08             	sub    $0x8,%esp
80105406:	e8 75 ff ff ff       	call   80105380 <mycpu>
8010540b:	2d e0 e5 12 80       	sub    $0x8012e5e0,%eax
80105410:	c9                   	leave  
80105411:	c1 f8 04             	sar    $0x4,%eax
80105414:	69 c0 a3 8b 2e ba    	imul   $0xba2e8ba3,%eax,%eax
8010541a:	c3                   	ret    
8010541b:	90                   	nop
8010541c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80105420 <proc_pid>:
80105420:	55                   	push   %ebp
80105421:	89 e5                	mov    %esp,%ebp
80105423:	56                   	push   %esi
80105424:	53                   	push   %ebx
80105425:	8b 5d 08             	mov    0x8(%ebp),%ebx
80105428:	e8 63 12 00 00       	call   80106690 <pushcli>
8010542d:	e8 4e ff ff ff       	call   80105380 <mycpu>
80105432:	8b b0 ac 00 00 00    	mov    0xac(%eax),%esi
80105438:	e8 43 13 00 00       	call   80106780 <popcli>
8010543d:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
80105443:	8b 50 08             	mov    0x8(%eax),%edx
80105446:	31 c0                	xor    %eax,%eax
80105448:	3b 54 c3 14          	cmp    0x14(%ebx,%eax,8),%edx
8010544c:	74 12                	je     80105460 <proc_pid+0x40>
8010544e:	83 c0 01             	add    $0x1,%eax
80105451:	83 f8 04             	cmp    $0x4,%eax
80105454:	75 f2                	jne    80105448 <proc_pid+0x28>
80105456:	5b                   	pop    %ebx
80105457:	31 c0                	xor    %eax,%eax
80105459:	5e                   	pop    %esi
8010545a:	5d                   	pop    %ebp
8010545b:	c3                   	ret    
8010545c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105460:	8b 44 c3 18          	mov    0x18(%ebx,%eax,8),%eax
80105464:	5b                   	pop    %ebx
80105465:	5e                   	pop    %esi
80105466:	5d                   	pop    %ebp
80105467:	c3                   	ret    
80105468:	90                   	nop
80105469:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80105470 <myproc>:
80105470:	55                   	push   %ebp
80105471:	89 e5                	mov    %esp,%ebp
80105473:	53                   	push   %ebx
80105474:	83 ec 04             	sub    $0x4,%esp
80105477:	e8 14 12 00 00       	call   80106690 <pushcli>
8010547c:	e8 ff fe ff ff       	call   80105380 <mycpu>
80105481:	8b 98 ac 00 00 00    	mov    0xac(%eax),%ebx
80105487:	e8 f4 12 00 00       	call   80106780 <popcli>
8010548c:	83 c4 04             	add    $0x4,%esp
8010548f:	89 d8                	mov    %ebx,%eax
80105491:	5b                   	pop    %ebx
80105492:	5d                   	pop    %ebp
80105493:	c3                   	ret    
80105494:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010549a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

801054a0 <userinit>:
801054a0:	55                   	push   %ebp
801054a1:	89 e5                	mov    %esp,%ebp
801054a3:	53                   	push   %ebx
801054a4:	83 ec 04             	sub    $0x4,%esp
801054a7:	e8 a4 7e 00 00       	call   8010d350 <cgroup_root>
801054ac:	83 ec 04             	sub    $0x4,%esp
801054af:	6a 00                	push   $0x0
801054b1:	6a 00                	push   $0x0
801054b3:	50                   	push   %eax
801054b4:	e8 57 8d 00 00       	call   8010e210 <cgroup_initialize>
801054b9:	e8 22 fd ff ff       	call   801051e0 <allocproc>
801054be:	89 c3                	mov    %eax,%ebx
801054c0:	a3 b8 d5 11 80       	mov    %eax,0x8011d5b8
801054c5:	e8 06 47 00 00       	call   80109bd0 <setupkvm>
801054ca:	83 c4 10             	add    $0x10,%esp
801054cd:	85 c0                	test   %eax,%eax
801054cf:	89 43 04             	mov    %eax,0x4(%ebx)
801054d2:	0f 84 12 01 00 00    	je     801055ea <userinit+0x14a>
801054d8:	83 ec 04             	sub    $0x4,%esp
801054db:	68 2c 00 00 00       	push   $0x2c
801054e0:	68 60 d4 11 80       	push   $0x8011d460
801054e5:	50                   	push   %eax
801054e6:	e8 15 43 00 00       	call   80109800 <inituvm>
801054eb:	83 c4 0c             	add    $0xc,%esp
801054ee:	c7 03 00 10 00 00    	movl   $0x1000,(%ebx)
801054f4:	6a 4c                	push   $0x4c
801054f6:	6a 00                	push   $0x0
801054f8:	ff 73 38             	pushl  0x38(%ebx)
801054fb:	e8 40 13 00 00       	call   80106840 <memset>
80105500:	8b 43 38             	mov    0x38(%ebx),%eax
80105503:	ba 1b 00 00 00       	mov    $0x1b,%edx
80105508:	b9 23 00 00 00       	mov    $0x23,%ecx
8010550d:	83 c4 0c             	add    $0xc,%esp
80105510:	66 89 50 3c          	mov    %dx,0x3c(%eax)
80105514:	8b 43 38             	mov    0x38(%ebx),%eax
80105517:	66 89 48 2c          	mov    %cx,0x2c(%eax)
8010551b:	8b 43 38             	mov    0x38(%ebx),%eax
8010551e:	0f b7 50 2c          	movzwl 0x2c(%eax),%edx
80105522:	66 89 50 28          	mov    %dx,0x28(%eax)
80105526:	8b 43 38             	mov    0x38(%ebx),%eax
80105529:	0f b7 50 2c          	movzwl 0x2c(%eax),%edx
8010552d:	66 89 50 48          	mov    %dx,0x48(%eax)
80105531:	8b 43 38             	mov    0x38(%ebx),%eax
80105534:	c7 40 40 00 02 00 00 	movl   $0x200,0x40(%eax)
8010553b:	8b 43 38             	mov    0x38(%ebx),%eax
8010553e:	c7 40 44 00 10 00 00 	movl   $0x1000,0x44(%eax)
80105545:	8b 43 38             	mov    0x38(%ebx),%eax
80105548:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%eax)
8010554f:	8d 83 90 00 00 00    	lea    0x90(%ebx),%eax
80105555:	6a 10                	push   $0x10
80105557:	68 5a f3 10 80       	push   $0x8010f35a
8010555c:	50                   	push   %eax
8010555d:	e8 2e 15 00 00       	call   80106a90 <safestrcpy>
80105562:	8d 83 8c 00 00 00    	lea    0x8c(%ebx),%eax
80105568:	89 04 24             	mov    %eax,(%esp)
8010556b:	e8 c0 d2 ff ff       	call   80102830 <initprocessroot>
80105570:	89 83 88 00 00 00    	mov    %eax,0x88(%ebx)
80105576:	8d 83 ac 00 00 00    	lea    0xac(%ebx),%eax
8010557c:	83 c4 0c             	add    $0xc,%esp
8010557f:	68 00 02 00 00       	push   $0x200
80105584:	68 63 f3 10 80       	push   $0x8010f363
80105589:	50                   	push   %eax
8010558a:	e8 01 15 00 00       	call   80106a90 <safestrcpy>
8010558f:	e8 8c f6 ff ff       	call   80104c20 <emptynsproxy>
80105594:	89 83 a0 00 00 00    	mov    %eax,0xa0(%ebx)
8010559a:	5a                   	pop    %edx
8010559b:	ff 70 08             	pushl  0x8(%eax)
8010559e:	e8 9d f2 ff ff       	call   80104840 <pid_ns_next_pid>
801055a3:	89 43 10             	mov    %eax,0x10(%ebx)
801055a6:	89 43 18             	mov    %eax,0x18(%ebx)
801055a9:	8b 83 a0 00 00 00    	mov    0xa0(%ebx),%eax
801055af:	8b 40 08             	mov    0x8(%eax),%eax
801055b2:	89 43 14             	mov    %eax,0x14(%ebx)
801055b5:	c7 04 24 c0 ec 12 80 	movl   $0x8012ecc0,(%esp)
801055bc:	e8 0f 11 00 00       	call   801066d0 <acquire>
801055c1:	e8 8a 7d 00 00       	call   8010d350 <cgroup_root>
801055c6:	59                   	pop    %ecx
801055c7:	5a                   	pop    %edx
801055c8:	53                   	push   %ebx
801055c9:	50                   	push   %eax
801055ca:	e8 d1 7f 00 00       	call   8010d5a0 <cgroup_insert>
801055cf:	c7 43 0c 03 00 00 00 	movl   $0x3,0xc(%ebx)
801055d6:	c7 04 24 c0 ec 12 80 	movl   $0x8012ecc0,(%esp)
801055dd:	e8 0e 12 00 00       	call   801067f0 <release>
801055e2:	83 c4 10             	add    $0x10,%esp
801055e5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801055e8:	c9                   	leave  
801055e9:	c3                   	ret    
801055ea:	83 ec 0c             	sub    $0xc,%esp
801055ed:	68 41 f3 10 80       	push   $0x8010f341
801055f2:	e8 d9 ad ff ff       	call   801003d0 <panic>
801055f7:	89 f6                	mov    %esi,%esi
801055f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80105600 <update_protect_mem>:
80105600:	55                   	push   %ebp
80105601:	89 e5                	mov    %esp,%ebp
80105603:	56                   	push   %esi
80105604:	53                   	push   %ebx
80105605:	8b 5d 08             	mov    0x8(%ebp),%ebx
80105608:	e8 43 7d 00 00       	call   8010d350 <cgroup_root>
8010560d:	39 d8                	cmp    %ebx,%eax
8010560f:	74 5f                	je     80105670 <update_protect_mem+0x70>
80105611:	80 bb 13 03 00 00 00 	cmpb   $0x0,0x313(%ebx)
80105618:	74 56                	je     80105670 <update_protect_mem+0x70>
8010561a:	8b 4d 10             	mov    0x10(%ebp),%ecx
8010561d:	8b 45 0c             	mov    0xc(%ebp),%eax
80105620:	8d 91 ff 0f 00 00    	lea    0xfff(%ecx),%edx
80105626:	05 ff 0f 00 00       	add    $0xfff,%eax
8010562b:	8b 8b 3c 03 00 00    	mov    0x33c(%ebx),%ecx
80105631:	c1 f8 0c             	sar    $0xc,%eax
80105634:	c1 fa 0c             	sar    $0xc,%edx
80105637:	29 d0                	sub    %edx,%eax
80105639:	8b 93 54 03 00 00    	mov    0x354(%ebx),%edx
8010563f:	29 c1                	sub    %eax,%ecx
80105641:	89 8b 3c 03 00 00    	mov    %ecx,0x33c(%ebx)
80105647:	8d b2 ff 0f 00 00    	lea    0xfff(%edx),%esi
8010564d:	c1 ee 0c             	shr    $0xc,%esi
80105650:	29 ce                	sub    %ecx,%esi
80105652:	85 f6                	test   %esi,%esi
80105654:	7e 1a                	jle    80105670 <update_protect_mem+0x70>
80105656:	89 f0                	mov    %esi,%eax
80105658:	2b 83 58 03 00 00    	sub    0x358(%ebx),%eax
8010565e:	83 ec 0c             	sub    $0xc,%esp
80105661:	50                   	push   %eax
80105662:	e8 b9 d8 ff ff       	call   80102f20 <increse_protect_counter>
80105667:	89 b3 58 03 00 00    	mov    %esi,0x358(%ebx)
8010566d:	83 c4 10             	add    $0x10,%esp
80105670:	8d 65 f8             	lea    -0x8(%ebp),%esp
80105673:	5b                   	pop    %ebx
80105674:	5e                   	pop    %esi
80105675:	5d                   	pop    %ebp
80105676:	c3                   	ret    
80105677:	89 f6                	mov    %esi,%esi
80105679:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80105680 <growproc>:
80105680:	55                   	push   %ebp
80105681:	89 e5                	mov    %esp,%ebp
80105683:	57                   	push   %edi
80105684:	56                   	push   %esi
80105685:	53                   	push   %ebx
80105686:	83 ec 1c             	sub    $0x1c,%esp
80105689:	8b 75 08             	mov    0x8(%ebp),%esi
8010568c:	e8 ff 0f 00 00       	call   80106690 <pushcli>
80105691:	e8 ea fc ff ff       	call   80105380 <mycpu>
80105696:	8b b8 ac 00 00 00    	mov    0xac(%eax),%edi
8010569c:	e8 df 10 00 00       	call   80106780 <popcli>
801056a1:	83 fe 00             	cmp    $0x0,%esi
801056a4:	8b 9f ac 02 00 00    	mov    0x2ac(%edi),%ebx
801056aa:	7e 64                	jle    80105710 <growproc+0x90>
801056ac:	80 bb 13 03 00 00 00 	cmpb   $0x0,0x313(%ebx)
801056b3:	74 10                	je     801056c5 <growproc+0x45>
801056b5:	8b 83 38 03 00 00    	mov    0x338(%ebx),%eax
801056bb:	01 f0                	add    %esi,%eax
801056bd:	3b 83 50 03 00 00    	cmp    0x350(%ebx),%eax
801056c3:	77 53                	ja     80105718 <growproc+0x98>
801056c5:	8b 07                	mov    (%edi),%eax
801056c7:	53                   	push   %ebx
801056c8:	8d 14 30             	lea    (%eax,%esi,1),%edx
801056cb:	52                   	push   %edx
801056cc:	50                   	push   %eax
801056cd:	ff 77 04             	pushl  0x4(%edi)
801056d0:	e8 eb 42 00 00       	call   801099c0 <allocuvm>
801056d5:	83 c4 10             	add    $0x10,%esp
801056d8:	85 c0                	test   %eax,%eax
801056da:	74 3c                	je     80105718 <growproc+0x98>
801056dc:	89 07                	mov    %eax,(%edi)
801056de:	66 90                	xchg   %ax,%ax
801056e0:	01 b3 38 03 00 00    	add    %esi,0x338(%ebx)
801056e6:	8b 9b 08 03 00 00    	mov    0x308(%ebx),%ebx
801056ec:	85 db                	test   %ebx,%ebx
801056ee:	75 f0                	jne    801056e0 <growproc+0x60>
801056f0:	83 ec 0c             	sub    $0xc,%esp
801056f3:	57                   	push   %edi
801056f4:	e8 f7 3f 00 00       	call   801096f0 <switchuvm>
801056f9:	83 c4 10             	add    $0x10,%esp
801056fc:	31 c0                	xor    %eax,%eax
801056fe:	8d 65 f4             	lea    -0xc(%ebp),%esp
80105701:	5b                   	pop    %ebx
80105702:	5e                   	pop    %esi
80105703:	5f                   	pop    %edi
80105704:	5d                   	pop    %ebp
80105705:	c3                   	ret    
80105706:	8d 76 00             	lea    0x0(%esi),%esi
80105709:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80105710:	8b 07                	mov    (%edi),%eax
80105712:	75 0b                	jne    8010571f <growproc+0x9f>
80105714:	31 f6                	xor    %esi,%esi
80105716:	eb c4                	jmp    801056dc <growproc+0x5c>
80105718:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010571d:	eb df                	jmp    801056fe <growproc+0x7e>
8010571f:	8d 14 06             	lea    (%esi,%eax,1),%edx
80105722:	83 ec 04             	sub    $0x4,%esp
80105725:	52                   	push   %edx
80105726:	50                   	push   %eax
80105727:	ff 77 04             	pushl  0x4(%edi)
8010572a:	e8 11 42 00 00       	call   80109940 <deallocuvm>
8010572f:	83 c4 10             	add    $0x10,%esp
80105732:	85 c0                	test   %eax,%eax
80105734:	74 e2                	je     80105718 <growproc+0x98>
80105736:	83 ec 04             	sub    $0x4,%esp
80105739:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8010573c:	50                   	push   %eax
8010573d:	ff 37                	pushl  (%edi)
8010573f:	ff b7 ac 02 00 00    	pushl  0x2ac(%edi)
80105745:	e8 b6 fe ff ff       	call   80105600 <update_protect_mem>
8010574a:	83 c4 10             	add    $0x10,%esp
8010574d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
80105750:	eb 8a                	jmp    801056dc <growproc+0x5c>
80105752:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80105759:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80105760 <fork>:
80105760:	55                   	push   %ebp
80105761:	89 e5                	mov    %esp,%ebp
80105763:	57                   	push   %edi
80105764:	56                   	push   %esi
80105765:	53                   	push   %ebx
80105766:	83 ec 1c             	sub    $0x1c,%esp
80105769:	e8 22 0f 00 00       	call   80106690 <pushcli>
8010576e:	e8 0d fc ff ff       	call   80105380 <mycpu>
80105773:	8b 98 ac 00 00 00    	mov    0xac(%eax),%ebx
80105779:	e8 02 10 00 00       	call   80106780 <popcli>
8010577e:	8b 83 a4 00 00 00    	mov    0xa4(%ebx),%eax
80105784:	85 c0                	test   %eax,%eax
80105786:	74 0b                	je     80105793 <fork+0x33>
80105788:	8b 70 40             	mov    0x40(%eax),%esi
8010578b:	85 f6                	test   %esi,%esi
8010578d:	0f 85 5f 01 00 00    	jne    801058f2 <fork+0x192>
80105793:	8b 83 ac 02 00 00    	mov    0x2ac(%ebx),%eax
80105799:	80 b8 0f 03 00 00 00 	cmpb   $0x0,0x30f(%eax)
801057a0:	0f 85 3a 01 00 00    	jne    801058e0 <fork+0x180>
801057a6:	80 b8 13 03 00 00 00 	cmpb   $0x0,0x313(%eax)
801057ad:	74 14                	je     801057c3 <fork+0x63>
801057af:	8b 13                	mov    (%ebx),%edx
801057b1:	03 90 38 03 00 00    	add    0x338(%eax),%edx
801057b7:	3b 90 50 03 00 00    	cmp    0x350(%eax),%edx
801057bd:	0f 87 2f 01 00 00    	ja     801058f2 <fork+0x192>
801057c3:	e8 18 fa ff ff       	call   801051e0 <allocproc>
801057c8:	85 c0                	test   %eax,%eax
801057ca:	89 c7                	mov    %eax,%edi
801057cc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
801057cf:	0f 84 1d 01 00 00    	je     801058f2 <fork+0x192>
801057d5:	83 ec 08             	sub    $0x8,%esp
801057d8:	ff 33                	pushl  (%ebx)
801057da:	ff 73 04             	pushl  0x4(%ebx)
801057dd:	e8 be 44 00 00       	call   80109ca0 <copyuvm>
801057e2:	83 c4 10             	add    $0x10,%esp
801057e5:	85 c0                	test   %eax,%eax
801057e7:	89 47 04             	mov    %eax,0x4(%edi)
801057ea:	0f 84 b8 01 00 00    	je     801059a8 <fork+0x248>
801057f0:	8b 03                	mov    (%ebx),%eax
801057f2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
801057f5:	b9 13 00 00 00       	mov    $0x13,%ecx
801057fa:	89 02                	mov    %eax,(%edx)
801057fc:	89 5a 34             	mov    %ebx,0x34(%edx)
801057ff:	8b 7a 38             	mov    0x38(%edx),%edi
80105802:	8b 73 38             	mov    0x38(%ebx),%esi
80105805:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
80105807:	31 f6                	xor    %esi,%esi
80105809:	8b 42 38             	mov    0x38(%edx),%eax
8010580c:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
80105813:	90                   	nop
80105814:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105818:	8b 44 b3 48          	mov    0x48(%ebx,%esi,4),%eax
8010581c:	85 c0                	test   %eax,%eax
8010581e:	74 13                	je     80105833 <fork+0xd3>
80105820:	83 ec 0c             	sub    $0xc,%esp
80105823:	50                   	push   %eax
80105824:	e8 a7 bd ff ff       	call   801015d0 <filedup>
80105829:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
8010582c:	83 c4 10             	add    $0x10,%esp
8010582f:	89 44 b1 48          	mov    %eax,0x48(%ecx,%esi,4)
80105833:	83 c6 01             	add    $0x1,%esi
80105836:	83 fe 10             	cmp    $0x10,%esi
80105839:	75 dd                	jne    80105818 <fork+0xb8>
8010583b:	83 ec 0c             	sub    $0xc,%esp
8010583e:	ff b3 88 00 00 00    	pushl  0x88(%ebx)
80105844:	e8 57 c6 ff ff       	call   80101ea0 <idup>
80105849:	8b 7d e4             	mov    -0x1c(%ebp),%edi
8010584c:	83 c4 0c             	add    $0xc,%esp
8010584f:	89 87 88 00 00 00    	mov    %eax,0x88(%edi)
80105855:	8d 83 ac 00 00 00    	lea    0xac(%ebx),%eax
8010585b:	68 00 02 00 00       	push   $0x200
80105860:	50                   	push   %eax
80105861:	8d 87 ac 00 00 00    	lea    0xac(%edi),%eax
80105867:	50                   	push   %eax
80105868:	e8 23 12 00 00       	call   80106a90 <safestrcpy>
8010586d:	59                   	pop    %ecx
8010586e:	ff b3 8c 00 00 00    	pushl  0x8c(%ebx)
80105874:	e8 37 e5 ff ff       	call   80103db0 <mntdup>
80105879:	89 87 8c 00 00 00    	mov    %eax,0x8c(%edi)
8010587f:	8b b3 a4 00 00 00    	mov    0xa4(%ebx),%esi
80105885:	83 c4 10             	add    $0x10,%esp
80105888:	85 f6                	test   %esi,%esi
8010588a:	74 75                	je     80105901 <fork+0x1a1>
8010588c:	83 ec 08             	sub    $0x8,%esp
8010588f:	56                   	push   %esi
80105890:	ff b3 a0 00 00 00    	pushl  0xa0(%ebx)
80105896:	e8 d5 f3 ff ff       	call   80104c70 <namespace_replace_pid_ns>
8010589b:	83 c4 10             	add    $0x10,%esp
8010589e:	89 87 a0 00 00 00    	mov    %eax,0xa0(%edi)
801058a4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
801058a7:	8d 78 18             	lea    0x18(%eax),%edi
801058aa:	83 c0 38             	add    $0x38,%eax
801058ad:	89 45 e0             	mov    %eax,-0x20(%ebp)
801058b0:	83 ec 0c             	sub    $0xc,%esp
801058b3:	56                   	push   %esi
801058b4:	e8 87 ef ff ff       	call   80104840 <pid_ns_next_pid>
801058b9:	89 77 fc             	mov    %esi,-0x4(%edi)
801058bc:	89 07                	mov    %eax,(%edi)
801058be:	83 c4 10             	add    $0x10,%esp
801058c1:	8b 76 04             	mov    0x4(%esi),%esi
801058c4:	85 f6                	test   %esi,%esi
801058c6:	74 5a                	je     80105922 <fork+0x1c2>
801058c8:	83 c7 08             	add    $0x8,%edi
801058cb:	3b 7d e0             	cmp    -0x20(%ebp),%edi
801058ce:	75 e0                	jne    801058b0 <fork+0x150>
801058d0:	83 ec 0c             	sub    $0xc,%esp
801058d3:	68 65 f3 10 80       	push   $0x8010f365
801058d8:	e8 f3 aa ff ff       	call   801003d0 <panic>
801058dd:	8d 76 00             	lea    0x0(%esi),%esi
801058e0:	8b 90 2c 03 00 00    	mov    0x32c(%eax),%edx
801058e6:	39 90 04 03 00 00    	cmp    %edx,0x304(%eax)
801058ec:	0f 8c b4 fe ff ff    	jl     801057a6 <fork+0x46>
801058f2:	8d 65 f4             	lea    -0xc(%ebp),%esp
801058f5:	be ff ff ff ff       	mov    $0xffffffff,%esi
801058fa:	89 f0                	mov    %esi,%eax
801058fc:	5b                   	pop    %ebx
801058fd:	5e                   	pop    %esi
801058fe:	5f                   	pop    %edi
801058ff:	5d                   	pop    %ebp
80105900:	c3                   	ret    
80105901:	83 ec 0c             	sub    $0xc,%esp
80105904:	ff b3 a0 00 00 00    	pushl  0xa0(%ebx)
8010590a:	e8 e1 f2 ff ff       	call   80104bf0 <namespacedup>
8010590f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
80105912:	83 c4 10             	add    $0x10,%esp
80105915:	89 82 a0 00 00 00    	mov    %eax,0xa0(%edx)
8010591b:	8b 70 08             	mov    0x8(%eax),%esi
8010591e:	85 f6                	test   %esi,%esi
80105920:	75 82                	jne    801058a4 <fork+0x144>
80105922:	8b 55 e4             	mov    -0x1c(%ebp),%edx
80105925:	83 ec 04             	sub    $0x4,%esp
80105928:	8b 42 18             	mov    0x18(%edx),%eax
8010592b:	89 42 10             	mov    %eax,0x10(%edx)
8010592e:	8d 83 90 00 00 00    	lea    0x90(%ebx),%eax
80105934:	6a 10                	push   $0x10
80105936:	50                   	push   %eax
80105937:	8d 82 90 00 00 00    	lea    0x90(%edx),%eax
8010593d:	50                   	push   %eax
8010593e:	e8 4d 11 00 00       	call   80106a90 <safestrcpy>
80105943:	8b 83 a0 00 00 00    	mov    0xa0(%ebx),%eax
80105949:	83 c4 10             	add    $0x10,%esp
8010594c:	8b 50 08             	mov    0x8(%eax),%edx
8010594f:	31 c0                	xor    %eax,%eax
80105951:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
80105954:	3b 54 c1 14          	cmp    0x14(%ecx,%eax,8),%edx
80105958:	74 48                	je     801059a2 <fork+0x242>
8010595a:	83 c0 01             	add    $0x1,%eax
8010595d:	83 f8 04             	cmp    $0x4,%eax
80105960:	75 ef                	jne    80105951 <fork+0x1f1>
80105962:	31 f6                	xor    %esi,%esi
80105964:	83 ec 0c             	sub    $0xc,%esp
80105967:	68 c0 ec 12 80       	push   $0x8012ecc0
8010596c:	e8 5f 0d 00 00       	call   801066d0 <acquire>
80105971:	8b 7d e4             	mov    -0x1c(%ebp),%edi
80105974:	58                   	pop    %eax
80105975:	5a                   	pop    %edx
80105976:	57                   	push   %edi
80105977:	ff b3 ac 02 00 00    	pushl  0x2ac(%ebx)
8010597d:	e8 1e 7c 00 00       	call   8010d5a0 <cgroup_insert>
80105982:	c7 47 0c 03 00 00 00 	movl   $0x3,0xc(%edi)
80105989:	c7 04 24 c0 ec 12 80 	movl   $0x8012ecc0,(%esp)
80105990:	e8 5b 0e 00 00       	call   801067f0 <release>
80105995:	83 c4 10             	add    $0x10,%esp
80105998:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010599b:	89 f0                	mov    %esi,%eax
8010599d:	5b                   	pop    %ebx
8010599e:	5e                   	pop    %esi
8010599f:	5f                   	pop    %edi
801059a0:	5d                   	pop    %ebp
801059a1:	c3                   	ret    
801059a2:	8b 74 c1 18          	mov    0x18(%ecx,%eax,8),%esi
801059a6:	eb bc                	jmp    80105964 <fork+0x204>
801059a8:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
801059ab:	83 ec 0c             	sub    $0xc,%esp
801059ae:	ff 73 08             	pushl  0x8(%ebx)
801059b1:	e8 4a d3 ff ff       	call   80102d00 <kfree>
801059b6:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
801059bd:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
801059c4:	83 c4 10             	add    $0x10,%esp
801059c7:	e9 26 ff ff ff       	jmp    801058f2 <fork+0x192>
801059cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801059d0 <kill_proc>:
801059d0:	55                   	push   %ebp
801059d1:	89 e5                	mov    %esp,%ebp
801059d3:	53                   	push   %ebx
801059d4:	83 ec 04             	sub    $0x4,%esp
801059d7:	8b 5d 08             	mov    0x8(%ebp),%ebx
801059da:	83 7b 0c 02          	cmpl   $0x2,0xc(%ebx)
801059de:	c7 43 44 01 00 00 00 	movl   $0x1,0x44(%ebx)
801059e5:	75 07                	jne    801059ee <kill_proc+0x1e>
801059e7:	c7 43 0c 03 00 00 00 	movl   $0x3,0xc(%ebx)
801059ee:	8b 45 0c             	mov    0xc(%ebp),%eax
801059f1:	83 ec 08             	sub    $0x8,%esp
801059f4:	89 43 34             	mov    %eax,0x34(%ebx)
801059f7:	53                   	push   %ebx
801059f8:	ff b3 ac 02 00 00    	pushl  0x2ac(%ebx)
801059fe:	e8 7d 7c 00 00       	call   8010d680 <cgroup_erase>
80105a03:	83 c4 0c             	add    $0xc,%esp
80105a06:	6a 00                	push   $0x0
80105a08:	ff 33                	pushl  (%ebx)
80105a0a:	ff b3 ac 02 00 00    	pushl  0x2ac(%ebx)
80105a10:	e8 eb fb ff ff       	call   80105600 <update_protect_mem>
80105a15:	83 c4 10             	add    $0x10,%esp
80105a18:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80105a1b:	c9                   	leave  
80105a1c:	c3                   	ret    
80105a1d:	8d 76 00             	lea    0x0(%esi),%esi

80105a20 <kill_all_pid_ns>:
80105a20:	55                   	push   %ebp
80105a21:	89 e5                	mov    %esp,%ebp
80105a23:	57                   	push   %edi
80105a24:	56                   	push   %esi
80105a25:	53                   	push   %ebx
80105a26:	bb f4 ec 12 80       	mov    $0x8012ecf4,%ebx
80105a2b:	83 ec 0c             	sub    $0xc,%esp
80105a2e:	8b 7d 08             	mov    0x8(%ebp),%edi
80105a31:	8b 75 10             	mov    0x10(%ebp),%esi
80105a34:	eb 18                	jmp    80105a4e <kill_all_pid_ns+0x2e>
80105a36:	8d 76 00             	lea    0x0(%esi),%esi
80105a39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80105a40:	81 c3 c0 02 00 00    	add    $0x2c0,%ebx
80105a46:	81 fb f4 9c 13 80    	cmp    $0x80139cf4,%ebx
80105a4c:	74 2c                	je     80105a7a <kill_all_pid_ns+0x5a>
80105a4e:	39 df                	cmp    %ebx,%edi
80105a50:	74 ee                	je     80105a40 <kill_all_pid_ns+0x20>
80105a52:	8b 83 a0 00 00 00    	mov    0xa0(%ebx),%eax
80105a58:	39 70 08             	cmp    %esi,0x8(%eax)
80105a5b:	75 e3                	jne    80105a40 <kill_all_pid_ns+0x20>
80105a5d:	83 ec 08             	sub    $0x8,%esp
80105a60:	ff 75 0c             	pushl  0xc(%ebp)
80105a63:	53                   	push   %ebx
80105a64:	81 c3 c0 02 00 00    	add    $0x2c0,%ebx
80105a6a:	e8 61 ff ff ff       	call   801059d0 <kill_proc>
80105a6f:	83 c4 10             	add    $0x10,%esp
80105a72:	81 fb f4 9c 13 80    	cmp    $0x80139cf4,%ebx
80105a78:	75 d4                	jne    80105a4e <kill_all_pid_ns+0x2e>
80105a7a:	8d 65 f4             	lea    -0xc(%ebp),%esp
80105a7d:	5b                   	pop    %ebx
80105a7e:	5e                   	pop    %esi
80105a7f:	5f                   	pop    %edi
80105a80:	5d                   	pop    %ebp
80105a81:	c3                   	ret    
80105a82:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80105a89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80105a90 <get_pid1_for_ns>:
80105a90:	55                   	push   %ebp
80105a91:	b8 f4 ec 12 80       	mov    $0x8012ecf4,%eax
80105a96:	89 e5                	mov    %esp,%ebp
80105a98:	8b 4d 08             	mov    0x8(%ebp),%ecx
80105a9b:	90                   	nop
80105a9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105aa0:	31 d2                	xor    %edx,%edx
80105aa2:	3b 4c d0 14          	cmp    0x14(%eax,%edx,8),%ecx
80105aa6:	74 18                	je     80105ac0 <get_pid1_for_ns+0x30>
80105aa8:	83 c2 01             	add    $0x1,%edx
80105aab:	83 fa 04             	cmp    $0x4,%edx
80105aae:	75 f2                	jne    80105aa2 <get_pid1_for_ns+0x12>
80105ab0:	05 c0 02 00 00       	add    $0x2c0,%eax
80105ab5:	3d f4 9c 13 80       	cmp    $0x80139cf4,%eax
80105aba:	75 e4                	jne    80105aa0 <get_pid1_for_ns+0x10>
80105abc:	31 c0                	xor    %eax,%eax
80105abe:	5d                   	pop    %ebp
80105abf:	c3                   	ret    
80105ac0:	83 7c d0 18 01       	cmpl   $0x1,0x18(%eax,%edx,8)
80105ac5:	74 f7                	je     80105abe <get_pid1_for_ns+0x2e>
80105ac7:	05 c0 02 00 00       	add    $0x2c0,%eax
80105acc:	3d f4 9c 13 80       	cmp    $0x80139cf4,%eax
80105ad1:	75 cd                	jne    80105aa0 <get_pid1_for_ns+0x10>
80105ad3:	eb e7                	jmp    80105abc <get_pid1_for_ns+0x2c>
80105ad5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105ad9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80105ae0 <scheduler>:
80105ae0:	55                   	push   %ebp
80105ae1:	89 e5                	mov    %esp,%ebp
80105ae3:	57                   	push   %edi
80105ae4:	56                   	push   %esi
80105ae5:	53                   	push   %ebx
80105ae6:	8d 5d d4             	lea    -0x2c(%ebp),%ebx
80105ae9:	83 ec 3c             	sub    $0x3c,%esp
80105aec:	e8 8f f8 ff ff       	call   80105380 <mycpu>
80105af1:	83 ec 0c             	sub    $0xc,%esp
80105af4:	c7 80 ac 00 00 00 00 	movl   $0x0,0xac(%eax)
80105afb:	00 00 00 
80105afe:	89 c6                	mov    %eax,%esi
80105b00:	53                   	push   %ebx
80105b01:	e8 5a 8d 00 00       	call   8010e860 <cpu_account_initialize>
80105b06:	8d 46 04             	lea    0x4(%esi),%eax
80105b09:	83 c4 10             	add    $0x10,%esp
80105b0c:	89 45 c0             	mov    %eax,-0x40(%ebp)
80105b0f:	90                   	nop
80105b10:	fb                   	sti    
80105b11:	83 ec 0c             	sub    $0xc,%esp
80105b14:	bf f4 ec 12 80       	mov    $0x8012ecf4,%edi
80105b19:	68 c0 ec 12 80       	push   $0x8012ecc0
80105b1e:	e8 ad 0b 00 00       	call   801066d0 <acquire>
80105b23:	89 1c 24             	mov    %ebx,(%esp)
80105b26:	e8 65 8d 00 00       	call   8010e890 <cpu_account_schedule_start>
80105b2b:	83 c4 10             	add    $0x10,%esp
80105b2e:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
80105b35:	eb 1b                	jmp    80105b52 <scheduler+0x72>
80105b37:	89 f6                	mov    %esi,%esi
80105b39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80105b40:	81 c7 c0 02 00 00    	add    $0x2c0,%edi
80105b46:	81 ff f4 9c 13 80    	cmp    $0x80139cf4,%edi
80105b4c:	0f 84 ae 00 00 00    	je     80105c00 <scheduler+0x120>
80105b52:	83 ec 08             	sub    $0x8,%esp
80105b55:	57                   	push   %edi
80105b56:	53                   	push   %ebx
80105b57:	e8 54 8d 00 00       	call   8010e8b0 <cpu_account_schedule_proc_update>
80105b5c:	83 c4 10             	add    $0x10,%esp
80105b5f:	83 7f 0c 03          	cmpl   $0x3,0xc(%edi)
80105b63:	75 db                	jne    80105b40 <scheduler+0x60>
80105b65:	8b 47 44             	mov    0x44(%edi),%eax
80105b68:	85 c0                	test   %eax,%eax
80105b6a:	75 23                	jne    80105b8f <scheduler+0xaf>
80105b6c:	8b 87 ac 02 00 00    	mov    0x2ac(%edi),%eax
80105b72:	80 b8 11 03 00 00 00 	cmpb   $0x0,0x311(%eax)
80105b79:	74 0b                	je     80105b86 <scheduler+0xa6>
80105b7b:	0f b6 16             	movzbl (%esi),%edx
80105b7e:	38 90 30 03 00 00    	cmp    %dl,0x330(%eax)
80105b84:	75 ba                	jne    80105b40 <scheduler+0x60>
80105b86:	83 b8 34 03 00 00 01 	cmpl   $0x1,0x334(%eax)
80105b8d:	74 b1                	je     80105b40 <scheduler+0x60>
80105b8f:	83 ec 08             	sub    $0x8,%esp
80105b92:	57                   	push   %edi
80105b93:	53                   	push   %ebx
80105b94:	e8 77 8d 00 00       	call   8010e910 <cpu_account_schedule_process_decision>
80105b99:	83 c4 10             	add    $0x10,%esp
80105b9c:	85 c0                	test   %eax,%eax
80105b9e:	74 a0                	je     80105b40 <scheduler+0x60>
80105ba0:	83 ec 0c             	sub    $0xc,%esp
80105ba3:	89 be ac 00 00 00    	mov    %edi,0xac(%esi)
80105ba9:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
80105bad:	57                   	push   %edi
80105bae:	e8 3d 3b 00 00       	call   801096f0 <switchuvm>
80105bb3:	5a                   	pop    %edx
80105bb4:	59                   	pop    %ecx
80105bb5:	57                   	push   %edi
80105bb6:	53                   	push   %ebx
80105bb7:	c7 47 0c 04 00 00 00 	movl   $0x4,0xc(%edi)
80105bbe:	e8 6d 8e 00 00       	call   8010ea30 <cpu_account_before_process_schedule>
80105bc3:	58                   	pop    %eax
80105bc4:	5a                   	pop    %edx
80105bc5:	ff 77 3c             	pushl  0x3c(%edi)
80105bc8:	ff 75 c0             	pushl  -0x40(%ebp)
80105bcb:	e8 1b 0f 00 00       	call   80106aeb <swtch>
80105bd0:	59                   	pop    %ecx
80105bd1:	58                   	pop    %eax
80105bd2:	57                   	push   %edi
80105bd3:	53                   	push   %ebx
80105bd4:	81 c7 c0 02 00 00    	add    $0x2c0,%edi
80105bda:	e8 71 8e 00 00       	call   8010ea50 <cpu_account_after_process_schedule>
80105bdf:	e8 ec 3a 00 00       	call   801096d0 <switchkvm>
80105be4:	83 c4 10             	add    $0x10,%esp
80105be7:	81 ff f4 9c 13 80    	cmp    $0x80139cf4,%edi
80105bed:	c7 86 ac 00 00 00 00 	movl   $0x0,0xac(%esi)
80105bf4:	00 00 00 
80105bf7:	0f 85 55 ff ff ff    	jne    80105b52 <scheduler+0x72>
80105bfd:	8d 76 00             	lea    0x0(%esi),%esi
80105c00:	83 ec 0c             	sub    $0xc,%esp
80105c03:	68 c0 ec 12 80       	push   $0x8012ecc0
80105c08:	e8 e3 0b 00 00       	call   801067f0 <release>
80105c0d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
80105c10:	83 c4 10             	add    $0x10,%esp
80105c13:	85 c0                	test   %eax,%eax
80105c15:	0f 85 f5 fe ff ff    	jne    80105b10 <scheduler+0x30>
80105c1b:	83 ec 0c             	sub    $0xc,%esp
80105c1e:	53                   	push   %ebx
80105c1f:	e8 ac 8e 00 00       	call   8010ead0 <cpu_account_before_hlt>
80105c24:	f4                   	hlt    
80105c25:	89 1c 24             	mov    %ebx,(%esp)
80105c28:	e8 b3 8e 00 00       	call   8010eae0 <cpu_account_after_hlt>
80105c2d:	83 c4 10             	add    $0x10,%esp
80105c30:	e9 db fe ff ff       	jmp    80105b10 <scheduler+0x30>
80105c35:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105c39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80105c40 <sched>:
80105c40:	55                   	push   %ebp
80105c41:	89 e5                	mov    %esp,%ebp
80105c43:	56                   	push   %esi
80105c44:	53                   	push   %ebx
80105c45:	e8 46 0a 00 00       	call   80106690 <pushcli>
80105c4a:	e8 31 f7 ff ff       	call   80105380 <mycpu>
80105c4f:	8b 98 ac 00 00 00    	mov    0xac(%eax),%ebx
80105c55:	e8 26 0b 00 00       	call   80106780 <popcli>
80105c5a:	83 ec 0c             	sub    $0xc,%esp
80105c5d:	68 c0 ec 12 80       	push   $0x8012ecc0
80105c62:	e8 e9 09 00 00       	call   80106650 <holding>
80105c67:	83 c4 10             	add    $0x10,%esp
80105c6a:	85 c0                	test   %eax,%eax
80105c6c:	74 4f                	je     80105cbd <sched+0x7d>
80105c6e:	e8 0d f7 ff ff       	call   80105380 <mycpu>
80105c73:	83 b8 a4 00 00 00 01 	cmpl   $0x1,0xa4(%eax)
80105c7a:	75 68                	jne    80105ce4 <sched+0xa4>
80105c7c:	83 7b 0c 04          	cmpl   $0x4,0xc(%ebx)
80105c80:	74 55                	je     80105cd7 <sched+0x97>
80105c82:	9c                   	pushf  
80105c83:	58                   	pop    %eax
80105c84:	f6 c4 02             	test   $0x2,%ah
80105c87:	75 41                	jne    80105cca <sched+0x8a>
80105c89:	e8 f2 f6 ff ff       	call   80105380 <mycpu>
80105c8e:	83 c3 3c             	add    $0x3c,%ebx
80105c91:	8b b0 a8 00 00 00    	mov    0xa8(%eax),%esi
80105c97:	e8 e4 f6 ff ff       	call   80105380 <mycpu>
80105c9c:	83 ec 08             	sub    $0x8,%esp
80105c9f:	ff 70 04             	pushl  0x4(%eax)
80105ca2:	53                   	push   %ebx
80105ca3:	e8 43 0e 00 00       	call   80106aeb <swtch>
80105ca8:	e8 d3 f6 ff ff       	call   80105380 <mycpu>
80105cad:	83 c4 10             	add    $0x10,%esp
80105cb0:	89 b0 a8 00 00 00    	mov    %esi,0xa8(%eax)
80105cb6:	8d 65 f8             	lea    -0x8(%ebp),%esp
80105cb9:	5b                   	pop    %ebx
80105cba:	5e                   	pop    %esi
80105cbb:	5d                   	pop    %ebp
80105cbc:	c3                   	ret    
80105cbd:	83 ec 0c             	sub    $0xc,%esp
80105cc0:	68 75 f3 10 80       	push   $0x8010f375
80105cc5:	e8 06 a7 ff ff       	call   801003d0 <panic>
80105cca:	83 ec 0c             	sub    $0xc,%esp
80105ccd:	68 a1 f3 10 80       	push   $0x8010f3a1
80105cd2:	e8 f9 a6 ff ff       	call   801003d0 <panic>
80105cd7:	83 ec 0c             	sub    $0xc,%esp
80105cda:	68 93 f3 10 80       	push   $0x8010f393
80105cdf:	e8 ec a6 ff ff       	call   801003d0 <panic>
80105ce4:	83 ec 0c             	sub    $0xc,%esp
80105ce7:	68 87 f3 10 80       	push   $0x8010f387
80105cec:	e8 df a6 ff ff       	call   801003d0 <panic>
80105cf1:	eb 0d                	jmp    80105d00 <exit>
80105cf3:	90                   	nop
80105cf4:	90                   	nop
80105cf5:	90                   	nop
80105cf6:	90                   	nop
80105cf7:	90                   	nop
80105cf8:	90                   	nop
80105cf9:	90                   	nop
80105cfa:	90                   	nop
80105cfb:	90                   	nop
80105cfc:	90                   	nop
80105cfd:	90                   	nop
80105cfe:	90                   	nop
80105cff:	90                   	nop

80105d00 <exit>:
80105d00:	55                   	push   %ebp
80105d01:	89 e5                	mov    %esp,%ebp
80105d03:	57                   	push   %edi
80105d04:	56                   	push   %esi
80105d05:	53                   	push   %ebx
80105d06:	83 ec 0c             	sub    $0xc,%esp
80105d09:	e8 82 09 00 00       	call   80106690 <pushcli>
80105d0e:	e8 6d f6 ff ff       	call   80105380 <mycpu>
80105d13:	8b 98 ac 00 00 00    	mov    0xac(%eax),%ebx
80105d19:	e8 62 0a 00 00       	call   80106780 <popcli>
80105d1e:	39 1d b8 d5 11 80    	cmp    %ebx,0x8011d5b8
80105d24:	8b 45 08             	mov    0x8(%ebp),%eax
80105d27:	8d 73 48             	lea    0x48(%ebx),%esi
80105d2a:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
80105d30:	89 83 a8 00 00 00    	mov    %eax,0xa8(%ebx)
80105d36:	0f 84 c8 01 00 00    	je     80105f04 <exit+0x204>
80105d3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105d40:	8b 06                	mov    (%esi),%eax
80105d42:	85 c0                	test   %eax,%eax
80105d44:	74 12                	je     80105d58 <exit+0x58>
80105d46:	83 ec 0c             	sub    $0xc,%esp
80105d49:	50                   	push   %eax
80105d4a:	e8 d1 b8 ff ff       	call   80101620 <fileclose>
80105d4f:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
80105d55:	83 c4 10             	add    $0x10,%esp
80105d58:	83 c6 04             	add    $0x4,%esi
80105d5b:	39 fe                	cmp    %edi,%esi
80105d5d:	75 e1                	jne    80105d40 <exit+0x40>
80105d5f:	e8 7c da ff ff       	call   801037e0 <begin_op>
80105d64:	83 ec 0c             	sub    $0xc,%esp
80105d67:	ff b3 88 00 00 00    	pushl  0x88(%ebx)
80105d6d:	e8 8e c2 ff ff       	call   80102000 <iput>
80105d72:	e8 d9 da ff ff       	call   80103850 <end_op>
80105d77:	5a                   	pop    %edx
80105d78:	ff b3 8c 00 00 00    	pushl  0x8c(%ebx)
80105d7e:	e8 5d e0 ff ff       	call   80103de0 <mntput>
80105d83:	8b 8b a0 00 00 00    	mov    0xa0(%ebx),%ecx
80105d89:	c7 83 8c 00 00 00 00 	movl   $0x0,0x8c(%ebx)
80105d90:	00 00 00 
80105d93:	83 c4 10             	add    $0x10,%esp
80105d96:	c6 83 ac 00 00 00 00 	movb   $0x0,0xac(%ebx)
80105d9d:	c7 83 88 00 00 00 00 	movl   $0x0,0x88(%ebx)
80105da4:	00 00 00 
80105da7:	ba f4 ec 12 80       	mov    $0x8012ecf4,%edx
80105dac:	8b 71 08             	mov    0x8(%ecx),%esi
80105daf:	90                   	nop
80105db0:	31 c0                	xor    %eax,%eax
80105db2:	3b 74 c2 14          	cmp    0x14(%edx,%eax,8),%esi
80105db6:	74 30                	je     80105de8 <exit+0xe8>
80105db8:	83 c0 01             	add    $0x1,%eax
80105dbb:	83 f8 04             	cmp    $0x4,%eax
80105dbe:	75 f2                	jne    80105db2 <exit+0xb2>
80105dc0:	81 c2 c0 02 00 00    	add    $0x2c0,%edx
80105dc6:	81 fa f4 9c 13 80    	cmp    $0x80139cf4,%edx
80105dcc:	75 e2                	jne    80105db0 <exit+0xb0>
80105dce:	31 ff                	xor    %edi,%edi
80105dd0:	83 7e 40 00          	cmpl   $0x0,0x40(%esi)
80105dd4:	75 1b                	jne    80105df1 <exit+0xf1>
80105dd6:	83 ec 0c             	sub    $0xc,%esp
80105dd9:	68 c2 f3 10 80       	push   $0x8010f3c2
80105dde:	e8 ed a5 ff ff       	call   801003d0 <panic>
80105de3:	90                   	nop
80105de4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105de8:	83 7c c2 18 01       	cmpl   $0x1,0x18(%edx,%eax,8)
80105ded:	75 d1                	jne    80105dc0 <exit+0xc0>
80105def:	89 d7                	mov    %edx,%edi
80105df1:	83 ec 0c             	sub    $0xc,%esp
80105df4:	51                   	push   %ecx
80105df5:	e8 76 ed ff ff       	call   80104b70 <namespaceput>
80105dfa:	c7 04 24 c0 ec 12 80 	movl   $0x8012ecc0,(%esp)
80105e01:	e8 ca 08 00 00       	call   801066d0 <acquire>
80105e06:	8b 53 34             	mov    0x34(%ebx),%edx
80105e09:	83 c4 10             	add    $0x10,%esp
80105e0c:	b8 f4 ec 12 80       	mov    $0x8012ecf4,%eax
80105e11:	eb 11                	jmp    80105e24 <exit+0x124>
80105e13:	90                   	nop
80105e14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105e18:	05 c0 02 00 00       	add    $0x2c0,%eax
80105e1d:	3d f4 9c 13 80       	cmp    $0x80139cf4,%eax
80105e22:	74 1e                	je     80105e42 <exit+0x142>
80105e24:	83 78 0c 02          	cmpl   $0x2,0xc(%eax)
80105e28:	75 ee                	jne    80105e18 <exit+0x118>
80105e2a:	3b 50 40             	cmp    0x40(%eax),%edx
80105e2d:	75 e9                	jne    80105e18 <exit+0x118>
80105e2f:	c7 40 0c 03 00 00 00 	movl   $0x3,0xc(%eax)
80105e36:	05 c0 02 00 00       	add    $0x2c0,%eax
80105e3b:	3d f4 9c 13 80       	cmp    $0x80139cf4,%eax
80105e40:	75 e2                	jne    80105e24 <exit+0x124>
80105e42:	83 7b 10 01          	cmpl   $0x1,0x10(%ebx)
80105e46:	8b 0d b8 d5 11 80    	mov    0x8011d5b8,%ecx
80105e4c:	ba f4 ec 12 80       	mov    $0x8012ecf4,%edx
80105e51:	75 13                	jne    80105e66 <exit+0x166>
80105e53:	eb 4b                	jmp    80105ea0 <exit+0x1a0>
80105e55:	8d 76 00             	lea    0x0(%esi),%esi
80105e58:	81 c2 c0 02 00 00    	add    $0x2c0,%edx
80105e5e:	81 fa f4 9c 13 80    	cmp    $0x80139cf4,%edx
80105e64:	74 4f                	je     80105eb5 <exit+0x1b5>
80105e66:	39 5a 34             	cmp    %ebx,0x34(%edx)
80105e69:	75 ed                	jne    80105e58 <exit+0x158>
80105e6b:	83 7a 0c 05          	cmpl   $0x5,0xc(%edx)
80105e6f:	89 7a 34             	mov    %edi,0x34(%edx)
80105e72:	75 e4                	jne    80105e58 <exit+0x158>
80105e74:	b8 f4 ec 12 80       	mov    $0x8012ecf4,%eax
80105e79:	eb 11                	jmp    80105e8c <exit+0x18c>
80105e7b:	90                   	nop
80105e7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80105e80:	05 c0 02 00 00       	add    $0x2c0,%eax
80105e85:	3d f4 9c 13 80       	cmp    $0x80139cf4,%eax
80105e8a:	74 cc                	je     80105e58 <exit+0x158>
80105e8c:	83 78 0c 02          	cmpl   $0x2,0xc(%eax)
80105e90:	75 ee                	jne    80105e80 <exit+0x180>
80105e92:	3b 48 40             	cmp    0x40(%eax),%ecx
80105e95:	75 e9                	jne    80105e80 <exit+0x180>
80105e97:	c7 40 0c 03 00 00 00 	movl   $0x3,0xc(%eax)
80105e9e:	eb e0                	jmp    80105e80 <exit+0x180>
80105ea0:	c7 46 40 01 00 00 00 	movl   $0x1,0x40(%esi)
80105ea7:	50                   	push   %eax
80105ea8:	56                   	push   %esi
80105ea9:	ff 73 34             	pushl  0x34(%ebx)
80105eac:	53                   	push   %ebx
80105ead:	e8 6e fb ff ff       	call   80105a20 <kill_all_pid_ns>
80105eb2:	83 c4 10             	add    $0x10,%esp
80105eb5:	8b 83 a4 00 00 00    	mov    0xa4(%ebx),%eax
80105ebb:	85 c0                	test   %eax,%eax
80105ebd:	74 0c                	je     80105ecb <exit+0x1cb>
80105ebf:	83 ec 0c             	sub    $0xc,%esp
80105ec2:	50                   	push   %eax
80105ec3:	e8 08 e8 ff ff       	call   801046d0 <pid_ns_put>
80105ec8:	83 c4 10             	add    $0x10,%esp
80105ecb:	83 ec 08             	sub    $0x8,%esp
80105ece:	53                   	push   %ebx
80105ecf:	ff b3 ac 02 00 00    	pushl  0x2ac(%ebx)
80105ed5:	e8 a6 77 00 00       	call   8010d680 <cgroup_erase>
80105eda:	83 c4 0c             	add    $0xc,%esp
80105edd:	6a 00                	push   $0x0
80105edf:	ff 33                	pushl  (%ebx)
80105ee1:	ff b3 ac 02 00 00    	pushl  0x2ac(%ebx)
80105ee7:	e8 14 f7 ff ff       	call   80105600 <update_protect_mem>
80105eec:	c7 43 0c 05 00 00 00 	movl   $0x5,0xc(%ebx)
80105ef3:	e8 48 fd ff ff       	call   80105c40 <sched>
80105ef8:	c7 04 24 d6 f3 10 80 	movl   $0x8010f3d6,(%esp)
80105eff:	e8 cc a4 ff ff       	call   801003d0 <panic>
80105f04:	83 ec 0c             	sub    $0xc,%esp
80105f07:	68 b5 f3 10 80       	push   $0x8010f3b5
80105f0c:	e8 bf a4 ff ff       	call   801003d0 <panic>
80105f11:	eb 0d                	jmp    80105f20 <yield>
80105f13:	90                   	nop
80105f14:	90                   	nop
80105f15:	90                   	nop
80105f16:	90                   	nop
80105f17:	90                   	nop
80105f18:	90                   	nop
80105f19:	90                   	nop
80105f1a:	90                   	nop
80105f1b:	90                   	nop
80105f1c:	90                   	nop
80105f1d:	90                   	nop
80105f1e:	90                   	nop
80105f1f:	90                   	nop

80105f20 <yield>:
80105f20:	55                   	push   %ebp
80105f21:	89 e5                	mov    %esp,%ebp
80105f23:	53                   	push   %ebx
80105f24:	83 ec 10             	sub    $0x10,%esp
80105f27:	68 c0 ec 12 80       	push   $0x8012ecc0
80105f2c:	e8 9f 07 00 00       	call   801066d0 <acquire>
80105f31:	e8 5a 07 00 00       	call   80106690 <pushcli>
80105f36:	e8 45 f4 ff ff       	call   80105380 <mycpu>
80105f3b:	8b 98 ac 00 00 00    	mov    0xac(%eax),%ebx
80105f41:	e8 3a 08 00 00       	call   80106780 <popcli>
80105f46:	c7 43 0c 03 00 00 00 	movl   $0x3,0xc(%ebx)
80105f4d:	e8 ee fc ff ff       	call   80105c40 <sched>
80105f52:	c7 04 24 c0 ec 12 80 	movl   $0x8012ecc0,(%esp)
80105f59:	e8 92 08 00 00       	call   801067f0 <release>
80105f5e:	83 c4 10             	add    $0x10,%esp
80105f61:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80105f64:	c9                   	leave  
80105f65:	c3                   	ret    
80105f66:	8d 76 00             	lea    0x0(%esi),%esi
80105f69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80105f70 <sleep>:
80105f70:	55                   	push   %ebp
80105f71:	89 e5                	mov    %esp,%ebp
80105f73:	57                   	push   %edi
80105f74:	56                   	push   %esi
80105f75:	53                   	push   %ebx
80105f76:	83 ec 0c             	sub    $0xc,%esp
80105f79:	8b 7d 08             	mov    0x8(%ebp),%edi
80105f7c:	8b 75 0c             	mov    0xc(%ebp),%esi
80105f7f:	e8 0c 07 00 00       	call   80106690 <pushcli>
80105f84:	e8 f7 f3 ff ff       	call   80105380 <mycpu>
80105f89:	8b 98 ac 00 00 00    	mov    0xac(%eax),%ebx
80105f8f:	e8 ec 07 00 00       	call   80106780 <popcli>
80105f94:	85 db                	test   %ebx,%ebx
80105f96:	0f 84 87 00 00 00    	je     80106023 <sleep+0xb3>
80105f9c:	85 f6                	test   %esi,%esi
80105f9e:	74 76                	je     80106016 <sleep+0xa6>
80105fa0:	81 fe c0 ec 12 80    	cmp    $0x8012ecc0,%esi
80105fa6:	74 50                	je     80105ff8 <sleep+0x88>
80105fa8:	83 ec 0c             	sub    $0xc,%esp
80105fab:	68 c0 ec 12 80       	push   $0x8012ecc0
80105fb0:	e8 1b 07 00 00       	call   801066d0 <acquire>
80105fb5:	89 34 24             	mov    %esi,(%esp)
80105fb8:	e8 33 08 00 00       	call   801067f0 <release>
80105fbd:	89 7b 40             	mov    %edi,0x40(%ebx)
80105fc0:	c7 43 0c 02 00 00 00 	movl   $0x2,0xc(%ebx)
80105fc7:	e8 74 fc ff ff       	call   80105c40 <sched>
80105fcc:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%ebx)
80105fd3:	c7 04 24 c0 ec 12 80 	movl   $0x8012ecc0,(%esp)
80105fda:	e8 11 08 00 00       	call   801067f0 <release>
80105fdf:	89 75 08             	mov    %esi,0x8(%ebp)
80105fe2:	83 c4 10             	add    $0x10,%esp
80105fe5:	8d 65 f4             	lea    -0xc(%ebp),%esp
80105fe8:	5b                   	pop    %ebx
80105fe9:	5e                   	pop    %esi
80105fea:	5f                   	pop    %edi
80105feb:	5d                   	pop    %ebp
80105fec:	e9 df 06 00 00       	jmp    801066d0 <acquire>
80105ff1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80105ff8:	89 7b 40             	mov    %edi,0x40(%ebx)
80105ffb:	c7 43 0c 02 00 00 00 	movl   $0x2,0xc(%ebx)
80106002:	e8 39 fc ff ff       	call   80105c40 <sched>
80106007:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%ebx)
8010600e:	8d 65 f4             	lea    -0xc(%ebp),%esp
80106011:	5b                   	pop    %ebx
80106012:	5e                   	pop    %esi
80106013:	5f                   	pop    %edi
80106014:	5d                   	pop    %ebp
80106015:	c3                   	ret    
80106016:	83 ec 0c             	sub    $0xc,%esp
80106019:	68 e8 f3 10 80       	push   $0x8010f3e8
8010601e:	e8 ad a3 ff ff       	call   801003d0 <panic>
80106023:	83 ec 0c             	sub    $0xc,%esp
80106026:	68 e2 f3 10 80       	push   $0x8010f3e2
8010602b:	e8 a0 a3 ff ff       	call   801003d0 <panic>

80106030 <wait>:
80106030:	55                   	push   %ebp
80106031:	89 e5                	mov    %esp,%ebp
80106033:	57                   	push   %edi
80106034:	56                   	push   %esi
80106035:	53                   	push   %ebx
80106036:	83 ec 0c             	sub    $0xc,%esp
80106039:	8b 7d 08             	mov    0x8(%ebp),%edi
8010603c:	e8 4f 06 00 00       	call   80106690 <pushcli>
80106041:	e8 3a f3 ff ff       	call   80105380 <mycpu>
80106046:	8b b0 ac 00 00 00    	mov    0xac(%eax),%esi
8010604c:	e8 2f 07 00 00       	call   80106780 <popcli>
80106051:	83 ec 0c             	sub    $0xc,%esp
80106054:	68 c0 ec 12 80       	push   $0x8012ecc0
80106059:	e8 72 06 00 00       	call   801066d0 <acquire>
8010605e:	83 c4 10             	add    $0x10,%esp
80106061:	31 c0                	xor    %eax,%eax
80106063:	bb f4 ec 12 80       	mov    $0x8012ecf4,%ebx
80106068:	eb 14                	jmp    8010607e <wait+0x4e>
8010606a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80106070:	81 c3 c0 02 00 00    	add    $0x2c0,%ebx
80106076:	81 fb f4 9c 13 80    	cmp    $0x80139cf4,%ebx
8010607c:	74 22                	je     801060a0 <wait+0x70>
8010607e:	39 73 34             	cmp    %esi,0x34(%ebx)
80106081:	75 ed                	jne    80106070 <wait+0x40>
80106083:	83 7b 0c 05          	cmpl   $0x5,0xc(%ebx)
80106087:	74 3d                	je     801060c6 <wait+0x96>
80106089:	81 c3 c0 02 00 00    	add    $0x2c0,%ebx
8010608f:	b8 01 00 00 00       	mov    $0x1,%eax
80106094:	81 fb f4 9c 13 80    	cmp    $0x80139cf4,%ebx
8010609a:	75 e2                	jne    8010607e <wait+0x4e>
8010609c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801060a0:	85 c0                	test   %eax,%eax
801060a2:	0f 84 d7 00 00 00    	je     8010617f <wait+0x14f>
801060a8:	8b 46 44             	mov    0x44(%esi),%eax
801060ab:	85 c0                	test   %eax,%eax
801060ad:	0f 85 cc 00 00 00    	jne    8010617f <wait+0x14f>
801060b3:	83 ec 08             	sub    $0x8,%esp
801060b6:	68 c0 ec 12 80       	push   $0x8012ecc0
801060bb:	56                   	push   %esi
801060bc:	e8 af fe ff ff       	call   80105f70 <sleep>
801060c1:	83 c4 10             	add    $0x10,%esp
801060c4:	eb 9b                	jmp    80106061 <wait+0x31>
801060c6:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
801060cc:	8b 50 08             	mov    0x8(%eax),%edx
801060cf:	31 c0                	xor    %eax,%eax
801060d1:	3b 54 c3 14          	cmp    0x14(%ebx,%eax,8),%edx
801060d5:	0f 84 9b 00 00 00    	je     80106176 <wait+0x146>
801060db:	83 c0 01             	add    $0x1,%eax
801060de:	83 f8 04             	cmp    $0x4,%eax
801060e1:	75 ee                	jne    801060d1 <wait+0xa1>
801060e3:	31 f6                	xor    %esi,%esi
801060e5:	83 ec 0c             	sub    $0xc,%esp
801060e8:	ff 73 08             	pushl  0x8(%ebx)
801060eb:	e8 10 cc ff ff       	call   80102d00 <kfree>
801060f0:	5a                   	pop    %edx
801060f1:	ff 73 04             	pushl  0x4(%ebx)
801060f4:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
801060fb:	e8 50 3a 00 00       	call   80109b50 <freevm>
80106100:	8d 43 14             	lea    0x14(%ebx),%eax
80106103:	83 c4 0c             	add    $0xc,%esp
80106106:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
8010610d:	6a 20                	push   $0x20
8010610f:	6a 00                	push   $0x0
80106111:	50                   	push   %eax
80106112:	e8 29 07 00 00       	call   80106840 <memset>
80106117:	83 c4 10             	add    $0x10,%esp
8010611a:	85 ff                	test   %edi,%edi
8010611c:	c7 83 a4 00 00 00 00 	movl   $0x0,0xa4(%ebx)
80106123:	00 00 00 
80106126:	c7 43 34 00 00 00 00 	movl   $0x0,0x34(%ebx)
8010612d:	c6 83 90 00 00 00 00 	movb   $0x0,0x90(%ebx)
80106134:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
8010613b:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
80106142:	74 0e                	je     80106152 <wait+0x122>
80106144:	8b 83 a8 00 00 00    	mov    0xa8(%ebx),%eax
8010614a:	c1 e0 08             	shl    $0x8,%eax
8010614d:	83 c8 7f             	or     $0x7f,%eax
80106150:	89 07                	mov    %eax,(%edi)
80106152:	83 ec 0c             	sub    $0xc,%esp
80106155:	c7 83 a8 00 00 00 00 	movl   $0x0,0xa8(%ebx)
8010615c:	00 00 00 
8010615f:	68 c0 ec 12 80       	push   $0x8012ecc0
80106164:	e8 87 06 00 00       	call   801067f0 <release>
80106169:	83 c4 10             	add    $0x10,%esp
8010616c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010616f:	89 f0                	mov    %esi,%eax
80106171:	5b                   	pop    %ebx
80106172:	5e                   	pop    %esi
80106173:	5f                   	pop    %edi
80106174:	5d                   	pop    %ebp
80106175:	c3                   	ret    
80106176:	8b 74 c3 18          	mov    0x18(%ebx,%eax,8),%esi
8010617a:	e9 66 ff ff ff       	jmp    801060e5 <wait+0xb5>
8010617f:	83 ec 0c             	sub    $0xc,%esp
80106182:	be ff ff ff ff       	mov    $0xffffffff,%esi
80106187:	68 c0 ec 12 80       	push   $0x8012ecc0
8010618c:	e8 5f 06 00 00       	call   801067f0 <release>
80106191:	83 c4 10             	add    $0x10,%esp
80106194:	8d 65 f4             	lea    -0xc(%ebp),%esp
80106197:	89 f0                	mov    %esi,%eax
80106199:	5b                   	pop    %ebx
8010619a:	5e                   	pop    %esi
8010619b:	5f                   	pop    %edi
8010619c:	5d                   	pop    %ebp
8010619d:	c3                   	ret    
8010619e:	66 90                	xchg   %ax,%ax

801061a0 <wakeup>:
801061a0:	55                   	push   %ebp
801061a1:	89 e5                	mov    %esp,%ebp
801061a3:	53                   	push   %ebx
801061a4:	83 ec 10             	sub    $0x10,%esp
801061a7:	8b 5d 08             	mov    0x8(%ebp),%ebx
801061aa:	68 c0 ec 12 80       	push   $0x8012ecc0
801061af:	e8 1c 05 00 00       	call   801066d0 <acquire>
801061b4:	83 c4 10             	add    $0x10,%esp
801061b7:	b8 f4 ec 12 80       	mov    $0x8012ecf4,%eax
801061bc:	eb 0e                	jmp    801061cc <wakeup+0x2c>
801061be:	66 90                	xchg   %ax,%ax
801061c0:	05 c0 02 00 00       	add    $0x2c0,%eax
801061c5:	3d f4 9c 13 80       	cmp    $0x80139cf4,%eax
801061ca:	74 1e                	je     801061ea <wakeup+0x4a>
801061cc:	83 78 0c 02          	cmpl   $0x2,0xc(%eax)
801061d0:	75 ee                	jne    801061c0 <wakeup+0x20>
801061d2:	3b 58 40             	cmp    0x40(%eax),%ebx
801061d5:	75 e9                	jne    801061c0 <wakeup+0x20>
801061d7:	c7 40 0c 03 00 00 00 	movl   $0x3,0xc(%eax)
801061de:	05 c0 02 00 00       	add    $0x2c0,%eax
801061e3:	3d f4 9c 13 80       	cmp    $0x80139cf4,%eax
801061e8:	75 e2                	jne    801061cc <wakeup+0x2c>
801061ea:	c7 45 08 c0 ec 12 80 	movl   $0x8012ecc0,0x8(%ebp)
801061f1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801061f4:	c9                   	leave  
801061f5:	e9 f6 05 00 00       	jmp    801067f0 <release>
801061fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80106200 <kill>:
80106200:	55                   	push   %ebp
80106201:	89 e5                	mov    %esp,%ebp
80106203:	56                   	push   %esi
80106204:	53                   	push   %ebx
80106205:	8b 5d 08             	mov    0x8(%ebp),%ebx
80106208:	83 ec 0c             	sub    $0xc,%esp
8010620b:	68 c0 ec 12 80       	push   $0x8012ecc0
80106210:	e8 bb 04 00 00       	call   801066d0 <acquire>
80106215:	e8 76 04 00 00       	call   80106690 <pushcli>
8010621a:	e8 61 f1 ff ff       	call   80105380 <mycpu>
8010621f:	8b b0 ac 00 00 00    	mov    0xac(%eax),%esi
80106225:	e8 56 05 00 00       	call   80106780 <popcli>
8010622a:	83 c4 10             	add    $0x10,%esp
8010622d:	ba f4 ec 12 80       	mov    $0x8012ecf4,%edx
80106232:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
80106238:	8b 48 08             	mov    0x8(%eax),%ecx
8010623b:	90                   	nop
8010623c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106240:	31 c0                	xor    %eax,%eax
80106242:	3b 4c c2 14          	cmp    0x14(%edx,%eax,8),%ecx
80106246:	74 38                	je     80106280 <kill+0x80>
80106248:	83 c0 01             	add    $0x1,%eax
8010624b:	83 f8 04             	cmp    $0x4,%eax
8010624e:	75 f2                	jne    80106242 <kill+0x42>
80106250:	31 c0                	xor    %eax,%eax
80106252:	39 c3                	cmp    %eax,%ebx
80106254:	74 32                	je     80106288 <kill+0x88>
80106256:	81 c2 c0 02 00 00    	add    $0x2c0,%edx
8010625c:	81 fa f4 9c 13 80    	cmp    $0x80139cf4,%edx
80106262:	75 dc                	jne    80106240 <kill+0x40>
80106264:	83 ec 0c             	sub    $0xc,%esp
80106267:	68 c0 ec 12 80       	push   $0x8012ecc0
8010626c:	e8 7f 05 00 00       	call   801067f0 <release>
80106271:	83 c4 10             	add    $0x10,%esp
80106274:	8d 65 f8             	lea    -0x8(%ebp),%esp
80106277:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010627c:	5b                   	pop    %ebx
8010627d:	5e                   	pop    %esi
8010627e:	5d                   	pop    %ebp
8010627f:	c3                   	ret    
80106280:	8b 44 c2 18          	mov    0x18(%edx,%eax,8),%eax
80106284:	39 c3                	cmp    %eax,%ebx
80106286:	75 ce                	jne    80106256 <kill+0x56>
80106288:	83 ec 08             	sub    $0x8,%esp
8010628b:	ff 72 34             	pushl  0x34(%edx)
8010628e:	52                   	push   %edx
8010628f:	e8 3c f7 ff ff       	call   801059d0 <kill_proc>
80106294:	c7 04 24 c0 ec 12 80 	movl   $0x8012ecc0,(%esp)
8010629b:	e8 50 05 00 00       	call   801067f0 <release>
801062a0:	83 c4 10             	add    $0x10,%esp
801062a3:	8d 65 f8             	lea    -0x8(%ebp),%esp
801062a6:	31 c0                	xor    %eax,%eax
801062a8:	5b                   	pop    %ebx
801062a9:	5e                   	pop    %esi
801062aa:	5d                   	pop    %ebp
801062ab:	c3                   	ret    
801062ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801062b0 <procdump>:
801062b0:	55                   	push   %ebp
801062b1:	89 e5                	mov    %esp,%ebp
801062b3:	57                   	push   %edi
801062b4:	56                   	push   %esi
801062b5:	53                   	push   %ebx
801062b6:	8d 75 e8             	lea    -0x18(%ebp),%esi
801062b9:	bb f4 ec 12 80       	mov    $0x8012ecf4,%ebx
801062be:	83 ec 3c             	sub    $0x3c,%esp
801062c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801062c8:	8b 43 0c             	mov    0xc(%ebx),%eax
801062cb:	85 c0                	test   %eax,%eax
801062cd:	74 67                	je     80106336 <procdump+0x86>
801062cf:	83 f8 05             	cmp    $0x5,%eax
801062d2:	b9 f9 f3 10 80       	mov    $0x8010f3f9,%ecx
801062d7:	77 11                	ja     801062ea <procdump+0x3a>
801062d9:	8b 0c 85 58 f4 10 80 	mov    -0x7fef0ba8(,%eax,4),%ecx
801062e0:	b8 f9 f3 10 80       	mov    $0x8010f3f9,%eax
801062e5:	85 c9                	test   %ecx,%ecx
801062e7:	0f 44 c8             	cmove  %eax,%ecx
801062ea:	a1 b8 d5 11 80       	mov    0x8011d5b8,%eax
801062ef:	8d bb 90 00 00 00    	lea    0x90(%ebx),%edi
801062f5:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
801062fb:	8b 50 08             	mov    0x8(%eax),%edx
801062fe:	31 c0                	xor    %eax,%eax
80106300:	3b 54 c3 14          	cmp    0x14(%ebx,%eax,8),%edx
80106304:	74 4a                	je     80106350 <procdump+0xa0>
80106306:	83 c0 01             	add    $0x1,%eax
80106309:	83 f8 04             	cmp    $0x4,%eax
8010630c:	75 f2                	jne    80106300 <procdump+0x50>
8010630e:	31 c0                	xor    %eax,%eax
80106310:	57                   	push   %edi
80106311:	51                   	push   %ecx
80106312:	50                   	push   %eax
80106313:	68 fd f3 10 80       	push   $0x8010f3fd
80106318:	e8 43 a3 ff ff       	call   80100660 <cprintf>
8010631d:	83 c4 10             	add    $0x10,%esp
80106320:	83 7b 0c 02          	cmpl   $0x2,0xc(%ebx)
80106324:	74 3a                	je     80106360 <procdump+0xb0>
80106326:	83 ec 0c             	sub    $0xc,%esp
80106329:	68 33 f8 10 80       	push   $0x8010f833
8010632e:	e8 2d a3 ff ff       	call   80100660 <cprintf>
80106333:	83 c4 10             	add    $0x10,%esp
80106336:	81 c3 c0 02 00 00    	add    $0x2c0,%ebx
8010633c:	81 fb f4 9c 13 80    	cmp    $0x80139cf4,%ebx
80106342:	75 84                	jne    801062c8 <procdump+0x18>
80106344:	8d 65 f4             	lea    -0xc(%ebp),%esp
80106347:	5b                   	pop    %ebx
80106348:	5e                   	pop    %esi
80106349:	5f                   	pop    %edi
8010634a:	5d                   	pop    %ebp
8010634b:	c3                   	ret    
8010634c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106350:	8b 44 c3 18          	mov    0x18(%ebx,%eax,8),%eax
80106354:	eb ba                	jmp    80106310 <procdump+0x60>
80106356:	8d 76 00             	lea    0x0(%esi),%esi
80106359:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80106360:	8d 45 c0             	lea    -0x40(%ebp),%eax
80106363:	83 ec 08             	sub    $0x8,%esp
80106366:	8d 7d c0             	lea    -0x40(%ebp),%edi
80106369:	50                   	push   %eax
8010636a:	8b 43 3c             	mov    0x3c(%ebx),%eax
8010636d:	8b 40 0c             	mov    0xc(%eax),%eax
80106370:	83 c0 08             	add    $0x8,%eax
80106373:	50                   	push   %eax
80106374:	e8 77 02 00 00       	call   801065f0 <getcallerpcs>
80106379:	83 c4 10             	add    $0x10,%esp
8010637c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106380:	8b 07                	mov    (%edi),%eax
80106382:	85 c0                	test   %eax,%eax
80106384:	74 a0                	je     80106326 <procdump+0x76>
80106386:	83 ec 08             	sub    $0x8,%esp
80106389:	83 c7 04             	add    $0x4,%edi
8010638c:	50                   	push   %eax
8010638d:	68 41 eb 10 80       	push   $0x8010eb41
80106392:	e8 c9 a2 ff ff       	call   80100660 <cprintf>
80106397:	83 c4 10             	add    $0x10,%esp
8010639a:	39 f7                	cmp    %esi,%edi
8010639c:	75 e2                	jne    80106380 <procdump+0xd0>
8010639e:	eb 86                	jmp    80106326 <procdump+0x76>

801063a0 <proc_lock>:
801063a0:	55                   	push   %ebp
801063a1:	89 e5                	mov    %esp,%ebp
801063a3:	83 ec 14             	sub    $0x14,%esp
801063a6:	68 c0 ec 12 80       	push   $0x8012ecc0
801063ab:	e8 20 03 00 00       	call   801066d0 <acquire>
801063b0:	83 c4 10             	add    $0x10,%esp
801063b3:	c9                   	leave  
801063b4:	c3                   	ret    
801063b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801063b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801063c0 <proc_unlock>:
801063c0:	55                   	push   %ebp
801063c1:	89 e5                	mov    %esp,%ebp
801063c3:	83 ec 14             	sub    $0x14,%esp
801063c6:	68 c0 ec 12 80       	push   $0x8012ecc0
801063cb:	e8 20 04 00 00       	call   801067f0 <release>
801063d0:	83 c4 10             	add    $0x10,%esp
801063d3:	c9                   	leave  
801063d4:	c3                   	ret    
801063d5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801063d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801063e0 <cgroup_move_proc>:
801063e0:	55                   	push   %ebp
801063e1:	89 e5                	mov    %esp,%ebp
801063e3:	57                   	push   %edi
801063e4:	56                   	push   %esi
801063e5:	53                   	push   %ebx
801063e6:	bb f4 ec 12 80       	mov    $0x8012ecf4,%ebx
801063eb:	83 ec 28             	sub    $0x28,%esp
801063ee:	8b 7d 08             	mov    0x8(%ebp),%edi
801063f1:	8b 75 0c             	mov    0xc(%ebp),%esi
801063f4:	68 c0 ec 12 80       	push   $0x8012ecc0
801063f9:	e8 d2 02 00 00       	call   801066d0 <acquire>
801063fe:	83 c4 10             	add    $0x10,%esp
80106401:	eb 13                	jmp    80106416 <cgroup_move_proc+0x36>
80106403:	90                   	nop
80106404:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106408:	81 c3 c0 02 00 00    	add    $0x2c0,%ebx
8010640e:	81 fb f4 9c 13 80    	cmp    $0x80139cf4,%ebx
80106414:	74 4a                	je     80106460 <cgroup_move_proc+0x80>
80106416:	83 ec 0c             	sub    $0xc,%esp
80106419:	53                   	push   %ebx
8010641a:	e8 01 f0 ff ff       	call   80105420 <proc_pid>
8010641f:	83 c4 10             	add    $0x10,%esp
80106422:	39 f0                	cmp    %esi,%eax
80106424:	75 e2                	jne    80106408 <cgroup_move_proc+0x28>
80106426:	8b 43 0c             	mov    0xc(%ebx),%eax
80106429:	83 e8 02             	sub    $0x2,%eax
8010642c:	83 f8 02             	cmp    $0x2,%eax
8010642f:	77 d7                	ja     80106408 <cgroup_move_proc+0x28>
80106431:	83 ec 08             	sub    $0x8,%esp
80106434:	53                   	push   %ebx
80106435:	57                   	push   %edi
80106436:	e8 05 70 00 00       	call   8010d440 <unsafe_cgroup_insert>
8010643b:	83 c4 10             	add    $0x10,%esp
8010643e:	85 c0                	test   %eax,%eax
80106440:	75 c6                	jne    80106408 <cgroup_move_proc+0x28>
80106442:	83 ec 0c             	sub    $0xc,%esp
80106445:	89 45 e4             	mov    %eax,-0x1c(%ebp)
80106448:	68 c0 ec 12 80       	push   $0x8012ecc0
8010644d:	e8 9e 03 00 00       	call   801067f0 <release>
80106452:	8b 45 e4             	mov    -0x1c(%ebp),%eax
80106455:	83 c4 10             	add    $0x10,%esp
80106458:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010645b:	5b                   	pop    %ebx
8010645c:	5e                   	pop    %esi
8010645d:	5f                   	pop    %edi
8010645e:	5d                   	pop    %ebp
8010645f:	c3                   	ret    
80106460:	83 ec 0c             	sub    $0xc,%esp
80106463:	68 c0 ec 12 80       	push   $0x8012ecc0
80106468:	e8 83 03 00 00       	call   801067f0 <release>
8010646d:	83 c4 10             	add    $0x10,%esp
80106470:	8d 65 f4             	lea    -0xc(%ebp),%esp
80106473:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80106478:	5b                   	pop    %ebx
80106479:	5e                   	pop    %esi
8010647a:	5f                   	pop    %edi
8010647b:	5d                   	pop    %ebp
8010647c:	c3                   	ret    
8010647d:	8d 76 00             	lea    0x0(%esi),%esi

80106480 <proc_get_cgroup>:
80106480:	55                   	push   %ebp
80106481:	89 e5                	mov    %esp,%ebp
80106483:	53                   	push   %ebx
80106484:	83 ec 04             	sub    $0x4,%esp
80106487:	e8 04 02 00 00       	call   80106690 <pushcli>
8010648c:	e8 ef ee ff ff       	call   80105380 <mycpu>
80106491:	8b 98 ac 00 00 00    	mov    0xac(%eax),%ebx
80106497:	e8 e4 02 00 00       	call   80106780 <popcli>
8010649c:	85 db                	test   %ebx,%ebx
8010649e:	74 10                	je     801064b0 <proc_get_cgroup+0x30>
801064a0:	8b 83 ac 02 00 00    	mov    0x2ac(%ebx),%eax
801064a6:	83 c4 04             	add    $0x4,%esp
801064a9:	5b                   	pop    %ebx
801064aa:	5d                   	pop    %ebp
801064ab:	c3                   	ret    
801064ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801064b0:	31 c0                	xor    %eax,%eax
801064b2:	eb f2                	jmp    801064a6 <proc_get_cgroup+0x26>
801064b4:	66 90                	xchg   %ax,%ax
801064b6:	66 90                	xchg   %ax,%ax
801064b8:	66 90                	xchg   %ax,%ax
801064ba:	66 90                	xchg   %ax,%ax
801064bc:	66 90                	xchg   %ax,%ax
801064be:	66 90                	xchg   %ax,%ax

801064c0 <initsleeplock>:
801064c0:	55                   	push   %ebp
801064c1:	89 e5                	mov    %esp,%ebp
801064c3:	53                   	push   %ebx
801064c4:	83 ec 0c             	sub    $0xc,%esp
801064c7:	8b 5d 08             	mov    0x8(%ebp),%ebx
801064ca:	68 70 f4 10 80       	push   $0x8010f470
801064cf:	8d 43 04             	lea    0x4(%ebx),%eax
801064d2:	50                   	push   %eax
801064d3:	e8 f8 00 00 00       	call   801065d0 <initlock>
801064d8:	8b 45 0c             	mov    0xc(%ebp),%eax
801064db:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
801064e1:	83 c4 10             	add    $0x10,%esp
801064e4:	c7 43 3c 00 00 00 00 	movl   $0x0,0x3c(%ebx)
801064eb:	89 43 38             	mov    %eax,0x38(%ebx)
801064ee:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801064f1:	c9                   	leave  
801064f2:	c3                   	ret    
801064f3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801064f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80106500 <acquiresleep>:
80106500:	55                   	push   %ebp
80106501:	89 e5                	mov    %esp,%ebp
80106503:	56                   	push   %esi
80106504:	53                   	push   %ebx
80106505:	8b 5d 08             	mov    0x8(%ebp),%ebx
80106508:	83 ec 0c             	sub    $0xc,%esp
8010650b:	8d 73 04             	lea    0x4(%ebx),%esi
8010650e:	56                   	push   %esi
8010650f:	e8 bc 01 00 00       	call   801066d0 <acquire>
80106514:	8b 13                	mov    (%ebx),%edx
80106516:	83 c4 10             	add    $0x10,%esp
80106519:	85 d2                	test   %edx,%edx
8010651b:	74 16                	je     80106533 <acquiresleep+0x33>
8010651d:	8d 76 00             	lea    0x0(%esi),%esi
80106520:	83 ec 08             	sub    $0x8,%esp
80106523:	56                   	push   %esi
80106524:	53                   	push   %ebx
80106525:	e8 46 fa ff ff       	call   80105f70 <sleep>
8010652a:	8b 03                	mov    (%ebx),%eax
8010652c:	83 c4 10             	add    $0x10,%esp
8010652f:	85 c0                	test   %eax,%eax
80106531:	75 ed                	jne    80106520 <acquiresleep+0x20>
80106533:	c7 03 01 00 00 00    	movl   $0x1,(%ebx)
80106539:	e8 32 ef ff ff       	call   80105470 <myproc>
8010653e:	8b 40 10             	mov    0x10(%eax),%eax
80106541:	89 43 3c             	mov    %eax,0x3c(%ebx)
80106544:	89 75 08             	mov    %esi,0x8(%ebp)
80106547:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010654a:	5b                   	pop    %ebx
8010654b:	5e                   	pop    %esi
8010654c:	5d                   	pop    %ebp
8010654d:	e9 9e 02 00 00       	jmp    801067f0 <release>
80106552:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106559:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80106560 <releasesleep>:
80106560:	55                   	push   %ebp
80106561:	89 e5                	mov    %esp,%ebp
80106563:	56                   	push   %esi
80106564:	53                   	push   %ebx
80106565:	8b 5d 08             	mov    0x8(%ebp),%ebx
80106568:	83 ec 0c             	sub    $0xc,%esp
8010656b:	8d 73 04             	lea    0x4(%ebx),%esi
8010656e:	56                   	push   %esi
8010656f:	e8 5c 01 00 00       	call   801066d0 <acquire>
80106574:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
8010657a:	c7 43 3c 00 00 00 00 	movl   $0x0,0x3c(%ebx)
80106581:	89 1c 24             	mov    %ebx,(%esp)
80106584:	e8 17 fc ff ff       	call   801061a0 <wakeup>
80106589:	89 75 08             	mov    %esi,0x8(%ebp)
8010658c:	83 c4 10             	add    $0x10,%esp
8010658f:	8d 65 f8             	lea    -0x8(%ebp),%esp
80106592:	5b                   	pop    %ebx
80106593:	5e                   	pop    %esi
80106594:	5d                   	pop    %ebp
80106595:	e9 56 02 00 00       	jmp    801067f0 <release>
8010659a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

801065a0 <holdingsleep>:
801065a0:	55                   	push   %ebp
801065a1:	89 e5                	mov    %esp,%ebp
801065a3:	56                   	push   %esi
801065a4:	53                   	push   %ebx
801065a5:	8b 75 08             	mov    0x8(%ebp),%esi
801065a8:	83 ec 0c             	sub    $0xc,%esp
801065ab:	8d 5e 04             	lea    0x4(%esi),%ebx
801065ae:	53                   	push   %ebx
801065af:	e8 1c 01 00 00       	call   801066d0 <acquire>
801065b4:	8b 36                	mov    (%esi),%esi
801065b6:	89 1c 24             	mov    %ebx,(%esp)
801065b9:	e8 32 02 00 00       	call   801067f0 <release>
801065be:	8d 65 f8             	lea    -0x8(%ebp),%esp
801065c1:	89 f0                	mov    %esi,%eax
801065c3:	5b                   	pop    %ebx
801065c4:	5e                   	pop    %esi
801065c5:	5d                   	pop    %ebp
801065c6:	c3                   	ret    
801065c7:	66 90                	xchg   %ax,%ax
801065c9:	66 90                	xchg   %ax,%ax
801065cb:	66 90                	xchg   %ax,%ax
801065cd:	66 90                	xchg   %ax,%ax
801065cf:	90                   	nop

801065d0 <initlock>:
801065d0:	55                   	push   %ebp
801065d1:	89 e5                	mov    %esp,%ebp
801065d3:	8b 45 08             	mov    0x8(%ebp),%eax
801065d6:	8b 55 0c             	mov    0xc(%ebp),%edx
801065d9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
801065df:	89 50 04             	mov    %edx,0x4(%eax)
801065e2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
801065e9:	5d                   	pop    %ebp
801065ea:	c3                   	ret    
801065eb:	90                   	nop
801065ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801065f0 <getcallerpcs>:
801065f0:	55                   	push   %ebp
801065f1:	89 e5                	mov    %esp,%ebp
801065f3:	53                   	push   %ebx
801065f4:	8b 45 08             	mov    0x8(%ebp),%eax
801065f7:	8b 4d 0c             	mov    0xc(%ebp),%ecx
801065fa:	8d 50 f8             	lea    -0x8(%eax),%edx
801065fd:	31 c0                	xor    %eax,%eax
801065ff:	90                   	nop
80106600:	8d 9a 00 00 00 80    	lea    -0x80000000(%edx),%ebx
80106606:	81 fb fe ff ff 7f    	cmp    $0x7ffffffe,%ebx
8010660c:	77 1a                	ja     80106628 <getcallerpcs+0x38>
8010660e:	8b 5a 04             	mov    0x4(%edx),%ebx
80106611:	89 1c 81             	mov    %ebx,(%ecx,%eax,4)
80106614:	83 c0 01             	add    $0x1,%eax
80106617:	8b 12                	mov    (%edx),%edx
80106619:	83 f8 0a             	cmp    $0xa,%eax
8010661c:	75 e2                	jne    80106600 <getcallerpcs+0x10>
8010661e:	5b                   	pop    %ebx
8010661f:	5d                   	pop    %ebp
80106620:	c3                   	ret    
80106621:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106628:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)
8010662f:	83 c0 01             	add    $0x1,%eax
80106632:	83 f8 0a             	cmp    $0xa,%eax
80106635:	74 e7                	je     8010661e <getcallerpcs+0x2e>
80106637:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)
8010663e:	83 c0 01             	add    $0x1,%eax
80106641:	83 f8 0a             	cmp    $0xa,%eax
80106644:	75 e2                	jne    80106628 <getcallerpcs+0x38>
80106646:	eb d6                	jmp    8010661e <getcallerpcs+0x2e>
80106648:	90                   	nop
80106649:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80106650 <holding>:
80106650:	55                   	push   %ebp
80106651:	89 e5                	mov    %esp,%ebp
80106653:	53                   	push   %ebx
80106654:	83 ec 04             	sub    $0x4,%esp
80106657:	8b 55 08             	mov    0x8(%ebp),%edx
8010665a:	8b 02                	mov    (%edx),%eax
8010665c:	85 c0                	test   %eax,%eax
8010665e:	75 10                	jne    80106670 <holding+0x20>
80106660:	83 c4 04             	add    $0x4,%esp
80106663:	31 c0                	xor    %eax,%eax
80106665:	5b                   	pop    %ebx
80106666:	5d                   	pop    %ebp
80106667:	c3                   	ret    
80106668:	90                   	nop
80106669:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106670:	8b 5a 08             	mov    0x8(%edx),%ebx
80106673:	e8 08 ed ff ff       	call   80105380 <mycpu>
80106678:	39 c3                	cmp    %eax,%ebx
8010667a:	0f 94 c0             	sete   %al
8010667d:	83 c4 04             	add    $0x4,%esp
80106680:	0f b6 c0             	movzbl %al,%eax
80106683:	5b                   	pop    %ebx
80106684:	5d                   	pop    %ebp
80106685:	c3                   	ret    
80106686:	8d 76 00             	lea    0x0(%esi),%esi
80106689:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80106690 <pushcli>:
80106690:	55                   	push   %ebp
80106691:	89 e5                	mov    %esp,%ebp
80106693:	53                   	push   %ebx
80106694:	83 ec 04             	sub    $0x4,%esp

static inline uint
readeflags(void)
{
  uint eflags;
  asm volatile("pushfl; popl %0" : "=r" (eflags));
80106697:	9c                   	pushf  
80106698:	5b                   	pop    %ebx
}

static inline void
cli(void)
{
  asm volatile("cli");
80106699:	fa                   	cli    
8010669a:	e8 e1 ec ff ff       	call   80105380 <mycpu>
8010669f:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
801066a5:	85 c0                	test   %eax,%eax
801066a7:	75 11                	jne    801066ba <pushcli+0x2a>
801066a9:	81 e3 00 02 00 00    	and    $0x200,%ebx
801066af:	e8 cc ec ff ff       	call   80105380 <mycpu>
801066b4:	89 98 a8 00 00 00    	mov    %ebx,0xa8(%eax)
801066ba:	e8 c1 ec ff ff       	call   80105380 <mycpu>
801066bf:	83 80 a4 00 00 00 01 	addl   $0x1,0xa4(%eax)
801066c6:	83 c4 04             	add    $0x4,%esp
801066c9:	5b                   	pop    %ebx
801066ca:	5d                   	pop    %ebp
801066cb:	c3                   	ret    
801066cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801066d0 <acquire>:
801066d0:	55                   	push   %ebp
801066d1:	89 e5                	mov    %esp,%ebp
801066d3:	56                   	push   %esi
801066d4:	53                   	push   %ebx
801066d5:	e8 b6 ff ff ff       	call   80106690 <pushcli>
801066da:	8b 5d 08             	mov    0x8(%ebp),%ebx
801066dd:	8b 03                	mov    (%ebx),%eax
801066df:	85 c0                	test   %eax,%eax
801066e1:	75 7d                	jne    80106760 <acquire+0x90>
xchg(volatile uint *addr, uint newval)
{
  uint result;

  // The + in "+m" denotes a read-modify-write operand.
  asm volatile("lock; xchgl %0, %1" :
801066e3:	ba 01 00 00 00       	mov    $0x1,%edx
801066e8:	eb 09                	jmp    801066f3 <acquire+0x23>
801066ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801066f0:	8b 5d 08             	mov    0x8(%ebp),%ebx
801066f3:	89 d0                	mov    %edx,%eax
801066f5:	f0 87 03             	lock xchg %eax,(%ebx)
801066f8:	85 c0                	test   %eax,%eax
801066fa:	75 f4                	jne    801066f0 <acquire+0x20>
801066fc:	f0 83 0c 24 00       	lock orl $0x0,(%esp)
80106701:	8b 5d 08             	mov    0x8(%ebp),%ebx
80106704:	e8 77 ec ff ff       	call   80105380 <mycpu>
80106709:	89 ea                	mov    %ebp,%edx
8010670b:	8d 4b 0c             	lea    0xc(%ebx),%ecx
8010670e:	89 43 08             	mov    %eax,0x8(%ebx)
80106711:	31 c0                	xor    %eax,%eax
80106713:	90                   	nop
80106714:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106718:	8d 9a 00 00 00 80    	lea    -0x80000000(%edx),%ebx
8010671e:	81 fb fe ff ff 7f    	cmp    $0x7ffffffe,%ebx
80106724:	77 1a                	ja     80106740 <acquire+0x70>
80106726:	8b 5a 04             	mov    0x4(%edx),%ebx
80106729:	89 1c 81             	mov    %ebx,(%ecx,%eax,4)
8010672c:	83 c0 01             	add    $0x1,%eax
8010672f:	8b 12                	mov    (%edx),%edx
80106731:	83 f8 0a             	cmp    $0xa,%eax
80106734:	75 e2                	jne    80106718 <acquire+0x48>
80106736:	8d 65 f8             	lea    -0x8(%ebp),%esp
80106739:	5b                   	pop    %ebx
8010673a:	5e                   	pop    %esi
8010673b:	5d                   	pop    %ebp
8010673c:	c3                   	ret    
8010673d:	8d 76 00             	lea    0x0(%esi),%esi
80106740:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)
80106747:	83 c0 01             	add    $0x1,%eax
8010674a:	83 f8 0a             	cmp    $0xa,%eax
8010674d:	74 e7                	je     80106736 <acquire+0x66>
8010674f:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)
80106756:	83 c0 01             	add    $0x1,%eax
80106759:	83 f8 0a             	cmp    $0xa,%eax
8010675c:	75 e2                	jne    80106740 <acquire+0x70>
8010675e:	eb d6                	jmp    80106736 <acquire+0x66>
80106760:	8b 73 08             	mov    0x8(%ebx),%esi
80106763:	e8 18 ec ff ff       	call   80105380 <mycpu>
80106768:	39 c6                	cmp    %eax,%esi
8010676a:	0f 85 73 ff ff ff    	jne    801066e3 <acquire+0x13>
80106770:	83 ec 0c             	sub    $0xc,%esp
80106773:	68 7b f4 10 80       	push   $0x8010f47b
80106778:	e8 53 9c ff ff       	call   801003d0 <panic>
8010677d:	8d 76 00             	lea    0x0(%esi),%esi

80106780 <popcli>:
80106780:	55                   	push   %ebp
80106781:	89 e5                	mov    %esp,%ebp
80106783:	83 ec 08             	sub    $0x8,%esp

static inline uint
readeflags(void)
{
  uint eflags;
  asm volatile("pushfl; popl %0" : "=r" (eflags));
80106786:	9c                   	pushf  
80106787:	58                   	pop    %eax
80106788:	f6 c4 02             	test   $0x2,%ah
8010678b:	75 52                	jne    801067df <popcli+0x5f>
8010678d:	e8 ee eb ff ff       	call   80105380 <mycpu>
80106792:	8b 88 a4 00 00 00    	mov    0xa4(%eax),%ecx
80106798:	8d 51 ff             	lea    -0x1(%ecx),%edx
8010679b:	85 d2                	test   %edx,%edx
8010679d:	89 90 a4 00 00 00    	mov    %edx,0xa4(%eax)
801067a3:	78 2d                	js     801067d2 <popcli+0x52>
801067a5:	e8 d6 eb ff ff       	call   80105380 <mycpu>
801067aa:	8b 90 a4 00 00 00    	mov    0xa4(%eax),%edx
801067b0:	85 d2                	test   %edx,%edx
801067b2:	74 0c                	je     801067c0 <popcli+0x40>
801067b4:	c9                   	leave  
801067b5:	c3                   	ret    
801067b6:	8d 76 00             	lea    0x0(%esi),%esi
801067b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
801067c0:	e8 bb eb ff ff       	call   80105380 <mycpu>
801067c5:	8b 80 a8 00 00 00    	mov    0xa8(%eax),%eax
801067cb:	85 c0                	test   %eax,%eax
801067cd:	74 e5                	je     801067b4 <popcli+0x34>
}

static inline void
sti(void)
{
  asm volatile("sti");
801067cf:	fb                   	sti    
801067d0:	c9                   	leave  
801067d1:	c3                   	ret    
801067d2:	83 ec 0c             	sub    $0xc,%esp
801067d5:	68 9a f4 10 80       	push   $0x8010f49a
801067da:	e8 f1 9b ff ff       	call   801003d0 <panic>
801067df:	83 ec 0c             	sub    $0xc,%esp
801067e2:	68 83 f4 10 80       	push   $0x8010f483
801067e7:	e8 e4 9b ff ff       	call   801003d0 <panic>
801067ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801067f0 <release>:
801067f0:	55                   	push   %ebp
801067f1:	89 e5                	mov    %esp,%ebp
801067f3:	56                   	push   %esi
801067f4:	53                   	push   %ebx
801067f5:	8b 5d 08             	mov    0x8(%ebp),%ebx
801067f8:	8b 03                	mov    (%ebx),%eax
801067fa:	85 c0                	test   %eax,%eax
801067fc:	75 12                	jne    80106810 <release+0x20>
801067fe:	83 ec 0c             	sub    $0xc,%esp
80106801:	68 a1 f4 10 80       	push   $0x8010f4a1
80106806:	e8 c5 9b ff ff       	call   801003d0 <panic>
8010680b:	90                   	nop
8010680c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106810:	8b 73 08             	mov    0x8(%ebx),%esi
80106813:	e8 68 eb ff ff       	call   80105380 <mycpu>
80106818:	39 c6                	cmp    %eax,%esi
8010681a:	75 e2                	jne    801067fe <release+0xe>
8010681c:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
80106823:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8010682a:	f0 83 0c 24 00       	lock orl $0x0,(%esp)
8010682f:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
80106835:	8d 65 f8             	lea    -0x8(%ebp),%esp
80106838:	5b                   	pop    %ebx
80106839:	5e                   	pop    %esi
8010683a:	5d                   	pop    %ebp
8010683b:	e9 40 ff ff ff       	jmp    80106780 <popcli>

80106840 <memset>:
80106840:	55                   	push   %ebp
80106841:	89 e5                	mov    %esp,%ebp
80106843:	57                   	push   %edi
80106844:	53                   	push   %ebx
80106845:	8b 55 08             	mov    0x8(%ebp),%edx
80106848:	8b 4d 10             	mov    0x10(%ebp),%ecx
8010684b:	f6 c2 03             	test   $0x3,%dl
8010684e:	75 05                	jne    80106855 <memset+0x15>
80106850:	f6 c1 03             	test   $0x3,%cl
80106853:	74 13                	je     80106868 <memset+0x28>
}

static inline void
stosb(void *addr, int data, int cnt)
{
  asm volatile("cld; rep stosb" :
80106855:	89 d7                	mov    %edx,%edi
80106857:	8b 45 0c             	mov    0xc(%ebp),%eax
8010685a:	fc                   	cld    
8010685b:	f3 aa                	rep stos %al,%es:(%edi)
8010685d:	5b                   	pop    %ebx
8010685e:	89 d0                	mov    %edx,%eax
80106860:	5f                   	pop    %edi
80106861:	5d                   	pop    %ebp
80106862:	c3                   	ret    
80106863:	90                   	nop
80106864:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106868:	0f b6 7d 0c          	movzbl 0xc(%ebp),%edi
}

static inline void
stosl(void *addr, int data, int cnt)
{
  asm volatile("cld; rep stosl" :
8010686c:	c1 e9 02             	shr    $0x2,%ecx
8010686f:	89 fb                	mov    %edi,%ebx
80106871:	89 f8                	mov    %edi,%eax
80106873:	c1 e3 18             	shl    $0x18,%ebx
80106876:	c1 e0 10             	shl    $0x10,%eax
80106879:	09 d8                	or     %ebx,%eax
8010687b:	09 f8                	or     %edi,%eax
8010687d:	c1 e7 08             	shl    $0x8,%edi
80106880:	09 f8                	or     %edi,%eax
80106882:	89 d7                	mov    %edx,%edi
80106884:	fc                   	cld    
80106885:	f3 ab                	rep stos %eax,%es:(%edi)
80106887:	5b                   	pop    %ebx
80106888:	89 d0                	mov    %edx,%eax
8010688a:	5f                   	pop    %edi
8010688b:	5d                   	pop    %ebp
8010688c:	c3                   	ret    
8010688d:	8d 76 00             	lea    0x0(%esi),%esi

80106890 <memcmp>:
80106890:	55                   	push   %ebp
80106891:	89 e5                	mov    %esp,%ebp
80106893:	57                   	push   %edi
80106894:	56                   	push   %esi
80106895:	8b 45 10             	mov    0x10(%ebp),%eax
80106898:	53                   	push   %ebx
80106899:	8b 75 0c             	mov    0xc(%ebp),%esi
8010689c:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010689f:	85 c0                	test   %eax,%eax
801068a1:	74 29                	je     801068cc <memcmp+0x3c>
801068a3:	0f b6 13             	movzbl (%ebx),%edx
801068a6:	0f b6 0e             	movzbl (%esi),%ecx
801068a9:	38 d1                	cmp    %dl,%cl
801068ab:	75 2b                	jne    801068d8 <memcmp+0x48>
801068ad:	8d 78 ff             	lea    -0x1(%eax),%edi
801068b0:	31 c0                	xor    %eax,%eax
801068b2:	eb 14                	jmp    801068c8 <memcmp+0x38>
801068b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801068b8:	0f b6 54 03 01       	movzbl 0x1(%ebx,%eax,1),%edx
801068bd:	83 c0 01             	add    $0x1,%eax
801068c0:	0f b6 0c 06          	movzbl (%esi,%eax,1),%ecx
801068c4:	38 ca                	cmp    %cl,%dl
801068c6:	75 10                	jne    801068d8 <memcmp+0x48>
801068c8:	39 f8                	cmp    %edi,%eax
801068ca:	75 ec                	jne    801068b8 <memcmp+0x28>
801068cc:	5b                   	pop    %ebx
801068cd:	31 c0                	xor    %eax,%eax
801068cf:	5e                   	pop    %esi
801068d0:	5f                   	pop    %edi
801068d1:	5d                   	pop    %ebp
801068d2:	c3                   	ret    
801068d3:	90                   	nop
801068d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801068d8:	0f b6 c2             	movzbl %dl,%eax
801068db:	5b                   	pop    %ebx
801068dc:	29 c8                	sub    %ecx,%eax
801068de:	5e                   	pop    %esi
801068df:	5f                   	pop    %edi
801068e0:	5d                   	pop    %ebp
801068e1:	c3                   	ret    
801068e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801068e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801068f0 <memmove>:
801068f0:	55                   	push   %ebp
801068f1:	89 e5                	mov    %esp,%ebp
801068f3:	56                   	push   %esi
801068f4:	53                   	push   %ebx
801068f5:	8b 45 08             	mov    0x8(%ebp),%eax
801068f8:	8b 75 0c             	mov    0xc(%ebp),%esi
801068fb:	8b 5d 10             	mov    0x10(%ebp),%ebx
801068fe:	39 c6                	cmp    %eax,%esi
80106900:	73 2e                	jae    80106930 <memmove+0x40>
80106902:	8d 0c 1e             	lea    (%esi,%ebx,1),%ecx
80106905:	39 c8                	cmp    %ecx,%eax
80106907:	73 27                	jae    80106930 <memmove+0x40>
80106909:	85 db                	test   %ebx,%ebx
8010690b:	8d 53 ff             	lea    -0x1(%ebx),%edx
8010690e:	74 17                	je     80106927 <memmove+0x37>
80106910:	29 d9                	sub    %ebx,%ecx
80106912:	89 cb                	mov    %ecx,%ebx
80106914:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106918:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx
8010691c:	88 0c 10             	mov    %cl,(%eax,%edx,1)
8010691f:	83 ea 01             	sub    $0x1,%edx
80106922:	83 fa ff             	cmp    $0xffffffff,%edx
80106925:	75 f1                	jne    80106918 <memmove+0x28>
80106927:	5b                   	pop    %ebx
80106928:	5e                   	pop    %esi
80106929:	5d                   	pop    %ebp
8010692a:	c3                   	ret    
8010692b:	90                   	nop
8010692c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106930:	31 d2                	xor    %edx,%edx
80106932:	85 db                	test   %ebx,%ebx
80106934:	74 f1                	je     80106927 <memmove+0x37>
80106936:	8d 76 00             	lea    0x0(%esi),%esi
80106939:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80106940:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx
80106944:	88 0c 10             	mov    %cl,(%eax,%edx,1)
80106947:	83 c2 01             	add    $0x1,%edx
8010694a:	39 d3                	cmp    %edx,%ebx
8010694c:	75 f2                	jne    80106940 <memmove+0x50>
8010694e:	5b                   	pop    %ebx
8010694f:	5e                   	pop    %esi
80106950:	5d                   	pop    %ebp
80106951:	c3                   	ret    
80106952:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106959:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80106960 <memcpy>:
80106960:	55                   	push   %ebp
80106961:	89 e5                	mov    %esp,%ebp
80106963:	5d                   	pop    %ebp
80106964:	eb 8a                	jmp    801068f0 <memmove>
80106966:	8d 76 00             	lea    0x0(%esi),%esi
80106969:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80106970 <strncmp>:
80106970:	55                   	push   %ebp
80106971:	89 e5                	mov    %esp,%ebp
80106973:	57                   	push   %edi
80106974:	56                   	push   %esi
80106975:	8b 4d 10             	mov    0x10(%ebp),%ecx
80106978:	53                   	push   %ebx
80106979:	8b 7d 08             	mov    0x8(%ebp),%edi
8010697c:	8b 75 0c             	mov    0xc(%ebp),%esi
8010697f:	85 c9                	test   %ecx,%ecx
80106981:	74 37                	je     801069ba <strncmp+0x4a>
80106983:	0f b6 17             	movzbl (%edi),%edx
80106986:	0f b6 1e             	movzbl (%esi),%ebx
80106989:	84 d2                	test   %dl,%dl
8010698b:	74 3f                	je     801069cc <strncmp+0x5c>
8010698d:	38 d3                	cmp    %dl,%bl
8010698f:	75 3b                	jne    801069cc <strncmp+0x5c>
80106991:	8d 47 01             	lea    0x1(%edi),%eax
80106994:	01 cf                	add    %ecx,%edi
80106996:	eb 1b                	jmp    801069b3 <strncmp+0x43>
80106998:	90                   	nop
80106999:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801069a0:	0f b6 10             	movzbl (%eax),%edx
801069a3:	84 d2                	test   %dl,%dl
801069a5:	74 21                	je     801069c8 <strncmp+0x58>
801069a7:	0f b6 19             	movzbl (%ecx),%ebx
801069aa:	83 c0 01             	add    $0x1,%eax
801069ad:	89 ce                	mov    %ecx,%esi
801069af:	38 da                	cmp    %bl,%dl
801069b1:	75 19                	jne    801069cc <strncmp+0x5c>
801069b3:	39 c7                	cmp    %eax,%edi
801069b5:	8d 4e 01             	lea    0x1(%esi),%ecx
801069b8:	75 e6                	jne    801069a0 <strncmp+0x30>
801069ba:	5b                   	pop    %ebx
801069bb:	31 c0                	xor    %eax,%eax
801069bd:	5e                   	pop    %esi
801069be:	5f                   	pop    %edi
801069bf:	5d                   	pop    %ebp
801069c0:	c3                   	ret    
801069c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801069c8:	0f b6 5e 01          	movzbl 0x1(%esi),%ebx
801069cc:	0f b6 c2             	movzbl %dl,%eax
801069cf:	29 d8                	sub    %ebx,%eax
801069d1:	5b                   	pop    %ebx
801069d2:	5e                   	pop    %esi
801069d3:	5f                   	pop    %edi
801069d4:	5d                   	pop    %ebp
801069d5:	c3                   	ret    
801069d6:	8d 76 00             	lea    0x0(%esi),%esi
801069d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801069e0 <strcmp>:
801069e0:	55                   	push   %ebp
801069e1:	89 e5                	mov    %esp,%ebp
801069e3:	56                   	push   %esi
801069e4:	53                   	push   %ebx
801069e5:	8b 55 08             	mov    0x8(%ebp),%edx
801069e8:	8b 4d 0c             	mov    0xc(%ebp),%ecx
801069eb:	0f b6 02             	movzbl (%edx),%eax
801069ee:	0f b6 19             	movzbl (%ecx),%ebx
801069f1:	84 c0                	test   %al,%al
801069f3:	75 1e                	jne    80106a13 <strcmp+0x33>
801069f5:	eb 29                	jmp    80106a20 <strcmp+0x40>
801069f7:	89 f6                	mov    %esi,%esi
801069f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80106a00:	83 c2 01             	add    $0x1,%edx
80106a03:	0f b6 02             	movzbl (%edx),%eax
80106a06:	8d 71 01             	lea    0x1(%ecx),%esi
80106a09:	0f b6 59 01          	movzbl 0x1(%ecx),%ebx
80106a0d:	84 c0                	test   %al,%al
80106a0f:	74 0f                	je     80106a20 <strcmp+0x40>
80106a11:	89 f1                	mov    %esi,%ecx
80106a13:	38 d8                	cmp    %bl,%al
80106a15:	74 e9                	je     80106a00 <strcmp+0x20>
80106a17:	29 d8                	sub    %ebx,%eax
80106a19:	5b                   	pop    %ebx
80106a1a:	5e                   	pop    %esi
80106a1b:	5d                   	pop    %ebp
80106a1c:	c3                   	ret    
80106a1d:	8d 76 00             	lea    0x0(%esi),%esi
80106a20:	31 c0                	xor    %eax,%eax
80106a22:	29 d8                	sub    %ebx,%eax
80106a24:	5b                   	pop    %ebx
80106a25:	5e                   	pop    %esi
80106a26:	5d                   	pop    %ebp
80106a27:	c3                   	ret    
80106a28:	90                   	nop
80106a29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80106a30 <strncpy>:
80106a30:	55                   	push   %ebp
80106a31:	89 e5                	mov    %esp,%ebp
80106a33:	56                   	push   %esi
80106a34:	53                   	push   %ebx
80106a35:	8b 45 08             	mov    0x8(%ebp),%eax
80106a38:	8b 5d 0c             	mov    0xc(%ebp),%ebx
80106a3b:	8b 4d 10             	mov    0x10(%ebp),%ecx
80106a3e:	89 c2                	mov    %eax,%edx
80106a40:	eb 19                	jmp    80106a5b <strncpy+0x2b>
80106a42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80106a48:	83 c3 01             	add    $0x1,%ebx
80106a4b:	0f b6 4b ff          	movzbl -0x1(%ebx),%ecx
80106a4f:	83 c2 01             	add    $0x1,%edx
80106a52:	84 c9                	test   %cl,%cl
80106a54:	88 4a ff             	mov    %cl,-0x1(%edx)
80106a57:	74 09                	je     80106a62 <strncpy+0x32>
80106a59:	89 f1                	mov    %esi,%ecx
80106a5b:	85 c9                	test   %ecx,%ecx
80106a5d:	8d 71 ff             	lea    -0x1(%ecx),%esi
80106a60:	7f e6                	jg     80106a48 <strncpy+0x18>
80106a62:	31 c9                	xor    %ecx,%ecx
80106a64:	85 f6                	test   %esi,%esi
80106a66:	7e 17                	jle    80106a7f <strncpy+0x4f>
80106a68:	90                   	nop
80106a69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106a70:	c6 04 0a 00          	movb   $0x0,(%edx,%ecx,1)
80106a74:	89 f3                	mov    %esi,%ebx
80106a76:	83 c1 01             	add    $0x1,%ecx
80106a79:	29 cb                	sub    %ecx,%ebx
80106a7b:	85 db                	test   %ebx,%ebx
80106a7d:	7f f1                	jg     80106a70 <strncpy+0x40>
80106a7f:	5b                   	pop    %ebx
80106a80:	5e                   	pop    %esi
80106a81:	5d                   	pop    %ebp
80106a82:	c3                   	ret    
80106a83:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80106a89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80106a90 <safestrcpy>:
80106a90:	55                   	push   %ebp
80106a91:	89 e5                	mov    %esp,%ebp
80106a93:	56                   	push   %esi
80106a94:	53                   	push   %ebx
80106a95:	8b 4d 10             	mov    0x10(%ebp),%ecx
80106a98:	8b 45 08             	mov    0x8(%ebp),%eax
80106a9b:	8b 55 0c             	mov    0xc(%ebp),%edx
80106a9e:	85 c9                	test   %ecx,%ecx
80106aa0:	7e 26                	jle    80106ac8 <safestrcpy+0x38>
80106aa2:	8d 74 0a ff          	lea    -0x1(%edx,%ecx,1),%esi
80106aa6:	89 c1                	mov    %eax,%ecx
80106aa8:	eb 17                	jmp    80106ac1 <safestrcpy+0x31>
80106aaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80106ab0:	83 c2 01             	add    $0x1,%edx
80106ab3:	0f b6 5a ff          	movzbl -0x1(%edx),%ebx
80106ab7:	83 c1 01             	add    $0x1,%ecx
80106aba:	84 db                	test   %bl,%bl
80106abc:	88 59 ff             	mov    %bl,-0x1(%ecx)
80106abf:	74 04                	je     80106ac5 <safestrcpy+0x35>
80106ac1:	39 f2                	cmp    %esi,%edx
80106ac3:	75 eb                	jne    80106ab0 <safestrcpy+0x20>
80106ac5:	c6 01 00             	movb   $0x0,(%ecx)
80106ac8:	5b                   	pop    %ebx
80106ac9:	5e                   	pop    %esi
80106aca:	5d                   	pop    %ebp
80106acb:	c3                   	ret    
80106acc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80106ad0 <strlen>:
80106ad0:	55                   	push   %ebp
80106ad1:	31 c0                	xor    %eax,%eax
80106ad3:	89 e5                	mov    %esp,%ebp
80106ad5:	8b 55 08             	mov    0x8(%ebp),%edx
80106ad8:	80 3a 00             	cmpb   $0x0,(%edx)
80106adb:	74 0c                	je     80106ae9 <strlen+0x19>
80106add:	8d 76 00             	lea    0x0(%esi),%esi
80106ae0:	83 c0 01             	add    $0x1,%eax
80106ae3:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
80106ae7:	75 f7                	jne    80106ae0 <strlen+0x10>
80106ae9:	5d                   	pop    %ebp
80106aea:	c3                   	ret    

80106aeb <swtch>:
# a struct context, and save its address in *old.
# Switch stacks to new and pop previously-saved registers.

.globl swtch
swtch:
  movl 4(%esp), %eax
80106aeb:	8b 44 24 04          	mov    0x4(%esp),%eax
  movl 8(%esp), %edx
80106aef:	8b 54 24 08          	mov    0x8(%esp),%edx

  # Save old callee-save registers
  pushl %ebp
80106af3:	55                   	push   %ebp
  pushl %ebx
80106af4:	53                   	push   %ebx
  pushl %esi
80106af5:	56                   	push   %esi
  pushl %edi
80106af6:	57                   	push   %edi

  # Switch stacks
  movl %esp, (%eax)
80106af7:	89 20                	mov    %esp,(%eax)
  movl %edx, %esp
80106af9:	89 d4                	mov    %edx,%esp

  # Load new callee-save registers
  popl %edi
80106afb:	5f                   	pop    %edi
  popl %esi
80106afc:	5e                   	pop    %esi
  popl %ebx
80106afd:	5b                   	pop    %ebx
  popl %ebp
80106afe:	5d                   	pop    %ebp
  ret
80106aff:	c3                   	ret    

80106b00 <fetchint>:
80106b00:	55                   	push   %ebp
80106b01:	89 e5                	mov    %esp,%ebp
80106b03:	53                   	push   %ebx
80106b04:	83 ec 04             	sub    $0x4,%esp
80106b07:	8b 5d 08             	mov    0x8(%ebp),%ebx
80106b0a:	e8 61 e9 ff ff       	call   80105470 <myproc>
80106b0f:	8b 00                	mov    (%eax),%eax
80106b11:	39 d8                	cmp    %ebx,%eax
80106b13:	76 1b                	jbe    80106b30 <fetchint+0x30>
80106b15:	8d 53 04             	lea    0x4(%ebx),%edx
80106b18:	39 d0                	cmp    %edx,%eax
80106b1a:	72 14                	jb     80106b30 <fetchint+0x30>
80106b1c:	8b 45 0c             	mov    0xc(%ebp),%eax
80106b1f:	8b 13                	mov    (%ebx),%edx
80106b21:	89 10                	mov    %edx,(%eax)
80106b23:	31 c0                	xor    %eax,%eax
80106b25:	83 c4 04             	add    $0x4,%esp
80106b28:	5b                   	pop    %ebx
80106b29:	5d                   	pop    %ebp
80106b2a:	c3                   	ret    
80106b2b:	90                   	nop
80106b2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106b30:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80106b35:	eb ee                	jmp    80106b25 <fetchint+0x25>
80106b37:	89 f6                	mov    %esi,%esi
80106b39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80106b40 <fetchstr>:
80106b40:	55                   	push   %ebp
80106b41:	89 e5                	mov    %esp,%ebp
80106b43:	53                   	push   %ebx
80106b44:	83 ec 04             	sub    $0x4,%esp
80106b47:	8b 5d 08             	mov    0x8(%ebp),%ebx
80106b4a:	e8 21 e9 ff ff       	call   80105470 <myproc>
80106b4f:	39 18                	cmp    %ebx,(%eax)
80106b51:	76 29                	jbe    80106b7c <fetchstr+0x3c>
80106b53:	8b 4d 0c             	mov    0xc(%ebp),%ecx
80106b56:	89 da                	mov    %ebx,%edx
80106b58:	89 19                	mov    %ebx,(%ecx)
80106b5a:	8b 00                	mov    (%eax),%eax
80106b5c:	39 c3                	cmp    %eax,%ebx
80106b5e:	73 1c                	jae    80106b7c <fetchstr+0x3c>
80106b60:	80 3b 00             	cmpb   $0x0,(%ebx)
80106b63:	75 10                	jne    80106b75 <fetchstr+0x35>
80106b65:	eb 29                	jmp    80106b90 <fetchstr+0x50>
80106b67:	89 f6                	mov    %esi,%esi
80106b69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80106b70:	80 3a 00             	cmpb   $0x0,(%edx)
80106b73:	74 1b                	je     80106b90 <fetchstr+0x50>
80106b75:	83 c2 01             	add    $0x1,%edx
80106b78:	39 d0                	cmp    %edx,%eax
80106b7a:	77 f4                	ja     80106b70 <fetchstr+0x30>
80106b7c:	83 c4 04             	add    $0x4,%esp
80106b7f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80106b84:	5b                   	pop    %ebx
80106b85:	5d                   	pop    %ebp
80106b86:	c3                   	ret    
80106b87:	89 f6                	mov    %esi,%esi
80106b89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80106b90:	83 c4 04             	add    $0x4,%esp
80106b93:	89 d0                	mov    %edx,%eax
80106b95:	29 d8                	sub    %ebx,%eax
80106b97:	5b                   	pop    %ebx
80106b98:	5d                   	pop    %ebp
80106b99:	c3                   	ret    
80106b9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80106ba0 <argint>:
80106ba0:	55                   	push   %ebp
80106ba1:	89 e5                	mov    %esp,%ebp
80106ba3:	56                   	push   %esi
80106ba4:	53                   	push   %ebx
80106ba5:	e8 c6 e8 ff ff       	call   80105470 <myproc>
80106baa:	8b 40 38             	mov    0x38(%eax),%eax
80106bad:	8b 55 08             	mov    0x8(%ebp),%edx
80106bb0:	8b 40 44             	mov    0x44(%eax),%eax
80106bb3:	8d 1c 90             	lea    (%eax,%edx,4),%ebx
80106bb6:	e8 b5 e8 ff ff       	call   80105470 <myproc>
80106bbb:	8b 00                	mov    (%eax),%eax
80106bbd:	8d 73 04             	lea    0x4(%ebx),%esi
80106bc0:	39 c6                	cmp    %eax,%esi
80106bc2:	73 1c                	jae    80106be0 <argint+0x40>
80106bc4:	8d 53 08             	lea    0x8(%ebx),%edx
80106bc7:	39 d0                	cmp    %edx,%eax
80106bc9:	72 15                	jb     80106be0 <argint+0x40>
80106bcb:	8b 45 0c             	mov    0xc(%ebp),%eax
80106bce:	8b 53 04             	mov    0x4(%ebx),%edx
80106bd1:	89 10                	mov    %edx,(%eax)
80106bd3:	31 c0                	xor    %eax,%eax
80106bd5:	5b                   	pop    %ebx
80106bd6:	5e                   	pop    %esi
80106bd7:	5d                   	pop    %ebp
80106bd8:	c3                   	ret    
80106bd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106be0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80106be5:	eb ee                	jmp    80106bd5 <argint+0x35>
80106be7:	89 f6                	mov    %esi,%esi
80106be9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80106bf0 <argptr>:
80106bf0:	55                   	push   %ebp
80106bf1:	89 e5                	mov    %esp,%ebp
80106bf3:	56                   	push   %esi
80106bf4:	53                   	push   %ebx
80106bf5:	83 ec 10             	sub    $0x10,%esp
80106bf8:	8b 5d 10             	mov    0x10(%ebp),%ebx
80106bfb:	e8 70 e8 ff ff       	call   80105470 <myproc>
80106c00:	89 c6                	mov    %eax,%esi
80106c02:	8d 45 f4             	lea    -0xc(%ebp),%eax
80106c05:	83 ec 08             	sub    $0x8,%esp
80106c08:	50                   	push   %eax
80106c09:	ff 75 08             	pushl  0x8(%ebp)
80106c0c:	e8 8f ff ff ff       	call   80106ba0 <argint>
80106c11:	c1 e8 1f             	shr    $0x1f,%eax
80106c14:	83 c4 10             	add    $0x10,%esp
80106c17:	84 c0                	test   %al,%al
80106c19:	75 2d                	jne    80106c48 <argptr+0x58>
80106c1b:	89 d8                	mov    %ebx,%eax
80106c1d:	c1 e8 1f             	shr    $0x1f,%eax
80106c20:	84 c0                	test   %al,%al
80106c22:	75 24                	jne    80106c48 <argptr+0x58>
80106c24:	8b 16                	mov    (%esi),%edx
80106c26:	8b 45 f4             	mov    -0xc(%ebp),%eax
80106c29:	39 c2                	cmp    %eax,%edx
80106c2b:	76 1b                	jbe    80106c48 <argptr+0x58>
80106c2d:	01 c3                	add    %eax,%ebx
80106c2f:	39 da                	cmp    %ebx,%edx
80106c31:	72 15                	jb     80106c48 <argptr+0x58>
80106c33:	8b 55 0c             	mov    0xc(%ebp),%edx
80106c36:	89 02                	mov    %eax,(%edx)
80106c38:	31 c0                	xor    %eax,%eax
80106c3a:	8d 65 f8             	lea    -0x8(%ebp),%esp
80106c3d:	5b                   	pop    %ebx
80106c3e:	5e                   	pop    %esi
80106c3f:	5d                   	pop    %ebp
80106c40:	c3                   	ret    
80106c41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106c48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80106c4d:	eb eb                	jmp    80106c3a <argptr+0x4a>
80106c4f:	90                   	nop

80106c50 <argstr>:
80106c50:	55                   	push   %ebp
80106c51:	89 e5                	mov    %esp,%ebp
80106c53:	83 ec 20             	sub    $0x20,%esp
80106c56:	8d 45 f4             	lea    -0xc(%ebp),%eax
80106c59:	50                   	push   %eax
80106c5a:	ff 75 08             	pushl  0x8(%ebp)
80106c5d:	e8 3e ff ff ff       	call   80106ba0 <argint>
80106c62:	83 c4 10             	add    $0x10,%esp
80106c65:	85 c0                	test   %eax,%eax
80106c67:	78 17                	js     80106c80 <argstr+0x30>
80106c69:	83 ec 08             	sub    $0x8,%esp
80106c6c:	ff 75 0c             	pushl  0xc(%ebp)
80106c6f:	ff 75 f4             	pushl  -0xc(%ebp)
80106c72:	e8 c9 fe ff ff       	call   80106b40 <fetchstr>
80106c77:	83 c4 10             	add    $0x10,%esp
80106c7a:	c9                   	leave  
80106c7b:	c3                   	ret    
80106c7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106c80:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80106c85:	c9                   	leave  
80106c86:	c3                   	ret    
80106c87:	89 f6                	mov    %esi,%esi
80106c89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80106c90 <syscall>:
80106c90:	55                   	push   %ebp
80106c91:	89 e5                	mov    %esp,%ebp
80106c93:	56                   	push   %esi
80106c94:	53                   	push   %ebx
80106c95:	e8 d6 e7 ff ff       	call   80105470 <myproc>
80106c9a:	8b 70 38             	mov    0x38(%eax),%esi
80106c9d:	89 c3                	mov    %eax,%ebx
80106c9f:	8b 46 1c             	mov    0x1c(%esi),%eax
80106ca2:	8d 50 ff             	lea    -0x1(%eax),%edx
80106ca5:	83 fa 1f             	cmp    $0x1f,%edx
80106ca8:	77 1e                	ja     80106cc8 <syscall+0x38>
80106caa:	8b 14 85 e0 f4 10 80 	mov    -0x7fef0b20(,%eax,4),%edx
80106cb1:	85 d2                	test   %edx,%edx
80106cb3:	74 13                	je     80106cc8 <syscall+0x38>
80106cb5:	ff d2                	call   *%edx
80106cb7:	89 46 1c             	mov    %eax,0x1c(%esi)
80106cba:	8d 65 f8             	lea    -0x8(%ebp),%esp
80106cbd:	5b                   	pop    %ebx
80106cbe:	5e                   	pop    %esi
80106cbf:	5d                   	pop    %ebp
80106cc0:	c3                   	ret    
80106cc1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106cc8:	50                   	push   %eax
80106cc9:	8d 83 90 00 00 00    	lea    0x90(%ebx),%eax
80106ccf:	50                   	push   %eax
80106cd0:	ff 73 10             	pushl  0x10(%ebx)
80106cd3:	68 a9 f4 10 80       	push   $0x8010f4a9
80106cd8:	e8 83 99 ff ff       	call   80100660 <cprintf>
80106cdd:	8b 43 38             	mov    0x38(%ebx),%eax
80106ce0:	83 c4 10             	add    $0x10,%esp
80106ce3:	c7 40 1c ff ff ff ff 	movl   $0xffffffff,0x1c(%eax)
80106cea:	8d 65 f8             	lea    -0x8(%ebp),%esp
80106ced:	5b                   	pop    %ebx
80106cee:	5e                   	pop    %esi
80106cef:	5d                   	pop    %ebp
80106cf0:	c3                   	ret    
80106cf1:	66 90                	xchg   %ax,%ax
80106cf3:	66 90                	xchg   %ax,%ax
80106cf5:	66 90                	xchg   %ax,%ax
80106cf7:	66 90                	xchg   %ax,%ax
80106cf9:	66 90                	xchg   %ax,%ax
80106cfb:	66 90                	xchg   %ax,%ax
80106cfd:	66 90                	xchg   %ax,%ax
80106cff:	90                   	nop

80106d00 <createmount>:
80106d00:	55                   	push   %ebp
80106d01:	89 e5                	mov    %esp,%ebp
80106d03:	57                   	push   %edi
80106d04:	56                   	push   %esi
80106d05:	53                   	push   %ebx
80106d06:	8d 75 da             	lea    -0x26(%ebp),%esi
80106d09:	83 ec 40             	sub    $0x40,%esp
80106d0c:	89 4d c0             	mov    %ecx,-0x40(%ebp)
80106d0f:	8b 4d 08             	mov    0x8(%ebp),%ecx
80106d12:	ff 75 0c             	pushl  0xc(%ebp)
80106d15:	56                   	push   %esi
80106d16:	50                   	push   %eax
80106d17:	89 55 c4             	mov    %edx,-0x3c(%ebp)
80106d1a:	89 4d bc             	mov    %ecx,-0x44(%ebp)
80106d1d:	e8 be bb ff ff       	call   801028e0 <nameiparentmount>
80106d22:	83 c4 10             	add    $0x10,%esp
80106d25:	85 c0                	test   %eax,%eax
80106d27:	0f 84 fb 00 00 00    	je     80106e28 <createmount+0x128>
80106d2d:	83 ec 0c             	sub    $0xc,%esp
80106d30:	89 c3                	mov    %eax,%ebx
80106d32:	50                   	push   %eax
80106d33:	e8 98 b1 ff ff       	call   80101ed0 <ilock>
80106d38:	8d 45 d4             	lea    -0x2c(%ebp),%eax
80106d3b:	83 c4 0c             	add    $0xc,%esp
80106d3e:	50                   	push   %eax
80106d3f:	56                   	push   %esi
80106d40:	53                   	push   %ebx
80106d41:	e8 da b6 ff ff       	call   80102420 <dirlookup>
80106d46:	83 c4 10             	add    $0x10,%esp
80106d49:	85 c0                	test   %eax,%eax
80106d4b:	89 c7                	mov    %eax,%edi
80106d4d:	74 59                	je     80106da8 <createmount+0xa8>
80106d4f:	83 ec 0c             	sub    $0xc,%esp
80106d52:	53                   	push   %ebx
80106d53:	e8 18 b4 ff ff       	call   80102170 <iunlockput>
80106d58:	89 3c 24             	mov    %edi,(%esp)
80106d5b:	e8 70 b1 ff ff       	call   80101ed0 <ilock>
80106d60:	83 c4 10             	add    $0x10,%esp
80106d63:	66 83 7d c4 02       	cmpw   $0x2,-0x3c(%ebp)
80106d68:	75 16                	jne    80106d80 <createmount+0x80>
80106d6a:	66 83 7f 50 02       	cmpw   $0x2,0x50(%edi)
80106d6f:	89 f8                	mov    %edi,%eax
80106d71:	75 0d                	jne    80106d80 <createmount+0x80>
80106d73:	8d 65 f4             	lea    -0xc(%ebp),%esp
80106d76:	5b                   	pop    %ebx
80106d77:	5e                   	pop    %esi
80106d78:	5f                   	pop    %edi
80106d79:	5d                   	pop    %ebp
80106d7a:	c3                   	ret    
80106d7b:	90                   	nop
80106d7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106d80:	83 ec 0c             	sub    $0xc,%esp
80106d83:	57                   	push   %edi
80106d84:	e8 e7 b3 ff ff       	call   80102170 <iunlockput>
80106d89:	8b 45 0c             	mov    0xc(%ebp),%eax
80106d8c:	5a                   	pop    %edx
80106d8d:	ff 30                	pushl  (%eax)
80106d8f:	e8 4c d0 ff ff       	call   80103de0 <mntput>
80106d94:	83 c4 10             	add    $0x10,%esp
80106d97:	8d 65 f4             	lea    -0xc(%ebp),%esp
80106d9a:	31 c0                	xor    %eax,%eax
80106d9c:	5b                   	pop    %ebx
80106d9d:	5e                   	pop    %esi
80106d9e:	5f                   	pop    %edi
80106d9f:	5d                   	pop    %ebp
80106da0:	c3                   	ret    
80106da1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106da8:	0f bf 45 c4          	movswl -0x3c(%ebp),%eax
80106dac:	83 ec 08             	sub    $0x8,%esp
80106daf:	50                   	push   %eax
80106db0:	ff 33                	pushl  (%ebx)
80106db2:	e8 89 af ff ff       	call   80101d40 <ialloc>
80106db7:	83 c4 10             	add    $0x10,%esp
80106dba:	85 c0                	test   %eax,%eax
80106dbc:	89 c7                	mov    %eax,%edi
80106dbe:	0f 84 c4 00 00 00    	je     80106e88 <createmount+0x188>
80106dc4:	83 ec 0c             	sub    $0xc,%esp
80106dc7:	50                   	push   %eax
80106dc8:	e8 03 b1 ff ff       	call   80101ed0 <ilock>
80106dcd:	0f b7 45 c0          	movzwl -0x40(%ebp),%eax
80106dd1:	66 89 47 52          	mov    %ax,0x52(%edi)
80106dd5:	0f b7 45 bc          	movzwl -0x44(%ebp),%eax
80106dd9:	66 89 47 54          	mov    %ax,0x54(%edi)
80106ddd:	b8 01 00 00 00       	mov    $0x1,%eax
80106de2:	66 89 47 56          	mov    %ax,0x56(%edi)
80106de6:	89 3c 24             	mov    %edi,(%esp)
80106de9:	e8 22 b0 ff ff       	call   80101e10 <iupdate>
80106dee:	83 c4 10             	add    $0x10,%esp
80106df1:	66 83 7d c4 01       	cmpw   $0x1,-0x3c(%ebp)
80106df6:	74 38                	je     80106e30 <createmount+0x130>
80106df8:	83 ec 04             	sub    $0x4,%esp
80106dfb:	ff 77 04             	pushl  0x4(%edi)
80106dfe:	56                   	push   %esi
80106dff:	53                   	push   %ebx
80106e00:	e8 6b b9 ff ff       	call   80102770 <dirlink>
80106e05:	83 c4 10             	add    $0x10,%esp
80106e08:	85 c0                	test   %eax,%eax
80106e0a:	78 6f                	js     80106e7b <createmount+0x17b>
80106e0c:	83 ec 0c             	sub    $0xc,%esp
80106e0f:	53                   	push   %ebx
80106e10:	e8 5b b3 ff ff       	call   80102170 <iunlockput>
80106e15:	83 c4 10             	add    $0x10,%esp
80106e18:	8d 65 f4             	lea    -0xc(%ebp),%esp
80106e1b:	89 f8                	mov    %edi,%eax
80106e1d:	5b                   	pop    %ebx
80106e1e:	5e                   	pop    %esi
80106e1f:	5f                   	pop    %edi
80106e20:	5d                   	pop    %ebp
80106e21:	c3                   	ret    
80106e22:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80106e28:	31 c0                	xor    %eax,%eax
80106e2a:	e9 44 ff ff ff       	jmp    80106d73 <createmount+0x73>
80106e2f:	90                   	nop
80106e30:	66 83 43 56 01       	addw   $0x1,0x56(%ebx)
80106e35:	83 ec 0c             	sub    $0xc,%esp
80106e38:	53                   	push   %ebx
80106e39:	e8 d2 af ff ff       	call   80101e10 <iupdate>
80106e3e:	83 c4 0c             	add    $0xc,%esp
80106e41:	ff 77 04             	pushl  0x4(%edi)
80106e44:	68 71 ed 10 80       	push   $0x8010ed71
80106e49:	57                   	push   %edi
80106e4a:	e8 21 b9 ff ff       	call   80102770 <dirlink>
80106e4f:	83 c4 10             	add    $0x10,%esp
80106e52:	85 c0                	test   %eax,%eax
80106e54:	78 18                	js     80106e6e <createmount+0x16e>
80106e56:	83 ec 04             	sub    $0x4,%esp
80106e59:	ff 73 04             	pushl  0x4(%ebx)
80106e5c:	68 70 ed 10 80       	push   $0x8010ed70
80106e61:	57                   	push   %edi
80106e62:	e8 09 b9 ff ff       	call   80102770 <dirlink>
80106e67:	83 c4 10             	add    $0x10,%esp
80106e6a:	85 c0                	test   %eax,%eax
80106e6c:	79 8a                	jns    80106df8 <createmount+0xf8>
80106e6e:	83 ec 0c             	sub    $0xc,%esp
80106e71:	68 73 f5 10 80       	push   $0x8010f573
80106e76:	e8 55 95 ff ff       	call   801003d0 <panic>
80106e7b:	83 ec 0c             	sub    $0xc,%esp
80106e7e:	68 7f f5 10 80       	push   $0x8010f57f
80106e83:	e8 48 95 ff ff       	call   801003d0 <panic>
80106e88:	83 ec 0c             	sub    $0xc,%esp
80106e8b:	68 64 f5 10 80       	push   $0x8010f564
80106e90:	e8 3b 95 ff ff       	call   801003d0 <panic>
80106e95:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106e99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80106ea0 <argfd.constprop.0>:
80106ea0:	55                   	push   %ebp
80106ea1:	89 e5                	mov    %esp,%ebp
80106ea3:	56                   	push   %esi
80106ea4:	53                   	push   %ebx
80106ea5:	89 c6                	mov    %eax,%esi
80106ea7:	8d 45 f4             	lea    -0xc(%ebp),%eax
80106eaa:	89 d3                	mov    %edx,%ebx
80106eac:	83 ec 18             	sub    $0x18,%esp
80106eaf:	50                   	push   %eax
80106eb0:	6a 00                	push   $0x0
80106eb2:	e8 e9 fc ff ff       	call   80106ba0 <argint>
80106eb7:	83 c4 10             	add    $0x10,%esp
80106eba:	85 c0                	test   %eax,%eax
80106ebc:	78 32                	js     80106ef0 <argfd.constprop.0+0x50>
80106ebe:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)
80106ec2:	77 2c                	ja     80106ef0 <argfd.constprop.0+0x50>
80106ec4:	e8 a7 e5 ff ff       	call   80105470 <myproc>
80106ec9:	8b 55 f4             	mov    -0xc(%ebp),%edx
80106ecc:	8b 44 90 48          	mov    0x48(%eax,%edx,4),%eax
80106ed0:	85 c0                	test   %eax,%eax
80106ed2:	74 1c                	je     80106ef0 <argfd.constprop.0+0x50>
80106ed4:	85 f6                	test   %esi,%esi
80106ed6:	74 02                	je     80106eda <argfd.constprop.0+0x3a>
80106ed8:	89 16                	mov    %edx,(%esi)
80106eda:	85 db                	test   %ebx,%ebx
80106edc:	74 22                	je     80106f00 <argfd.constprop.0+0x60>
80106ede:	89 03                	mov    %eax,(%ebx)
80106ee0:	31 c0                	xor    %eax,%eax
80106ee2:	8d 65 f8             	lea    -0x8(%ebp),%esp
80106ee5:	5b                   	pop    %ebx
80106ee6:	5e                   	pop    %esi
80106ee7:	5d                   	pop    %ebp
80106ee8:	c3                   	ret    
80106ee9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106ef0:	8d 65 f8             	lea    -0x8(%ebp),%esp
80106ef3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80106ef8:	5b                   	pop    %ebx
80106ef9:	5e                   	pop    %esi
80106efa:	5d                   	pop    %ebp
80106efb:	c3                   	ret    
80106efc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106f00:	31 c0                	xor    %eax,%eax
80106f02:	eb de                	jmp    80106ee2 <argfd.constprop.0+0x42>
80106f04:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80106f0a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

80106f10 <sys_dup>:
80106f10:	55                   	push   %ebp
80106f11:	31 c0                	xor    %eax,%eax
80106f13:	89 e5                	mov    %esp,%ebp
80106f15:	56                   	push   %esi
80106f16:	53                   	push   %ebx
80106f17:	8d 55 f4             	lea    -0xc(%ebp),%edx
80106f1a:	83 ec 10             	sub    $0x10,%esp
80106f1d:	e8 7e ff ff ff       	call   80106ea0 <argfd.constprop.0>
80106f22:	85 c0                	test   %eax,%eax
80106f24:	78 1a                	js     80106f40 <sys_dup+0x30>
80106f26:	31 db                	xor    %ebx,%ebx
80106f28:	8b 75 f4             	mov    -0xc(%ebp),%esi
80106f2b:	e8 40 e5 ff ff       	call   80105470 <myproc>
80106f30:	8b 54 98 48          	mov    0x48(%eax,%ebx,4),%edx
80106f34:	85 d2                	test   %edx,%edx
80106f36:	74 18                	je     80106f50 <sys_dup+0x40>
80106f38:	83 c3 01             	add    $0x1,%ebx
80106f3b:	83 fb 10             	cmp    $0x10,%ebx
80106f3e:	75 f0                	jne    80106f30 <sys_dup+0x20>
80106f40:	8d 65 f8             	lea    -0x8(%ebp),%esp
80106f43:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80106f48:	5b                   	pop    %ebx
80106f49:	5e                   	pop    %esi
80106f4a:	5d                   	pop    %ebp
80106f4b:	c3                   	ret    
80106f4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80106f50:	89 74 98 48          	mov    %esi,0x48(%eax,%ebx,4)
80106f54:	83 ec 0c             	sub    $0xc,%esp
80106f57:	ff 75 f4             	pushl  -0xc(%ebp)
80106f5a:	e8 71 a6 ff ff       	call   801015d0 <filedup>
80106f5f:	83 c4 10             	add    $0x10,%esp
80106f62:	8d 65 f8             	lea    -0x8(%ebp),%esp
80106f65:	89 d8                	mov    %ebx,%eax
80106f67:	5b                   	pop    %ebx
80106f68:	5e                   	pop    %esi
80106f69:	5d                   	pop    %ebp
80106f6a:	c3                   	ret    
80106f6b:	90                   	nop
80106f6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80106f70 <sys_read>:
80106f70:	55                   	push   %ebp
80106f71:	31 c0                	xor    %eax,%eax
80106f73:	89 e5                	mov    %esp,%ebp
80106f75:	83 ec 18             	sub    $0x18,%esp
80106f78:	8d 55 ec             	lea    -0x14(%ebp),%edx
80106f7b:	e8 20 ff ff ff       	call   80106ea0 <argfd.constprop.0>
80106f80:	85 c0                	test   %eax,%eax
80106f82:	0f 88 88 00 00 00    	js     80107010 <sys_read+0xa0>
80106f88:	8d 45 f0             	lea    -0x10(%ebp),%eax
80106f8b:	83 ec 08             	sub    $0x8,%esp
80106f8e:	50                   	push   %eax
80106f8f:	6a 02                	push   $0x2
80106f91:	e8 0a fc ff ff       	call   80106ba0 <argint>
80106f96:	83 c4 10             	add    $0x10,%esp
80106f99:	85 c0                	test   %eax,%eax
80106f9b:	78 73                	js     80107010 <sys_read+0xa0>
80106f9d:	8d 45 f4             	lea    -0xc(%ebp),%eax
80106fa0:	83 ec 04             	sub    $0x4,%esp
80106fa3:	ff 75 f0             	pushl  -0x10(%ebp)
80106fa6:	50                   	push   %eax
80106fa7:	6a 01                	push   $0x1
80106fa9:	e8 42 fc ff ff       	call   80106bf0 <argptr>
80106fae:	83 c4 10             	add    $0x10,%esp
80106fb1:	85 c0                	test   %eax,%eax
80106fb3:	78 5b                	js     80107010 <sys_read+0xa0>
80106fb5:	8b 45 ec             	mov    -0x14(%ebp),%eax
80106fb8:	83 38 03             	cmpl   $0x3,(%eax)
80106fbb:	74 1b                	je     80106fd8 <sys_read+0x68>
80106fbd:	83 ec 04             	sub    $0x4,%esp
80106fc0:	ff 75 f0             	pushl  -0x10(%ebp)
80106fc3:	ff 75 f4             	pushl  -0xc(%ebp)
80106fc6:	50                   	push   %eax
80106fc7:	e8 84 a7 ff ff       	call   80101750 <fileread>
80106fcc:	83 c4 10             	add    $0x10,%esp
80106fcf:	c9                   	leave  
80106fd0:	c3                   	ret    
80106fd1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106fd8:	80 78 14 00          	cmpb   $0x0,0x14(%eax)
80106fdc:	75 1a                	jne    80106ff8 <sys_read+0x88>
80106fde:	ff 75 f0             	pushl  -0x10(%ebp)
80106fe1:	ff 75 f4             	pushl  -0xc(%ebp)
80106fe4:	50                   	push   %eax
80106fe5:	6a 01                	push   $0x1
80106fe7:	e8 94 6b 00 00       	call   8010db80 <cg_read>
80106fec:	83 c4 10             	add    $0x10,%esp
80106fef:	c9                   	leave  
80106ff0:	c3                   	ret    
80106ff1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80106ff8:	ff 75 f0             	pushl  -0x10(%ebp)
80106ffb:	ff 75 f4             	pushl  -0xc(%ebp)
80106ffe:	50                   	push   %eax
80106fff:	6a 00                	push   $0x0
80107001:	e8 7a 6b 00 00       	call   8010db80 <cg_read>
80107006:	83 c4 10             	add    $0x10,%esp
80107009:	c9                   	leave  
8010700a:	c3                   	ret    
8010700b:	90                   	nop
8010700c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80107010:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107015:	c9                   	leave  
80107016:	c3                   	ret    
80107017:	89 f6                	mov    %esi,%esi
80107019:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80107020 <sys_write>:
80107020:	55                   	push   %ebp
80107021:	31 c0                	xor    %eax,%eax
80107023:	89 e5                	mov    %esp,%ebp
80107025:	83 ec 18             	sub    $0x18,%esp
80107028:	8d 55 ec             	lea    -0x14(%ebp),%edx
8010702b:	e8 70 fe ff ff       	call   80106ea0 <argfd.constprop.0>
80107030:	85 c0                	test   %eax,%eax
80107032:	78 64                	js     80107098 <sys_write+0x78>
80107034:	8d 45 f0             	lea    -0x10(%ebp),%eax
80107037:	83 ec 08             	sub    $0x8,%esp
8010703a:	50                   	push   %eax
8010703b:	6a 02                	push   $0x2
8010703d:	e8 5e fb ff ff       	call   80106ba0 <argint>
80107042:	83 c4 10             	add    $0x10,%esp
80107045:	85 c0                	test   %eax,%eax
80107047:	78 4f                	js     80107098 <sys_write+0x78>
80107049:	8d 45 f4             	lea    -0xc(%ebp),%eax
8010704c:	83 ec 04             	sub    $0x4,%esp
8010704f:	ff 75 f0             	pushl  -0x10(%ebp)
80107052:	50                   	push   %eax
80107053:	6a 01                	push   $0x1
80107055:	e8 96 fb ff ff       	call   80106bf0 <argptr>
8010705a:	83 c4 10             	add    $0x10,%esp
8010705d:	85 c0                	test   %eax,%eax
8010705f:	78 37                	js     80107098 <sys_write+0x78>
80107061:	8b 45 ec             	mov    -0x14(%ebp),%eax
80107064:	83 38 03             	cmpl   $0x3,(%eax)
80107067:	74 17                	je     80107080 <sys_write+0x60>
80107069:	83 ec 04             	sub    $0x4,%esp
8010706c:	ff 75 f0             	pushl  -0x10(%ebp)
8010706f:	ff 75 f4             	pushl  -0xc(%ebp)
80107072:	50                   	push   %eax
80107073:	e8 68 a7 ff ff       	call   801017e0 <filewrite>
80107078:	83 c4 10             	add    $0x10,%esp
8010707b:	c9                   	leave  
8010707c:	c3                   	ret    
8010707d:	8d 76 00             	lea    0x0(%esi),%esi
80107080:	83 ec 04             	sub    $0x4,%esp
80107083:	ff 75 f0             	pushl  -0x10(%ebp)
80107086:	ff 75 f4             	pushl  -0xc(%ebp)
80107089:	50                   	push   %eax
8010708a:	e8 31 6b 00 00       	call   8010dbc0 <cg_write>
8010708f:	83 c4 10             	add    $0x10,%esp
80107092:	c9                   	leave  
80107093:	c3                   	ret    
80107094:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80107098:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010709d:	c9                   	leave  
8010709e:	c3                   	ret    
8010709f:	90                   	nop

801070a0 <sys_close>:
801070a0:	55                   	push   %ebp
801070a1:	89 e5                	mov    %esp,%ebp
801070a3:	83 ec 18             	sub    $0x18,%esp
801070a6:	8d 55 f4             	lea    -0xc(%ebp),%edx
801070a9:	8d 45 f0             	lea    -0x10(%ebp),%eax
801070ac:	e8 ef fd ff ff       	call   80106ea0 <argfd.constprop.0>
801070b1:	85 c0                	test   %eax,%eax
801070b3:	78 3b                	js     801070f0 <sys_close+0x50>
801070b5:	e8 b6 e3 ff ff       	call   80105470 <myproc>
801070ba:	8b 55 f0             	mov    -0x10(%ebp),%edx
801070bd:	c7 44 90 48 00 00 00 	movl   $0x0,0x48(%eax,%edx,4)
801070c4:	00 
801070c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
801070c8:	83 38 03             	cmpl   $0x3,(%eax)
801070cb:	74 13                	je     801070e0 <sys_close+0x40>
801070cd:	83 ec 0c             	sub    $0xc,%esp
801070d0:	50                   	push   %eax
801070d1:	e8 4a a5 ff ff       	call   80101620 <fileclose>
801070d6:	83 c4 10             	add    $0x10,%esp
801070d9:	31 c0                	xor    %eax,%eax
801070db:	c9                   	leave  
801070dc:	c3                   	ret    
801070dd:	8d 76 00             	lea    0x0(%esi),%esi
801070e0:	83 ec 0c             	sub    $0xc,%esp
801070e3:	50                   	push   %eax
801070e4:	e8 17 6b 00 00       	call   8010dc00 <cg_close>
801070e9:	83 c4 10             	add    $0x10,%esp
801070ec:	31 c0                	xor    %eax,%eax
801070ee:	c9                   	leave  
801070ef:	c3                   	ret    
801070f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801070f5:	c9                   	leave  
801070f6:	c3                   	ret    
801070f7:	89 f6                	mov    %esi,%esi
801070f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80107100 <sys_fstat>:
80107100:	55                   	push   %ebp
80107101:	31 c0                	xor    %eax,%eax
80107103:	89 e5                	mov    %esp,%ebp
80107105:	83 ec 18             	sub    $0x18,%esp
80107108:	8d 55 f0             	lea    -0x10(%ebp),%edx
8010710b:	e8 90 fd ff ff       	call   80106ea0 <argfd.constprop.0>
80107110:	85 c0                	test   %eax,%eax
80107112:	78 4c                	js     80107160 <sys_fstat+0x60>
80107114:	8d 45 f4             	lea    -0xc(%ebp),%eax
80107117:	83 ec 04             	sub    $0x4,%esp
8010711a:	6a 14                	push   $0x14
8010711c:	50                   	push   %eax
8010711d:	6a 01                	push   $0x1
8010711f:	e8 cc fa ff ff       	call   80106bf0 <argptr>
80107124:	83 c4 10             	add    $0x10,%esp
80107127:	85 c0                	test   %eax,%eax
80107129:	78 35                	js     80107160 <sys_fstat+0x60>
8010712b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8010712e:	83 38 03             	cmpl   $0x3,(%eax)
80107131:	74 15                	je     80107148 <sys_fstat+0x48>
80107133:	83 ec 08             	sub    $0x8,%esp
80107136:	ff 75 f4             	pushl  -0xc(%ebp)
80107139:	50                   	push   %eax
8010713a:	e8 c1 a5 ff ff       	call   80101700 <filestat>
8010713f:	83 c4 10             	add    $0x10,%esp
80107142:	c9                   	leave  
80107143:	c3                   	ret    
80107144:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80107148:	83 ec 08             	sub    $0x8,%esp
8010714b:	ff 75 f4             	pushl  -0xc(%ebp)
8010714e:	50                   	push   %eax
8010714f:	e8 dc 6a 00 00       	call   8010dc30 <cg_stat>
80107154:	83 c4 10             	add    $0x10,%esp
80107157:	c9                   	leave  
80107158:	c3                   	ret    
80107159:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80107160:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107165:	c9                   	leave  
80107166:	c3                   	ret    
80107167:	89 f6                	mov    %esi,%esi
80107169:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80107170 <sys_link>:
80107170:	55                   	push   %ebp
80107171:	89 e5                	mov    %esp,%ebp
80107173:	57                   	push   %edi
80107174:	56                   	push   %esi
80107175:	53                   	push   %ebx
80107176:	8d 45 d4             	lea    -0x2c(%ebp),%eax
80107179:	83 ec 34             	sub    $0x34,%esp
8010717c:	50                   	push   %eax
8010717d:	6a 00                	push   $0x0
8010717f:	e8 cc fa ff ff       	call   80106c50 <argstr>
80107184:	83 c4 10             	add    $0x10,%esp
80107187:	85 c0                	test   %eax,%eax
80107189:	0f 88 fb 00 00 00    	js     8010728a <sys_link+0x11a>
8010718f:	8d 45 d0             	lea    -0x30(%ebp),%eax
80107192:	83 ec 08             	sub    $0x8,%esp
80107195:	50                   	push   %eax
80107196:	6a 01                	push   $0x1
80107198:	e8 b3 fa ff ff       	call   80106c50 <argstr>
8010719d:	83 c4 10             	add    $0x10,%esp
801071a0:	85 c0                	test   %eax,%eax
801071a2:	0f 88 e2 00 00 00    	js     8010728a <sys_link+0x11a>
801071a8:	e8 33 c6 ff ff       	call   801037e0 <begin_op>
801071ad:	83 ec 0c             	sub    $0xc,%esp
801071b0:	ff 75 d4             	pushl  -0x2c(%ebp)
801071b3:	e8 a8 b6 ff ff       	call   80102860 <namei>
801071b8:	83 c4 10             	add    $0x10,%esp
801071bb:	85 c0                	test   %eax,%eax
801071bd:	89 c3                	mov    %eax,%ebx
801071bf:	0f 84 f3 00 00 00    	je     801072b8 <sys_link+0x148>
801071c5:	83 ec 0c             	sub    $0xc,%esp
801071c8:	50                   	push   %eax
801071c9:	e8 02 ad ff ff       	call   80101ed0 <ilock>
801071ce:	83 c4 10             	add    $0x10,%esp
801071d1:	66 83 7b 50 01       	cmpw   $0x1,0x50(%ebx)
801071d6:	0f 84 c4 00 00 00    	je     801072a0 <sys_link+0x130>
801071dc:	66 83 43 56 01       	addw   $0x1,0x56(%ebx)
801071e1:	83 ec 0c             	sub    $0xc,%esp
801071e4:	8d 7d da             	lea    -0x26(%ebp),%edi
801071e7:	53                   	push   %ebx
801071e8:	e8 23 ac ff ff       	call   80101e10 <iupdate>
801071ed:	89 1c 24             	mov    %ebx,(%esp)
801071f0:	e8 bb ad ff ff       	call   80101fb0 <iunlock>
801071f5:	58                   	pop    %eax
801071f6:	5a                   	pop    %edx
801071f7:	57                   	push   %edi
801071f8:	ff 75 d0             	pushl  -0x30(%ebp)
801071fb:	e8 a0 b6 ff ff       	call   801028a0 <nameiparent>
80107200:	83 c4 10             	add    $0x10,%esp
80107203:	85 c0                	test   %eax,%eax
80107205:	89 c6                	mov    %eax,%esi
80107207:	74 5b                	je     80107264 <sys_link+0xf4>
80107209:	83 ec 0c             	sub    $0xc,%esp
8010720c:	50                   	push   %eax
8010720d:	e8 be ac ff ff       	call   80101ed0 <ilock>
80107212:	83 c4 10             	add    $0x10,%esp
80107215:	8b 03                	mov    (%ebx),%eax
80107217:	39 06                	cmp    %eax,(%esi)
80107219:	75 3d                	jne    80107258 <sys_link+0xe8>
8010721b:	83 ec 04             	sub    $0x4,%esp
8010721e:	ff 73 04             	pushl  0x4(%ebx)
80107221:	57                   	push   %edi
80107222:	56                   	push   %esi
80107223:	e8 48 b5 ff ff       	call   80102770 <dirlink>
80107228:	83 c4 10             	add    $0x10,%esp
8010722b:	85 c0                	test   %eax,%eax
8010722d:	78 29                	js     80107258 <sys_link+0xe8>
8010722f:	83 ec 0c             	sub    $0xc,%esp
80107232:	56                   	push   %esi
80107233:	e8 38 af ff ff       	call   80102170 <iunlockput>
80107238:	89 1c 24             	mov    %ebx,(%esp)
8010723b:	e8 c0 ad ff ff       	call   80102000 <iput>
80107240:	e8 0b c6 ff ff       	call   80103850 <end_op>
80107245:	83 c4 10             	add    $0x10,%esp
80107248:	31 c0                	xor    %eax,%eax
8010724a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010724d:	5b                   	pop    %ebx
8010724e:	5e                   	pop    %esi
8010724f:	5f                   	pop    %edi
80107250:	5d                   	pop    %ebp
80107251:	c3                   	ret    
80107252:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80107258:	83 ec 0c             	sub    $0xc,%esp
8010725b:	56                   	push   %esi
8010725c:	e8 0f af ff ff       	call   80102170 <iunlockput>
80107261:	83 c4 10             	add    $0x10,%esp
80107264:	83 ec 0c             	sub    $0xc,%esp
80107267:	53                   	push   %ebx
80107268:	e8 63 ac ff ff       	call   80101ed0 <ilock>
8010726d:	66 83 6b 56 01       	subw   $0x1,0x56(%ebx)
80107272:	89 1c 24             	mov    %ebx,(%esp)
80107275:	e8 96 ab ff ff       	call   80101e10 <iupdate>
8010727a:	89 1c 24             	mov    %ebx,(%esp)
8010727d:	e8 ee ae ff ff       	call   80102170 <iunlockput>
80107282:	e8 c9 c5 ff ff       	call   80103850 <end_op>
80107287:	83 c4 10             	add    $0x10,%esp
8010728a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010728d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107292:	5b                   	pop    %ebx
80107293:	5e                   	pop    %esi
80107294:	5f                   	pop    %edi
80107295:	5d                   	pop    %ebp
80107296:	c3                   	ret    
80107297:	89 f6                	mov    %esi,%esi
80107299:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
801072a0:	83 ec 0c             	sub    $0xc,%esp
801072a3:	53                   	push   %ebx
801072a4:	e8 c7 ae ff ff       	call   80102170 <iunlockput>
801072a9:	e8 a2 c5 ff ff       	call   80103850 <end_op>
801072ae:	83 c4 10             	add    $0x10,%esp
801072b1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801072b6:	eb 92                	jmp    8010724a <sys_link+0xda>
801072b8:	e8 93 c5 ff ff       	call   80103850 <end_op>
801072bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801072c2:	eb 86                	jmp    8010724a <sys_link+0xda>
801072c4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801072ca:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

801072d0 <sys_unlink>:
801072d0:	55                   	push   %ebp
801072d1:	89 e5                	mov    %esp,%ebp
801072d3:	57                   	push   %edi
801072d4:	56                   	push   %esi
801072d5:	53                   	push   %ebx
801072d6:	8d 45 c0             	lea    -0x40(%ebp),%eax
801072d9:	83 ec 44             	sub    $0x44,%esp
801072dc:	50                   	push   %eax
801072dd:	6a 00                	push   $0x0
801072df:	e8 6c f9 ff ff       	call   80106c50 <argstr>
801072e4:	83 c4 10             	add    $0x10,%esp
801072e7:	85 c0                	test   %eax,%eax
801072e9:	0f 88 41 01 00 00    	js     80107430 <sys_unlink+0x160>
801072ef:	e8 ec c4 ff ff       	call   801037e0 <begin_op>
801072f4:	83 ec 08             	sub    $0x8,%esp
801072f7:	68 8f f5 10 80       	push   $0x8010f58f
801072fc:	ff 75 c0             	pushl  -0x40(%ebp)
801072ff:	e8 dc 6d 00 00       	call   8010e0e0 <cgroup_delete>
80107304:	83 c4 10             	add    $0x10,%esp
80107307:	83 f8 ff             	cmp    $0xffffffff,%eax
8010730a:	74 1c                	je     80107328 <sys_unlink+0x58>
8010730c:	83 f8 fe             	cmp    $0xfffffffe,%eax
8010730f:	0f 84 9b 01 00 00    	je     801074b0 <sys_unlink+0x1e0>
80107315:	e8 36 c5 ff ff       	call   80103850 <end_op>
8010731a:	31 c0                	xor    %eax,%eax
8010731c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010731f:	5b                   	pop    %ebx
80107320:	5e                   	pop    %esi
80107321:	5f                   	pop    %edi
80107322:	5d                   	pop    %ebp
80107323:	c3                   	ret    
80107324:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80107328:	8d 5d ca             	lea    -0x36(%ebp),%ebx
8010732b:	83 ec 08             	sub    $0x8,%esp
8010732e:	53                   	push   %ebx
8010732f:	ff 75 c0             	pushl  -0x40(%ebp)
80107332:	e8 69 b5 ff ff       	call   801028a0 <nameiparent>
80107337:	83 c4 10             	add    $0x10,%esp
8010733a:	85 c0                	test   %eax,%eax
8010733c:	89 c6                	mov    %eax,%esi
8010733e:	0f 84 6c 01 00 00    	je     801074b0 <sys_unlink+0x1e0>
80107344:	83 ec 0c             	sub    $0xc,%esp
80107347:	50                   	push   %eax
80107348:	e8 83 ab ff ff       	call   80101ed0 <ilock>
8010734d:	58                   	pop    %eax
8010734e:	5a                   	pop    %edx
8010734f:	68 71 ed 10 80       	push   $0x8010ed71
80107354:	53                   	push   %ebx
80107355:	e8 a6 b0 ff ff       	call   80102400 <namecmp>
8010735a:	83 c4 10             	add    $0x10,%esp
8010735d:	85 c0                	test   %eax,%eax
8010735f:	0f 84 27 01 00 00    	je     8010748c <sys_unlink+0x1bc>
80107365:	83 ec 08             	sub    $0x8,%esp
80107368:	68 70 ed 10 80       	push   $0x8010ed70
8010736d:	53                   	push   %ebx
8010736e:	e8 8d b0 ff ff       	call   80102400 <namecmp>
80107373:	83 c4 10             	add    $0x10,%esp
80107376:	85 c0                	test   %eax,%eax
80107378:	0f 84 0e 01 00 00    	je     8010748c <sys_unlink+0x1bc>
8010737e:	8d 45 c4             	lea    -0x3c(%ebp),%eax
80107381:	83 ec 04             	sub    $0x4,%esp
80107384:	50                   	push   %eax
80107385:	53                   	push   %ebx
80107386:	56                   	push   %esi
80107387:	e8 94 b0 ff ff       	call   80102420 <dirlookup>
8010738c:	83 c4 10             	add    $0x10,%esp
8010738f:	85 c0                	test   %eax,%eax
80107391:	89 c3                	mov    %eax,%ebx
80107393:	0f 84 f3 00 00 00    	je     8010748c <sys_unlink+0x1bc>
80107399:	83 ec 0c             	sub    $0xc,%esp
8010739c:	50                   	push   %eax
8010739d:	e8 2e ab ff ff       	call   80101ed0 <ilock>
801073a2:	83 c4 10             	add    $0x10,%esp
801073a5:	66 83 7b 56 00       	cmpw   $0x0,0x56(%ebx)
801073aa:	0f 8e 33 01 00 00    	jle    801074e3 <sys_unlink+0x213>
801073b0:	66 83 7b 50 01       	cmpw   $0x1,0x50(%ebx)
801073b5:	0f 84 85 00 00 00    	je     80107440 <sys_unlink+0x170>
801073bb:	83 ec 0c             	sub    $0xc,%esp
801073be:	53                   	push   %ebx
801073bf:	e8 6c 9d ff ff       	call   80101130 <doesbackdevice>
801073c4:	83 c4 10             	add    $0x10,%esp
801073c7:	83 f8 01             	cmp    $0x1,%eax
801073ca:	0f 84 b0 00 00 00    	je     80107480 <sys_unlink+0x1b0>
801073d0:	8d 7d d8             	lea    -0x28(%ebp),%edi
801073d3:	83 ec 04             	sub    $0x4,%esp
801073d6:	6a 10                	push   $0x10
801073d8:	6a 00                	push   $0x0
801073da:	57                   	push   %edi
801073db:	e8 60 f4 ff ff       	call   80106840 <memset>
801073e0:	6a 10                	push   $0x10
801073e2:	ff 75 c4             	pushl  -0x3c(%ebp)
801073e5:	57                   	push   %edi
801073e6:	56                   	push   %esi
801073e7:	e8 e4 ae ff ff       	call   801022d0 <writei>
801073ec:	83 c4 20             	add    $0x20,%esp
801073ef:	83 f8 10             	cmp    $0x10,%eax
801073f2:	0f 85 f8 00 00 00    	jne    801074f0 <sys_unlink+0x220>
801073f8:	66 83 7b 50 01       	cmpw   $0x1,0x50(%ebx)
801073fd:	0f 84 bd 00 00 00    	je     801074c0 <sys_unlink+0x1f0>
80107403:	83 ec 0c             	sub    $0xc,%esp
80107406:	56                   	push   %esi
80107407:	e8 64 ad ff ff       	call   80102170 <iunlockput>
8010740c:	66 83 6b 56 01       	subw   $0x1,0x56(%ebx)
80107411:	89 1c 24             	mov    %ebx,(%esp)
80107414:	e8 f7 a9 ff ff       	call   80101e10 <iupdate>
80107419:	89 1c 24             	mov    %ebx,(%esp)
8010741c:	e8 4f ad ff ff       	call   80102170 <iunlockput>
80107421:	83 c4 10             	add    $0x10,%esp
80107424:	e9 ec fe ff ff       	jmp    80107315 <sys_unlink+0x45>
80107429:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80107430:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107435:	e9 e2 fe ff ff       	jmp    8010731c <sys_unlink+0x4c>
8010743a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80107440:	83 7b 58 20          	cmpl   $0x20,0x58(%ebx)
80107444:	0f 86 71 ff ff ff    	jbe    801073bb <sys_unlink+0xeb>
8010744a:	bf 20 00 00 00       	mov    $0x20,%edi
8010744f:	eb 13                	jmp    80107464 <sys_unlink+0x194>
80107451:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80107458:	83 c7 10             	add    $0x10,%edi
8010745b:	3b 7b 58             	cmp    0x58(%ebx),%edi
8010745e:	0f 83 57 ff ff ff    	jae    801073bb <sys_unlink+0xeb>
80107464:	8d 45 d8             	lea    -0x28(%ebp),%eax
80107467:	6a 10                	push   $0x10
80107469:	57                   	push   %edi
8010746a:	50                   	push   %eax
8010746b:	53                   	push   %ebx
8010746c:	e8 4f ad ff ff       	call   801021c0 <readi>
80107471:	83 c4 10             	add    $0x10,%esp
80107474:	83 f8 10             	cmp    $0x10,%eax
80107477:	75 5d                	jne    801074d6 <sys_unlink+0x206>
80107479:	66 83 7d d8 00       	cmpw   $0x0,-0x28(%ebp)
8010747e:	74 d8                	je     80107458 <sys_unlink+0x188>
80107480:	83 ec 0c             	sub    $0xc,%esp
80107483:	53                   	push   %ebx
80107484:	e8 e7 ac ff ff       	call   80102170 <iunlockput>
80107489:	83 c4 10             	add    $0x10,%esp
8010748c:	83 ec 0c             	sub    $0xc,%esp
8010748f:	56                   	push   %esi
80107490:	e8 db ac ff ff       	call   80102170 <iunlockput>
80107495:	e8 b6 c3 ff ff       	call   80103850 <end_op>
8010749a:	83 c4 10             	add    $0x10,%esp
8010749d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801074a2:	e9 75 fe ff ff       	jmp    8010731c <sys_unlink+0x4c>
801074a7:	89 f6                	mov    %esi,%esi
801074a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
801074b0:	e8 9b c3 ff ff       	call   80103850 <end_op>
801074b5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801074ba:	e9 5d fe ff ff       	jmp    8010731c <sys_unlink+0x4c>
801074bf:	90                   	nop
801074c0:	66 83 6e 56 01       	subw   $0x1,0x56(%esi)
801074c5:	83 ec 0c             	sub    $0xc,%esp
801074c8:	56                   	push   %esi
801074c9:	e8 42 a9 ff ff       	call   80101e10 <iupdate>
801074ce:	83 c4 10             	add    $0x10,%esp
801074d1:	e9 2d ff ff ff       	jmp    80107403 <sys_unlink+0x133>
801074d6:	83 ec 0c             	sub    $0xc,%esp
801074d9:	68 a8 f5 10 80       	push   $0x8010f5a8
801074de:	e8 ed 8e ff ff       	call   801003d0 <panic>
801074e3:	83 ec 0c             	sub    $0xc,%esp
801074e6:	68 96 f5 10 80       	push   $0x8010f596
801074eb:	e8 e0 8e ff ff       	call   801003d0 <panic>
801074f0:	83 ec 0c             	sub    $0xc,%esp
801074f3:	68 ba f5 10 80       	push   $0x8010f5ba
801074f8:	e8 d3 8e ff ff       	call   801003d0 <panic>
801074fd:	8d 76 00             	lea    0x0(%esi),%esi

80107500 <sys_open>:
80107500:	55                   	push   %ebp
80107501:	89 e5                	mov    %esp,%ebp
80107503:	57                   	push   %edi
80107504:	56                   	push   %esi
80107505:	53                   	push   %ebx
80107506:	8d 45 dc             	lea    -0x24(%ebp),%eax
80107509:	83 ec 24             	sub    $0x24,%esp
8010750c:	50                   	push   %eax
8010750d:	6a 00                	push   $0x0
8010750f:	e8 3c f7 ff ff       	call   80106c50 <argstr>
80107514:	83 c4 10             	add    $0x10,%esp
80107517:	85 c0                	test   %eax,%eax
80107519:	0f 88 bb 00 00 00    	js     801075da <sys_open+0xda>
8010751f:	8d 45 e0             	lea    -0x20(%ebp),%eax
80107522:	83 ec 08             	sub    $0x8,%esp
80107525:	50                   	push   %eax
80107526:	6a 01                	push   $0x1
80107528:	e8 73 f6 ff ff       	call   80106ba0 <argint>
8010752d:	83 c4 10             	add    $0x10,%esp
80107530:	85 c0                	test   %eax,%eax
80107532:	0f 88 a2 00 00 00    	js     801075da <sys_open+0xda>
80107538:	e8 a3 c2 ff ff       	call   801037e0 <begin_op>
8010753d:	83 ec 08             	sub    $0x8,%esp
80107540:	ff 75 e0             	pushl  -0x20(%ebp)
80107543:	ff 75 dc             	pushl  -0x24(%ebp)
80107546:	e8 95 65 00 00       	call   8010dae0 <cg_sys_open>
8010754b:	83 c4 10             	add    $0x10,%esp
8010754e:	85 c0                	test   %eax,%eax
80107550:	89 c3                	mov    %eax,%ebx
80107552:	0f 89 28 01 00 00    	jns    80107680 <sys_open+0x180>
80107558:	f6 45 e1 02          	testb  $0x2,-0x1f(%ebp)
8010755c:	0f 84 8e 00 00 00    	je     801075f0 <sys_open+0xf0>
80107562:	8d 45 e4             	lea    -0x1c(%ebp),%eax
80107565:	83 ec 08             	sub    $0x8,%esp
80107568:	31 c9                	xor    %ecx,%ecx
8010756a:	ba 02 00 00 00       	mov    $0x2,%edx
8010756f:	50                   	push   %eax
80107570:	8b 45 dc             	mov    -0x24(%ebp),%eax
80107573:	6a 00                	push   $0x0
80107575:	e8 86 f7 ff ff       	call   80106d00 <createmount>
8010757a:	83 c4 10             	add    $0x10,%esp
8010757d:	85 c0                	test   %eax,%eax
8010757f:	89 c6                	mov    %eax,%esi
80107581:	0f 84 08 01 00 00    	je     8010768f <sys_open+0x18f>
80107587:	e8 d4 9f ff ff       	call   80101560 <filealloc>
8010758c:	85 c0                	test   %eax,%eax
8010758e:	89 c7                	mov    %eax,%edi
80107590:	74 2e                	je     801075c0 <sys_open+0xc0>
80107592:	31 db                	xor    %ebx,%ebx
80107594:	e8 d7 de ff ff       	call   80105470 <myproc>
80107599:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801075a0:	8b 54 98 48          	mov    0x48(%eax,%ebx,4),%edx
801075a4:	85 d2                	test   %edx,%edx
801075a6:	0f 84 84 00 00 00    	je     80107630 <sys_open+0x130>
801075ac:	83 c3 01             	add    $0x1,%ebx
801075af:	83 fb 10             	cmp    $0x10,%ebx
801075b2:	75 ec                	jne    801075a0 <sys_open+0xa0>
801075b4:	83 ec 0c             	sub    $0xc,%esp
801075b7:	57                   	push   %edi
801075b8:	e8 63 a0 ff ff       	call   80101620 <fileclose>
801075bd:	83 c4 10             	add    $0x10,%esp
801075c0:	83 ec 0c             	sub    $0xc,%esp
801075c3:	56                   	push   %esi
801075c4:	e8 a7 ab ff ff       	call   80102170 <iunlockput>
801075c9:	58                   	pop    %eax
801075ca:	ff 75 e4             	pushl  -0x1c(%ebp)
801075cd:	e8 0e c8 ff ff       	call   80103de0 <mntput>
801075d2:	e8 79 c2 ff ff       	call   80103850 <end_op>
801075d7:	83 c4 10             	add    $0x10,%esp
801075da:	8d 65 f4             	lea    -0xc(%ebp),%esp
801075dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801075e2:	5b                   	pop    %ebx
801075e3:	5e                   	pop    %esi
801075e4:	5f                   	pop    %edi
801075e5:	5d                   	pop    %ebp
801075e6:	c3                   	ret    
801075e7:	89 f6                	mov    %esi,%esi
801075e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
801075f0:	8d 45 e4             	lea    -0x1c(%ebp),%eax
801075f3:	83 ec 08             	sub    $0x8,%esp
801075f6:	50                   	push   %eax
801075f7:	ff 75 dc             	pushl  -0x24(%ebp)
801075fa:	e8 01 b3 ff ff       	call   80102900 <nameimount>
801075ff:	83 c4 10             	add    $0x10,%esp
80107602:	85 c0                	test   %eax,%eax
80107604:	89 c6                	mov    %eax,%esi
80107606:	0f 84 83 00 00 00    	je     8010768f <sys_open+0x18f>
8010760c:	83 ec 0c             	sub    $0xc,%esp
8010760f:	50                   	push   %eax
80107610:	e8 bb a8 ff ff       	call   80101ed0 <ilock>
80107615:	83 c4 10             	add    $0x10,%esp
80107618:	66 83 7e 50 01       	cmpw   $0x1,0x50(%esi)
8010761d:	0f 85 64 ff ff ff    	jne    80107587 <sys_open+0x87>
80107623:	8b 4d e0             	mov    -0x20(%ebp),%ecx
80107626:	85 c9                	test   %ecx,%ecx
80107628:	0f 84 59 ff ff ff    	je     80107587 <sys_open+0x87>
8010762e:	eb 90                	jmp    801075c0 <sys_open+0xc0>
80107630:	83 ec 0c             	sub    $0xc,%esp
80107633:	89 7c 98 48          	mov    %edi,0x48(%eax,%ebx,4)
80107637:	56                   	push   %esi
80107638:	e8 73 a9 ff ff       	call   80101fb0 <iunlock>
8010763d:	e8 0e c2 ff ff       	call   80103850 <end_op>
80107642:	c7 07 02 00 00 00    	movl   $0x2,(%edi)
80107648:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8010764b:	83 c4 10             	add    $0x10,%esp
8010764e:	8b 55 e0             	mov    -0x20(%ebp),%edx
80107651:	89 77 10             	mov    %esi,0x10(%edi)
80107654:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%edi)
8010765b:	89 47 14             	mov    %eax,0x14(%edi)
8010765e:	89 d0                	mov    %edx,%eax
80107660:	83 e0 01             	and    $0x1,%eax
80107663:	83 f0 01             	xor    $0x1,%eax
80107666:	83 e2 03             	and    $0x3,%edx
80107669:	88 47 08             	mov    %al,0x8(%edi)
8010766c:	0f 95 47 09          	setne  0x9(%edi)
80107670:	89 d8                	mov    %ebx,%eax
80107672:	8d 65 f4             	lea    -0xc(%ebp),%esp
80107675:	5b                   	pop    %ebx
80107676:	5e                   	pop    %esi
80107677:	5f                   	pop    %edi
80107678:	5d                   	pop    %ebp
80107679:	c3                   	ret    
8010767a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80107680:	e8 cb c1 ff ff       	call   80103850 <end_op>
80107685:	8d 65 f4             	lea    -0xc(%ebp),%esp
80107688:	89 d8                	mov    %ebx,%eax
8010768a:	5b                   	pop    %ebx
8010768b:	5e                   	pop    %esi
8010768c:	5f                   	pop    %edi
8010768d:	5d                   	pop    %ebp
8010768e:	c3                   	ret    
8010768f:	e8 bc c1 ff ff       	call   80103850 <end_op>
80107694:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107699:	eb d7                	jmp    80107672 <sys_open+0x172>
8010769b:	90                   	nop
8010769c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801076a0 <sys_mkdir>:
801076a0:	55                   	push   %ebp
801076a1:	89 e5                	mov    %esp,%ebp
801076a3:	53                   	push   %ebx
801076a4:	83 ec 14             	sub    $0x14,%esp
801076a7:	e8 34 c1 ff ff       	call   801037e0 <begin_op>
801076ac:	8d 45 f0             	lea    -0x10(%ebp),%eax
801076af:	83 ec 08             	sub    $0x8,%esp
801076b2:	50                   	push   %eax
801076b3:	6a 00                	push   $0x0
801076b5:	e8 96 f5 ff ff       	call   80106c50 <argstr>
801076ba:	83 c4 10             	add    $0x10,%esp
801076bd:	85 c0                	test   %eax,%eax
801076bf:	0f 88 9b 00 00 00    	js     80107760 <sys_mkdir+0xc0>
801076c5:	83 ec 0c             	sub    $0xc,%esp
801076c8:	ff 75 f0             	pushl  -0x10(%ebp)
801076cb:	e8 a0 61 00 00       	call   8010d870 <get_cgroup_by_path>
801076d0:	83 c4 10             	add    $0x10,%esp
801076d3:	85 c0                	test   %eax,%eax
801076d5:	75 21                	jne    801076f8 <sys_mkdir+0x58>
801076d7:	83 ec 0c             	sub    $0xc,%esp
801076da:	ff 75 f0             	pushl  -0x10(%ebp)
801076dd:	e8 6e 6d 00 00       	call   8010e450 <cgroup_create>
801076e2:	83 c4 10             	add    $0x10,%esp
801076e5:	85 c0                	test   %eax,%eax
801076e7:	74 37                	je     80107720 <sys_mkdir+0x80>
801076e9:	e8 62 c1 ff ff       	call   80103850 <end_op>
801076ee:	31 c0                	xor    %eax,%eax
801076f0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801076f3:	c9                   	leave  
801076f4:	c3                   	ret    
801076f5:	8d 76 00             	lea    0x0(%esi),%esi
801076f8:	83 ec 0c             	sub    $0xc,%esp
801076fb:	68 c9 f5 10 80       	push   $0x8010f5c9
80107700:	e8 5b 8f ff ff       	call   80100660 <cprintf>
80107705:	e8 46 c1 ff ff       	call   80103850 <end_op>
8010770a:	83 c4 10             	add    $0x10,%esp
8010770d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107712:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80107715:	c9                   	leave  
80107716:	c3                   	ret    
80107717:	89 f6                	mov    %esi,%esi
80107719:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80107720:	8d 45 f4             	lea    -0xc(%ebp),%eax
80107723:	83 ec 08             	sub    $0x8,%esp
80107726:	31 c9                	xor    %ecx,%ecx
80107728:	ba 01 00 00 00       	mov    $0x1,%edx
8010772d:	50                   	push   %eax
8010772e:	8b 45 f0             	mov    -0x10(%ebp),%eax
80107731:	6a 00                	push   $0x0
80107733:	e8 c8 f5 ff ff       	call   80106d00 <createmount>
80107738:	83 c4 10             	add    $0x10,%esp
8010773b:	85 c0                	test   %eax,%eax
8010773d:	89 c3                	mov    %eax,%ebx
8010773f:	74 1f                	je     80107760 <sys_mkdir+0xc0>
80107741:	83 ec 0c             	sub    $0xc,%esp
80107744:	ff 75 f4             	pushl  -0xc(%ebp)
80107747:	e8 94 c6 ff ff       	call   80103de0 <mntput>
8010774c:	89 1c 24             	mov    %ebx,(%esp)
8010774f:	e8 1c aa ff ff       	call   80102170 <iunlockput>
80107754:	83 c4 10             	add    $0x10,%esp
80107757:	eb 90                	jmp    801076e9 <sys_mkdir+0x49>
80107759:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80107760:	e8 eb c0 ff ff       	call   80103850 <end_op>
80107765:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010776a:	eb 84                	jmp    801076f0 <sys_mkdir+0x50>
8010776c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80107770 <sys_mknod>:
80107770:	55                   	push   %ebp
80107771:	89 e5                	mov    %esp,%ebp
80107773:	53                   	push   %ebx
80107774:	83 ec 14             	sub    $0x14,%esp
80107777:	e8 64 c0 ff ff       	call   801037e0 <begin_op>
8010777c:	8d 45 e8             	lea    -0x18(%ebp),%eax
8010777f:	83 ec 08             	sub    $0x8,%esp
80107782:	50                   	push   %eax
80107783:	6a 00                	push   $0x0
80107785:	e8 c6 f4 ff ff       	call   80106c50 <argstr>
8010778a:	83 c4 10             	add    $0x10,%esp
8010778d:	85 c0                	test   %eax,%eax
8010778f:	78 77                	js     80107808 <sys_mknod+0x98>
80107791:	8d 45 ec             	lea    -0x14(%ebp),%eax
80107794:	83 ec 08             	sub    $0x8,%esp
80107797:	50                   	push   %eax
80107798:	6a 01                	push   $0x1
8010779a:	e8 01 f4 ff ff       	call   80106ba0 <argint>
8010779f:	83 c4 10             	add    $0x10,%esp
801077a2:	85 c0                	test   %eax,%eax
801077a4:	78 62                	js     80107808 <sys_mknod+0x98>
801077a6:	8d 45 f0             	lea    -0x10(%ebp),%eax
801077a9:	83 ec 08             	sub    $0x8,%esp
801077ac:	50                   	push   %eax
801077ad:	6a 02                	push   $0x2
801077af:	e8 ec f3 ff ff       	call   80106ba0 <argint>
801077b4:	83 c4 10             	add    $0x10,%esp
801077b7:	85 c0                	test   %eax,%eax
801077b9:	78 4d                	js     80107808 <sys_mknod+0x98>
801077bb:	8d 45 f4             	lea    -0xc(%ebp),%eax
801077be:	83 ec 08             	sub    $0x8,%esp
801077c1:	0f bf 4d ec          	movswl -0x14(%ebp),%ecx
801077c5:	ba 03 00 00 00       	mov    $0x3,%edx
801077ca:	50                   	push   %eax
801077cb:	0f bf 45 f0          	movswl -0x10(%ebp),%eax
801077cf:	50                   	push   %eax
801077d0:	8b 45 e8             	mov    -0x18(%ebp),%eax
801077d3:	e8 28 f5 ff ff       	call   80106d00 <createmount>
801077d8:	83 c4 10             	add    $0x10,%esp
801077db:	85 c0                	test   %eax,%eax
801077dd:	89 c3                	mov    %eax,%ebx
801077df:	74 27                	je     80107808 <sys_mknod+0x98>
801077e1:	83 ec 0c             	sub    $0xc,%esp
801077e4:	ff 75 f4             	pushl  -0xc(%ebp)
801077e7:	e8 f4 c5 ff ff       	call   80103de0 <mntput>
801077ec:	89 1c 24             	mov    %ebx,(%esp)
801077ef:	e8 7c a9 ff ff       	call   80102170 <iunlockput>
801077f4:	e8 57 c0 ff ff       	call   80103850 <end_op>
801077f9:	83 c4 10             	add    $0x10,%esp
801077fc:	31 c0                	xor    %eax,%eax
801077fe:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80107801:	c9                   	leave  
80107802:	c3                   	ret    
80107803:	90                   	nop
80107804:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80107808:	e8 43 c0 ff ff       	call   80103850 <end_op>
8010780d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107812:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80107815:	c9                   	leave  
80107816:	c3                   	ret    
80107817:	89 f6                	mov    %esi,%esi
80107819:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80107820 <sys_chdir>:
80107820:	55                   	push   %ebp
80107821:	89 e5                	mov    %esp,%ebp
80107823:	56                   	push   %esi
80107824:	53                   	push   %ebx
80107825:	83 ec 10             	sub    $0x10,%esp
80107828:	e8 43 dc ff ff       	call   80105470 <myproc>
8010782d:	89 c3                	mov    %eax,%ebx
8010782f:	e8 ac bf ff ff       	call   801037e0 <begin_op>
80107834:	8d 45 f0             	lea    -0x10(%ebp),%eax
80107837:	83 ec 08             	sub    $0x8,%esp
8010783a:	50                   	push   %eax
8010783b:	6a 00                	push   $0x0
8010783d:	e8 0e f4 ff ff       	call   80106c50 <argstr>
80107842:	83 c4 10             	add    $0x10,%esp
80107845:	85 c0                	test   %eax,%eax
80107847:	0f 88 03 01 00 00    	js     80107950 <sys_chdir+0x130>
8010784d:	83 ec 0c             	sub    $0xc,%esp
80107850:	ff 75 f0             	pushl  -0x10(%ebp)
80107853:	e8 18 60 00 00       	call   8010d870 <get_cgroup_by_path>
80107858:	83 c4 10             	add    $0x10,%esp
8010785b:	85 c0                	test   %eax,%eax
8010785d:	89 c6                	mov    %eax,%esi
8010785f:	74 2f                	je     80107890 <sys_chdir+0x70>
80107861:	e8 ea bf ff ff       	call   80103850 <end_op>
80107866:	81 c3 ac 00 00 00    	add    $0xac,%ebx
8010786c:	83 ec 04             	sub    $0x4,%esp
8010786f:	68 00 02 00 00       	push   $0x200
80107874:	56                   	push   %esi
80107875:	53                   	push   %ebx
80107876:	e8 15 f2 ff ff       	call   80106a90 <safestrcpy>
8010787b:	83 c4 10             	add    $0x10,%esp
8010787e:	31 c0                	xor    %eax,%eax
80107880:	8d 65 f8             	lea    -0x8(%ebp),%esp
80107883:	5b                   	pop    %ebx
80107884:	5e                   	pop    %esi
80107885:	5d                   	pop    %ebp
80107886:	c3                   	ret    
80107887:	89 f6                	mov    %esi,%esi
80107889:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80107890:	8d 45 f4             	lea    -0xc(%ebp),%eax
80107893:	83 ec 08             	sub    $0x8,%esp
80107896:	50                   	push   %eax
80107897:	ff 75 f0             	pushl  -0x10(%ebp)
8010789a:	e8 61 b0 ff ff       	call   80102900 <nameimount>
8010789f:	83 c4 10             	add    $0x10,%esp
801078a2:	85 c0                	test   %eax,%eax
801078a4:	89 c6                	mov    %eax,%esi
801078a6:	0f 84 a4 00 00 00    	je     80107950 <sys_chdir+0x130>
801078ac:	83 ec 0c             	sub    $0xc,%esp
801078af:	50                   	push   %eax
801078b0:	e8 1b a6 ff ff       	call   80101ed0 <ilock>
801078b5:	83 c4 10             	add    $0x10,%esp
801078b8:	66 83 7e 50 01       	cmpw   $0x1,0x50(%esi)
801078bd:	75 71                	jne    80107930 <sys_chdir+0x110>
801078bf:	83 ec 0c             	sub    $0xc,%esp
801078c2:	56                   	push   %esi
801078c3:	e8 e8 a6 ff ff       	call   80101fb0 <iunlock>
801078c8:	8b 83 88 00 00 00    	mov    0x88(%ebx),%eax
801078ce:	83 c4 10             	add    $0x10,%esp
801078d1:	85 c0                	test   %eax,%eax
801078d3:	74 0c                	je     801078e1 <sys_chdir+0xc1>
801078d5:	83 ec 0c             	sub    $0xc,%esp
801078d8:	50                   	push   %eax
801078d9:	e8 22 a7 ff ff       	call   80102000 <iput>
801078de:	83 c4 10             	add    $0x10,%esp
801078e1:	8b 83 8c 00 00 00    	mov    0x8c(%ebx),%eax
801078e7:	85 c0                	test   %eax,%eax
801078e9:	74 0c                	je     801078f7 <sys_chdir+0xd7>
801078eb:	83 ec 0c             	sub    $0xc,%esp
801078ee:	50                   	push   %eax
801078ef:	e8 ec c4 ff ff       	call   80103de0 <mntput>
801078f4:	83 c4 10             	add    $0x10,%esp
801078f7:	e8 54 bf ff ff       	call   80103850 <end_op>
801078fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
801078ff:	89 b3 88 00 00 00    	mov    %esi,0x88(%ebx)
80107905:	83 ec 08             	sub    $0x8,%esp
80107908:	81 c3 ac 00 00 00    	add    $0xac,%ebx
8010790e:	89 43 e0             	mov    %eax,-0x20(%ebx)
80107911:	ff 75 f0             	pushl  -0x10(%ebp)
80107914:	53                   	push   %ebx
80107915:	e8 06 58 00 00       	call   8010d120 <format_path>
8010791a:	83 c4 10             	add    $0x10,%esp
8010791d:	8d 65 f8             	lea    -0x8(%ebp),%esp
80107920:	31 c0                	xor    %eax,%eax
80107922:	5b                   	pop    %ebx
80107923:	5e                   	pop    %esi
80107924:	5d                   	pop    %ebp
80107925:	c3                   	ret    
80107926:	8d 76 00             	lea    0x0(%esi),%esi
80107929:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80107930:	83 ec 0c             	sub    $0xc,%esp
80107933:	56                   	push   %esi
80107934:	e8 37 a8 ff ff       	call   80102170 <iunlockput>
80107939:	e8 12 bf ff ff       	call   80103850 <end_op>
8010793e:	83 c4 10             	add    $0x10,%esp
80107941:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107946:	e9 35 ff ff ff       	jmp    80107880 <sys_chdir+0x60>
8010794b:	90                   	nop
8010794c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80107950:	e8 fb be ff ff       	call   80103850 <end_op>
80107955:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010795a:	e9 21 ff ff ff       	jmp    80107880 <sys_chdir+0x60>
8010795f:	90                   	nop

80107960 <sys_exec>:
80107960:	55                   	push   %ebp
80107961:	89 e5                	mov    %esp,%ebp
80107963:	57                   	push   %edi
80107964:	56                   	push   %esi
80107965:	53                   	push   %ebx
80107966:	8d 85 5c ff ff ff    	lea    -0xa4(%ebp),%eax
8010796c:	81 ec a4 00 00 00    	sub    $0xa4,%esp
80107972:	50                   	push   %eax
80107973:	6a 00                	push   $0x0
80107975:	e8 d6 f2 ff ff       	call   80106c50 <argstr>
8010797a:	83 c4 10             	add    $0x10,%esp
8010797d:	85 c0                	test   %eax,%eax
8010797f:	78 7f                	js     80107a00 <sys_exec+0xa0>
80107981:	8d 85 60 ff ff ff    	lea    -0xa0(%ebp),%eax
80107987:	83 ec 08             	sub    $0x8,%esp
8010798a:	50                   	push   %eax
8010798b:	6a 01                	push   $0x1
8010798d:	e8 0e f2 ff ff       	call   80106ba0 <argint>
80107992:	83 c4 10             	add    $0x10,%esp
80107995:	85 c0                	test   %eax,%eax
80107997:	78 67                	js     80107a00 <sys_exec+0xa0>
80107999:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
8010799f:	83 ec 04             	sub    $0x4,%esp
801079a2:	8d b5 68 ff ff ff    	lea    -0x98(%ebp),%esi
801079a8:	68 80 00 00 00       	push   $0x80
801079ad:	6a 00                	push   $0x0
801079af:	8d bd 64 ff ff ff    	lea    -0x9c(%ebp),%edi
801079b5:	50                   	push   %eax
801079b6:	31 db                	xor    %ebx,%ebx
801079b8:	e8 83 ee ff ff       	call   80106840 <memset>
801079bd:	83 c4 10             	add    $0x10,%esp
801079c0:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
801079c6:	83 ec 08             	sub    $0x8,%esp
801079c9:	57                   	push   %edi
801079ca:	8d 04 98             	lea    (%eax,%ebx,4),%eax
801079cd:	50                   	push   %eax
801079ce:	e8 2d f1 ff ff       	call   80106b00 <fetchint>
801079d3:	83 c4 10             	add    $0x10,%esp
801079d6:	85 c0                	test   %eax,%eax
801079d8:	78 26                	js     80107a00 <sys_exec+0xa0>
801079da:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
801079e0:	85 c0                	test   %eax,%eax
801079e2:	74 2c                	je     80107a10 <sys_exec+0xb0>
801079e4:	83 ec 08             	sub    $0x8,%esp
801079e7:	56                   	push   %esi
801079e8:	50                   	push   %eax
801079e9:	e8 52 f1 ff ff       	call   80106b40 <fetchstr>
801079ee:	83 c4 10             	add    $0x10,%esp
801079f1:	85 c0                	test   %eax,%eax
801079f3:	78 0b                	js     80107a00 <sys_exec+0xa0>
801079f5:	83 c3 01             	add    $0x1,%ebx
801079f8:	83 c6 04             	add    $0x4,%esi
801079fb:	83 fb 20             	cmp    $0x20,%ebx
801079fe:	75 c0                	jne    801079c0 <sys_exec+0x60>
80107a00:	8d 65 f4             	lea    -0xc(%ebp),%esp
80107a03:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107a08:	5b                   	pop    %ebx
80107a09:	5e                   	pop    %esi
80107a0a:	5f                   	pop    %edi
80107a0b:	5d                   	pop    %ebp
80107a0c:	c3                   	ret    
80107a0d:	8d 76 00             	lea    0x0(%esi),%esi
80107a10:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
80107a16:	83 ec 08             	sub    $0x8,%esp
80107a19:	c7 84 9d 68 ff ff ff 	movl   $0x0,-0x98(%ebp,%ebx,4)
80107a20:	00 00 00 00 
80107a24:	50                   	push   %eax
80107a25:	ff b5 5c ff ff ff    	pushl  -0xa4(%ebp)
80107a2b:	e8 70 97 ff ff       	call   801011a0 <exec>
80107a30:	83 c4 10             	add    $0x10,%esp
80107a33:	8d 65 f4             	lea    -0xc(%ebp),%esp
80107a36:	5b                   	pop    %ebx
80107a37:	5e                   	pop    %esi
80107a38:	5f                   	pop    %edi
80107a39:	5d                   	pop    %ebp
80107a3a:	c3                   	ret    
80107a3b:	90                   	nop
80107a3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80107a40 <sys_pipe>:
80107a40:	55                   	push   %ebp
80107a41:	89 e5                	mov    %esp,%ebp
80107a43:	57                   	push   %edi
80107a44:	56                   	push   %esi
80107a45:	53                   	push   %ebx
80107a46:	8d 45 dc             	lea    -0x24(%ebp),%eax
80107a49:	83 ec 20             	sub    $0x20,%esp
80107a4c:	6a 08                	push   $0x8
80107a4e:	50                   	push   %eax
80107a4f:	6a 00                	push   $0x0
80107a51:	e8 9a f1 ff ff       	call   80106bf0 <argptr>
80107a56:	83 c4 10             	add    $0x10,%esp
80107a59:	85 c0                	test   %eax,%eax
80107a5b:	78 4a                	js     80107aa7 <sys_pipe+0x67>
80107a5d:	8d 45 e4             	lea    -0x1c(%ebp),%eax
80107a60:	83 ec 08             	sub    $0x8,%esp
80107a63:	50                   	push   %eax
80107a64:	8d 45 e0             	lea    -0x20(%ebp),%eax
80107a67:	50                   	push   %eax
80107a68:	e8 b3 d3 ff ff       	call   80104e20 <pipealloc>
80107a6d:	83 c4 10             	add    $0x10,%esp
80107a70:	85 c0                	test   %eax,%eax
80107a72:	78 33                	js     80107aa7 <sys_pipe+0x67>
80107a74:	31 db                	xor    %ebx,%ebx
80107a76:	8b 7d e0             	mov    -0x20(%ebp),%edi
80107a79:	e8 f2 d9 ff ff       	call   80105470 <myproc>
80107a7e:	66 90                	xchg   %ax,%ax
80107a80:	8b 74 98 48          	mov    0x48(%eax,%ebx,4),%esi
80107a84:	85 f6                	test   %esi,%esi
80107a86:	74 30                	je     80107ab8 <sys_pipe+0x78>
80107a88:	83 c3 01             	add    $0x1,%ebx
80107a8b:	83 fb 10             	cmp    $0x10,%ebx
80107a8e:	75 f0                	jne    80107a80 <sys_pipe+0x40>
80107a90:	83 ec 0c             	sub    $0xc,%esp
80107a93:	ff 75 e0             	pushl  -0x20(%ebp)
80107a96:	e8 85 9b ff ff       	call   80101620 <fileclose>
80107a9b:	58                   	pop    %eax
80107a9c:	ff 75 e4             	pushl  -0x1c(%ebp)
80107a9f:	e8 7c 9b ff ff       	call   80101620 <fileclose>
80107aa4:	83 c4 10             	add    $0x10,%esp
80107aa7:	8d 65 f4             	lea    -0xc(%ebp),%esp
80107aaa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107aaf:	5b                   	pop    %ebx
80107ab0:	5e                   	pop    %esi
80107ab1:	5f                   	pop    %edi
80107ab2:	5d                   	pop    %ebp
80107ab3:	c3                   	ret    
80107ab4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80107ab8:	8d 73 10             	lea    0x10(%ebx),%esi
80107abb:	89 7c b0 08          	mov    %edi,0x8(%eax,%esi,4)
80107abf:	8b 7d e4             	mov    -0x1c(%ebp),%edi
80107ac2:	e8 a9 d9 ff ff       	call   80105470 <myproc>
80107ac7:	31 d2                	xor    %edx,%edx
80107ac9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80107ad0:	8b 4c 90 48          	mov    0x48(%eax,%edx,4),%ecx
80107ad4:	85 c9                	test   %ecx,%ecx
80107ad6:	74 18                	je     80107af0 <sys_pipe+0xb0>
80107ad8:	83 c2 01             	add    $0x1,%edx
80107adb:	83 fa 10             	cmp    $0x10,%edx
80107ade:	75 f0                	jne    80107ad0 <sys_pipe+0x90>
80107ae0:	e8 8b d9 ff ff       	call   80105470 <myproc>
80107ae5:	c7 44 b0 08 00 00 00 	movl   $0x0,0x8(%eax,%esi,4)
80107aec:	00 
80107aed:	eb a1                	jmp    80107a90 <sys_pipe+0x50>
80107aef:	90                   	nop
80107af0:	89 7c 90 48          	mov    %edi,0x48(%eax,%edx,4)
80107af4:	8b 45 dc             	mov    -0x24(%ebp),%eax
80107af7:	89 18                	mov    %ebx,(%eax)
80107af9:	8b 45 dc             	mov    -0x24(%ebp),%eax
80107afc:	89 50 04             	mov    %edx,0x4(%eax)
80107aff:	8d 65 f4             	lea    -0xc(%ebp),%esp
80107b02:	31 c0                	xor    %eax,%eax
80107b04:	5b                   	pop    %ebx
80107b05:	5e                   	pop    %esi
80107b06:	5f                   	pop    %edi
80107b07:	5d                   	pop    %ebp
80107b08:	c3                   	ret    
80107b09:	66 90                	xchg   %ax,%ax
80107b0b:	66 90                	xchg   %ax,%ax
80107b0d:	66 90                	xchg   %ax,%ax
80107b0f:	90                   	nop

80107b10 <sys_mount>:
80107b10:	55                   	push   %ebp
80107b11:	89 e5                	mov    %esp,%ebp
80107b13:	57                   	push   %edi
80107b14:	56                   	push   %esi
80107b15:	53                   	push   %ebx
80107b16:	8d 45 d8             	lea    -0x28(%ebp),%eax
80107b19:	83 ec 24             	sub    $0x24,%esp
80107b1c:	50                   	push   %eax
80107b1d:	6a 02                	push   $0x2
80107b1f:	e8 2c f1 ff ff       	call   80106c50 <argstr>
80107b24:	83 c4 10             	add    $0x10,%esp
80107b27:	85 c0                	test   %eax,%eax
80107b29:	0f 88 89 01 00 00    	js     80107cb8 <sys_mount+0x1a8>
80107b2f:	83 ec 08             	sub    $0x8,%esp
80107b32:	68 e9 f5 10 80       	push   $0x8010f5e9
80107b37:	ff 75 d8             	pushl  -0x28(%ebp)
80107b3a:	e8 a1 ee ff ff       	call   801069e0 <strcmp>
80107b3f:	83 c4 10             	add    $0x10,%esp
80107b42:	85 c0                	test   %eax,%eax
80107b44:	89 c3                	mov    %eax,%ebx
80107b46:	0f 84 e4 00 00 00    	je     80107c30 <sys_mount+0x120>
80107b4c:	8d 45 dc             	lea    -0x24(%ebp),%eax
80107b4f:	83 ec 08             	sub    $0x8,%esp
80107b52:	50                   	push   %eax
80107b53:	6a 00                	push   $0x0
80107b55:	e8 f6 f0 ff ff       	call   80106c50 <argstr>
80107b5a:	83 c4 10             	add    $0x10,%esp
80107b5d:	85 c0                	test   %eax,%eax
80107b5f:	0f 88 53 01 00 00    	js     80107cb8 <sys_mount+0x1a8>
80107b65:	8d 45 e0             	lea    -0x20(%ebp),%eax
80107b68:	83 ec 08             	sub    $0x8,%esp
80107b6b:	50                   	push   %eax
80107b6c:	6a 01                	push   $0x1
80107b6e:	e8 dd f0 ff ff       	call   80106c50 <argstr>
80107b73:	83 c4 10             	add    $0x10,%esp
80107b76:	85 c0                	test   %eax,%eax
80107b78:	0f 88 3a 01 00 00    	js     80107cb8 <sys_mount+0x1a8>
80107b7e:	e8 5d bc ff ff       	call   801037e0 <begin_op>
80107b83:	83 ec 0c             	sub    $0xc,%esp
80107b86:	ff 75 dc             	pushl  -0x24(%ebp)
80107b89:	e8 d2 ac ff ff       	call   80102860 <namei>
80107b8e:	83 c4 10             	add    $0x10,%esp
80107b91:	85 c0                	test   %eax,%eax
80107b93:	89 c7                	mov    %eax,%edi
80107b95:	0f 84 bf 01 00 00    	je     80107d5a <sys_mount+0x24a>
80107b9b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
80107b9e:	83 ec 08             	sub    $0x8,%esp
80107ba1:	50                   	push   %eax
80107ba2:	ff 75 e0             	pushl  -0x20(%ebp)
80107ba5:	e8 56 ad ff ff       	call   80102900 <nameimount>
80107baa:	83 c4 10             	add    $0x10,%esp
80107bad:	85 c0                	test   %eax,%eax
80107baf:	89 c6                	mov    %eax,%esi
80107bb1:	0f 84 e1 01 00 00    	je     80107d98 <sys_mount+0x288>
80107bb7:	83 78 04 01          	cmpl   $0x1,0x4(%eax)
80107bbb:	0f 84 86 01 00 00    	je     80107d47 <sys_mount+0x237>
80107bc1:	83 ec 0c             	sub    $0xc,%esp
80107bc4:	57                   	push   %edi
80107bc5:	e8 06 a3 ff ff       	call   80101ed0 <ilock>
80107bca:	89 34 24             	mov    %esi,(%esp)
80107bcd:	e8 fe a2 ff ff       	call   80101ed0 <ilock>
80107bd2:	83 c4 10             	add    $0x10,%esp
80107bd5:	66 83 7e 50 01       	cmpw   $0x1,0x50(%esi)
80107bda:	0f 85 18 01 00 00    	jne    80107cf8 <sys_mount+0x1e8>
80107be0:	83 ec 04             	sub    $0x4,%esp
80107be3:	ff 75 e4             	pushl  -0x1c(%ebp)
80107be6:	57                   	push   %edi
80107be7:	56                   	push   %esi
80107be8:	e8 23 c2 ff ff       	call   80103e10 <mount>
80107bed:	89 c3                	mov    %eax,%ebx
80107bef:	89 34 24             	mov    %esi,(%esp)
80107bf2:	e8 b9 a3 ff ff       	call   80101fb0 <iunlock>
80107bf7:	83 c4 10             	add    $0x10,%esp
80107bfa:	85 db                	test   %ebx,%ebx
80107bfc:	0f 85 de 00 00 00    	jne    80107ce0 <sys_mount+0x1d0>
80107c02:	83 ec 0c             	sub    $0xc,%esp
80107c05:	57                   	push   %edi
80107c06:	e8 65 a5 ff ff       	call   80102170 <iunlockput>
80107c0b:	58                   	pop    %eax
80107c0c:	ff 75 e4             	pushl  -0x1c(%ebp)
80107c0f:	e8 cc c1 ff ff       	call   80103de0 <mntput>
80107c14:	e8 37 bc ff ff       	call   80103850 <end_op>
80107c19:	83 c4 10             	add    $0x10,%esp
80107c1c:	8d 65 f4             	lea    -0xc(%ebp),%esp
80107c1f:	89 d8                	mov    %ebx,%eax
80107c21:	5b                   	pop    %ebx
80107c22:	5e                   	pop    %esi
80107c23:	5f                   	pop    %edi
80107c24:	5d                   	pop    %ebp
80107c25:	c3                   	ret    
80107c26:	8d 76 00             	lea    0x0(%esi),%esi
80107c29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80107c30:	8d 45 dc             	lea    -0x24(%ebp),%eax
80107c33:	83 ec 08             	sub    $0x8,%esp
80107c36:	50                   	push   %eax
80107c37:	6a 00                	push   $0x0
80107c39:	e8 12 f0 ff ff       	call   80106c50 <argstr>
80107c3e:	83 c4 10             	add    $0x10,%esp
80107c41:	85 c0                	test   %eax,%eax
80107c43:	78 73                	js     80107cb8 <sys_mount+0x1a8>
80107c45:	8d 45 e0             	lea    -0x20(%ebp),%eax
80107c48:	83 ec 08             	sub    $0x8,%esp
80107c4b:	50                   	push   %eax
80107c4c:	6a 01                	push   $0x1
80107c4e:	e8 fd ef ff ff       	call   80106c50 <argstr>
80107c53:	83 c4 10             	add    $0x10,%esp
80107c56:	85 c0                	test   %eax,%eax
80107c58:	78 5e                	js     80107cb8 <sys_mount+0x1a8>
80107c5a:	8b 4d dc             	mov    -0x24(%ebp),%ecx
80107c5d:	85 c9                	test   %ecx,%ecx
80107c5f:	75 57                	jne    80107cb8 <sys_mount+0x1a8>
80107c61:	e8 7a bb ff ff       	call   801037e0 <begin_op>
80107c66:	8d 45 e4             	lea    -0x1c(%ebp),%eax
80107c69:	83 ec 08             	sub    $0x8,%esp
80107c6c:	50                   	push   %eax
80107c6d:	ff 75 e0             	pushl  -0x20(%ebp)
80107c70:	e8 8b ac ff ff       	call   80102900 <nameimount>
80107c75:	83 c4 10             	add    $0x10,%esp
80107c78:	85 c0                	test   %eax,%eax
80107c7a:	0f 84 f9 00 00 00    	je     80107d79 <sys_mount+0x269>
80107c80:	e8 cb 56 00 00       	call   8010d350 <cgroup_root>
80107c85:	80 38 00             	cmpb   $0x0,(%eax)
80107c88:	0f 85 9a 00 00 00    	jne    80107d28 <sys_mount+0x218>
80107c8e:	8b 75 e0             	mov    -0x20(%ebp),%esi
80107c91:	e8 ba 56 00 00       	call   8010d350 <cgroup_root>
80107c96:	83 ec 08             	sub    $0x8,%esp
80107c99:	56                   	push   %esi
80107c9a:	50                   	push   %eax
80107c9b:	e8 90 5b 00 00       	call   8010d830 <set_cgroup_dir_path>
80107ca0:	e8 ab bb ff ff       	call   80103850 <end_op>
80107ca5:	83 c4 10             	add    $0x10,%esp
80107ca8:	8d 65 f4             	lea    -0xc(%ebp),%esp
80107cab:	89 d8                	mov    %ebx,%eax
80107cad:	5b                   	pop    %ebx
80107cae:	5e                   	pop    %esi
80107caf:	5f                   	pop    %edi
80107cb0:	5d                   	pop    %ebp
80107cb1:	c3                   	ret    
80107cb2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80107cb8:	83 ec 0c             	sub    $0xc,%esp
80107cbb:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
80107cc0:	68 e0 f5 10 80       	push   $0x8010f5e0
80107cc5:	e8 96 89 ff ff       	call   80100660 <cprintf>
80107cca:	83 c4 10             	add    $0x10,%esp
80107ccd:	8d 65 f4             	lea    -0xc(%ebp),%esp
80107cd0:	89 d8                	mov    %ebx,%eax
80107cd2:	5b                   	pop    %ebx
80107cd3:	5e                   	pop    %esi
80107cd4:	5f                   	pop    %edi
80107cd5:	5d                   	pop    %ebp
80107cd6:	c3                   	ret    
80107cd7:	89 f6                	mov    %esi,%esi
80107cd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80107ce0:	83 ec 0c             	sub    $0xc,%esp
80107ce3:	56                   	push   %esi
80107ce4:	e8 17 a3 ff ff       	call   80102000 <iput>
80107ce9:	83 c4 10             	add    $0x10,%esp
80107cec:	e9 11 ff ff ff       	jmp    80107c02 <sys_mount+0xf2>
80107cf1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80107cf8:	83 ec 0c             	sub    $0xc,%esp
80107cfb:	57                   	push   %edi
80107cfc:	e8 6f a4 ff ff       	call   80102170 <iunlockput>
80107d01:	89 34 24             	mov    %esi,(%esp)
80107d04:	e8 67 a4 ff ff       	call   80102170 <iunlockput>
80107d09:	5a                   	pop    %edx
80107d0a:	ff 75 e4             	pushl  -0x1c(%ebp)
80107d0d:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
80107d12:	e8 c9 c0 ff ff       	call   80103de0 <mntput>
80107d17:	e8 34 bb ff ff       	call   80103850 <end_op>
80107d1c:	83 c4 10             	add    $0x10,%esp
80107d1f:	e9 f8 fe ff ff       	jmp    80107c1c <sys_mount+0x10c>
80107d24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80107d28:	83 ec 0c             	sub    $0xc,%esp
80107d2b:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
80107d30:	68 30 f6 10 80       	push   $0x8010f630
80107d35:	e8 26 89 ff ff       	call   80100660 <cprintf>
80107d3a:	e8 11 bb ff ff       	call   80103850 <end_op>
80107d3f:	83 c4 10             	add    $0x10,%esp
80107d42:	e9 d5 fe ff ff       	jmp    80107c1c <sys_mount+0x10c>
80107d47:	83 ec 0c             	sub    $0xc,%esp
80107d4a:	57                   	push   %edi
80107d4b:	e8 b0 a2 ff ff       	call   80102000 <iput>
80107d50:	89 34 24             	mov    %esi,(%esp)
80107d53:	e8 a8 a2 ff ff       	call   80102000 <iput>
80107d58:	eb af                	jmp    80107d09 <sys_mount+0x1f9>
80107d5a:	83 ec 0c             	sub    $0xc,%esp
80107d5d:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
80107d62:	68 00 f6 10 80       	push   $0x8010f600
80107d67:	e8 f4 88 ff ff       	call   80100660 <cprintf>
80107d6c:	e8 df ba ff ff       	call   80103850 <end_op>
80107d71:	83 c4 10             	add    $0x10,%esp
80107d74:	e9 a3 fe ff ff       	jmp    80107c1c <sys_mount+0x10c>
80107d79:	83 ec 0c             	sub    $0xc,%esp
80107d7c:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
80107d81:	68 f0 f5 10 80       	push   $0x8010f5f0
80107d86:	e8 d5 88 ff ff       	call   80100660 <cprintf>
80107d8b:	e8 c0 ba ff ff       	call   80103850 <end_op>
80107d90:	83 c4 10             	add    $0x10,%esp
80107d93:	e9 84 fe ff ff       	jmp    80107c1c <sys_mount+0x10c>
80107d98:	83 ec 0c             	sub    $0xc,%esp
80107d9b:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
80107da0:	57                   	push   %edi
80107da1:	e8 5a a2 ff ff       	call   80102000 <iput>
80107da6:	e8 a5 ba ff ff       	call   80103850 <end_op>
80107dab:	83 c4 10             	add    $0x10,%esp
80107dae:	e9 69 fe ff ff       	jmp    80107c1c <sys_mount+0x10c>
80107db3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80107db9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80107dc0 <sys_umount>:
80107dc0:	55                   	push   %ebp
80107dc1:	89 e5                	mov    %esp,%ebp
80107dc3:	53                   	push   %ebx
80107dc4:	8d 45 f0             	lea    -0x10(%ebp),%eax
80107dc7:	83 ec 1c             	sub    $0x1c,%esp
80107dca:	50                   	push   %eax
80107dcb:	6a 00                	push   $0x0
80107dcd:	e8 7e ee ff ff       	call   80106c50 <argstr>
80107dd2:	83 c4 10             	add    $0x10,%esp
80107dd5:	85 c0                	test   %eax,%eax
80107dd7:	0f 88 b3 00 00 00    	js     80107e90 <sys_umount+0xd0>
80107ddd:	e8 fe b9 ff ff       	call   801037e0 <begin_op>
80107de2:	83 ec 08             	sub    $0x8,%esp
80107de5:	68 11 f6 10 80       	push   $0x8010f611
80107dea:	ff 75 f0             	pushl  -0x10(%ebp)
80107ded:	e8 ee 62 00 00       	call   8010e0e0 <cgroup_delete>
80107df2:	83 c4 10             	add    $0x10,%esp
80107df5:	83 f8 ff             	cmp    $0xffffffff,%eax
80107df8:	89 c3                	mov    %eax,%ebx
80107dfa:	74 1c                	je     80107e18 <sys_umount+0x58>
80107dfc:	83 f8 fe             	cmp    $0xfffffffe,%eax
80107dff:	0f 84 ab 00 00 00    	je     80107eb0 <sys_umount+0xf0>
80107e05:	e8 46 ba ff ff       	call   80103850 <end_op>
80107e0a:	89 d8                	mov    %ebx,%eax
80107e0c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80107e0f:	c9                   	leave  
80107e10:	c3                   	ret    
80107e11:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80107e18:	8d 45 f4             	lea    -0xc(%ebp),%eax
80107e1b:	83 ec 08             	sub    $0x8,%esp
80107e1e:	50                   	push   %eax
80107e1f:	ff 75 f0             	pushl  -0x10(%ebp)
80107e22:	e8 d9 aa ff ff       	call   80102900 <nameimount>
80107e27:	83 c4 10             	add    $0x10,%esp
80107e2a:	85 c0                	test   %eax,%eax
80107e2c:	0f 84 9d 00 00 00    	je     80107ecf <sys_umount+0x10f>
80107e32:	83 78 04 01          	cmpl   $0x1,0x4(%eax)
80107e36:	74 28                	je     80107e60 <sys_umount+0xa0>
80107e38:	83 ec 0c             	sub    $0xc,%esp
80107e3b:	50                   	push   %eax
80107e3c:	e8 bf a1 ff ff       	call   80102000 <iput>
80107e41:	5a                   	pop    %edx
80107e42:	ff 75 f4             	pushl  -0xc(%ebp)
80107e45:	e8 96 bf ff ff       	call   80103de0 <mntput>
80107e4a:	e8 01 ba ff ff       	call   80103850 <end_op>
80107e4f:	83 c4 10             	add    $0x10,%esp
80107e52:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107e57:	eb b3                	jmp    80107e0c <sys_umount+0x4c>
80107e59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80107e60:	83 ec 0c             	sub    $0xc,%esp
80107e63:	50                   	push   %eax
80107e64:	e8 97 a1 ff ff       	call   80102000 <iput>
80107e69:	58                   	pop    %eax
80107e6a:	ff 75 f4             	pushl  -0xc(%ebp)
80107e6d:	e8 fe c0 ff ff       	call   80103f70 <umount>
80107e72:	83 c4 10             	add    $0x10,%esp
80107e75:	85 c0                	test   %eax,%eax
80107e77:	89 c3                	mov    %eax,%ebx
80107e79:	74 8a                	je     80107e05 <sys_umount+0x45>
80107e7b:	83 ec 0c             	sub    $0xc,%esp
80107e7e:	ff 75 f4             	pushl  -0xc(%ebp)
80107e81:	e8 5a bf ff ff       	call   80103de0 <mntput>
80107e86:	83 c4 10             	add    $0x10,%esp
80107e89:	e9 77 ff ff ff       	jmp    80107e05 <sys_umount+0x45>
80107e8e:	66 90                	xchg   %ax,%ax
80107e90:	83 ec 0c             	sub    $0xc,%esp
80107e93:	68 e0 f5 10 80       	push   $0x8010f5e0
80107e98:	e8 c3 87 ff ff       	call   80100660 <cprintf>
80107e9d:	83 c4 10             	add    $0x10,%esp
80107ea0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107ea5:	e9 62 ff ff ff       	jmp    80107e0c <sys_umount+0x4c>
80107eaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80107eb0:	e8 9b b9 ff ff       	call   80103850 <end_op>
80107eb5:	83 ec 0c             	sub    $0xc,%esp
80107eb8:	68 18 f6 10 80       	push   $0x8010f618
80107ebd:	e8 9e 87 ff ff       	call   80100660 <cprintf>
80107ec2:	83 c4 10             	add    $0x10,%esp
80107ec5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107eca:	e9 3d ff ff ff       	jmp    80107e0c <sys_umount+0x4c>
80107ecf:	e8 7c b9 ff ff       	call   80103850 <end_op>
80107ed4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107ed9:	e9 2e ff ff ff       	jmp    80107e0c <sys_umount+0x4c>
80107ede:	66 90                	xchg   %ax,%ax

80107ee0 <sys_printmounts>:
80107ee0:	55                   	push   %ebp
80107ee1:	89 e5                	mov    %esp,%ebp
80107ee3:	83 ec 08             	sub    $0x8,%esp
80107ee6:	e8 05 c3 ff ff       	call   801041f0 <printmounts>
80107eeb:	31 c0                	xor    %eax,%eax
80107eed:	c9                   	leave  
80107eee:	c3                   	ret    
80107eef:	90                   	nop

80107ef0 <sys_printdevices>:
80107ef0:	55                   	push   %ebp
80107ef1:	89 e5                	mov    %esp,%ebp
80107ef3:	83 ec 08             	sub    $0x8,%esp
80107ef6:	e8 45 91 ff ff       	call   80101040 <printdevices>
80107efb:	31 c0                	xor    %eax,%eax
80107efd:	c9                   	leave  
80107efe:	c3                   	ret    
80107eff:	90                   	nop

80107f00 <sys_unshare>:
80107f00:	55                   	push   %ebp
80107f01:	89 e5                	mov    %esp,%ebp
80107f03:	83 ec 20             	sub    $0x20,%esp
80107f06:	8d 45 f4             	lea    -0xc(%ebp),%eax
80107f09:	50                   	push   %eax
80107f0a:	6a 00                	push   $0x0
80107f0c:	e8 8f ec ff ff       	call   80106ba0 <argint>
80107f11:	83 c4 10             	add    $0x10,%esp
80107f14:	85 c0                	test   %eax,%eax
80107f16:	78 18                	js     80107f30 <sys_unshare+0x30>
80107f18:	83 ec 0c             	sub    $0xc,%esp
80107f1b:	ff 75 f4             	pushl  -0xc(%ebp)
80107f1e:	e8 8d cd ff ff       	call   80104cb0 <unshare>
80107f23:	83 c4 10             	add    $0x10,%esp
80107f26:	c9                   	leave  
80107f27:	c3                   	ret    
80107f28:	90                   	nop
80107f29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80107f30:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107f35:	c9                   	leave  
80107f36:	c3                   	ret    
80107f37:	66 90                	xchg   %ax,%ax
80107f39:	66 90                	xchg   %ax,%ax
80107f3b:	66 90                	xchg   %ax,%ax
80107f3d:	66 90                	xchg   %ax,%ax
80107f3f:	90                   	nop

80107f40 <sys_fork>:
80107f40:	55                   	push   %ebp
80107f41:	89 e5                	mov    %esp,%ebp
80107f43:	5d                   	pop    %ebp
80107f44:	e9 17 d8 ff ff       	jmp    80105760 <fork>
80107f49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80107f50 <sys_exit>:
80107f50:	55                   	push   %ebp
80107f51:	89 e5                	mov    %esp,%ebp
80107f53:	83 ec 20             	sub    $0x20,%esp
80107f56:	8d 45 f4             	lea    -0xc(%ebp),%eax
80107f59:	50                   	push   %eax
80107f5a:	6a 00                	push   $0x0
80107f5c:	e8 3f ec ff ff       	call   80106ba0 <argint>
80107f61:	83 c4 10             	add    $0x10,%esp
80107f64:	85 c0                	test   %eax,%eax
80107f66:	78 18                	js     80107f80 <sys_exit+0x30>
80107f68:	83 ec 0c             	sub    $0xc,%esp
80107f6b:	ff 75 f4             	pushl  -0xc(%ebp)
80107f6e:	e8 8d dd ff ff       	call   80105d00 <exit>
80107f73:	83 c4 10             	add    $0x10,%esp
80107f76:	31 c0                	xor    %eax,%eax
80107f78:	c9                   	leave  
80107f79:	c3                   	ret    
80107f7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80107f80:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107f85:	c9                   	leave  
80107f86:	c3                   	ret    
80107f87:	89 f6                	mov    %esi,%esi
80107f89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80107f90 <sys_wait>:
80107f90:	55                   	push   %ebp
80107f91:	89 e5                	mov    %esp,%ebp
80107f93:	83 ec 1c             	sub    $0x1c,%esp
80107f96:	8d 45 f4             	lea    -0xc(%ebp),%eax
80107f99:	6a 04                	push   $0x4
80107f9b:	50                   	push   %eax
80107f9c:	6a 00                	push   $0x0
80107f9e:	e8 4d ec ff ff       	call   80106bf0 <argptr>
80107fa3:	83 c4 10             	add    $0x10,%esp
80107fa6:	85 c0                	test   %eax,%eax
80107fa8:	78 16                	js     80107fc0 <sys_wait+0x30>
80107faa:	83 ec 0c             	sub    $0xc,%esp
80107fad:	ff 75 f4             	pushl  -0xc(%ebp)
80107fb0:	e8 7b e0 ff ff       	call   80106030 <wait>
80107fb5:	83 c4 10             	add    $0x10,%esp
80107fb8:	c9                   	leave  
80107fb9:	c3                   	ret    
80107fba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80107fc0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80107fc5:	c9                   	leave  
80107fc6:	c3                   	ret    
80107fc7:	89 f6                	mov    %esi,%esi
80107fc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80107fd0 <sys_kill>:
80107fd0:	55                   	push   %ebp
80107fd1:	89 e5                	mov    %esp,%ebp
80107fd3:	83 ec 20             	sub    $0x20,%esp
80107fd6:	8d 45 f4             	lea    -0xc(%ebp),%eax
80107fd9:	50                   	push   %eax
80107fda:	6a 00                	push   $0x0
80107fdc:	e8 bf eb ff ff       	call   80106ba0 <argint>
80107fe1:	83 c4 10             	add    $0x10,%esp
80107fe4:	85 c0                	test   %eax,%eax
80107fe6:	78 18                	js     80108000 <sys_kill+0x30>
80107fe8:	83 ec 0c             	sub    $0xc,%esp
80107feb:	ff 75 f4             	pushl  -0xc(%ebp)
80107fee:	e8 0d e2 ff ff       	call   80106200 <kill>
80107ff3:	83 c4 10             	add    $0x10,%esp
80107ff6:	c9                   	leave  
80107ff7:	c3                   	ret    
80107ff8:	90                   	nop
80107ff9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80108000:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80108005:	c9                   	leave  
80108006:	c3                   	ret    
80108007:	89 f6                	mov    %esi,%esi
80108009:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80108010 <sys_getpid>:
80108010:	55                   	push   %ebp
80108011:	89 e5                	mov    %esp,%ebp
80108013:	83 ec 08             	sub    $0x8,%esp
80108016:	e8 55 d4 ff ff       	call   80105470 <myproc>
8010801b:	8b 40 10             	mov    0x10(%eax),%eax
8010801e:	c9                   	leave  
8010801f:	c3                   	ret    

80108020 <sys_sbrk>:
80108020:	55                   	push   %ebp
80108021:	89 e5                	mov    %esp,%ebp
80108023:	53                   	push   %ebx
80108024:	8d 45 f4             	lea    -0xc(%ebp),%eax
80108027:	83 ec 1c             	sub    $0x1c,%esp
8010802a:	50                   	push   %eax
8010802b:	6a 00                	push   $0x0
8010802d:	e8 6e eb ff ff       	call   80106ba0 <argint>
80108032:	83 c4 10             	add    $0x10,%esp
80108035:	85 c0                	test   %eax,%eax
80108037:	78 27                	js     80108060 <sys_sbrk+0x40>
80108039:	e8 32 d4 ff ff       	call   80105470 <myproc>
8010803e:	83 ec 0c             	sub    $0xc,%esp
80108041:	8b 18                	mov    (%eax),%ebx
80108043:	ff 75 f4             	pushl  -0xc(%ebp)
80108046:	e8 35 d6 ff ff       	call   80105680 <growproc>
8010804b:	83 c4 10             	add    $0x10,%esp
8010804e:	85 c0                	test   %eax,%eax
80108050:	78 0e                	js     80108060 <sys_sbrk+0x40>
80108052:	89 d8                	mov    %ebx,%eax
80108054:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80108057:	c9                   	leave  
80108058:	c3                   	ret    
80108059:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80108060:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80108065:	eb ed                	jmp    80108054 <sys_sbrk+0x34>
80108067:	89 f6                	mov    %esi,%esi
80108069:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80108070 <sys_sleep>:
80108070:	55                   	push   %ebp
80108071:	89 e5                	mov    %esp,%ebp
80108073:	53                   	push   %ebx
80108074:	8d 45 f4             	lea    -0xc(%ebp),%eax
80108077:	83 ec 1c             	sub    $0x1c,%esp
8010807a:	50                   	push   %eax
8010807b:	6a 00                	push   $0x0
8010807d:	e8 1e eb ff ff       	call   80106ba0 <argint>
80108082:	83 c4 10             	add    $0x10,%esp
80108085:	85 c0                	test   %eax,%eax
80108087:	0f 88 8a 00 00 00    	js     80108117 <sys_sleep+0xa7>
8010808d:	83 ec 0c             	sub    $0xc,%esp
80108090:	68 00 9d 13 80       	push   $0x80139d00
80108095:	e8 36 e6 ff ff       	call   801066d0 <acquire>
8010809a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8010809d:	83 c4 10             	add    $0x10,%esp
801080a0:	8b 1d 40 a5 13 80    	mov    0x8013a540,%ebx
801080a6:	85 d2                	test   %edx,%edx
801080a8:	75 27                	jne    801080d1 <sys_sleep+0x61>
801080aa:	eb 54                	jmp    80108100 <sys_sleep+0x90>
801080ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801080b0:	83 ec 08             	sub    $0x8,%esp
801080b3:	68 00 9d 13 80       	push   $0x80139d00
801080b8:	68 40 a5 13 80       	push   $0x8013a540
801080bd:	e8 ae de ff ff       	call   80105f70 <sleep>
801080c2:	a1 40 a5 13 80       	mov    0x8013a540,%eax
801080c7:	83 c4 10             	add    $0x10,%esp
801080ca:	29 d8                	sub    %ebx,%eax
801080cc:	3b 45 f4             	cmp    -0xc(%ebp),%eax
801080cf:	73 2f                	jae    80108100 <sys_sleep+0x90>
801080d1:	e8 9a d3 ff ff       	call   80105470 <myproc>
801080d6:	8b 40 44             	mov    0x44(%eax),%eax
801080d9:	85 c0                	test   %eax,%eax
801080db:	74 d3                	je     801080b0 <sys_sleep+0x40>
801080dd:	83 ec 0c             	sub    $0xc,%esp
801080e0:	68 00 9d 13 80       	push   $0x80139d00
801080e5:	e8 06 e7 ff ff       	call   801067f0 <release>
801080ea:	83 c4 10             	add    $0x10,%esp
801080ed:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801080f2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801080f5:	c9                   	leave  
801080f6:	c3                   	ret    
801080f7:	89 f6                	mov    %esi,%esi
801080f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80108100:	83 ec 0c             	sub    $0xc,%esp
80108103:	68 00 9d 13 80       	push   $0x80139d00
80108108:	e8 e3 e6 ff ff       	call   801067f0 <release>
8010810d:	83 c4 10             	add    $0x10,%esp
80108110:	31 c0                	xor    %eax,%eax
80108112:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80108115:	c9                   	leave  
80108116:	c3                   	ret    
80108117:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010811c:	eb d4                	jmp    801080f2 <sys_sleep+0x82>
8010811e:	66 90                	xchg   %ax,%ax

80108120 <sys_usleep>:
80108120:	55                   	push   %ebp
80108121:	89 e5                	mov    %esp,%ebp
80108123:	57                   	push   %edi
80108124:	56                   	push   %esi
80108125:	53                   	push   %ebx
80108126:	8d 45 e4             	lea    -0x1c(%ebp),%eax
80108129:	83 ec 24             	sub    $0x24,%esp
8010812c:	50                   	push   %eax
8010812d:	6a 00                	push   $0x0
8010812f:	e8 6c ea ff ff       	call   80106ba0 <argint>
80108134:	83 c4 10             	add    $0x10,%esp
80108137:	85 c0                	test   %eax,%eax
80108139:	0f 88 9e 00 00 00    	js     801081dd <sys_usleep+0xbd>
8010813f:	e8 9c 21 00 00       	call   8010a2e0 <steady_clock_now>
80108144:	83 ec 0c             	sub    $0xc,%esp
80108147:	89 c3                	mov    %eax,%ebx
80108149:	31 ff                	xor    %edi,%edi
8010814b:	68 00 9d 13 80       	push   $0x80139d00
80108150:	89 de                	mov    %ebx,%esi
80108152:	e8 79 e5 ff ff       	call   801066d0 <acquire>
80108157:	83 c4 10             	add    $0x10,%esp
8010815a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80108160:	e8 7b 21 00 00       	call   8010a2e0 <steady_clock_now>
80108165:	29 f0                	sub    %esi,%eax
80108167:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
8010816a:	19 fa                	sbb    %edi,%edx
8010816c:	83 fa 00             	cmp    $0x0,%edx
8010816f:	76 1f                	jbe    80108190 <sys_usleep+0x70>
80108171:	83 ec 0c             	sub    $0xc,%esp
80108174:	68 00 9d 13 80       	push   $0x80139d00
80108179:	e8 72 e6 ff ff       	call   801067f0 <release>
8010817e:	83 c4 10             	add    $0x10,%esp
80108181:	31 c0                	xor    %eax,%eax
80108183:	8d 65 f4             	lea    -0xc(%ebp),%esp
80108186:	5b                   	pop    %ebx
80108187:	5e                   	pop    %esi
80108188:	5f                   	pop    %edi
80108189:	5d                   	pop    %ebp
8010818a:	c3                   	ret    
8010818b:	90                   	nop
8010818c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80108190:	39 c8                	cmp    %ecx,%eax
80108192:	73 dd                	jae    80108171 <sys_usleep+0x51>
80108194:	e8 d7 d2 ff ff       	call   80105470 <myproc>
80108199:	8b 40 44             	mov    0x44(%eax),%eax
8010819c:	85 c0                	test   %eax,%eax
8010819e:	75 20                	jne    801081c0 <sys_usleep+0xa0>
801081a0:	83 ec 08             	sub    $0x8,%esp
801081a3:	68 00 9d 13 80       	push   $0x80139d00
801081a8:	68 40 a5 13 80       	push   $0x8013a540
801081ad:	e8 be dd ff ff       	call   80105f70 <sleep>
801081b2:	83 c4 10             	add    $0x10,%esp
801081b5:	eb a9                	jmp    80108160 <sys_usleep+0x40>
801081b7:	89 f6                	mov    %esi,%esi
801081b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
801081c0:	83 ec 0c             	sub    $0xc,%esp
801081c3:	68 00 9d 13 80       	push   $0x80139d00
801081c8:	e8 23 e6 ff ff       	call   801067f0 <release>
801081cd:	83 c4 10             	add    $0x10,%esp
801081d0:	8d 65 f4             	lea    -0xc(%ebp),%esp
801081d3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801081d8:	5b                   	pop    %ebx
801081d9:	5e                   	pop    %esi
801081da:	5f                   	pop    %edi
801081db:	5d                   	pop    %ebp
801081dc:	c3                   	ret    
801081dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801081e2:	eb 9f                	jmp    80108183 <sys_usleep+0x63>
801081e4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801081ea:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

801081f0 <sys_ioctl>:
801081f0:	55                   	push   %ebp
801081f1:	89 e5                	mov    %esp,%ebp
801081f3:	56                   	push   %esi
801081f4:	53                   	push   %ebx
801081f5:	8d 5d f4             	lea    -0xc(%ebp),%ebx
801081f8:	83 ec 18             	sub    $0x18,%esp
801081fb:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%ebp)
80108202:	53                   	push   %ebx
80108203:	6a 00                	push   $0x0
80108205:	e8 96 e9 ff ff       	call   80106ba0 <argint>
8010820a:	83 c4 10             	add    $0x10,%esp
8010820d:	85 c0                	test   %eax,%eax
8010820f:	0f 88 1b 01 00 00    	js     80108330 <sys_ioctl+0x140>
80108215:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)
80108219:	0f 87 11 01 00 00    	ja     80108330 <sys_ioctl+0x140>
8010821f:	e8 4c d2 ff ff       	call   80105470 <myproc>
80108224:	8b 55 f4             	mov    -0xc(%ebp),%edx
80108227:	8b 74 90 48          	mov    0x48(%eax,%edx,4),%esi
8010822b:	85 f6                	test   %esi,%esi
8010822d:	0f 84 fd 00 00 00    	je     80108330 <sys_ioctl+0x140>
80108233:	8d 45 f0             	lea    -0x10(%ebp),%eax
80108236:	83 ec 08             	sub    $0x8,%esp
80108239:	50                   	push   %eax
8010823a:	6a 01                	push   $0x1
8010823c:	e8 5f e9 ff ff       	call   80106ba0 <argint>
80108241:	83 c4 10             	add    $0x10,%esp
80108244:	85 c0                	test   %eax,%eax
80108246:	0f 88 e4 00 00 00    	js     80108330 <sys_ioctl+0x140>
8010824c:	83 ec 08             	sub    $0x8,%esp
8010824f:	53                   	push   %ebx
80108250:	6a 02                	push   $0x2
80108252:	e8 49 e9 ff ff       	call   80106ba0 <argint>
80108257:	83 c4 10             	add    $0x10,%esp
8010825a:	85 c0                	test   %eax,%eax
8010825c:	0f 88 ce 00 00 00    	js     80108330 <sys_ioctl+0x140>
80108262:	f7 45 f4 30 30 00 00 	testl  $0x3030,-0xc(%ebp)
80108269:	0f 84 c1 00 00 00    	je     80108330 <sys_ioctl+0x140>
8010826f:	8b 5e 10             	mov    0x10(%esi),%ebx
80108272:	66 83 7b 54 00       	cmpw   $0x0,0x54(%ebx)
80108277:	0f 84 b3 00 00 00    	je     80108330 <sys_ioctl+0x140>
8010827d:	83 ec 0c             	sub    $0xc,%esp
80108280:	53                   	push   %ebx
80108281:	e8 4a 9c ff ff       	call   80101ed0 <ilock>
80108286:	83 c4 10             	add    $0x10,%esp
80108289:	66 83 7b 50 03       	cmpw   $0x3,0x50(%ebx)
8010828e:	0f 85 14 01 00 00    	jne    801083a8 <sys_ioctl+0x1b8>
80108294:	66 83 7b 52 09       	cmpw   $0x9,0x52(%ebx)
80108299:	0f 8f 09 01 00 00    	jg     801083a8 <sys_ioctl+0x1b8>
8010829f:	66 83 7b 54 03       	cmpw   $0x3,0x54(%ebx)
801082a4:	0f 8f fe 00 00 00    	jg     801083a8 <sys_ioctl+0x1b8>
801082aa:	8b 45 f0             	mov    -0x10(%ebp),%eax
801082ad:	83 f8 02             	cmp    $0x2,%eax
801082b0:	0f 84 ca 00 00 00    	je     80108380 <sys_ioctl+0x190>
801082b6:	7e 38                	jle    801082f0 <sys_ioctl+0x100>
801082b8:	3d e9 03 00 00       	cmp    $0x3e9,%eax
801082bd:	0f 84 9d 00 00 00    	je     80108360 <sys_ioctl+0x170>
801082c3:	3d ea 03 00 00       	cmp    $0x3ea,%eax
801082c8:	75 76                	jne    80108340 <sys_ioctl+0x150>
801082ca:	e8 d1 e0 ff ff       	call   801063a0 <proc_lock>
801082cf:	e8 9c d1 ff ff       	call   80105470 <myproc>
801082d4:	8b 98 b8 02 00 00    	mov    0x2b8(%eax),%ebx
801082da:	e8 e1 e0 ff ff       	call   801063c0 <proc_unlock>
801082df:	8d 65 f8             	lea    -0x8(%ebp),%esp
801082e2:	89 d8                	mov    %ebx,%eax
801082e4:	5b                   	pop    %ebx
801082e5:	5e                   	pop    %esi
801082e6:	5d                   	pop    %ebp
801082e7:	c3                   	ret    
801082e8:	90                   	nop
801082e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801082f0:	83 f8 01             	cmp    $0x1,%eax
801082f3:	75 4b                	jne    80108340 <sys_ioctl+0x150>
801082f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
801082f8:	f6 c4 20             	test   $0x20,%ah
801082fb:	0f 85 bf 00 00 00    	jne    801083c0 <sys_ioctl+0x1d0>
80108301:	f6 c4 10             	test   $0x10,%ah
80108304:	0f 85 fe 00 00 00    	jne    80108408 <sys_ioctl+0x218>
8010830a:	a8 10                	test   $0x10,%al
8010830c:	0f 85 de 00 00 00    	jne    801083f0 <sys_ioctl+0x200>
80108312:	a8 20                	test   $0x20,%al
80108314:	0f 85 be 00 00 00    	jne    801083d8 <sys_ioctl+0x1e8>
8010831a:	83 ec 0c             	sub    $0xc,%esp
8010831d:	53                   	push   %ebx
8010831e:	e8 8d 9c ff ff       	call   80101fb0 <iunlock>
80108323:	83 c4 10             	add    $0x10,%esp
80108326:	8d 65 f8             	lea    -0x8(%ebp),%esp
80108329:	31 c0                	xor    %eax,%eax
8010832b:	5b                   	pop    %ebx
8010832c:	5e                   	pop    %esi
8010832d:	5d                   	pop    %ebp
8010832e:	c3                   	ret    
8010832f:	90                   	nop
80108330:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80108335:	8d 65 f8             	lea    -0x8(%ebp),%esp
80108338:	5b                   	pop    %ebx
80108339:	5e                   	pop    %esi
8010833a:	5d                   	pop    %ebp
8010833b:	c3                   	ret    
8010833c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80108340:	83 ec 0c             	sub    $0xc,%esp
80108343:	53                   	push   %ebx
80108344:	e8 67 9c ff ff       	call   80101fb0 <iunlock>
80108349:	83 c4 10             	add    $0x10,%esp
8010834c:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010834f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80108354:	5b                   	pop    %ebx
80108355:	5e                   	pop    %esi
80108356:	5d                   	pop    %ebp
80108357:	c3                   	ret    
80108358:	90                   	nop
80108359:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80108360:	e8 3b e0 ff ff       	call   801063a0 <proc_lock>
80108365:	e8 06 d1 ff ff       	call   80105470 <myproc>
8010836a:	8b 98 b0 02 00 00    	mov    0x2b0(%eax),%ebx
80108370:	e8 4b e0 ff ff       	call   801063c0 <proc_unlock>
80108375:	8d 65 f8             	lea    -0x8(%ebp),%esp
80108378:	89 d8                	mov    %ebx,%eax
8010837a:	5b                   	pop    %ebx
8010837b:	5e                   	pop    %esi
8010837c:	5d                   	pop    %ebp
8010837d:	c3                   	ret    
8010837e:	66 90                	xchg   %ax,%ax
80108380:	83 ec 08             	sub    $0x8,%esp
80108383:	ff 75 f4             	pushl  -0xc(%ebp)
80108386:	53                   	push   %ebx
80108387:	e8 54 8a ff ff       	call   80100de0 <tty_gets>
8010838c:	89 1c 24             	mov    %ebx,(%esp)
8010838f:	89 c6                	mov    %eax,%esi
80108391:	e8 1a 9c ff ff       	call   80101fb0 <iunlock>
80108396:	83 c4 10             	add    $0x10,%esp
80108399:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010839c:	89 f0                	mov    %esi,%eax
8010839e:	5b                   	pop    %ebx
8010839f:	5e                   	pop    %esi
801083a0:	5d                   	pop    %ebp
801083a1:	c3                   	ret    
801083a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801083a8:	83 ec 0c             	sub    $0xc,%esp
801083ab:	53                   	push   %ebx
801083ac:	e8 bf 9d ff ff       	call   80102170 <iunlockput>
801083b1:	83 c4 10             	add    $0x10,%esp
801083b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
801083b9:	e9 77 ff ff ff       	jmp    80108335 <sys_ioctl+0x145>
801083be:	66 90                	xchg   %ax,%ax
801083c0:	83 ec 0c             	sub    $0xc,%esp
801083c3:	53                   	push   %ebx
801083c4:	e8 f7 88 ff ff       	call   80100cc0 <tty_disconnect>
801083c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
801083cc:	83 c4 10             	add    $0x10,%esp
801083cf:	e9 2d ff ff ff       	jmp    80108301 <sys_ioctl+0x111>
801083d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801083d8:	83 ec 0c             	sub    $0xc,%esp
801083db:	53                   	push   %ebx
801083dc:	e8 df 89 ff ff       	call   80100dc0 <tty_detach>
801083e1:	83 c4 10             	add    $0x10,%esp
801083e4:	e9 31 ff ff ff       	jmp    8010831a <sys_ioctl+0x12a>
801083e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801083f0:	83 ec 0c             	sub    $0xc,%esp
801083f3:	53                   	push   %ebx
801083f4:	e8 87 89 ff ff       	call   80100d80 <tty_attach>
801083f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
801083fc:	83 c4 10             	add    $0x10,%esp
801083ff:	e9 0e ff ff ff       	jmp    80108312 <sys_ioctl+0x122>
80108404:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80108408:	83 ec 0c             	sub    $0xc,%esp
8010840b:	53                   	push   %ebx
8010840c:	e8 ff 88 ff ff       	call   80100d10 <tty_connect>
80108411:	8b 45 f4             	mov    -0xc(%ebp),%eax
80108414:	83 c4 10             	add    $0x10,%esp
80108417:	e9 ee fe ff ff       	jmp    8010830a <sys_ioctl+0x11a>
8010841c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80108420 <sys_uptime>:
80108420:	55                   	push   %ebp
80108421:	89 e5                	mov    %esp,%ebp
80108423:	53                   	push   %ebx
80108424:	83 ec 10             	sub    $0x10,%esp
80108427:	68 00 9d 13 80       	push   $0x80139d00
8010842c:	e8 9f e2 ff ff       	call   801066d0 <acquire>
80108431:	8b 1d 40 a5 13 80    	mov    0x8013a540,%ebx
80108437:	c7 04 24 00 9d 13 80 	movl   $0x80139d00,(%esp)
8010843e:	e8 ad e3 ff ff       	call   801067f0 <release>
80108443:	89 d8                	mov    %ebx,%eax
80108445:	8b 5d fc             	mov    -0x4(%ebp),%ebx
80108448:	c9                   	leave  
80108449:	c3                   	ret    
8010844a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80108450 <sys_getppid>:
80108450:	55                   	push   %ebp
80108451:	89 e5                	mov    %esp,%ebp
80108453:	83 ec 08             	sub    $0x8,%esp
80108456:	e8 15 d0 ff ff       	call   80105470 <myproc>
8010845b:	8b 40 34             	mov    0x34(%eax),%eax
8010845e:	8b 40 10             	mov    0x10(%eax),%eax
80108461:	c9                   	leave  
80108462:	c3                   	ret    
80108463:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80108469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80108470 <sys_getcpu>:
80108470:	55                   	push   %ebp
80108471:	89 e5                	mov    %esp,%ebp
80108473:	83 ec 08             	sub    $0x8,%esp
80108476:	fa                   	cli    
80108477:	e8 84 cf ff ff       	call   80105400 <cpuid>
8010847c:	fb                   	sti    
8010847d:	c9                   	leave  
8010847e:	c3                   	ret    
8010847f:	90                   	nop

80108480 <sys_getmem>:
80108480:	55                   	push   %ebp
80108481:	89 e5                	mov    %esp,%ebp
80108483:	83 ec 08             	sub    $0x8,%esp
80108486:	e8 e5 cf ff ff       	call   80105470 <myproc>
8010848b:	8b 00                	mov    (%eax),%eax
8010848d:	c9                   	leave  
8010848e:	c3                   	ret    
8010848f:	90                   	nop

80108490 <sys_kmemtest>:
80108490:	55                   	push   %ebp
80108491:	89 e5                	mov    %esp,%ebp
80108493:	5d                   	pop    %ebp
80108494:	e9 d7 ab ff ff       	jmp    80103070 <kmemtest>

80108499 <alltraps>:

  # vectors.S sends all traps here.
.globl alltraps
alltraps:
  # Build trap frame.
  pushl %ds
80108499:	1e                   	push   %ds
  pushl %es
8010849a:	06                   	push   %es
  pushl %fs
8010849b:	0f a0                	push   %fs
  pushl %gs
8010849d:	0f a8                	push   %gs
  pushal
8010849f:	60                   	pusha  
  
  # Set up data segments.
  movw $(SEG_KDATA<<3), %ax
801084a0:	66 b8 10 00          	mov    $0x10,%ax
  movw %ax, %ds
801084a4:	8e d8                	mov    %eax,%ds
  movw %ax, %es
801084a6:	8e c0                	mov    %eax,%es

  # Call trap(tf), where tf=%esp
  pushl %esp
801084a8:	54                   	push   %esp
  call trap
801084a9:	e8 e2 00 00 00       	call   80108590 <trap>
  addl $4, %esp
801084ae:	83 c4 04             	add    $0x4,%esp

801084b1 <trapret>:

  # Return falls through to trapret...
.globl trapret
trapret:
  popal
801084b1:	61                   	popa   
  popl %gs
801084b2:	0f a9                	pop    %gs
  popl %fs
801084b4:	0f a1                	pop    %fs
  popl %es
801084b6:	07                   	pop    %es
  popl %ds
801084b7:	1f                   	pop    %ds
  addl $0x8, %esp  # trapno and errcode
801084b8:	83 c4 08             	add    $0x8,%esp
  iret
801084bb:	cf                   	iret   
801084bc:	66 90                	xchg   %ax,%ax
801084be:	66 90                	xchg   %ax,%ax

801084c0 <tvinit>:
801084c0:	31 c0                	xor    %eax,%eax
801084c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
801084c8:	8b 14 85 04 d0 11 80 	mov    -0x7fee2ffc(,%eax,4),%edx
801084cf:	b9 08 00 00 00       	mov    $0x8,%ecx
801084d4:	c6 04 c5 44 9d 13 80 	movb   $0x0,-0x7fec62bc(,%eax,8)
801084db:	00 
801084dc:	66 89 0c c5 42 9d 13 	mov    %cx,-0x7fec62be(,%eax,8)
801084e3:	80 
801084e4:	c6 04 c5 45 9d 13 80 	movb   $0x8e,-0x7fec62bb(,%eax,8)
801084eb:	8e 
801084ec:	66 89 14 c5 40 9d 13 	mov    %dx,-0x7fec62c0(,%eax,8)
801084f3:	80 
801084f4:	c1 ea 10             	shr    $0x10,%edx
801084f7:	66 89 14 c5 46 9d 13 	mov    %dx,-0x7fec62ba(,%eax,8)
801084fe:	80 
801084ff:	83 c0 01             	add    $0x1,%eax
80108502:	3d 00 01 00 00       	cmp    $0x100,%eax
80108507:	75 bf                	jne    801084c8 <tvinit+0x8>
80108509:	55                   	push   %ebp
8010850a:	ba 08 00 00 00       	mov    $0x8,%edx
8010850f:	89 e5                	mov    %esp,%ebp
80108511:	83 ec 10             	sub    $0x10,%esp
80108514:	a1 04 d1 11 80       	mov    0x8011d104,%eax
80108519:	68 53 f6 10 80       	push   $0x8010f653
8010851e:	68 00 9d 13 80       	push   $0x80139d00
80108523:	66 89 15 42 9f 13 80 	mov    %dx,0x80139f42
8010852a:	c6 05 44 9f 13 80 00 	movb   $0x0,0x80139f44
80108531:	66 a3 40 9f 13 80    	mov    %ax,0x80139f40
80108537:	c1 e8 10             	shr    $0x10,%eax
8010853a:	c6 05 45 9f 13 80 ef 	movb   $0xef,0x80139f45
80108541:	66 a3 46 9f 13 80    	mov    %ax,0x80139f46
80108547:	e8 84 e0 ff ff       	call   801065d0 <initlock>
8010854c:	83 c4 10             	add    $0x10,%esp
8010854f:	c9                   	leave  
80108550:	c3                   	ret    
80108551:	eb 0d                	jmp    80108560 <idtinit>
80108553:	90                   	nop
80108554:	90                   	nop
80108555:	90                   	nop
80108556:	90                   	nop
80108557:	90                   	nop
80108558:	90                   	nop
80108559:	90                   	nop
8010855a:	90                   	nop
8010855b:	90                   	nop
8010855c:	90                   	nop
8010855d:	90                   	nop
8010855e:	90                   	nop
8010855f:	90                   	nop

80108560 <idtinit>:
80108560:	55                   	push   %ebp
static inline void
lidt(struct gatedesc *p, int size)
{
  volatile ushort pd[3];

  pd[0] = size-1;
80108561:	b8 ff 07 00 00       	mov    $0x7ff,%eax
80108566:	89 e5                	mov    %esp,%ebp
80108568:	83 ec 10             	sub    $0x10,%esp
8010856b:	66 89 45 fa          	mov    %ax,-0x6(%ebp)
  pd[1] = (uint)p;
8010856f:	b8 40 9d 13 80       	mov    $0x80139d40,%eax
80108574:	66 89 45 fc          	mov    %ax,-0x4(%ebp)
  pd[2] = (uint)p >> 16;
80108578:	c1 e8 10             	shr    $0x10,%eax
8010857b:	66 89 45 fe          	mov    %ax,-0x2(%ebp)

  asm volatile("lidt (%0)" : : "r" (pd));
8010857f:	8d 45 fa             	lea    -0x6(%ebp),%eax
80108582:	0f 01 18             	lidtl  (%eax)
80108585:	c9                   	leave  
80108586:	c3                   	ret    
80108587:	89 f6                	mov    %esi,%esi
80108589:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80108590 <trap>:
80108590:	55                   	push   %ebp
80108591:	89 e5                	mov    %esp,%ebp
80108593:	57                   	push   %edi
80108594:	56                   	push   %esi
80108595:	53                   	push   %ebx
80108596:	83 ec 1c             	sub    $0x1c,%esp
80108599:	8b 7d 08             	mov    0x8(%ebp),%edi
8010859c:	8b 47 30             	mov    0x30(%edi),%eax
8010859f:	83 f8 40             	cmp    $0x40,%eax
801085a2:	0f 84 a8 01 00 00    	je     80108750 <trap+0x1c0>
801085a8:	83 e8 20             	sub    $0x20,%eax
801085ab:	83 f8 1f             	cmp    $0x1f,%eax
801085ae:	77 10                	ja     801085c0 <trap+0x30>
801085b0:	ff 24 85 fc f6 10 80 	jmp    *-0x7fef0904(,%eax,4)
801085b7:	89 f6                	mov    %esi,%esi
801085b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
801085c0:	e8 ab ce ff ff       	call   80105470 <myproc>
801085c5:	85 c0                	test   %eax,%eax
801085c7:	0f 84 21 02 00 00    	je     801087ee <trap+0x25e>
801085cd:	f6 47 3c 03          	testb  $0x3,0x3c(%edi)
801085d1:	0f 84 17 02 00 00    	je     801087ee <trap+0x25e>

static inline uint
rcr2(void)
{
  uint val;
  asm volatile("movl %%cr2,%0" : "=r" (val));
801085d7:	0f 20 d1             	mov    %cr2,%ecx
801085da:	8b 57 38             	mov    0x38(%edi),%edx
801085dd:	89 4d d8             	mov    %ecx,-0x28(%ebp)
801085e0:	89 55 dc             	mov    %edx,-0x24(%ebp)
801085e3:	e8 18 ce ff ff       	call   80105400 <cpuid>
801085e8:	8b 77 34             	mov    0x34(%edi),%esi
801085eb:	8b 5f 30             	mov    0x30(%edi),%ebx
801085ee:	89 45 e4             	mov    %eax,-0x1c(%ebp)
801085f1:	e8 7a ce ff ff       	call   80105470 <myproc>
801085f6:	89 45 e0             	mov    %eax,-0x20(%ebp)
801085f9:	e8 72 ce ff ff       	call   80105470 <myproc>
801085fe:	8b 55 dc             	mov    -0x24(%ebp),%edx
80108601:	8b 4d d8             	mov    -0x28(%ebp),%ecx
80108604:	51                   	push   %ecx
80108605:	52                   	push   %edx
80108606:	8b 55 e0             	mov    -0x20(%ebp),%edx
80108609:	ff 75 e4             	pushl  -0x1c(%ebp)
8010860c:	56                   	push   %esi
8010860d:	53                   	push   %ebx
8010860e:	81 c2 90 00 00 00    	add    $0x90,%edx
80108614:	52                   	push   %edx
80108615:	ff 70 10             	pushl  0x10(%eax)
80108618:	68 b8 f6 10 80       	push   $0x8010f6b8
8010861d:	e8 3e 80 ff ff       	call   80100660 <cprintf>
80108622:	83 c4 20             	add    $0x20,%esp
80108625:	83 7f 30 0e          	cmpl   $0xe,0x30(%edi)
80108629:	0f 84 a9 01 00 00    	je     801087d8 <trap+0x248>
8010862f:	e8 3c ce ff ff       	call   80105470 <myproc>
80108634:	c7 40 44 01 00 00 00 	movl   $0x1,0x44(%eax)
8010863b:	90                   	nop
8010863c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80108640:	e8 2b ce ff ff       	call   80105470 <myproc>
80108645:	85 c0                	test   %eax,%eax
80108647:	74 0c                	je     80108655 <trap+0xc5>
80108649:	e8 22 ce ff ff       	call   80105470 <myproc>
8010864e:	8b 50 44             	mov    0x44(%eax),%edx
80108651:	85 d2                	test   %edx,%edx
80108653:	75 4b                	jne    801086a0 <trap+0x110>
80108655:	e8 16 ce ff ff       	call   80105470 <myproc>
8010865a:	85 c0                	test   %eax,%eax
8010865c:	74 0b                	je     80108669 <trap+0xd9>
8010865e:	e8 0d ce ff ff       	call   80105470 <myproc>
80108663:	83 78 0c 04          	cmpl   $0x4,0xc(%eax)
80108667:	74 57                	je     801086c0 <trap+0x130>
80108669:	e8 02 ce ff ff       	call   80105470 <myproc>
8010866e:	85 c0                	test   %eax,%eax
80108670:	74 1d                	je     8010868f <trap+0xff>
80108672:	e8 f9 cd ff ff       	call   80105470 <myproc>
80108677:	8b 40 44             	mov    0x44(%eax),%eax
8010867a:	85 c0                	test   %eax,%eax
8010867c:	74 11                	je     8010868f <trap+0xff>
8010867e:	0f b7 47 3c          	movzwl 0x3c(%edi),%eax
80108682:	83 e0 03             	and    $0x3,%eax
80108685:	66 83 f8 03          	cmp    $0x3,%ax
80108689:	0f 84 ea 00 00 00    	je     80108779 <trap+0x1e9>
8010868f:	8d 65 f4             	lea    -0xc(%ebp),%esp
80108692:	5b                   	pop    %ebx
80108693:	5e                   	pop    %esi
80108694:	5f                   	pop    %edi
80108695:	5d                   	pop    %ebp
80108696:	c3                   	ret    
80108697:	89 f6                	mov    %esi,%esi
80108699:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
801086a0:	0f b7 47 3c          	movzwl 0x3c(%edi),%eax
801086a4:	83 e0 03             	and    $0x3,%eax
801086a7:	66 83 f8 03          	cmp    $0x3,%ax
801086ab:	75 a8                	jne    80108655 <trap+0xc5>
801086ad:	83 ec 0c             	sub    $0xc,%esp
801086b0:	6a 00                	push   $0x0
801086b2:	e8 49 d6 ff ff       	call   80105d00 <exit>
801086b7:	83 c4 10             	add    $0x10,%esp
801086ba:	eb 99                	jmp    80108655 <trap+0xc5>
801086bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801086c0:	83 7f 30 20          	cmpl   $0x20,0x30(%edi)
801086c4:	75 a3                	jne    80108669 <trap+0xd9>
801086c6:	e8 55 d8 ff ff       	call   80105f20 <yield>
801086cb:	eb 9c                	jmp    80108669 <trap+0xd9>
801086cd:	8d 76 00             	lea    0x0(%esi),%esi
801086d0:	e8 2b cd ff ff       	call   80105400 <cpuid>
801086d5:	85 c0                	test   %eax,%eax
801086d7:	0f 84 c3 00 00 00    	je     801087a0 <trap+0x210>
801086dd:	e8 ae ac ff ff       	call   80103390 <lapiceoi>
801086e2:	e9 59 ff ff ff       	jmp    80108640 <trap+0xb0>
801086e7:	89 f6                	mov    %esi,%esi
801086e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
801086f0:	e8 5b ab ff ff       	call   80103250 <kbdintr>
801086f5:	e8 96 ac ff ff       	call   80103390 <lapiceoi>
801086fa:	e9 41 ff ff ff       	jmp    80108640 <trap+0xb0>
801086ff:	90                   	nop
80108700:	e8 8b 02 00 00       	call   80108990 <uartintr>
80108705:	e8 86 ac ff ff       	call   80103390 <lapiceoi>
8010870a:	e9 31 ff ff ff       	jmp    80108640 <trap+0xb0>
8010870f:	90                   	nop
80108710:	0f b7 5f 3c          	movzwl 0x3c(%edi),%ebx
80108714:	8b 77 38             	mov    0x38(%edi),%esi
80108717:	e8 e4 cc ff ff       	call   80105400 <cpuid>
8010871c:	56                   	push   %esi
8010871d:	53                   	push   %ebx
8010871e:	50                   	push   %eax
8010871f:	68 60 f6 10 80       	push   $0x8010f660
80108724:	e8 37 7f ff ff       	call   80100660 <cprintf>
80108729:	e8 62 ac ff ff       	call   80103390 <lapiceoi>
8010872e:	83 c4 10             	add    $0x10,%esp
80108731:	e9 0a ff ff ff       	jmp    80108640 <trap+0xb0>
80108736:	8d 76 00             	lea    0x0(%esi),%esi
80108739:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80108740:	e8 2b a3 ff ff       	call   80102a70 <ideintr>
80108745:	eb 96                	jmp    801086dd <trap+0x14d>
80108747:	89 f6                	mov    %esi,%esi
80108749:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80108750:	e8 1b cd ff ff       	call   80105470 <myproc>
80108755:	8b 58 44             	mov    0x44(%eax),%ebx
80108758:	85 db                	test   %ebx,%ebx
8010875a:	75 34                	jne    80108790 <trap+0x200>
8010875c:	e8 0f cd ff ff       	call   80105470 <myproc>
80108761:	89 78 38             	mov    %edi,0x38(%eax)
80108764:	e8 27 e5 ff ff       	call   80106c90 <syscall>
80108769:	e8 02 cd ff ff       	call   80105470 <myproc>
8010876e:	8b 48 44             	mov    0x44(%eax),%ecx
80108771:	85 c9                	test   %ecx,%ecx
80108773:	0f 84 16 ff ff ff    	je     8010868f <trap+0xff>
80108779:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)
80108780:	8d 65 f4             	lea    -0xc(%ebp),%esp
80108783:	5b                   	pop    %ebx
80108784:	5e                   	pop    %esi
80108785:	5f                   	pop    %edi
80108786:	5d                   	pop    %ebp
80108787:	e9 74 d5 ff ff       	jmp    80105d00 <exit>
8010878c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80108790:	83 ec 0c             	sub    $0xc,%esp
80108793:	6a 00                	push   $0x0
80108795:	e8 66 d5 ff ff       	call   80105d00 <exit>
8010879a:	83 c4 10             	add    $0x10,%esp
8010879d:	eb bd                	jmp    8010875c <trap+0x1cc>
8010879f:	90                   	nop
801087a0:	83 ec 0c             	sub    $0xc,%esp
801087a3:	68 00 9d 13 80       	push   $0x80139d00
801087a8:	e8 23 df ff ff       	call   801066d0 <acquire>
801087ad:	c7 04 24 40 a5 13 80 	movl   $0x8013a540,(%esp)
801087b4:	83 05 40 a5 13 80 01 	addl   $0x1,0x8013a540
801087bb:	e8 e0 d9 ff ff       	call   801061a0 <wakeup>
801087c0:	c7 04 24 00 9d 13 80 	movl   $0x80139d00,(%esp)
801087c7:	e8 24 e0 ff ff       	call   801067f0 <release>
801087cc:	83 c4 10             	add    $0x10,%esp
801087cf:	e9 09 ff ff ff       	jmp    801086dd <trap+0x14d>
801087d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
801087d8:	e8 a3 dc ff ff       	call   80106480 <proc_get_cgroup>
801087dd:	83 ec 0c             	sub    $0xc,%esp
801087e0:	50                   	push   %eax
801087e1:	e8 1a 60 00 00       	call   8010e800 <cgroup_mem_stat_pgfault_incr>
801087e6:	83 c4 10             	add    $0x10,%esp
801087e9:	e9 41 fe ff ff       	jmp    8010862f <trap+0x9f>
801087ee:	0f 20 d6             	mov    %cr2,%esi
801087f1:	8b 5f 38             	mov    0x38(%edi),%ebx
801087f4:	e8 07 cc ff ff       	call   80105400 <cpuid>
801087f9:	83 ec 0c             	sub    $0xc,%esp
801087fc:	56                   	push   %esi
801087fd:	53                   	push   %ebx
801087fe:	50                   	push   %eax
801087ff:	ff 77 30             	pushl  0x30(%edi)
80108802:	68 84 f6 10 80       	push   $0x8010f684
80108807:	e8 54 7e ff ff       	call   80100660 <cprintf>
8010880c:	83 c4 14             	add    $0x14,%esp
8010880f:	68 58 f6 10 80       	push   $0x8010f658
80108814:	e8 b7 7b ff ff       	call   801003d0 <panic>
80108819:	66 90                	xchg   %ax,%ax
8010881b:	66 90                	xchg   %ax,%ax
8010881d:	66 90                	xchg   %ax,%ax
8010881f:	90                   	nop

80108820 <uartgetc>:
80108820:	a1 bc d5 11 80       	mov    0x8011d5bc,%eax
80108825:	55                   	push   %ebp
80108826:	89 e5                	mov    %esp,%ebp
80108828:	85 c0                	test   %eax,%eax
8010882a:	74 1c                	je     80108848 <uartgetc+0x28>
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
8010882c:	ba fd 03 00 00       	mov    $0x3fd,%edx
80108831:	ec                   	in     (%dx),%al
80108832:	a8 01                	test   $0x1,%al
80108834:	74 12                	je     80108848 <uartgetc+0x28>
80108836:	ba f8 03 00 00       	mov    $0x3f8,%edx
8010883b:	ec                   	in     (%dx),%al
8010883c:	0f b6 c0             	movzbl %al,%eax
8010883f:	5d                   	pop    %ebp
80108840:	c3                   	ret    
80108841:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80108848:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010884d:	5d                   	pop    %ebp
8010884e:	c3                   	ret    
8010884f:	90                   	nop

80108850 <uartputc.part.0>:
80108850:	55                   	push   %ebp
80108851:	89 e5                	mov    %esp,%ebp
80108853:	57                   	push   %edi
80108854:	56                   	push   %esi
80108855:	53                   	push   %ebx
80108856:	89 c7                	mov    %eax,%edi
80108858:	bb 80 00 00 00       	mov    $0x80,%ebx
8010885d:	be fd 03 00 00       	mov    $0x3fd,%esi
80108862:	83 ec 0c             	sub    $0xc,%esp
80108865:	eb 1b                	jmp    80108882 <uartputc.part.0+0x32>
80108867:	89 f6                	mov    %esi,%esi
80108869:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80108870:	83 ec 0c             	sub    $0xc,%esp
80108873:	6a 0a                	push   $0xa
80108875:	e8 36 ab ff ff       	call   801033b0 <microdelay>
8010887a:	83 c4 10             	add    $0x10,%esp
8010887d:	83 eb 01             	sub    $0x1,%ebx
80108880:	74 07                	je     80108889 <uartputc.part.0+0x39>
80108882:	89 f2                	mov    %esi,%edx
80108884:	ec                   	in     (%dx),%al
80108885:	a8 20                	test   $0x20,%al
80108887:	74 e7                	je     80108870 <uartputc.part.0+0x20>
}

static inline void
outb(ushort port, uchar data)
{
  asm volatile("out %0,%1" : : "a" (data), "d" (port));
80108889:	ba f8 03 00 00       	mov    $0x3f8,%edx
8010888e:	89 f8                	mov    %edi,%eax
80108890:	ee                   	out    %al,(%dx)
80108891:	8d 65 f4             	lea    -0xc(%ebp),%esp
80108894:	5b                   	pop    %ebx
80108895:	5e                   	pop    %esi
80108896:	5f                   	pop    %edi
80108897:	5d                   	pop    %ebp
80108898:	c3                   	ret    
80108899:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

801088a0 <uartinit>:
801088a0:	55                   	push   %ebp
801088a1:	31 c9                	xor    %ecx,%ecx
801088a3:	89 c8                	mov    %ecx,%eax
801088a5:	89 e5                	mov    %esp,%ebp
801088a7:	57                   	push   %edi
801088a8:	56                   	push   %esi
801088a9:	53                   	push   %ebx
801088aa:	bb fa 03 00 00       	mov    $0x3fa,%ebx
801088af:	89 da                	mov    %ebx,%edx
801088b1:	83 ec 0c             	sub    $0xc,%esp
801088b4:	ee                   	out    %al,(%dx)
801088b5:	bf fb 03 00 00       	mov    $0x3fb,%edi
801088ba:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
801088bf:	89 fa                	mov    %edi,%edx
801088c1:	ee                   	out    %al,(%dx)
801088c2:	b8 0c 00 00 00       	mov    $0xc,%eax
801088c7:	ba f8 03 00 00       	mov    $0x3f8,%edx
801088cc:	ee                   	out    %al,(%dx)
801088cd:	be f9 03 00 00       	mov    $0x3f9,%esi
801088d2:	89 c8                	mov    %ecx,%eax
801088d4:	89 f2                	mov    %esi,%edx
801088d6:	ee                   	out    %al,(%dx)
801088d7:	b8 03 00 00 00       	mov    $0x3,%eax
801088dc:	89 fa                	mov    %edi,%edx
801088de:	ee                   	out    %al,(%dx)
801088df:	ba fc 03 00 00       	mov    $0x3fc,%edx
801088e4:	89 c8                	mov    %ecx,%eax
801088e6:	ee                   	out    %al,(%dx)
801088e7:	b8 01 00 00 00       	mov    $0x1,%eax
801088ec:	89 f2                	mov    %esi,%edx
801088ee:	ee                   	out    %al,(%dx)
static inline uchar
inb(ushort port)
{
  uchar data;

  asm volatile("in %1,%0" : "=a" (data) : "d" (port));
801088ef:	ba fd 03 00 00       	mov    $0x3fd,%edx
801088f4:	ec                   	in     (%dx),%al
801088f5:	3c ff                	cmp    $0xff,%al
801088f7:	74 5a                	je     80108953 <uartinit+0xb3>
801088f9:	c7 05 bc d5 11 80 01 	movl   $0x1,0x8011d5bc
80108900:	00 00 00 
80108903:	89 da                	mov    %ebx,%edx
80108905:	ec                   	in     (%dx),%al
80108906:	ba f8 03 00 00       	mov    $0x3f8,%edx
8010890b:	ec                   	in     (%dx),%al
8010890c:	83 ec 08             	sub    $0x8,%esp
8010890f:	bb 7c f7 10 80       	mov    $0x8010f77c,%ebx
80108914:	6a 00                	push   $0x0
80108916:	6a 04                	push   $0x4
80108918:	e8 a3 a3 ff ff       	call   80102cc0 <ioapicenable>
8010891d:	83 c4 10             	add    $0x10,%esp
80108920:	b8 78 00 00 00       	mov    $0x78,%eax
80108925:	eb 13                	jmp    8010893a <uartinit+0x9a>
80108927:	89 f6                	mov    %esi,%esi
80108929:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80108930:	83 c3 01             	add    $0x1,%ebx
80108933:	0f be 03             	movsbl (%ebx),%eax
80108936:	84 c0                	test   %al,%al
80108938:	74 19                	je     80108953 <uartinit+0xb3>
8010893a:	8b 15 bc d5 11 80    	mov    0x8011d5bc,%edx
80108940:	85 d2                	test   %edx,%edx
80108942:	74 ec                	je     80108930 <uartinit+0x90>
80108944:	83 c3 01             	add    $0x1,%ebx
80108947:	e8 04 ff ff ff       	call   80108850 <uartputc.part.0>
8010894c:	0f be 03             	movsbl (%ebx),%eax
8010894f:	84 c0                	test   %al,%al
80108951:	75 e7                	jne    8010893a <uartinit+0x9a>
80108953:	8d 65 f4             	lea    -0xc(%ebp),%esp
80108956:	5b                   	pop    %ebx
80108957:	5e                   	pop    %esi
80108958:	5f                   	pop    %edi
80108959:	5d                   	pop    %ebp
8010895a:	c3                   	ret    
8010895b:	90                   	nop
8010895c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80108960 <uartputc>:
80108960:	8b 15 bc d5 11 80    	mov    0x8011d5bc,%edx
80108966:	55                   	push   %ebp
80108967:	89 e5                	mov    %esp,%ebp
80108969:	85 d2                	test   %edx,%edx
8010896b:	8b 45 08             	mov    0x8(%ebp),%eax
8010896e:	74 10                	je     80108980 <uartputc+0x20>
80108970:	5d                   	pop    %ebp
80108971:	e9 da fe ff ff       	jmp    80108850 <uartputc.part.0>
80108976:	8d 76 00             	lea    0x0(%esi),%esi
80108979:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80108980:	5d                   	pop    %ebp
80108981:	c3                   	ret    
80108982:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80108989:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80108990 <uartintr>:
80108990:	55                   	push   %ebp
80108991:	89 e5                	mov    %esp,%ebp
80108993:	83 ec 14             	sub    $0x14,%esp
80108996:	68 20 88 10 80       	push   $0x80108820
8010899b:	e8 a0 7e ff ff       	call   80100840 <consoleintr>
801089a0:	83 c4 10             	add    $0x10,%esp
801089a3:	c9                   	leave  
801089a4:	c3                   	ret    

801089a5 <vector0>:
# generated by vectors.pl - do not edit
# handlers
.globl alltraps
.globl vector0
vector0:
  pushl $0
801089a5:	6a 00                	push   $0x0
  pushl $0
801089a7:	6a 00                	push   $0x0
  jmp alltraps
801089a9:	e9 eb fa ff ff       	jmp    80108499 <alltraps>

801089ae <vector1>:
.globl vector1
vector1:
  pushl $0
801089ae:	6a 00                	push   $0x0
  pushl $1
801089b0:	6a 01                	push   $0x1
  jmp alltraps
801089b2:	e9 e2 fa ff ff       	jmp    80108499 <alltraps>

801089b7 <vector2>:
.globl vector2
vector2:
  pushl $0
801089b7:	6a 00                	push   $0x0
  pushl $2
801089b9:	6a 02                	push   $0x2
  jmp alltraps
801089bb:	e9 d9 fa ff ff       	jmp    80108499 <alltraps>

801089c0 <vector3>:
.globl vector3
vector3:
  pushl $0
801089c0:	6a 00                	push   $0x0
  pushl $3
801089c2:	6a 03                	push   $0x3
  jmp alltraps
801089c4:	e9 d0 fa ff ff       	jmp    80108499 <alltraps>

801089c9 <vector4>:
.globl vector4
vector4:
  pushl $0
801089c9:	6a 00                	push   $0x0
  pushl $4
801089cb:	6a 04                	push   $0x4
  jmp alltraps
801089cd:	e9 c7 fa ff ff       	jmp    80108499 <alltraps>

801089d2 <vector5>:
.globl vector5
vector5:
  pushl $0
801089d2:	6a 00                	push   $0x0
  pushl $5
801089d4:	6a 05                	push   $0x5
  jmp alltraps
801089d6:	e9 be fa ff ff       	jmp    80108499 <alltraps>

801089db <vector6>:
.globl vector6
vector6:
  pushl $0
801089db:	6a 00                	push   $0x0
  pushl $6
801089dd:	6a 06                	push   $0x6
  jmp alltraps
801089df:	e9 b5 fa ff ff       	jmp    80108499 <alltraps>

801089e4 <vector7>:
.globl vector7
vector7:
  pushl $0
801089e4:	6a 00                	push   $0x0
  pushl $7
801089e6:	6a 07                	push   $0x7
  jmp alltraps
801089e8:	e9 ac fa ff ff       	jmp    80108499 <alltraps>

801089ed <vector8>:
.globl vector8
vector8:
  pushl $8
801089ed:	6a 08                	push   $0x8
  jmp alltraps
801089ef:	e9 a5 fa ff ff       	jmp    80108499 <alltraps>

801089f4 <vector9>:
.globl vector9
vector9:
  pushl $0
801089f4:	6a 00                	push   $0x0
  pushl $9
801089f6:	6a 09                	push   $0x9
  jmp alltraps
801089f8:	e9 9c fa ff ff       	jmp    80108499 <alltraps>

801089fd <vector10>:
.globl vector10
vector10:
  pushl $10
801089fd:	6a 0a                	push   $0xa
  jmp alltraps
801089ff:	e9 95 fa ff ff       	jmp    80108499 <alltraps>

80108a04 <vector11>:
.globl vector11
vector11:
  pushl $11
80108a04:	6a 0b                	push   $0xb
  jmp alltraps
80108a06:	e9 8e fa ff ff       	jmp    80108499 <alltraps>

80108a0b <vector12>:
.globl vector12
vector12:
  pushl $12
80108a0b:	6a 0c                	push   $0xc
  jmp alltraps
80108a0d:	e9 87 fa ff ff       	jmp    80108499 <alltraps>

80108a12 <vector13>:
.globl vector13
vector13:
  pushl $13
80108a12:	6a 0d                	push   $0xd
  jmp alltraps
80108a14:	e9 80 fa ff ff       	jmp    80108499 <alltraps>

80108a19 <vector14>:
.globl vector14
vector14:
  pushl $14
80108a19:	6a 0e                	push   $0xe
  jmp alltraps
80108a1b:	e9 79 fa ff ff       	jmp    80108499 <alltraps>

80108a20 <vector15>:
.globl vector15
vector15:
  pushl $0
80108a20:	6a 00                	push   $0x0
  pushl $15
80108a22:	6a 0f                	push   $0xf
  jmp alltraps
80108a24:	e9 70 fa ff ff       	jmp    80108499 <alltraps>

80108a29 <vector16>:
.globl vector16
vector16:
  pushl $0
80108a29:	6a 00                	push   $0x0
  pushl $16
80108a2b:	6a 10                	push   $0x10
  jmp alltraps
80108a2d:	e9 67 fa ff ff       	jmp    80108499 <alltraps>

80108a32 <vector17>:
.globl vector17
vector17:
  pushl $17
80108a32:	6a 11                	push   $0x11
  jmp alltraps
80108a34:	e9 60 fa ff ff       	jmp    80108499 <alltraps>

80108a39 <vector18>:
.globl vector18
vector18:
  pushl $0
80108a39:	6a 00                	push   $0x0
  pushl $18
80108a3b:	6a 12                	push   $0x12
  jmp alltraps
80108a3d:	e9 57 fa ff ff       	jmp    80108499 <alltraps>

80108a42 <vector19>:
.globl vector19
vector19:
  pushl $0
80108a42:	6a 00                	push   $0x0
  pushl $19
80108a44:	6a 13                	push   $0x13
  jmp alltraps
80108a46:	e9 4e fa ff ff       	jmp    80108499 <alltraps>

80108a4b <vector20>:
.globl vector20
vector20:
  pushl $0
80108a4b:	6a 00                	push   $0x0
  pushl $20
80108a4d:	6a 14                	push   $0x14
  jmp alltraps
80108a4f:	e9 45 fa ff ff       	jmp    80108499 <alltraps>

80108a54 <vector21>:
.globl vector21
vector21:
  pushl $0
80108a54:	6a 00                	push   $0x0
  pushl $21
80108a56:	6a 15                	push   $0x15
  jmp alltraps
80108a58:	e9 3c fa ff ff       	jmp    80108499 <alltraps>

80108a5d <vector22>:
.globl vector22
vector22:
  pushl $0
80108a5d:	6a 00                	push   $0x0
  pushl $22
80108a5f:	6a 16                	push   $0x16
  jmp alltraps
80108a61:	e9 33 fa ff ff       	jmp    80108499 <alltraps>

80108a66 <vector23>:
.globl vector23
vector23:
  pushl $0
80108a66:	6a 00                	push   $0x0
  pushl $23
80108a68:	6a 17                	push   $0x17
  jmp alltraps
80108a6a:	e9 2a fa ff ff       	jmp    80108499 <alltraps>

80108a6f <vector24>:
.globl vector24
vector24:
  pushl $0
80108a6f:	6a 00                	push   $0x0
  pushl $24
80108a71:	6a 18                	push   $0x18
  jmp alltraps
80108a73:	e9 21 fa ff ff       	jmp    80108499 <alltraps>

80108a78 <vector25>:
.globl vector25
vector25:
  pushl $0
80108a78:	6a 00                	push   $0x0
  pushl $25
80108a7a:	6a 19                	push   $0x19
  jmp alltraps
80108a7c:	e9 18 fa ff ff       	jmp    80108499 <alltraps>

80108a81 <vector26>:
.globl vector26
vector26:
  pushl $0
80108a81:	6a 00                	push   $0x0
  pushl $26
80108a83:	6a 1a                	push   $0x1a
  jmp alltraps
80108a85:	e9 0f fa ff ff       	jmp    80108499 <alltraps>

80108a8a <vector27>:
.globl vector27
vector27:
  pushl $0
80108a8a:	6a 00                	push   $0x0
  pushl $27
80108a8c:	6a 1b                	push   $0x1b
  jmp alltraps
80108a8e:	e9 06 fa ff ff       	jmp    80108499 <alltraps>

80108a93 <vector28>:
.globl vector28
vector28:
  pushl $0
80108a93:	6a 00                	push   $0x0
  pushl $28
80108a95:	6a 1c                	push   $0x1c
  jmp alltraps
80108a97:	e9 fd f9 ff ff       	jmp    80108499 <alltraps>

80108a9c <vector29>:
.globl vector29
vector29:
  pushl $0
80108a9c:	6a 00                	push   $0x0
  pushl $29
80108a9e:	6a 1d                	push   $0x1d
  jmp alltraps
80108aa0:	e9 f4 f9 ff ff       	jmp    80108499 <alltraps>

80108aa5 <vector30>:
.globl vector30
vector30:
  pushl $0
80108aa5:	6a 00                	push   $0x0
  pushl $30
80108aa7:	6a 1e                	push   $0x1e
  jmp alltraps
80108aa9:	e9 eb f9 ff ff       	jmp    80108499 <alltraps>

80108aae <vector31>:
.globl vector31
vector31:
  pushl $0
80108aae:	6a 00                	push   $0x0
  pushl $31
80108ab0:	6a 1f                	push   $0x1f
  jmp alltraps
80108ab2:	e9 e2 f9 ff ff       	jmp    80108499 <alltraps>

80108ab7 <vector32>:
.globl vector32
vector32:
  pushl $0
80108ab7:	6a 00                	push   $0x0
  pushl $32
80108ab9:	6a 20                	push   $0x20
  jmp alltraps
80108abb:	e9 d9 f9 ff ff       	jmp    80108499 <alltraps>

80108ac0 <vector33>:
.globl vector33
vector33:
  pushl $0
80108ac0:	6a 00                	push   $0x0
  pushl $33
80108ac2:	6a 21                	push   $0x21
  jmp alltraps
80108ac4:	e9 d0 f9 ff ff       	jmp    80108499 <alltraps>

80108ac9 <vector34>:
.globl vector34
vector34:
  pushl $0
80108ac9:	6a 00                	push   $0x0
  pushl $34
80108acb:	6a 22                	push   $0x22
  jmp alltraps
80108acd:	e9 c7 f9 ff ff       	jmp    80108499 <alltraps>

80108ad2 <vector35>:
.globl vector35
vector35:
  pushl $0
80108ad2:	6a 00                	push   $0x0
  pushl $35
80108ad4:	6a 23                	push   $0x23
  jmp alltraps
80108ad6:	e9 be f9 ff ff       	jmp    80108499 <alltraps>

80108adb <vector36>:
.globl vector36
vector36:
  pushl $0
80108adb:	6a 00                	push   $0x0
  pushl $36
80108add:	6a 24                	push   $0x24
  jmp alltraps
80108adf:	e9 b5 f9 ff ff       	jmp    80108499 <alltraps>

80108ae4 <vector37>:
.globl vector37
vector37:
  pushl $0
80108ae4:	6a 00                	push   $0x0
  pushl $37
80108ae6:	6a 25                	push   $0x25
  jmp alltraps
80108ae8:	e9 ac f9 ff ff       	jmp    80108499 <alltraps>

80108aed <vector38>:
.globl vector38
vector38:
  pushl $0
80108aed:	6a 00                	push   $0x0
  pushl $38
80108aef:	6a 26                	push   $0x26
  jmp alltraps
80108af1:	e9 a3 f9 ff ff       	jmp    80108499 <alltraps>

80108af6 <vector39>:
.globl vector39
vector39:
  pushl $0
80108af6:	6a 00                	push   $0x0
  pushl $39
80108af8:	6a 27                	push   $0x27
  jmp alltraps
80108afa:	e9 9a f9 ff ff       	jmp    80108499 <alltraps>

80108aff <vector40>:
.globl vector40
vector40:
  pushl $0
80108aff:	6a 00                	push   $0x0
  pushl $40
80108b01:	6a 28                	push   $0x28
  jmp alltraps
80108b03:	e9 91 f9 ff ff       	jmp    80108499 <alltraps>

80108b08 <vector41>:
.globl vector41
vector41:
  pushl $0
80108b08:	6a 00                	push   $0x0
  pushl $41
80108b0a:	6a 29                	push   $0x29
  jmp alltraps
80108b0c:	e9 88 f9 ff ff       	jmp    80108499 <alltraps>

80108b11 <vector42>:
.globl vector42
vector42:
  pushl $0
80108b11:	6a 00                	push   $0x0
  pushl $42
80108b13:	6a 2a                	push   $0x2a
  jmp alltraps
80108b15:	e9 7f f9 ff ff       	jmp    80108499 <alltraps>

80108b1a <vector43>:
.globl vector43
vector43:
  pushl $0
80108b1a:	6a 00                	push   $0x0
  pushl $43
80108b1c:	6a 2b                	push   $0x2b
  jmp alltraps
80108b1e:	e9 76 f9 ff ff       	jmp    80108499 <alltraps>

80108b23 <vector44>:
.globl vector44
vector44:
  pushl $0
80108b23:	6a 00                	push   $0x0
  pushl $44
80108b25:	6a 2c                	push   $0x2c
  jmp alltraps
80108b27:	e9 6d f9 ff ff       	jmp    80108499 <alltraps>

80108b2c <vector45>:
.globl vector45
vector45:
  pushl $0
80108b2c:	6a 00                	push   $0x0
  pushl $45
80108b2e:	6a 2d                	push   $0x2d
  jmp alltraps
80108b30:	e9 64 f9 ff ff       	jmp    80108499 <alltraps>

80108b35 <vector46>:
.globl vector46
vector46:
  pushl $0
80108b35:	6a 00                	push   $0x0
  pushl $46
80108b37:	6a 2e                	push   $0x2e
  jmp alltraps
80108b39:	e9 5b f9 ff ff       	jmp    80108499 <alltraps>

80108b3e <vector47>:
.globl vector47
vector47:
  pushl $0
80108b3e:	6a 00                	push   $0x0
  pushl $47
80108b40:	6a 2f                	push   $0x2f
  jmp alltraps
80108b42:	e9 52 f9 ff ff       	jmp    80108499 <alltraps>

80108b47 <vector48>:
.globl vector48
vector48:
  pushl $0
80108b47:	6a 00                	push   $0x0
  pushl $48
80108b49:	6a 30                	push   $0x30
  jmp alltraps
80108b4b:	e9 49 f9 ff ff       	jmp    80108499 <alltraps>

80108b50 <vector49>:
.globl vector49
vector49:
  pushl $0
80108b50:	6a 00                	push   $0x0
  pushl $49
80108b52:	6a 31                	push   $0x31
  jmp alltraps
80108b54:	e9 40 f9 ff ff       	jmp    80108499 <alltraps>

80108b59 <vector50>:
.globl vector50
vector50:
  pushl $0
80108b59:	6a 00                	push   $0x0
  pushl $50
80108b5b:	6a 32                	push   $0x32
  jmp alltraps
80108b5d:	e9 37 f9 ff ff       	jmp    80108499 <alltraps>

80108b62 <vector51>:
.globl vector51
vector51:
  pushl $0
80108b62:	6a 00                	push   $0x0
  pushl $51
80108b64:	6a 33                	push   $0x33
  jmp alltraps
80108b66:	e9 2e f9 ff ff       	jmp    80108499 <alltraps>

80108b6b <vector52>:
.globl vector52
vector52:
  pushl $0
80108b6b:	6a 00                	push   $0x0
  pushl $52
80108b6d:	6a 34                	push   $0x34
  jmp alltraps
80108b6f:	e9 25 f9 ff ff       	jmp    80108499 <alltraps>

80108b74 <vector53>:
.globl vector53
vector53:
  pushl $0
80108b74:	6a 00                	push   $0x0
  pushl $53
80108b76:	6a 35                	push   $0x35
  jmp alltraps
80108b78:	e9 1c f9 ff ff       	jmp    80108499 <alltraps>

80108b7d <vector54>:
.globl vector54
vector54:
  pushl $0
80108b7d:	6a 00                	push   $0x0
  pushl $54
80108b7f:	6a 36                	push   $0x36
  jmp alltraps
80108b81:	e9 13 f9 ff ff       	jmp    80108499 <alltraps>

80108b86 <vector55>:
.globl vector55
vector55:
  pushl $0
80108b86:	6a 00                	push   $0x0
  pushl $55
80108b88:	6a 37                	push   $0x37
  jmp alltraps
80108b8a:	e9 0a f9 ff ff       	jmp    80108499 <alltraps>

80108b8f <vector56>:
.globl vector56
vector56:
  pushl $0
80108b8f:	6a 00                	push   $0x0
  pushl $56
80108b91:	6a 38                	push   $0x38
  jmp alltraps
80108b93:	e9 01 f9 ff ff       	jmp    80108499 <alltraps>

80108b98 <vector57>:
.globl vector57
vector57:
  pushl $0
80108b98:	6a 00                	push   $0x0
  pushl $57
80108b9a:	6a 39                	push   $0x39
  jmp alltraps
80108b9c:	e9 f8 f8 ff ff       	jmp    80108499 <alltraps>

80108ba1 <vector58>:
.globl vector58
vector58:
  pushl $0
80108ba1:	6a 00                	push   $0x0
  pushl $58
80108ba3:	6a 3a                	push   $0x3a
  jmp alltraps
80108ba5:	e9 ef f8 ff ff       	jmp    80108499 <alltraps>

80108baa <vector59>:
.globl vector59
vector59:
  pushl $0
80108baa:	6a 00                	push   $0x0
  pushl $59
80108bac:	6a 3b                	push   $0x3b
  jmp alltraps
80108bae:	e9 e6 f8 ff ff       	jmp    80108499 <alltraps>

80108bb3 <vector60>:
.globl vector60
vector60:
  pushl $0
80108bb3:	6a 00                	push   $0x0
  pushl $60
80108bb5:	6a 3c                	push   $0x3c
  jmp alltraps
80108bb7:	e9 dd f8 ff ff       	jmp    80108499 <alltraps>

80108bbc <vector61>:
.globl vector61
vector61:
  pushl $0
80108bbc:	6a 00                	push   $0x0
  pushl $61
80108bbe:	6a 3d                	push   $0x3d
  jmp alltraps
80108bc0:	e9 d4 f8 ff ff       	jmp    80108499 <alltraps>

80108bc5 <vector62>:
.globl vector62
vector62:
  pushl $0
80108bc5:	6a 00                	push   $0x0
  pushl $62
80108bc7:	6a 3e                	push   $0x3e
  jmp alltraps
80108bc9:	e9 cb f8 ff ff       	jmp    80108499 <alltraps>

80108bce <vector63>:
.globl vector63
vector63:
  pushl $0
80108bce:	6a 00                	push   $0x0
  pushl $63
80108bd0:	6a 3f                	push   $0x3f
  jmp alltraps
80108bd2:	e9 c2 f8 ff ff       	jmp    80108499 <alltraps>

80108bd7 <vector64>:
.globl vector64
vector64:
  pushl $0
80108bd7:	6a 00                	push   $0x0
  pushl $64
80108bd9:	6a 40                	push   $0x40
  jmp alltraps
80108bdb:	e9 b9 f8 ff ff       	jmp    80108499 <alltraps>

80108be0 <vector65>:
.globl vector65
vector65:
  pushl $0
80108be0:	6a 00                	push   $0x0
  pushl $65
80108be2:	6a 41                	push   $0x41
  jmp alltraps
80108be4:	e9 b0 f8 ff ff       	jmp    80108499 <alltraps>

80108be9 <vector66>:
.globl vector66
vector66:
  pushl $0
80108be9:	6a 00                	push   $0x0
  pushl $66
80108beb:	6a 42                	push   $0x42
  jmp alltraps
80108bed:	e9 a7 f8 ff ff       	jmp    80108499 <alltraps>

80108bf2 <vector67>:
.globl vector67
vector67:
  pushl $0
80108bf2:	6a 00                	push   $0x0
  pushl $67
80108bf4:	6a 43                	push   $0x43
  jmp alltraps
80108bf6:	e9 9e f8 ff ff       	jmp    80108499 <alltraps>

80108bfb <vector68>:
.globl vector68
vector68:
  pushl $0
80108bfb:	6a 00                	push   $0x0
  pushl $68
80108bfd:	6a 44                	push   $0x44
  jmp alltraps
80108bff:	e9 95 f8 ff ff       	jmp    80108499 <alltraps>

80108c04 <vector69>:
.globl vector69
vector69:
  pushl $0
80108c04:	6a 00                	push   $0x0
  pushl $69
80108c06:	6a 45                	push   $0x45
  jmp alltraps
80108c08:	e9 8c f8 ff ff       	jmp    80108499 <alltraps>

80108c0d <vector70>:
.globl vector70
vector70:
  pushl $0
80108c0d:	6a 00                	push   $0x0
  pushl $70
80108c0f:	6a 46                	push   $0x46
  jmp alltraps
80108c11:	e9 83 f8 ff ff       	jmp    80108499 <alltraps>

80108c16 <vector71>:
.globl vector71
vector71:
  pushl $0
80108c16:	6a 00                	push   $0x0
  pushl $71
80108c18:	6a 47                	push   $0x47
  jmp alltraps
80108c1a:	e9 7a f8 ff ff       	jmp    80108499 <alltraps>

80108c1f <vector72>:
.globl vector72
vector72:
  pushl $0
80108c1f:	6a 00                	push   $0x0
  pushl $72
80108c21:	6a 48                	push   $0x48
  jmp alltraps
80108c23:	e9 71 f8 ff ff       	jmp    80108499 <alltraps>

80108c28 <vector73>:
.globl vector73
vector73:
  pushl $0
80108c28:	6a 00                	push   $0x0
  pushl $73
80108c2a:	6a 49                	push   $0x49
  jmp alltraps
80108c2c:	e9 68 f8 ff ff       	jmp    80108499 <alltraps>

80108c31 <vector74>:
.globl vector74
vector74:
  pushl $0
80108c31:	6a 00                	push   $0x0
  pushl $74
80108c33:	6a 4a                	push   $0x4a
  jmp alltraps
80108c35:	e9 5f f8 ff ff       	jmp    80108499 <alltraps>

80108c3a <vector75>:
.globl vector75
vector75:
  pushl $0
80108c3a:	6a 00                	push   $0x0
  pushl $75
80108c3c:	6a 4b                	push   $0x4b
  jmp alltraps
80108c3e:	e9 56 f8 ff ff       	jmp    80108499 <alltraps>

80108c43 <vector76>:
.globl vector76
vector76:
  pushl $0
80108c43:	6a 00                	push   $0x0
  pushl $76
80108c45:	6a 4c                	push   $0x4c
  jmp alltraps
80108c47:	e9 4d f8 ff ff       	jmp    80108499 <alltraps>

80108c4c <vector77>:
.globl vector77
vector77:
  pushl $0
80108c4c:	6a 00                	push   $0x0
  pushl $77
80108c4e:	6a 4d                	push   $0x4d
  jmp alltraps
80108c50:	e9 44 f8 ff ff       	jmp    80108499 <alltraps>

80108c55 <vector78>:
.globl vector78
vector78:
  pushl $0
80108c55:	6a 00                	push   $0x0
  pushl $78
80108c57:	6a 4e                	push   $0x4e
  jmp alltraps
80108c59:	e9 3b f8 ff ff       	jmp    80108499 <alltraps>

80108c5e <vector79>:
.globl vector79
vector79:
  pushl $0
80108c5e:	6a 00                	push   $0x0
  pushl $79
80108c60:	6a 4f                	push   $0x4f
  jmp alltraps
80108c62:	e9 32 f8 ff ff       	jmp    80108499 <alltraps>

80108c67 <vector80>:
.globl vector80
vector80:
  pushl $0
80108c67:	6a 00                	push   $0x0
  pushl $80
80108c69:	6a 50                	push   $0x50
  jmp alltraps
80108c6b:	e9 29 f8 ff ff       	jmp    80108499 <alltraps>

80108c70 <vector81>:
.globl vector81
vector81:
  pushl $0
80108c70:	6a 00                	push   $0x0
  pushl $81
80108c72:	6a 51                	push   $0x51
  jmp alltraps
80108c74:	e9 20 f8 ff ff       	jmp    80108499 <alltraps>

80108c79 <vector82>:
.globl vector82
vector82:
  pushl $0
80108c79:	6a 00                	push   $0x0
  pushl $82
80108c7b:	6a 52                	push   $0x52
  jmp alltraps
80108c7d:	e9 17 f8 ff ff       	jmp    80108499 <alltraps>

80108c82 <vector83>:
.globl vector83
vector83:
  pushl $0
80108c82:	6a 00                	push   $0x0
  pushl $83
80108c84:	6a 53                	push   $0x53
  jmp alltraps
80108c86:	e9 0e f8 ff ff       	jmp    80108499 <alltraps>

80108c8b <vector84>:
.globl vector84
vector84:
  pushl $0
80108c8b:	6a 00                	push   $0x0
  pushl $84
80108c8d:	6a 54                	push   $0x54
  jmp alltraps
80108c8f:	e9 05 f8 ff ff       	jmp    80108499 <alltraps>

80108c94 <vector85>:
.globl vector85
vector85:
  pushl $0
80108c94:	6a 00                	push   $0x0
  pushl $85
80108c96:	6a 55                	push   $0x55
  jmp alltraps
80108c98:	e9 fc f7 ff ff       	jmp    80108499 <alltraps>

80108c9d <vector86>:
.globl vector86
vector86:
  pushl $0
80108c9d:	6a 00                	push   $0x0
  pushl $86
80108c9f:	6a 56                	push   $0x56
  jmp alltraps
80108ca1:	e9 f3 f7 ff ff       	jmp    80108499 <alltraps>

80108ca6 <vector87>:
.globl vector87
vector87:
  pushl $0
80108ca6:	6a 00                	push   $0x0
  pushl $87
80108ca8:	6a 57                	push   $0x57
  jmp alltraps
80108caa:	e9 ea f7 ff ff       	jmp    80108499 <alltraps>

80108caf <vector88>:
.globl vector88
vector88:
  pushl $0
80108caf:	6a 00                	push   $0x0
  pushl $88
80108cb1:	6a 58                	push   $0x58
  jmp alltraps
80108cb3:	e9 e1 f7 ff ff       	jmp    80108499 <alltraps>

80108cb8 <vector89>:
.globl vector89
vector89:
  pushl $0
80108cb8:	6a 00                	push   $0x0
  pushl $89
80108cba:	6a 59                	push   $0x59
  jmp alltraps
80108cbc:	e9 d8 f7 ff ff       	jmp    80108499 <alltraps>

80108cc1 <vector90>:
.globl vector90
vector90:
  pushl $0
80108cc1:	6a 00                	push   $0x0
  pushl $90
80108cc3:	6a 5a                	push   $0x5a
  jmp alltraps
80108cc5:	e9 cf f7 ff ff       	jmp    80108499 <alltraps>

80108cca <vector91>:
.globl vector91
vector91:
  pushl $0
80108cca:	6a 00                	push   $0x0
  pushl $91
80108ccc:	6a 5b                	push   $0x5b
  jmp alltraps
80108cce:	e9 c6 f7 ff ff       	jmp    80108499 <alltraps>

80108cd3 <vector92>:
.globl vector92
vector92:
  pushl $0
80108cd3:	6a 00                	push   $0x0
  pushl $92
80108cd5:	6a 5c                	push   $0x5c
  jmp alltraps
80108cd7:	e9 bd f7 ff ff       	jmp    80108499 <alltraps>

80108cdc <vector93>:
.globl vector93
vector93:
  pushl $0
80108cdc:	6a 00                	push   $0x0
  pushl $93
80108cde:	6a 5d                	push   $0x5d
  jmp alltraps
80108ce0:	e9 b4 f7 ff ff       	jmp    80108499 <alltraps>

80108ce5 <vector94>:
.globl vector94
vector94:
  pushl $0
80108ce5:	6a 00                	push   $0x0
  pushl $94
80108ce7:	6a 5e                	push   $0x5e
  jmp alltraps
80108ce9:	e9 ab f7 ff ff       	jmp    80108499 <alltraps>

80108cee <vector95>:
.globl vector95
vector95:
  pushl $0
80108cee:	6a 00                	push   $0x0
  pushl $95
80108cf0:	6a 5f                	push   $0x5f
  jmp alltraps
80108cf2:	e9 a2 f7 ff ff       	jmp    80108499 <alltraps>

80108cf7 <vector96>:
.globl vector96
vector96:
  pushl $0
80108cf7:	6a 00                	push   $0x0
  pushl $96
80108cf9:	6a 60                	push   $0x60
  jmp alltraps
80108cfb:	e9 99 f7 ff ff       	jmp    80108499 <alltraps>

80108d00 <vector97>:
.globl vector97
vector97:
  pushl $0
80108d00:	6a 00                	push   $0x0
  pushl $97
80108d02:	6a 61                	push   $0x61
  jmp alltraps
80108d04:	e9 90 f7 ff ff       	jmp    80108499 <alltraps>

80108d09 <vector98>:
.globl vector98
vector98:
  pushl $0
80108d09:	6a 00                	push   $0x0
  pushl $98
80108d0b:	6a 62                	push   $0x62
  jmp alltraps
80108d0d:	e9 87 f7 ff ff       	jmp    80108499 <alltraps>

80108d12 <vector99>:
.globl vector99
vector99:
  pushl $0
80108d12:	6a 00                	push   $0x0
  pushl $99
80108d14:	6a 63                	push   $0x63
  jmp alltraps
80108d16:	e9 7e f7 ff ff       	jmp    80108499 <alltraps>

80108d1b <vector100>:
.globl vector100
vector100:
  pushl $0
80108d1b:	6a 00                	push   $0x0
  pushl $100
80108d1d:	6a 64                	push   $0x64
  jmp alltraps
80108d1f:	e9 75 f7 ff ff       	jmp    80108499 <alltraps>

80108d24 <vector101>:
.globl vector101
vector101:
  pushl $0
80108d24:	6a 00                	push   $0x0
  pushl $101
80108d26:	6a 65                	push   $0x65
  jmp alltraps
80108d28:	e9 6c f7 ff ff       	jmp    80108499 <alltraps>

80108d2d <vector102>:
.globl vector102
vector102:
  pushl $0
80108d2d:	6a 00                	push   $0x0
  pushl $102
80108d2f:	6a 66                	push   $0x66
  jmp alltraps
80108d31:	e9 63 f7 ff ff       	jmp    80108499 <alltraps>

80108d36 <vector103>:
.globl vector103
vector103:
  pushl $0
80108d36:	6a 00                	push   $0x0
  pushl $103
80108d38:	6a 67                	push   $0x67
  jmp alltraps
80108d3a:	e9 5a f7 ff ff       	jmp    80108499 <alltraps>

80108d3f <vector104>:
.globl vector104
vector104:
  pushl $0
80108d3f:	6a 00                	push   $0x0
  pushl $104
80108d41:	6a 68                	push   $0x68
  jmp alltraps
80108d43:	e9 51 f7 ff ff       	jmp    80108499 <alltraps>

80108d48 <vector105>:
.globl vector105
vector105:
  pushl $0
80108d48:	6a 00                	push   $0x0
  pushl $105
80108d4a:	6a 69                	push   $0x69
  jmp alltraps
80108d4c:	e9 48 f7 ff ff       	jmp    80108499 <alltraps>

80108d51 <vector106>:
.globl vector106
vector106:
  pushl $0
80108d51:	6a 00                	push   $0x0
  pushl $106
80108d53:	6a 6a                	push   $0x6a
  jmp alltraps
80108d55:	e9 3f f7 ff ff       	jmp    80108499 <alltraps>

80108d5a <vector107>:
.globl vector107
vector107:
  pushl $0
80108d5a:	6a 00                	push   $0x0
  pushl $107
80108d5c:	6a 6b                	push   $0x6b
  jmp alltraps
80108d5e:	e9 36 f7 ff ff       	jmp    80108499 <alltraps>

80108d63 <vector108>:
.globl vector108
vector108:
  pushl $0
80108d63:	6a 00                	push   $0x0
  pushl $108
80108d65:	6a 6c                	push   $0x6c
  jmp alltraps
80108d67:	e9 2d f7 ff ff       	jmp    80108499 <alltraps>

80108d6c <vector109>:
.globl vector109
vector109:
  pushl $0
80108d6c:	6a 00                	push   $0x0
  pushl $109
80108d6e:	6a 6d                	push   $0x6d
  jmp alltraps
80108d70:	e9 24 f7 ff ff       	jmp    80108499 <alltraps>

80108d75 <vector110>:
.globl vector110
vector110:
  pushl $0
80108d75:	6a 00                	push   $0x0
  pushl $110
80108d77:	6a 6e                	push   $0x6e
  jmp alltraps
80108d79:	e9 1b f7 ff ff       	jmp    80108499 <alltraps>

80108d7e <vector111>:
.globl vector111
vector111:
  pushl $0
80108d7e:	6a 00                	push   $0x0
  pushl $111
80108d80:	6a 6f                	push   $0x6f
  jmp alltraps
80108d82:	e9 12 f7 ff ff       	jmp    80108499 <alltraps>

80108d87 <vector112>:
.globl vector112
vector112:
  pushl $0
80108d87:	6a 00                	push   $0x0
  pushl $112
80108d89:	6a 70                	push   $0x70
  jmp alltraps
80108d8b:	e9 09 f7 ff ff       	jmp    80108499 <alltraps>

80108d90 <vector113>:
.globl vector113
vector113:
  pushl $0
80108d90:	6a 00                	push   $0x0
  pushl $113
80108d92:	6a 71                	push   $0x71
  jmp alltraps
80108d94:	e9 00 f7 ff ff       	jmp    80108499 <alltraps>

80108d99 <vector114>:
.globl vector114
vector114:
  pushl $0
80108d99:	6a 00                	push   $0x0
  pushl $114
80108d9b:	6a 72                	push   $0x72
  jmp alltraps
80108d9d:	e9 f7 f6 ff ff       	jmp    80108499 <alltraps>

80108da2 <vector115>:
.globl vector115
vector115:
  pushl $0
80108da2:	6a 00                	push   $0x0
  pushl $115
80108da4:	6a 73                	push   $0x73
  jmp alltraps
80108da6:	e9 ee f6 ff ff       	jmp    80108499 <alltraps>

80108dab <vector116>:
.globl vector116
vector116:
  pushl $0
80108dab:	6a 00                	push   $0x0
  pushl $116
80108dad:	6a 74                	push   $0x74
  jmp alltraps
80108daf:	e9 e5 f6 ff ff       	jmp    80108499 <alltraps>

80108db4 <vector117>:
.globl vector117
vector117:
  pushl $0
80108db4:	6a 00                	push   $0x0
  pushl $117
80108db6:	6a 75                	push   $0x75
  jmp alltraps
80108db8:	e9 dc f6 ff ff       	jmp    80108499 <alltraps>

80108dbd <vector118>:
.globl vector118
vector118:
  pushl $0
80108dbd:	6a 00                	push   $0x0
  pushl $118
80108dbf:	6a 76                	push   $0x76
  jmp alltraps
80108dc1:	e9 d3 f6 ff ff       	jmp    80108499 <alltraps>

80108dc6 <vector119>:
.globl vector119
vector119:
  pushl $0
80108dc6:	6a 00                	push   $0x0
  pushl $119
80108dc8:	6a 77                	push   $0x77
  jmp alltraps
80108dca:	e9 ca f6 ff ff       	jmp    80108499 <alltraps>

80108dcf <vector120>:
.globl vector120
vector120:
  pushl $0
80108dcf:	6a 00                	push   $0x0
  pushl $120
80108dd1:	6a 78                	push   $0x78
  jmp alltraps
80108dd3:	e9 c1 f6 ff ff       	jmp    80108499 <alltraps>

80108dd8 <vector121>:
.globl vector121
vector121:
  pushl $0
80108dd8:	6a 00                	push   $0x0
  pushl $121
80108dda:	6a 79                	push   $0x79
  jmp alltraps
80108ddc:	e9 b8 f6 ff ff       	jmp    80108499 <alltraps>

80108de1 <vector122>:
.globl vector122
vector122:
  pushl $0
80108de1:	6a 00                	push   $0x0
  pushl $122
80108de3:	6a 7a                	push   $0x7a
  jmp alltraps
80108de5:	e9 af f6 ff ff       	jmp    80108499 <alltraps>

80108dea <vector123>:
.globl vector123
vector123:
  pushl $0
80108dea:	6a 00                	push   $0x0
  pushl $123
80108dec:	6a 7b                	push   $0x7b
  jmp alltraps
80108dee:	e9 a6 f6 ff ff       	jmp    80108499 <alltraps>

80108df3 <vector124>:
.globl vector124
vector124:
  pushl $0
80108df3:	6a 00                	push   $0x0
  pushl $124
80108df5:	6a 7c                	push   $0x7c
  jmp alltraps
80108df7:	e9 9d f6 ff ff       	jmp    80108499 <alltraps>

80108dfc <vector125>:
.globl vector125
vector125:
  pushl $0
80108dfc:	6a 00                	push   $0x0
  pushl $125
80108dfe:	6a 7d                	push   $0x7d
  jmp alltraps
80108e00:	e9 94 f6 ff ff       	jmp    80108499 <alltraps>

80108e05 <vector126>:
.globl vector126
vector126:
  pushl $0
80108e05:	6a 00                	push   $0x0
  pushl $126
80108e07:	6a 7e                	push   $0x7e
  jmp alltraps
80108e09:	e9 8b f6 ff ff       	jmp    80108499 <alltraps>

80108e0e <vector127>:
.globl vector127
vector127:
  pushl $0
80108e0e:	6a 00                	push   $0x0
  pushl $127
80108e10:	6a 7f                	push   $0x7f
  jmp alltraps
80108e12:	e9 82 f6 ff ff       	jmp    80108499 <alltraps>

80108e17 <vector128>:
.globl vector128
vector128:
  pushl $0
80108e17:	6a 00                	push   $0x0
  pushl $128
80108e19:	68 80 00 00 00       	push   $0x80
  jmp alltraps
80108e1e:	e9 76 f6 ff ff       	jmp    80108499 <alltraps>

80108e23 <vector129>:
.globl vector129
vector129:
  pushl $0
80108e23:	6a 00                	push   $0x0
  pushl $129
80108e25:	68 81 00 00 00       	push   $0x81
  jmp alltraps
80108e2a:	e9 6a f6 ff ff       	jmp    80108499 <alltraps>

80108e2f <vector130>:
.globl vector130
vector130:
  pushl $0
80108e2f:	6a 00                	push   $0x0
  pushl $130
80108e31:	68 82 00 00 00       	push   $0x82
  jmp alltraps
80108e36:	e9 5e f6 ff ff       	jmp    80108499 <alltraps>

80108e3b <vector131>:
.globl vector131
vector131:
  pushl $0
80108e3b:	6a 00                	push   $0x0
  pushl $131
80108e3d:	68 83 00 00 00       	push   $0x83
  jmp alltraps
80108e42:	e9 52 f6 ff ff       	jmp    80108499 <alltraps>

80108e47 <vector132>:
.globl vector132
vector132:
  pushl $0
80108e47:	6a 00                	push   $0x0
  pushl $132
80108e49:	68 84 00 00 00       	push   $0x84
  jmp alltraps
80108e4e:	e9 46 f6 ff ff       	jmp    80108499 <alltraps>

80108e53 <vector133>:
.globl vector133
vector133:
  pushl $0
80108e53:	6a 00                	push   $0x0
  pushl $133
80108e55:	68 85 00 00 00       	push   $0x85
  jmp alltraps
80108e5a:	e9 3a f6 ff ff       	jmp    80108499 <alltraps>

80108e5f <vector134>:
.globl vector134
vector134:
  pushl $0
80108e5f:	6a 00                	push   $0x0
  pushl $134
80108e61:	68 86 00 00 00       	push   $0x86
  jmp alltraps
80108e66:	e9 2e f6 ff ff       	jmp    80108499 <alltraps>

80108e6b <vector135>:
.globl vector135
vector135:
  pushl $0
80108e6b:	6a 00                	push   $0x0
  pushl $135
80108e6d:	68 87 00 00 00       	push   $0x87
  jmp alltraps
80108e72:	e9 22 f6 ff ff       	jmp    80108499 <alltraps>

80108e77 <vector136>:
.globl vector136
vector136:
  pushl $0
80108e77:	6a 00                	push   $0x0
  pushl $136
80108e79:	68 88 00 00 00       	push   $0x88
  jmp alltraps
80108e7e:	e9 16 f6 ff ff       	jmp    80108499 <alltraps>

80108e83 <vector137>:
.globl vector137
vector137:
  pushl $0
80108e83:	6a 00                	push   $0x0
  pushl $137
80108e85:	68 89 00 00 00       	push   $0x89
  jmp alltraps
80108e8a:	e9 0a f6 ff ff       	jmp    80108499 <alltraps>

80108e8f <vector138>:
.globl vector138
vector138:
  pushl $0
80108e8f:	6a 00                	push   $0x0
  pushl $138
80108e91:	68 8a 00 00 00       	push   $0x8a
  jmp alltraps
80108e96:	e9 fe f5 ff ff       	jmp    80108499 <alltraps>

80108e9b <vector139>:
.globl vector139
vector139:
  pushl $0
80108e9b:	6a 00                	push   $0x0
  pushl $139
80108e9d:	68 8b 00 00 00       	push   $0x8b
  jmp alltraps
80108ea2:	e9 f2 f5 ff ff       	jmp    80108499 <alltraps>

80108ea7 <vector140>:
.globl vector140
vector140:
  pushl $0
80108ea7:	6a 00                	push   $0x0
  pushl $140
80108ea9:	68 8c 00 00 00       	push   $0x8c
  jmp alltraps
80108eae:	e9 e6 f5 ff ff       	jmp    80108499 <alltraps>

80108eb3 <vector141>:
.globl vector141
vector141:
  pushl $0
80108eb3:	6a 00                	push   $0x0
  pushl $141
80108eb5:	68 8d 00 00 00       	push   $0x8d
  jmp alltraps
80108eba:	e9 da f5 ff ff       	jmp    80108499 <alltraps>

80108ebf <vector142>:
.globl vector142
vector142:
  pushl $0
80108ebf:	6a 00                	push   $0x0
  pushl $142
80108ec1:	68 8e 00 00 00       	push   $0x8e
  jmp alltraps
80108ec6:	e9 ce f5 ff ff       	jmp    80108499 <alltraps>

80108ecb <vector143>:
.globl vector143
vector143:
  pushl $0
80108ecb:	6a 00                	push   $0x0
  pushl $143
80108ecd:	68 8f 00 00 00       	push   $0x8f
  jmp alltraps
80108ed2:	e9 c2 f5 ff ff       	jmp    80108499 <alltraps>

80108ed7 <vector144>:
.globl vector144
vector144:
  pushl $0
80108ed7:	6a 00                	push   $0x0
  pushl $144
80108ed9:	68 90 00 00 00       	push   $0x90
  jmp alltraps
80108ede:	e9 b6 f5 ff ff       	jmp    80108499 <alltraps>

80108ee3 <vector145>:
.globl vector145
vector145:
  pushl $0
80108ee3:	6a 00                	push   $0x0
  pushl $145
80108ee5:	68 91 00 00 00       	push   $0x91
  jmp alltraps
80108eea:	e9 aa f5 ff ff       	jmp    80108499 <alltraps>

80108eef <vector146>:
.globl vector146
vector146:
  pushl $0
80108eef:	6a 00                	push   $0x0
  pushl $146
80108ef1:	68 92 00 00 00       	push   $0x92
  jmp alltraps
80108ef6:	e9 9e f5 ff ff       	jmp    80108499 <alltraps>

80108efb <vector147>:
.globl vector147
vector147:
  pushl $0
80108efb:	6a 00                	push   $0x0
  pushl $147
80108efd:	68 93 00 00 00       	push   $0x93
  jmp alltraps
80108f02:	e9 92 f5 ff ff       	jmp    80108499 <alltraps>

80108f07 <vector148>:
.globl vector148
vector148:
  pushl $0
80108f07:	6a 00                	push   $0x0
  pushl $148
80108f09:	68 94 00 00 00       	push   $0x94
  jmp alltraps
80108f0e:	e9 86 f5 ff ff       	jmp    80108499 <alltraps>

80108f13 <vector149>:
.globl vector149
vector149:
  pushl $0
80108f13:	6a 00                	push   $0x0
  pushl $149
80108f15:	68 95 00 00 00       	push   $0x95
  jmp alltraps
80108f1a:	e9 7a f5 ff ff       	jmp    80108499 <alltraps>

80108f1f <vector150>:
.globl vector150
vector150:
  pushl $0
80108f1f:	6a 00                	push   $0x0
  pushl $150
80108f21:	68 96 00 00 00       	push   $0x96
  jmp alltraps
80108f26:	e9 6e f5 ff ff       	jmp    80108499 <alltraps>

80108f2b <vector151>:
.globl vector151
vector151:
  pushl $0
80108f2b:	6a 00                	push   $0x0
  pushl $151
80108f2d:	68 97 00 00 00       	push   $0x97
  jmp alltraps
80108f32:	e9 62 f5 ff ff       	jmp    80108499 <alltraps>

80108f37 <vector152>:
.globl vector152
vector152:
  pushl $0
80108f37:	6a 00                	push   $0x0
  pushl $152
80108f39:	68 98 00 00 00       	push   $0x98
  jmp alltraps
80108f3e:	e9 56 f5 ff ff       	jmp    80108499 <alltraps>

80108f43 <vector153>:
.globl vector153
vector153:
  pushl $0
80108f43:	6a 00                	push   $0x0
  pushl $153
80108f45:	68 99 00 00 00       	push   $0x99
  jmp alltraps
80108f4a:	e9 4a f5 ff ff       	jmp    80108499 <alltraps>

80108f4f <vector154>:
.globl vector154
vector154:
  pushl $0
80108f4f:	6a 00                	push   $0x0
  pushl $154
80108f51:	68 9a 00 00 00       	push   $0x9a
  jmp alltraps
80108f56:	e9 3e f5 ff ff       	jmp    80108499 <alltraps>

80108f5b <vector155>:
.globl vector155
vector155:
  pushl $0
80108f5b:	6a 00                	push   $0x0
  pushl $155
80108f5d:	68 9b 00 00 00       	push   $0x9b
  jmp alltraps
80108f62:	e9 32 f5 ff ff       	jmp    80108499 <alltraps>

80108f67 <vector156>:
.globl vector156
vector156:
  pushl $0
80108f67:	6a 00                	push   $0x0
  pushl $156
80108f69:	68 9c 00 00 00       	push   $0x9c
  jmp alltraps
80108f6e:	e9 26 f5 ff ff       	jmp    80108499 <alltraps>

80108f73 <vector157>:
.globl vector157
vector157:
  pushl $0
80108f73:	6a 00                	push   $0x0
  pushl $157
80108f75:	68 9d 00 00 00       	push   $0x9d
  jmp alltraps
80108f7a:	e9 1a f5 ff ff       	jmp    80108499 <alltraps>

80108f7f <vector158>:
.globl vector158
vector158:
  pushl $0
80108f7f:	6a 00                	push   $0x0
  pushl $158
80108f81:	68 9e 00 00 00       	push   $0x9e
  jmp alltraps
80108f86:	e9 0e f5 ff ff       	jmp    80108499 <alltraps>

80108f8b <vector159>:
.globl vector159
vector159:
  pushl $0
80108f8b:	6a 00                	push   $0x0
  pushl $159
80108f8d:	68 9f 00 00 00       	push   $0x9f
  jmp alltraps
80108f92:	e9 02 f5 ff ff       	jmp    80108499 <alltraps>

80108f97 <vector160>:
.globl vector160
vector160:
  pushl $0
80108f97:	6a 00                	push   $0x0
  pushl $160
80108f99:	68 a0 00 00 00       	push   $0xa0
  jmp alltraps
80108f9e:	e9 f6 f4 ff ff       	jmp    80108499 <alltraps>

80108fa3 <vector161>:
.globl vector161
vector161:
  pushl $0
80108fa3:	6a 00                	push   $0x0
  pushl $161
80108fa5:	68 a1 00 00 00       	push   $0xa1
  jmp alltraps
80108faa:	e9 ea f4 ff ff       	jmp    80108499 <alltraps>

80108faf <vector162>:
.globl vector162
vector162:
  pushl $0
80108faf:	6a 00                	push   $0x0
  pushl $162
80108fb1:	68 a2 00 00 00       	push   $0xa2
  jmp alltraps
80108fb6:	e9 de f4 ff ff       	jmp    80108499 <alltraps>

80108fbb <vector163>:
.globl vector163
vector163:
  pushl $0
80108fbb:	6a 00                	push   $0x0
  pushl $163
80108fbd:	68 a3 00 00 00       	push   $0xa3
  jmp alltraps
80108fc2:	e9 d2 f4 ff ff       	jmp    80108499 <alltraps>

80108fc7 <vector164>:
.globl vector164
vector164:
  pushl $0
80108fc7:	6a 00                	push   $0x0
  pushl $164
80108fc9:	68 a4 00 00 00       	push   $0xa4
  jmp alltraps
80108fce:	e9 c6 f4 ff ff       	jmp    80108499 <alltraps>

80108fd3 <vector165>:
.globl vector165
vector165:
  pushl $0
80108fd3:	6a 00                	push   $0x0
  pushl $165
80108fd5:	68 a5 00 00 00       	push   $0xa5
  jmp alltraps
80108fda:	e9 ba f4 ff ff       	jmp    80108499 <alltraps>

80108fdf <vector166>:
.globl vector166
vector166:
  pushl $0
80108fdf:	6a 00                	push   $0x0
  pushl $166
80108fe1:	68 a6 00 00 00       	push   $0xa6
  jmp alltraps
80108fe6:	e9 ae f4 ff ff       	jmp    80108499 <alltraps>

80108feb <vector167>:
.globl vector167
vector167:
  pushl $0
80108feb:	6a 00                	push   $0x0
  pushl $167
80108fed:	68 a7 00 00 00       	push   $0xa7
  jmp alltraps
80108ff2:	e9 a2 f4 ff ff       	jmp    80108499 <alltraps>

80108ff7 <vector168>:
.globl vector168
vector168:
  pushl $0
80108ff7:	6a 00                	push   $0x0
  pushl $168
80108ff9:	68 a8 00 00 00       	push   $0xa8
  jmp alltraps
80108ffe:	e9 96 f4 ff ff       	jmp    80108499 <alltraps>

80109003 <vector169>:
.globl vector169
vector169:
  pushl $0
80109003:	6a 00                	push   $0x0
  pushl $169
80109005:	68 a9 00 00 00       	push   $0xa9
  jmp alltraps
8010900a:	e9 8a f4 ff ff       	jmp    80108499 <alltraps>

8010900f <vector170>:
.globl vector170
vector170:
  pushl $0
8010900f:	6a 00                	push   $0x0
  pushl $170
80109011:	68 aa 00 00 00       	push   $0xaa
  jmp alltraps
80109016:	e9 7e f4 ff ff       	jmp    80108499 <alltraps>

8010901b <vector171>:
.globl vector171
vector171:
  pushl $0
8010901b:	6a 00                	push   $0x0
  pushl $171
8010901d:	68 ab 00 00 00       	push   $0xab
  jmp alltraps
80109022:	e9 72 f4 ff ff       	jmp    80108499 <alltraps>

80109027 <vector172>:
.globl vector172
vector172:
  pushl $0
80109027:	6a 00                	push   $0x0
  pushl $172
80109029:	68 ac 00 00 00       	push   $0xac
  jmp alltraps
8010902e:	e9 66 f4 ff ff       	jmp    80108499 <alltraps>

80109033 <vector173>:
.globl vector173
vector173:
  pushl $0
80109033:	6a 00                	push   $0x0
  pushl $173
80109035:	68 ad 00 00 00       	push   $0xad
  jmp alltraps
8010903a:	e9 5a f4 ff ff       	jmp    80108499 <alltraps>

8010903f <vector174>:
.globl vector174
vector174:
  pushl $0
8010903f:	6a 00                	push   $0x0
  pushl $174
80109041:	68 ae 00 00 00       	push   $0xae
  jmp alltraps
80109046:	e9 4e f4 ff ff       	jmp    80108499 <alltraps>

8010904b <vector175>:
.globl vector175
vector175:
  pushl $0
8010904b:	6a 00                	push   $0x0
  pushl $175
8010904d:	68 af 00 00 00       	push   $0xaf
  jmp alltraps
80109052:	e9 42 f4 ff ff       	jmp    80108499 <alltraps>

80109057 <vector176>:
.globl vector176
vector176:
  pushl $0
80109057:	6a 00                	push   $0x0
  pushl $176
80109059:	68 b0 00 00 00       	push   $0xb0
  jmp alltraps
8010905e:	e9 36 f4 ff ff       	jmp    80108499 <alltraps>

80109063 <vector177>:
.globl vector177
vector177:
  pushl $0
80109063:	6a 00                	push   $0x0
  pushl $177
80109065:	68 b1 00 00 00       	push   $0xb1
  jmp alltraps
8010906a:	e9 2a f4 ff ff       	jmp    80108499 <alltraps>

8010906f <vector178>:
.globl vector178
vector178:
  pushl $0
8010906f:	6a 00                	push   $0x0
  pushl $178
80109071:	68 b2 00 00 00       	push   $0xb2
  jmp alltraps
80109076:	e9 1e f4 ff ff       	jmp    80108499 <alltraps>

8010907b <vector179>:
.globl vector179
vector179:
  pushl $0
8010907b:	6a 00                	push   $0x0
  pushl $179
8010907d:	68 b3 00 00 00       	push   $0xb3
  jmp alltraps
80109082:	e9 12 f4 ff ff       	jmp    80108499 <alltraps>

80109087 <vector180>:
.globl vector180
vector180:
  pushl $0
80109087:	6a 00                	push   $0x0
  pushl $180
80109089:	68 b4 00 00 00       	push   $0xb4
  jmp alltraps
8010908e:	e9 06 f4 ff ff       	jmp    80108499 <alltraps>

80109093 <vector181>:
.globl vector181
vector181:
  pushl $0
80109093:	6a 00                	push   $0x0
  pushl $181
80109095:	68 b5 00 00 00       	push   $0xb5
  jmp alltraps
8010909a:	e9 fa f3 ff ff       	jmp    80108499 <alltraps>

8010909f <vector182>:
.globl vector182
vector182:
  pushl $0
8010909f:	6a 00                	push   $0x0
  pushl $182
801090a1:	68 b6 00 00 00       	push   $0xb6
  jmp alltraps
801090a6:	e9 ee f3 ff ff       	jmp    80108499 <alltraps>

801090ab <vector183>:
.globl vector183
vector183:
  pushl $0
801090ab:	6a 00                	push   $0x0
  pushl $183
801090ad:	68 b7 00 00 00       	push   $0xb7
  jmp alltraps
801090b2:	e9 e2 f3 ff ff       	jmp    80108499 <alltraps>

801090b7 <vector184>:
.globl vector184
vector184:
  pushl $0
801090b7:	6a 00                	push   $0x0
  pushl $184
801090b9:	68 b8 00 00 00       	push   $0xb8
  jmp alltraps
801090be:	e9 d6 f3 ff ff       	jmp    80108499 <alltraps>

801090c3 <vector185>:
.globl vector185
vector185:
  pushl $0
801090c3:	6a 00                	push   $0x0
  pushl $185
801090c5:	68 b9 00 00 00       	push   $0xb9
  jmp alltraps
801090ca:	e9 ca f3 ff ff       	jmp    80108499 <alltraps>

801090cf <vector186>:
.globl vector186
vector186:
  pushl $0
801090cf:	6a 00                	push   $0x0
  pushl $186
801090d1:	68 ba 00 00 00       	push   $0xba
  jmp alltraps
801090d6:	e9 be f3 ff ff       	jmp    80108499 <alltraps>

801090db <vector187>:
.globl vector187
vector187:
  pushl $0
801090db:	6a 00                	push   $0x0
  pushl $187
801090dd:	68 bb 00 00 00       	push   $0xbb
  jmp alltraps
801090e2:	e9 b2 f3 ff ff       	jmp    80108499 <alltraps>

801090e7 <vector188>:
.globl vector188
vector188:
  pushl $0
801090e7:	6a 00                	push   $0x0
  pushl $188
801090e9:	68 bc 00 00 00       	push   $0xbc
  jmp alltraps
801090ee:	e9 a6 f3 ff ff       	jmp    80108499 <alltraps>

801090f3 <vector189>:
.globl vector189
vector189:
  pushl $0
801090f3:	6a 00                	push   $0x0
  pushl $189
801090f5:	68 bd 00 00 00       	push   $0xbd
  jmp alltraps
801090fa:	e9 9a f3 ff ff       	jmp    80108499 <alltraps>

801090ff <vector190>:
.globl vector190
vector190:
  pushl $0
801090ff:	6a 00                	push   $0x0
  pushl $190
80109101:	68 be 00 00 00       	push   $0xbe
  jmp alltraps
80109106:	e9 8e f3 ff ff       	jmp    80108499 <alltraps>

8010910b <vector191>:
.globl vector191
vector191:
  pushl $0
8010910b:	6a 00                	push   $0x0
  pushl $191
8010910d:	68 bf 00 00 00       	push   $0xbf
  jmp alltraps
80109112:	e9 82 f3 ff ff       	jmp    80108499 <alltraps>

80109117 <vector192>:
.globl vector192
vector192:
  pushl $0
80109117:	6a 00                	push   $0x0
  pushl $192
80109119:	68 c0 00 00 00       	push   $0xc0
  jmp alltraps
8010911e:	e9 76 f3 ff ff       	jmp    80108499 <alltraps>

80109123 <vector193>:
.globl vector193
vector193:
  pushl $0
80109123:	6a 00                	push   $0x0
  pushl $193
80109125:	68 c1 00 00 00       	push   $0xc1
  jmp alltraps
8010912a:	e9 6a f3 ff ff       	jmp    80108499 <alltraps>

8010912f <vector194>:
.globl vector194
vector194:
  pushl $0
8010912f:	6a 00                	push   $0x0
  pushl $194
80109131:	68 c2 00 00 00       	push   $0xc2
  jmp alltraps
80109136:	e9 5e f3 ff ff       	jmp    80108499 <alltraps>

8010913b <vector195>:
.globl vector195
vector195:
  pushl $0
8010913b:	6a 00                	push   $0x0
  pushl $195
8010913d:	68 c3 00 00 00       	push   $0xc3
  jmp alltraps
80109142:	e9 52 f3 ff ff       	jmp    80108499 <alltraps>

80109147 <vector196>:
.globl vector196
vector196:
  pushl $0
80109147:	6a 00                	push   $0x0
  pushl $196
80109149:	68 c4 00 00 00       	push   $0xc4
  jmp alltraps
8010914e:	e9 46 f3 ff ff       	jmp    80108499 <alltraps>

80109153 <vector197>:
.globl vector197
vector197:
  pushl $0
80109153:	6a 00                	push   $0x0
  pushl $197
80109155:	68 c5 00 00 00       	push   $0xc5
  jmp alltraps
8010915a:	e9 3a f3 ff ff       	jmp    80108499 <alltraps>

8010915f <vector198>:
.globl vector198
vector198:
  pushl $0
8010915f:	6a 00                	push   $0x0
  pushl $198
80109161:	68 c6 00 00 00       	push   $0xc6
  jmp alltraps
80109166:	e9 2e f3 ff ff       	jmp    80108499 <alltraps>

8010916b <vector199>:
.globl vector199
vector199:
  pushl $0
8010916b:	6a 00                	push   $0x0
  pushl $199
8010916d:	68 c7 00 00 00       	push   $0xc7
  jmp alltraps
80109172:	e9 22 f3 ff ff       	jmp    80108499 <alltraps>

80109177 <vector200>:
.globl vector200
vector200:
  pushl $0
80109177:	6a 00                	push   $0x0
  pushl $200
80109179:	68 c8 00 00 00       	push   $0xc8
  jmp alltraps
8010917e:	e9 16 f3 ff ff       	jmp    80108499 <alltraps>

80109183 <vector201>:
.globl vector201
vector201:
  pushl $0
80109183:	6a 00                	push   $0x0
  pushl $201
80109185:	68 c9 00 00 00       	push   $0xc9
  jmp alltraps
8010918a:	e9 0a f3 ff ff       	jmp    80108499 <alltraps>

8010918f <vector202>:
.globl vector202
vector202:
  pushl $0
8010918f:	6a 00                	push   $0x0
  pushl $202
80109191:	68 ca 00 00 00       	push   $0xca
  jmp alltraps
80109196:	e9 fe f2 ff ff       	jmp    80108499 <alltraps>

8010919b <vector203>:
.globl vector203
vector203:
  pushl $0
8010919b:	6a 00                	push   $0x0
  pushl $203
8010919d:	68 cb 00 00 00       	push   $0xcb
  jmp alltraps
801091a2:	e9 f2 f2 ff ff       	jmp    80108499 <alltraps>

801091a7 <vector204>:
.globl vector204
vector204:
  pushl $0
801091a7:	6a 00                	push   $0x0
  pushl $204
801091a9:	68 cc 00 00 00       	push   $0xcc
  jmp alltraps
801091ae:	e9 e6 f2 ff ff       	jmp    80108499 <alltraps>

801091b3 <vector205>:
.globl vector205
vector205:
  pushl $0
801091b3:	6a 00                	push   $0x0
  pushl $205
801091b5:	68 cd 00 00 00       	push   $0xcd
  jmp alltraps
801091ba:	e9 da f2 ff ff       	jmp    80108499 <alltraps>

801091bf <vector206>:
.globl vector206
vector206:
  pushl $0
801091bf:	6a 00                	push   $0x0
  pushl $206
801091c1:	68 ce 00 00 00       	push   $0xce
  jmp alltraps
801091c6:	e9 ce f2 ff ff       	jmp    80108499 <alltraps>

801091cb <vector207>:
.globl vector207
vector207:
  pushl $0
801091cb:	6a 00                	push   $0x0
  pushl $207
801091cd:	68 cf 00 00 00       	push   $0xcf
  jmp alltraps
801091d2:	e9 c2 f2 ff ff       	jmp    80108499 <alltraps>

801091d7 <vector208>:
.globl vector208
vector208:
  pushl $0
801091d7:	6a 00                	push   $0x0
  pushl $208
801091d9:	68 d0 00 00 00       	push   $0xd0
  jmp alltraps
801091de:	e9 b6 f2 ff ff       	jmp    80108499 <alltraps>

801091e3 <vector209>:
.globl vector209
vector209:
  pushl $0
801091e3:	6a 00                	push   $0x0
  pushl $209
801091e5:	68 d1 00 00 00       	push   $0xd1
  jmp alltraps
801091ea:	e9 aa f2 ff ff       	jmp    80108499 <alltraps>

801091ef <vector210>:
.globl vector210
vector210:
  pushl $0
801091ef:	6a 00                	push   $0x0
  pushl $210
801091f1:	68 d2 00 00 00       	push   $0xd2
  jmp alltraps
801091f6:	e9 9e f2 ff ff       	jmp    80108499 <alltraps>

801091fb <vector211>:
.globl vector211
vector211:
  pushl $0
801091fb:	6a 00                	push   $0x0
  pushl $211
801091fd:	68 d3 00 00 00       	push   $0xd3
  jmp alltraps
80109202:	e9 92 f2 ff ff       	jmp    80108499 <alltraps>

80109207 <vector212>:
.globl vector212
vector212:
  pushl $0
80109207:	6a 00                	push   $0x0
  pushl $212
80109209:	68 d4 00 00 00       	push   $0xd4
  jmp alltraps
8010920e:	e9 86 f2 ff ff       	jmp    80108499 <alltraps>

80109213 <vector213>:
.globl vector213
vector213:
  pushl $0
80109213:	6a 00                	push   $0x0
  pushl $213
80109215:	68 d5 00 00 00       	push   $0xd5
  jmp alltraps
8010921a:	e9 7a f2 ff ff       	jmp    80108499 <alltraps>

8010921f <vector214>:
.globl vector214
vector214:
  pushl $0
8010921f:	6a 00                	push   $0x0
  pushl $214
80109221:	68 d6 00 00 00       	push   $0xd6
  jmp alltraps
80109226:	e9 6e f2 ff ff       	jmp    80108499 <alltraps>

8010922b <vector215>:
.globl vector215
vector215:
  pushl $0
8010922b:	6a 00                	push   $0x0
  pushl $215
8010922d:	68 d7 00 00 00       	push   $0xd7
  jmp alltraps
80109232:	e9 62 f2 ff ff       	jmp    80108499 <alltraps>

80109237 <vector216>:
.globl vector216
vector216:
  pushl $0
80109237:	6a 00                	push   $0x0
  pushl $216
80109239:	68 d8 00 00 00       	push   $0xd8
  jmp alltraps
8010923e:	e9 56 f2 ff ff       	jmp    80108499 <alltraps>

80109243 <vector217>:
.globl vector217
vector217:
  pushl $0
80109243:	6a 00                	push   $0x0
  pushl $217
80109245:	68 d9 00 00 00       	push   $0xd9
  jmp alltraps
8010924a:	e9 4a f2 ff ff       	jmp    80108499 <alltraps>

8010924f <vector218>:
.globl vector218
vector218:
  pushl $0
8010924f:	6a 00                	push   $0x0
  pushl $218
80109251:	68 da 00 00 00       	push   $0xda
  jmp alltraps
80109256:	e9 3e f2 ff ff       	jmp    80108499 <alltraps>

8010925b <vector219>:
.globl vector219
vector219:
  pushl $0
8010925b:	6a 00                	push   $0x0
  pushl $219
8010925d:	68 db 00 00 00       	push   $0xdb
  jmp alltraps
80109262:	e9 32 f2 ff ff       	jmp    80108499 <alltraps>

80109267 <vector220>:
.globl vector220
vector220:
  pushl $0
80109267:	6a 00                	push   $0x0
  pushl $220
80109269:	68 dc 00 00 00       	push   $0xdc
  jmp alltraps
8010926e:	e9 26 f2 ff ff       	jmp    80108499 <alltraps>

80109273 <vector221>:
.globl vector221
vector221:
  pushl $0
80109273:	6a 00                	push   $0x0
  pushl $221
80109275:	68 dd 00 00 00       	push   $0xdd
  jmp alltraps
8010927a:	e9 1a f2 ff ff       	jmp    80108499 <alltraps>

8010927f <vector222>:
.globl vector222
vector222:
  pushl $0
8010927f:	6a 00                	push   $0x0
  pushl $222
80109281:	68 de 00 00 00       	push   $0xde
  jmp alltraps
80109286:	e9 0e f2 ff ff       	jmp    80108499 <alltraps>

8010928b <vector223>:
.globl vector223
vector223:
  pushl $0
8010928b:	6a 00                	push   $0x0
  pushl $223
8010928d:	68 df 00 00 00       	push   $0xdf
  jmp alltraps
80109292:	e9 02 f2 ff ff       	jmp    80108499 <alltraps>

80109297 <vector224>:
.globl vector224
vector224:
  pushl $0
80109297:	6a 00                	push   $0x0
  pushl $224
80109299:	68 e0 00 00 00       	push   $0xe0
  jmp alltraps
8010929e:	e9 f6 f1 ff ff       	jmp    80108499 <alltraps>

801092a3 <vector225>:
.globl vector225
vector225:
  pushl $0
801092a3:	6a 00                	push   $0x0
  pushl $225
801092a5:	68 e1 00 00 00       	push   $0xe1
  jmp alltraps
801092aa:	e9 ea f1 ff ff       	jmp    80108499 <alltraps>

801092af <vector226>:
.globl vector226
vector226:
  pushl $0
801092af:	6a 00                	push   $0x0
  pushl $226
801092b1:	68 e2 00 00 00       	push   $0xe2
  jmp alltraps
801092b6:	e9 de f1 ff ff       	jmp    80108499 <alltraps>

801092bb <vector227>:
.globl vector227
vector227:
  pushl $0
801092bb:	6a 00                	push   $0x0
  pushl $227
801092bd:	68 e3 00 00 00       	push   $0xe3
  jmp alltraps
801092c2:	e9 d2 f1 ff ff       	jmp    80108499 <alltraps>

801092c7 <vector228>:
.globl vector228
vector228:
  pushl $0
801092c7:	6a 00                	push   $0x0
  pushl $228
801092c9:	68 e4 00 00 00       	push   $0xe4
  jmp alltraps
801092ce:	e9 c6 f1 ff ff       	jmp    80108499 <alltraps>

801092d3 <vector229>:
.globl vector229
vector229:
  pushl $0
801092d3:	6a 00                	push   $0x0
  pushl $229
801092d5:	68 e5 00 00 00       	push   $0xe5
  jmp alltraps
801092da:	e9 ba f1 ff ff       	jmp    80108499 <alltraps>

801092df <vector230>:
.globl vector230
vector230:
  pushl $0
801092df:	6a 00                	push   $0x0
  pushl $230
801092e1:	68 e6 00 00 00       	push   $0xe6
  jmp alltraps
801092e6:	e9 ae f1 ff ff       	jmp    80108499 <alltraps>

801092eb <vector231>:
.globl vector231
vector231:
  pushl $0
801092eb:	6a 00                	push   $0x0
  pushl $231
801092ed:	68 e7 00 00 00       	push   $0xe7
  jmp alltraps
801092f2:	e9 a2 f1 ff ff       	jmp    80108499 <alltraps>

801092f7 <vector232>:
.globl vector232
vector232:
  pushl $0
801092f7:	6a 00                	push   $0x0
  pushl $232
801092f9:	68 e8 00 00 00       	push   $0xe8
  jmp alltraps
801092fe:	e9 96 f1 ff ff       	jmp    80108499 <alltraps>

80109303 <vector233>:
.globl vector233
vector233:
  pushl $0
80109303:	6a 00                	push   $0x0
  pushl $233
80109305:	68 e9 00 00 00       	push   $0xe9
  jmp alltraps
8010930a:	e9 8a f1 ff ff       	jmp    80108499 <alltraps>

8010930f <vector234>:
.globl vector234
vector234:
  pushl $0
8010930f:	6a 00                	push   $0x0
  pushl $234
80109311:	68 ea 00 00 00       	push   $0xea
  jmp alltraps
80109316:	e9 7e f1 ff ff       	jmp    80108499 <alltraps>

8010931b <vector235>:
.globl vector235
vector235:
  pushl $0
8010931b:	6a 00                	push   $0x0
  pushl $235
8010931d:	68 eb 00 00 00       	push   $0xeb
  jmp alltraps
80109322:	e9 72 f1 ff ff       	jmp    80108499 <alltraps>

80109327 <vector236>:
.globl vector236
vector236:
  pushl $0
80109327:	6a 00                	push   $0x0
  pushl $236
80109329:	68 ec 00 00 00       	push   $0xec
  jmp alltraps
8010932e:	e9 66 f1 ff ff       	jmp    80108499 <alltraps>

80109333 <vector237>:
.globl vector237
vector237:
  pushl $0
80109333:	6a 00                	push   $0x0
  pushl $237
80109335:	68 ed 00 00 00       	push   $0xed
  jmp alltraps
8010933a:	e9 5a f1 ff ff       	jmp    80108499 <alltraps>

8010933f <vector238>:
.globl vector238
vector238:
  pushl $0
8010933f:	6a 00                	push   $0x0
  pushl $238
80109341:	68 ee 00 00 00       	push   $0xee
  jmp alltraps
80109346:	e9 4e f1 ff ff       	jmp    80108499 <alltraps>

8010934b <vector239>:
.globl vector239
vector239:
  pushl $0
8010934b:	6a 00                	push   $0x0
  pushl $239
8010934d:	68 ef 00 00 00       	push   $0xef
  jmp alltraps
80109352:	e9 42 f1 ff ff       	jmp    80108499 <alltraps>

80109357 <vector240>:
.globl vector240
vector240:
  pushl $0
80109357:	6a 00                	push   $0x0
  pushl $240
80109359:	68 f0 00 00 00       	push   $0xf0
  jmp alltraps
8010935e:	e9 36 f1 ff ff       	jmp    80108499 <alltraps>

80109363 <vector241>:
.globl vector241
vector241:
  pushl $0
80109363:	6a 00                	push   $0x0
  pushl $241
80109365:	68 f1 00 00 00       	push   $0xf1
  jmp alltraps
8010936a:	e9 2a f1 ff ff       	jmp    80108499 <alltraps>

8010936f <vector242>:
.globl vector242
vector242:
  pushl $0
8010936f:	6a 00                	push   $0x0
  pushl $242
80109371:	68 f2 00 00 00       	push   $0xf2
  jmp alltraps
80109376:	e9 1e f1 ff ff       	jmp    80108499 <alltraps>

8010937b <vector243>:
.globl vector243
vector243:
  pushl $0
8010937b:	6a 00                	push   $0x0
  pushl $243
8010937d:	68 f3 00 00 00       	push   $0xf3
  jmp alltraps
80109382:	e9 12 f1 ff ff       	jmp    80108499 <alltraps>

80109387 <vector244>:
.globl vector244
vector244:
  pushl $0
80109387:	6a 00                	push   $0x0
  pushl $244
80109389:	68 f4 00 00 00       	push   $0xf4
  jmp alltraps
8010938e:	e9 06 f1 ff ff       	jmp    80108499 <alltraps>

80109393 <vector245>:
.globl vector245
vector245:
  pushl $0
80109393:	6a 00                	push   $0x0
  pushl $245
80109395:	68 f5 00 00 00       	push   $0xf5
  jmp alltraps
8010939a:	e9 fa f0 ff ff       	jmp    80108499 <alltraps>

8010939f <vector246>:
.globl vector246
vector246:
  pushl $0
8010939f:	6a 00                	push   $0x0
  pushl $246
801093a1:	68 f6 00 00 00       	push   $0xf6
  jmp alltraps
801093a6:	e9 ee f0 ff ff       	jmp    80108499 <alltraps>

801093ab <vector247>:
.globl vector247
vector247:
  pushl $0
801093ab:	6a 00                	push   $0x0
  pushl $247
801093ad:	68 f7 00 00 00       	push   $0xf7
  jmp alltraps
801093b2:	e9 e2 f0 ff ff       	jmp    80108499 <alltraps>

801093b7 <vector248>:
.globl vector248
vector248:
  pushl $0
801093b7:	6a 00                	push   $0x0
  pushl $248
801093b9:	68 f8 00 00 00       	push   $0xf8
  jmp alltraps
801093be:	e9 d6 f0 ff ff       	jmp    80108499 <alltraps>

801093c3 <vector249>:
.globl vector249
vector249:
  pushl $0
801093c3:	6a 00                	push   $0x0
  pushl $249
801093c5:	68 f9 00 00 00       	push   $0xf9
  jmp alltraps
801093ca:	e9 ca f0 ff ff       	jmp    80108499 <alltraps>

801093cf <vector250>:
.globl vector250
vector250:
  pushl $0
801093cf:	6a 00                	push   $0x0
  pushl $250
801093d1:	68 fa 00 00 00       	push   $0xfa
  jmp alltraps
801093d6:	e9 be f0 ff ff       	jmp    80108499 <alltraps>

801093db <vector251>:
.globl vector251
vector251:
  pushl $0
801093db:	6a 00                	push   $0x0
  pushl $251
801093dd:	68 fb 00 00 00       	push   $0xfb
  jmp alltraps
801093e2:	e9 b2 f0 ff ff       	jmp    80108499 <alltraps>

801093e7 <vector252>:
.globl vector252
vector252:
  pushl $0
801093e7:	6a 00                	push   $0x0
  pushl $252
801093e9:	68 fc 00 00 00       	push   $0xfc
  jmp alltraps
801093ee:	e9 a6 f0 ff ff       	jmp    80108499 <alltraps>

801093f3 <vector253>:
.globl vector253
vector253:
  pushl $0
801093f3:	6a 00                	push   $0x0
  pushl $253
801093f5:	68 fd 00 00 00       	push   $0xfd
  jmp alltraps
801093fa:	e9 9a f0 ff ff       	jmp    80108499 <alltraps>

801093ff <vector254>:
.globl vector254
vector254:
  pushl $0
801093ff:	6a 00                	push   $0x0
  pushl $254
80109401:	68 fe 00 00 00       	push   $0xfe
  jmp alltraps
80109406:	e9 8e f0 ff ff       	jmp    80108499 <alltraps>

8010940b <vector255>:
.globl vector255
vector255:
  pushl $0
8010940b:	6a 00                	push   $0x0
  pushl $255
8010940d:	68 ff 00 00 00       	push   $0xff
  jmp alltraps
80109412:	e9 82 f0 ff ff       	jmp    80108499 <alltraps>
80109417:	66 90                	xchg   %ax,%ax
80109419:	66 90                	xchg   %ax,%ax
8010941b:	66 90                	xchg   %ax,%ax
8010941d:	66 90                	xchg   %ax,%ax
8010941f:	90                   	nop

80109420 <walkpgdir>:
80109420:	55                   	push   %ebp
80109421:	89 e5                	mov    %esp,%ebp
80109423:	57                   	push   %edi
80109424:	56                   	push   %esi
80109425:	53                   	push   %ebx
80109426:	89 d3                	mov    %edx,%ebx
80109428:	c1 ea 16             	shr    $0x16,%edx
8010942b:	8d 3c 90             	lea    (%eax,%edx,4),%edi
8010942e:	83 ec 0c             	sub    $0xc,%esp
80109431:	8b 07                	mov    (%edi),%eax
80109433:	a8 01                	test   $0x1,%al
80109435:	74 29                	je     80109460 <walkpgdir+0x40>
80109437:	25 00 f0 ff ff       	and    $0xfffff000,%eax
8010943c:	8d b0 00 00 00 80    	lea    -0x80000000(%eax),%esi
80109442:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109445:	c1 eb 0a             	shr    $0xa,%ebx
80109448:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx
8010944e:	8d 04 1e             	lea    (%esi,%ebx,1),%eax
80109451:	5b                   	pop    %ebx
80109452:	5e                   	pop    %esi
80109453:	5f                   	pop    %edi
80109454:	5d                   	pop    %ebp
80109455:	c3                   	ret    
80109456:	8d 76 00             	lea    0x0(%esi),%esi
80109459:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80109460:	85 c9                	test   %ecx,%ecx
80109462:	74 2c                	je     80109490 <walkpgdir+0x70>
80109464:	e8 67 9b ff ff       	call   80102fd0 <kalloc>
80109469:	85 c0                	test   %eax,%eax
8010946b:	89 c6                	mov    %eax,%esi
8010946d:	74 21                	je     80109490 <walkpgdir+0x70>
8010946f:	83 ec 04             	sub    $0x4,%esp
80109472:	68 00 10 00 00       	push   $0x1000
80109477:	6a 00                	push   $0x0
80109479:	50                   	push   %eax
8010947a:	e8 c1 d3 ff ff       	call   80106840 <memset>
8010947f:	8d 86 00 00 00 80    	lea    -0x80000000(%esi),%eax
80109485:	83 c4 10             	add    $0x10,%esp
80109488:	83 c8 07             	or     $0x7,%eax
8010948b:	89 07                	mov    %eax,(%edi)
8010948d:	eb b3                	jmp    80109442 <walkpgdir+0x22>
8010948f:	90                   	nop
80109490:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109493:	31 c0                	xor    %eax,%eax
80109495:	5b                   	pop    %ebx
80109496:	5e                   	pop    %esi
80109497:	5f                   	pop    %edi
80109498:	5d                   	pop    %ebp
80109499:	c3                   	ret    
8010949a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

801094a0 <mappages>:
801094a0:	55                   	push   %ebp
801094a1:	89 e5                	mov    %esp,%ebp
801094a3:	57                   	push   %edi
801094a4:	56                   	push   %esi
801094a5:	53                   	push   %ebx
801094a6:	89 d3                	mov    %edx,%ebx
801094a8:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx
801094ae:	83 ec 1c             	sub    $0x1c,%esp
801094b1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
801094b4:	8d 44 0a ff          	lea    -0x1(%edx,%ecx,1),%eax
801094b8:	8b 7d 08             	mov    0x8(%ebp),%edi
801094bb:	25 00 f0 ff ff       	and    $0xfffff000,%eax
801094c0:	89 45 e0             	mov    %eax,-0x20(%ebp)
801094c3:	8b 45 0c             	mov    0xc(%ebp),%eax
801094c6:	29 df                	sub    %ebx,%edi
801094c8:	83 c8 01             	or     $0x1,%eax
801094cb:	89 45 dc             	mov    %eax,-0x24(%ebp)
801094ce:	eb 15                	jmp    801094e5 <mappages+0x45>
801094d0:	f6 00 01             	testb  $0x1,(%eax)
801094d3:	75 45                	jne    8010951a <mappages+0x7a>
801094d5:	0b 75 dc             	or     -0x24(%ebp),%esi
801094d8:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
801094db:	89 30                	mov    %esi,(%eax)
801094dd:	74 31                	je     80109510 <mappages+0x70>
801094df:	81 c3 00 10 00 00    	add    $0x1000,%ebx
801094e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
801094e8:	b9 01 00 00 00       	mov    $0x1,%ecx
801094ed:	89 da                	mov    %ebx,%edx
801094ef:	8d 34 3b             	lea    (%ebx,%edi,1),%esi
801094f2:	e8 29 ff ff ff       	call   80109420 <walkpgdir>
801094f7:	85 c0                	test   %eax,%eax
801094f9:	75 d5                	jne    801094d0 <mappages+0x30>
801094fb:	8d 65 f4             	lea    -0xc(%ebp),%esp
801094fe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80109503:	5b                   	pop    %ebx
80109504:	5e                   	pop    %esi
80109505:	5f                   	pop    %edi
80109506:	5d                   	pop    %ebp
80109507:	c3                   	ret    
80109508:	90                   	nop
80109509:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80109510:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109513:	31 c0                	xor    %eax,%eax
80109515:	5b                   	pop    %ebx
80109516:	5e                   	pop    %esi
80109517:	5f                   	pop    %edi
80109518:	5d                   	pop    %ebp
80109519:	c3                   	ret    
8010951a:	83 ec 0c             	sub    $0xc,%esp
8010951d:	68 84 f7 10 80       	push   $0x8010f784
80109522:	e8 a9 6e ff ff       	call   801003d0 <panic>
80109527:	89 f6                	mov    %esi,%esi
80109529:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80109530 <deallocuvm.part.0>:
80109530:	55                   	push   %ebp
80109531:	89 e5                	mov    %esp,%ebp
80109533:	57                   	push   %edi
80109534:	56                   	push   %esi
80109535:	53                   	push   %ebx
80109536:	8d 99 ff 0f 00 00    	lea    0xfff(%ecx),%ebx
8010953c:	89 c7                	mov    %eax,%edi
8010953e:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx
80109544:	83 ec 1c             	sub    $0x1c,%esp
80109547:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8010954a:	39 d3                	cmp    %edx,%ebx
8010954c:	73 66                	jae    801095b4 <deallocuvm.part.0+0x84>
8010954e:	89 d6                	mov    %edx,%esi
80109550:	eb 3d                	jmp    8010958f <deallocuvm.part.0+0x5f>
80109552:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80109558:	8b 10                	mov    (%eax),%edx
8010955a:	f6 c2 01             	test   $0x1,%dl
8010955d:	74 26                	je     80109585 <deallocuvm.part.0+0x55>
8010955f:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx
80109565:	74 58                	je     801095bf <deallocuvm.part.0+0x8f>
80109567:	83 ec 0c             	sub    $0xc,%esp
8010956a:	81 c2 00 00 00 80    	add    $0x80000000,%edx
80109570:	89 45 e4             	mov    %eax,-0x1c(%ebp)
80109573:	52                   	push   %edx
80109574:	e8 87 97 ff ff       	call   80102d00 <kfree>
80109579:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8010957c:	83 c4 10             	add    $0x10,%esp
8010957f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
80109585:	81 c3 00 10 00 00    	add    $0x1000,%ebx
8010958b:	39 f3                	cmp    %esi,%ebx
8010958d:	73 25                	jae    801095b4 <deallocuvm.part.0+0x84>
8010958f:	31 c9                	xor    %ecx,%ecx
80109591:	89 da                	mov    %ebx,%edx
80109593:	89 f8                	mov    %edi,%eax
80109595:	e8 86 fe ff ff       	call   80109420 <walkpgdir>
8010959a:	85 c0                	test   %eax,%eax
8010959c:	75 ba                	jne    80109558 <deallocuvm.part.0+0x28>
8010959e:	81 e3 00 00 c0 ff    	and    $0xffc00000,%ebx
801095a4:	81 c3 00 f0 3f 00    	add    $0x3ff000,%ebx
801095aa:	81 c3 00 10 00 00    	add    $0x1000,%ebx
801095b0:	39 f3                	cmp    %esi,%ebx
801095b2:	72 db                	jb     8010958f <deallocuvm.part.0+0x5f>
801095b4:	8b 45 e0             	mov    -0x20(%ebp),%eax
801095b7:	8d 65 f4             	lea    -0xc(%ebp),%esp
801095ba:	5b                   	pop    %ebx
801095bb:	5e                   	pop    %esi
801095bc:	5f                   	pop    %edi
801095bd:	5d                   	pop    %ebp
801095be:	c3                   	ret    
801095bf:	83 ec 0c             	sub    $0xc,%esp
801095c2:	68 6e ee 10 80       	push   $0x8010ee6e
801095c7:	e8 04 6e ff ff       	call   801003d0 <panic>
801095cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801095d0 <seginit>:
801095d0:	55                   	push   %ebp
801095d1:	89 e5                	mov    %esp,%ebp
801095d3:	83 ec 18             	sub    $0x18,%esp
801095d6:	e8 25 be ff ff       	call   80105400 <cpuid>
801095db:	69 c0 b0 00 00 00    	imul   $0xb0,%eax,%eax
801095e1:	31 c9                	xor    %ecx,%ecx
801095e3:	ba ff ff ff ff       	mov    $0xffffffff,%edx
801095e8:	66 89 90 58 e6 12 80 	mov    %dx,-0x7fed19a8(%eax)
801095ef:	66 89 88 5a e6 12 80 	mov    %cx,-0x7fed19a6(%eax)
801095f6:	ba ff ff ff ff       	mov    $0xffffffff,%edx
801095fb:	31 c9                	xor    %ecx,%ecx
801095fd:	66 89 90 60 e6 12 80 	mov    %dx,-0x7fed19a0(%eax)
80109604:	ba ff ff ff ff       	mov    $0xffffffff,%edx
80109609:	66 89 88 62 e6 12 80 	mov    %cx,-0x7fed199e(%eax)
80109610:	31 c9                	xor    %ecx,%ecx
80109612:	66 89 90 68 e6 12 80 	mov    %dx,-0x7fed1998(%eax)
80109619:	66 89 88 6a e6 12 80 	mov    %cx,-0x7fed1996(%eax)
80109620:	ba ff ff ff ff       	mov    $0xffffffff,%edx
80109625:	31 c9                	xor    %ecx,%ecx
80109627:	66 89 90 70 e6 12 80 	mov    %dx,-0x7fed1990(%eax)
8010962e:	c6 80 5c e6 12 80 00 	movb   $0x0,-0x7fed19a4(%eax)
static inline void
lgdt(struct segdesc *p, int size)
{
  volatile ushort pd[3];

  pd[0] = size-1;
80109635:	ba 2f 00 00 00       	mov    $0x2f,%edx
8010963a:	c6 80 5d e6 12 80 9a 	movb   $0x9a,-0x7fed19a3(%eax)
80109641:	c6 80 5e e6 12 80 cf 	movb   $0xcf,-0x7fed19a2(%eax)
80109648:	c6 80 5f e6 12 80 00 	movb   $0x0,-0x7fed19a1(%eax)
8010964f:	c6 80 64 e6 12 80 00 	movb   $0x0,-0x7fed199c(%eax)
80109656:	c6 80 65 e6 12 80 92 	movb   $0x92,-0x7fed199b(%eax)
8010965d:	c6 80 66 e6 12 80 cf 	movb   $0xcf,-0x7fed199a(%eax)
80109664:	c6 80 67 e6 12 80 00 	movb   $0x0,-0x7fed1999(%eax)
8010966b:	c6 80 6c e6 12 80 00 	movb   $0x0,-0x7fed1994(%eax)
80109672:	c6 80 6d e6 12 80 fa 	movb   $0xfa,-0x7fed1993(%eax)
80109679:	c6 80 6e e6 12 80 cf 	movb   $0xcf,-0x7fed1992(%eax)
80109680:	c6 80 6f e6 12 80 00 	movb   $0x0,-0x7fed1991(%eax)
80109687:	66 89 88 72 e6 12 80 	mov    %cx,-0x7fed198e(%eax)
8010968e:	c6 80 74 e6 12 80 00 	movb   $0x0,-0x7fed198c(%eax)
80109695:	c6 80 75 e6 12 80 f2 	movb   $0xf2,-0x7fed198b(%eax)
8010969c:	c6 80 76 e6 12 80 cf 	movb   $0xcf,-0x7fed198a(%eax)
801096a3:	c6 80 77 e6 12 80 00 	movb   $0x0,-0x7fed1989(%eax)
801096aa:	05 50 e6 12 80       	add    $0x8012e650,%eax
801096af:	66 89 55 f2          	mov    %dx,-0xe(%ebp)
  pd[1] = (uint)p;
801096b3:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
  pd[2] = (uint)p >> 16;
801096b7:	c1 e8 10             	shr    $0x10,%eax
801096ba:	66 89 45 f6          	mov    %ax,-0xa(%ebp)

  asm volatile("lgdt (%0)" : : "r" (pd));
801096be:	8d 45 f2             	lea    -0xe(%ebp),%eax
801096c1:	0f 01 10             	lgdtl  (%eax)
801096c4:	c9                   	leave  
801096c5:	c3                   	ret    
801096c6:	8d 76 00             	lea    0x0(%esi),%esi
801096c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801096d0 <switchkvm>:
}

static inline void
lcr3(uint val)
{
  asm volatile("movl %0,%%cr3" : : "r" (val));
801096d0:	a1 44 a5 13 80       	mov    0x8013a544,%eax
801096d5:	55                   	push   %ebp
801096d6:	89 e5                	mov    %esp,%ebp
801096d8:	05 00 00 00 80       	add    $0x80000000,%eax
801096dd:	0f 22 d8             	mov    %eax,%cr3
801096e0:	5d                   	pop    %ebp
801096e1:	c3                   	ret    
801096e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801096e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

801096f0 <switchuvm>:
801096f0:	55                   	push   %ebp
801096f1:	89 e5                	mov    %esp,%ebp
801096f3:	57                   	push   %edi
801096f4:	56                   	push   %esi
801096f5:	53                   	push   %ebx
801096f6:	83 ec 1c             	sub    $0x1c,%esp
801096f9:	8b 75 08             	mov    0x8(%ebp),%esi
801096fc:	85 f6                	test   %esi,%esi
801096fe:	0f 84 cd 00 00 00    	je     801097d1 <switchuvm+0xe1>
80109704:	8b 46 08             	mov    0x8(%esi),%eax
80109707:	85 c0                	test   %eax,%eax
80109709:	0f 84 dc 00 00 00    	je     801097eb <switchuvm+0xfb>
8010970f:	8b 7e 04             	mov    0x4(%esi),%edi
80109712:	85 ff                	test   %edi,%edi
80109714:	0f 84 c4 00 00 00    	je     801097de <switchuvm+0xee>
8010971a:	e8 71 cf ff ff       	call   80106690 <pushcli>
8010971f:	e8 5c bc ff ff       	call   80105380 <mycpu>
80109724:	89 c3                	mov    %eax,%ebx
80109726:	e8 55 bc ff ff       	call   80105380 <mycpu>
8010972b:	89 c7                	mov    %eax,%edi
8010972d:	e8 4e bc ff ff       	call   80105380 <mycpu>
80109732:	89 45 e4             	mov    %eax,-0x1c(%ebp)
80109735:	83 c7 08             	add    $0x8,%edi
80109738:	e8 43 bc ff ff       	call   80105380 <mycpu>
8010973d:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
80109740:	83 c0 08             	add    $0x8,%eax
80109743:	ba 67 00 00 00       	mov    $0x67,%edx
80109748:	c1 e8 18             	shr    $0x18,%eax
8010974b:	66 89 93 98 00 00 00 	mov    %dx,0x98(%ebx)
80109752:	66 89 bb 9a 00 00 00 	mov    %di,0x9a(%ebx)
80109759:	c6 83 9d 00 00 00 99 	movb   $0x99,0x9d(%ebx)
80109760:	c6 83 9e 00 00 00 40 	movb   $0x40,0x9e(%ebx)
80109767:	83 c1 08             	add    $0x8,%ecx
8010976a:	88 83 9f 00 00 00    	mov    %al,0x9f(%ebx)
80109770:	c1 e9 10             	shr    $0x10,%ecx
80109773:	88 8b 9c 00 00 00    	mov    %cl,0x9c(%ebx)
80109779:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
8010977e:	e8 fd bb ff ff       	call   80105380 <mycpu>
80109783:	80 a0 9d 00 00 00 ef 	andb   $0xef,0x9d(%eax)
8010978a:	e8 f1 bb ff ff       	call   80105380 <mycpu>
8010978f:	b9 10 00 00 00       	mov    $0x10,%ecx
80109794:	66 89 48 10          	mov    %cx,0x10(%eax)
80109798:	e8 e3 bb ff ff       	call   80105380 <mycpu>
8010979d:	8b 56 08             	mov    0x8(%esi),%edx
801097a0:	8d 8a 00 10 00 00    	lea    0x1000(%edx),%ecx
801097a6:	89 48 0c             	mov    %ecx,0xc(%eax)
801097a9:	e8 d2 bb ff ff       	call   80105380 <mycpu>
801097ae:	66 89 58 6e          	mov    %bx,0x6e(%eax)
}

static inline void
ltr(ushort sel)
{
  asm volatile("ltr %0" : : "r" (sel));
801097b2:	b8 28 00 00 00       	mov    $0x28,%eax
801097b7:	0f 00 d8             	ltr    %ax
}

static inline void
lcr3(uint val)
{
  asm volatile("movl %0,%%cr3" : : "r" (val));
801097ba:	8b 46 04             	mov    0x4(%esi),%eax
801097bd:	05 00 00 00 80       	add    $0x80000000,%eax
801097c2:	0f 22 d8             	mov    %eax,%cr3
801097c5:	8d 65 f4             	lea    -0xc(%ebp),%esp
801097c8:	5b                   	pop    %ebx
801097c9:	5e                   	pop    %esi
801097ca:	5f                   	pop    %edi
801097cb:	5d                   	pop    %ebp
801097cc:	e9 af cf ff ff       	jmp    80106780 <popcli>
801097d1:	83 ec 0c             	sub    $0xc,%esp
801097d4:	68 8a f7 10 80       	push   $0x8010f78a
801097d9:	e8 f2 6b ff ff       	call   801003d0 <panic>
801097de:	83 ec 0c             	sub    $0xc,%esp
801097e1:	68 b5 f7 10 80       	push   $0x8010f7b5
801097e6:	e8 e5 6b ff ff       	call   801003d0 <panic>
801097eb:	83 ec 0c             	sub    $0xc,%esp
801097ee:	68 a0 f7 10 80       	push   $0x8010f7a0
801097f3:	e8 d8 6b ff ff       	call   801003d0 <panic>
801097f8:	90                   	nop
801097f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80109800 <inituvm>:
80109800:	55                   	push   %ebp
80109801:	89 e5                	mov    %esp,%ebp
80109803:	57                   	push   %edi
80109804:	56                   	push   %esi
80109805:	53                   	push   %ebx
80109806:	83 ec 1c             	sub    $0x1c,%esp
80109809:	8b 75 10             	mov    0x10(%ebp),%esi
8010980c:	8b 45 08             	mov    0x8(%ebp),%eax
8010980f:	8b 7d 0c             	mov    0xc(%ebp),%edi
80109812:	81 fe ff 0f 00 00    	cmp    $0xfff,%esi
80109818:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8010981b:	77 49                	ja     80109866 <inituvm+0x66>
8010981d:	e8 ae 97 ff ff       	call   80102fd0 <kalloc>
80109822:	83 ec 04             	sub    $0x4,%esp
80109825:	89 c3                	mov    %eax,%ebx
80109827:	68 00 10 00 00       	push   $0x1000
8010982c:	6a 00                	push   $0x0
8010982e:	50                   	push   %eax
8010982f:	e8 0c d0 ff ff       	call   80106840 <memset>
80109834:	58                   	pop    %eax
80109835:	8d 83 00 00 00 80    	lea    -0x80000000(%ebx),%eax
8010983b:	b9 00 10 00 00       	mov    $0x1000,%ecx
80109840:	5a                   	pop    %edx
80109841:	6a 06                	push   $0x6
80109843:	50                   	push   %eax
80109844:	31 d2                	xor    %edx,%edx
80109846:	8b 45 e4             	mov    -0x1c(%ebp),%eax
80109849:	e8 52 fc ff ff       	call   801094a0 <mappages>
8010984e:	89 75 10             	mov    %esi,0x10(%ebp)
80109851:	89 7d 0c             	mov    %edi,0xc(%ebp)
80109854:	83 c4 10             	add    $0x10,%esp
80109857:	89 5d 08             	mov    %ebx,0x8(%ebp)
8010985a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010985d:	5b                   	pop    %ebx
8010985e:	5e                   	pop    %esi
8010985f:	5f                   	pop    %edi
80109860:	5d                   	pop    %ebp
80109861:	e9 8a d0 ff ff       	jmp    801068f0 <memmove>
80109866:	83 ec 0c             	sub    $0xc,%esp
80109869:	68 c9 f7 10 80       	push   $0x8010f7c9
8010986e:	e8 5d 6b ff ff       	call   801003d0 <panic>
80109873:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80109879:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80109880 <loaduvm>:
80109880:	55                   	push   %ebp
80109881:	89 e5                	mov    %esp,%ebp
80109883:	57                   	push   %edi
80109884:	56                   	push   %esi
80109885:	53                   	push   %ebx
80109886:	83 ec 0c             	sub    $0xc,%esp
80109889:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)
80109890:	0f 85 91 00 00 00    	jne    80109927 <loaduvm+0xa7>
80109896:	8b 75 18             	mov    0x18(%ebp),%esi
80109899:	31 db                	xor    %ebx,%ebx
8010989b:	85 f6                	test   %esi,%esi
8010989d:	75 1a                	jne    801098b9 <loaduvm+0x39>
8010989f:	eb 6f                	jmp    80109910 <loaduvm+0x90>
801098a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
801098a8:	81 c3 00 10 00 00    	add    $0x1000,%ebx
801098ae:	81 ee 00 10 00 00    	sub    $0x1000,%esi
801098b4:	39 5d 18             	cmp    %ebx,0x18(%ebp)
801098b7:	76 57                	jbe    80109910 <loaduvm+0x90>
801098b9:	8b 55 0c             	mov    0xc(%ebp),%edx
801098bc:	8b 45 08             	mov    0x8(%ebp),%eax
801098bf:	31 c9                	xor    %ecx,%ecx
801098c1:	01 da                	add    %ebx,%edx
801098c3:	e8 58 fb ff ff       	call   80109420 <walkpgdir>
801098c8:	85 c0                	test   %eax,%eax
801098ca:	74 4e                	je     8010991a <loaduvm+0x9a>
801098cc:	8b 00                	mov    (%eax),%eax
801098ce:	8b 4d 14             	mov    0x14(%ebp),%ecx
801098d1:	bf 00 10 00 00       	mov    $0x1000,%edi
801098d6:	25 00 f0 ff ff       	and    $0xfffff000,%eax
801098db:	81 fe ff 0f 00 00    	cmp    $0xfff,%esi
801098e1:	0f 46 fe             	cmovbe %esi,%edi
801098e4:	01 d9                	add    %ebx,%ecx
801098e6:	05 00 00 00 80       	add    $0x80000000,%eax
801098eb:	57                   	push   %edi
801098ec:	51                   	push   %ecx
801098ed:	50                   	push   %eax
801098ee:	ff 75 10             	pushl  0x10(%ebp)
801098f1:	e8 ca 88 ff ff       	call   801021c0 <readi>
801098f6:	83 c4 10             	add    $0x10,%esp
801098f9:	39 c7                	cmp    %eax,%edi
801098fb:	74 ab                	je     801098a8 <loaduvm+0x28>
801098fd:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109900:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80109905:	5b                   	pop    %ebx
80109906:	5e                   	pop    %esi
80109907:	5f                   	pop    %edi
80109908:	5d                   	pop    %ebp
80109909:	c3                   	ret    
8010990a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80109910:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109913:	31 c0                	xor    %eax,%eax
80109915:	5b                   	pop    %ebx
80109916:	5e                   	pop    %esi
80109917:	5f                   	pop    %edi
80109918:	5d                   	pop    %ebp
80109919:	c3                   	ret    
8010991a:	83 ec 0c             	sub    $0xc,%esp
8010991d:	68 e3 f7 10 80       	push   $0x8010f7e3
80109922:	e8 a9 6a ff ff       	call   801003d0 <panic>
80109927:	83 ec 0c             	sub    $0xc,%esp
8010992a:	68 84 f8 10 80       	push   $0x8010f884
8010992f:	e8 9c 6a ff ff       	call   801003d0 <panic>
80109934:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010993a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

80109940 <deallocuvm>:
80109940:	55                   	push   %ebp
80109941:	89 e5                	mov    %esp,%ebp
80109943:	8b 55 0c             	mov    0xc(%ebp),%edx
80109946:	8b 4d 10             	mov    0x10(%ebp),%ecx
80109949:	8b 45 08             	mov    0x8(%ebp),%eax
8010994c:	39 d1                	cmp    %edx,%ecx
8010994e:	73 10                	jae    80109960 <deallocuvm+0x20>
80109950:	5d                   	pop    %ebp
80109951:	e9 da fb ff ff       	jmp    80109530 <deallocuvm.part.0>
80109956:	8d 76 00             	lea    0x0(%esi),%esi
80109959:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80109960:	89 d0                	mov    %edx,%eax
80109962:	5d                   	pop    %ebp
80109963:	c3                   	ret    
80109964:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010996a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

80109970 <dec_protect_mem>:
80109970:	55                   	push   %ebp
80109971:	89 e5                	mov    %esp,%ebp
80109973:	53                   	push   %ebx
80109974:	83 ec 04             	sub    $0x4,%esp
80109977:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010997a:	e8 d1 39 00 00       	call   8010d350 <cgroup_root>
8010997f:	39 d8                	cmp    %ebx,%eax
80109981:	b8 01 00 00 00       	mov    $0x1,%eax
80109986:	74 13                	je     8010999b <dec_protect_mem+0x2b>
80109988:	80 bb 13 03 00 00 00 	cmpb   $0x0,0x313(%ebx)
8010998f:	74 0a                	je     8010999b <dec_protect_mem+0x2b>
80109991:	8b 93 58 03 00 00    	mov    0x358(%ebx),%edx
80109997:	85 d2                	test   %edx,%edx
80109999:	75 05                	jne    801099a0 <dec_protect_mem+0x30>
8010999b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010999e:	c9                   	leave  
8010999f:	c3                   	ret    
801099a0:	83 ec 0c             	sub    $0xc,%esp
801099a3:	6a 01                	push   $0x1
801099a5:	e8 16 95 ff ff       	call   80102ec0 <decrese_protect_counter>
801099aa:	83 ab 58 03 00 00 01 	subl   $0x1,0x358(%ebx)
801099b1:	83 c4 10             	add    $0x10,%esp
801099b4:	31 c0                	xor    %eax,%eax
801099b6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
801099b9:	c9                   	leave  
801099ba:	c3                   	ret    
801099bb:	90                   	nop
801099bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

801099c0 <allocuvm>:
801099c0:	55                   	push   %ebp
801099c1:	89 e5                	mov    %esp,%ebp
801099c3:	57                   	push   %edi
801099c4:	56                   	push   %esi
801099c5:	53                   	push   %ebx
801099c6:	83 ec 1c             	sub    $0x1c,%esp
801099c9:	8b 4d 10             	mov    0x10(%ebp),%ecx
801099cc:	85 c9                	test   %ecx,%ecx
801099ce:	0f 88 e4 00 00 00    	js     80109ab8 <allocuvm+0xf8>
801099d4:	8b 45 0c             	mov    0xc(%ebp),%eax
801099d7:	39 45 10             	cmp    %eax,0x10(%ebp)
801099da:	0f 82 cb 00 00 00    	jb     80109aab <allocuvm+0xeb>
801099e0:	8b 45 0c             	mov    0xc(%ebp),%eax
801099e3:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx
801099e9:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx
801099ef:	39 5d 10             	cmp    %ebx,0x10(%ebp)
801099f2:	0f 86 1f 01 00 00    	jbe    80109b17 <allocuvm+0x157>
801099f8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
801099ff:	31 ff                	xor    %edi,%edi
80109a01:	eb 4d                	jmp    80109a50 <allocuvm+0x90>
80109a03:	90                   	nop
80109a04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80109a08:	83 ec 04             	sub    $0x4,%esp
80109a0b:	68 00 10 00 00       	push   $0x1000
80109a10:	6a 00                	push   $0x0
80109a12:	50                   	push   %eax
80109a13:	e8 28 ce ff ff       	call   80106840 <memset>
80109a18:	58                   	pop    %eax
80109a19:	8d 86 00 00 00 80    	lea    -0x80000000(%esi),%eax
80109a1f:	b9 00 10 00 00       	mov    $0x1000,%ecx
80109a24:	5a                   	pop    %edx
80109a25:	6a 06                	push   $0x6
80109a27:	50                   	push   %eax
80109a28:	89 da                	mov    %ebx,%edx
80109a2a:	8b 45 08             	mov    0x8(%ebp),%eax
80109a2d:	e8 6e fa ff ff       	call   801094a0 <mappages>
80109a32:	83 c4 10             	add    $0x10,%esp
80109a35:	85 c0                	test   %eax,%eax
80109a37:	0f 88 8b 00 00 00    	js     80109ac8 <allocuvm+0x108>
80109a3d:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
80109a41:	81 c3 00 10 00 00    	add    $0x1000,%ebx
80109a47:	39 5d 10             	cmp    %ebx,0x10(%ebp)
80109a4a:	0f 86 b0 00 00 00    	jbe    80109b00 <allocuvm+0x140>
80109a50:	83 ec 0c             	sub    $0xc,%esp
80109a53:	ff 75 14             	pushl  0x14(%ebp)
80109a56:	e8 15 ff ff ff       	call   80109970 <dec_protect_mem>
80109a5b:	83 c4 10             	add    $0x10,%esp
80109a5e:	83 f8 01             	cmp    $0x1,%eax
80109a61:	83 d7 00             	adc    $0x0,%edi
80109a64:	e8 67 95 ff ff       	call   80102fd0 <kalloc>
80109a69:	85 c0                	test   %eax,%eax
80109a6b:	89 c6                	mov    %eax,%esi
80109a6d:	75 99                	jne    80109a08 <allocuvm+0x48>
80109a6f:	83 ec 0c             	sub    $0xc,%esp
80109a72:	68 01 f8 10 80       	push   $0x8010f801
80109a77:	e8 e4 6b ff ff       	call   80100660 <cprintf>
80109a7c:	83 c4 10             	add    $0x10,%esp
80109a7f:	8b 45 0c             	mov    0xc(%ebp),%eax
80109a82:	39 45 10             	cmp    %eax,0x10(%ebp)
80109a85:	76 0d                	jbe    80109a94 <allocuvm+0xd4>
80109a87:	89 c1                	mov    %eax,%ecx
80109a89:	8b 55 10             	mov    0x10(%ebp),%edx
80109a8c:	8b 45 08             	mov    0x8(%ebp),%eax
80109a8f:	e8 9c fa ff ff       	call   80109530 <deallocuvm.part.0>
80109a94:	83 ec 0c             	sub    $0xc,%esp
80109a97:	57                   	push   %edi
80109a98:	e8 83 94 ff ff       	call   80102f20 <increse_protect_counter>
80109a9d:	8b 45 14             	mov    0x14(%ebp),%eax
80109aa0:	83 c4 10             	add    $0x10,%esp
80109aa3:	01 b8 58 03 00 00    	add    %edi,0x358(%eax)
80109aa9:	31 c0                	xor    %eax,%eax
80109aab:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109aae:	5b                   	pop    %ebx
80109aaf:	5e                   	pop    %esi
80109ab0:	5f                   	pop    %edi
80109ab1:	5d                   	pop    %ebp
80109ab2:	c3                   	ret    
80109ab3:	90                   	nop
80109ab4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80109ab8:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109abb:	31 c0                	xor    %eax,%eax
80109abd:	5b                   	pop    %ebx
80109abe:	5e                   	pop    %esi
80109abf:	5f                   	pop    %edi
80109ac0:	5d                   	pop    %ebp
80109ac1:	c3                   	ret    
80109ac2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80109ac8:	83 ec 0c             	sub    $0xc,%esp
80109acb:	68 19 f8 10 80       	push   $0x8010f819
80109ad0:	e8 8b 6b ff ff       	call   80100660 <cprintf>
80109ad5:	83 c4 10             	add    $0x10,%esp
80109ad8:	8b 45 0c             	mov    0xc(%ebp),%eax
80109adb:	39 45 10             	cmp    %eax,0x10(%ebp)
80109ade:	76 0d                	jbe    80109aed <allocuvm+0x12d>
80109ae0:	89 c1                	mov    %eax,%ecx
80109ae2:	8b 55 10             	mov    0x10(%ebp),%edx
80109ae5:	8b 45 08             	mov    0x8(%ebp),%eax
80109ae8:	e8 43 fa ff ff       	call   80109530 <deallocuvm.part.0>
80109aed:	83 ec 0c             	sub    $0xc,%esp
80109af0:	56                   	push   %esi
80109af1:	e8 0a 92 ff ff       	call   80102d00 <kfree>
80109af6:	89 3c 24             	mov    %edi,(%esp)
80109af9:	eb 9d                	jmp    80109a98 <allocuvm+0xd8>
80109afb:	90                   	nop
80109afc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80109b00:	8b 45 e4             	mov    -0x1c(%ebp),%eax
80109b03:	8b 55 14             	mov    0x14(%ebp),%edx
80109b06:	01 82 3c 03 00 00    	add    %eax,0x33c(%edx)
80109b0c:	8b 45 10             	mov    0x10(%ebp),%eax
80109b0f:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109b12:	5b                   	pop    %ebx
80109b13:	5e                   	pop    %esi
80109b14:	5f                   	pop    %edi
80109b15:	5d                   	pop    %ebp
80109b16:	c3                   	ret    
80109b17:	31 c0                	xor    %eax,%eax
80109b19:	eb e8                	jmp    80109b03 <allocuvm+0x143>
80109b1b:	90                   	nop
80109b1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80109b20 <inc_protect_mem>:
80109b20:	55                   	push   %ebp
80109b21:	89 e5                	mov    %esp,%ebp
80109b23:	56                   	push   %esi
80109b24:	53                   	push   %ebx
80109b25:	8b 75 0c             	mov    0xc(%ebp),%esi
80109b28:	8b 5d 08             	mov    0x8(%ebp),%ebx
80109b2b:	83 ec 0c             	sub    $0xc,%esp
80109b2e:	56                   	push   %esi
80109b2f:	e8 ec 93 ff ff       	call   80102f20 <increse_protect_counter>
80109b34:	01 b3 58 03 00 00    	add    %esi,0x358(%ebx)
80109b3a:	83 c4 10             	add    $0x10,%esp
80109b3d:	8d 65 f8             	lea    -0x8(%ebp),%esp
80109b40:	5b                   	pop    %ebx
80109b41:	5e                   	pop    %esi
80109b42:	5d                   	pop    %ebp
80109b43:	c3                   	ret    
80109b44:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80109b4a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

80109b50 <freevm>:
80109b50:	55                   	push   %ebp
80109b51:	89 e5                	mov    %esp,%ebp
80109b53:	57                   	push   %edi
80109b54:	56                   	push   %esi
80109b55:	53                   	push   %ebx
80109b56:	83 ec 0c             	sub    $0xc,%esp
80109b59:	8b 75 08             	mov    0x8(%ebp),%esi
80109b5c:	85 f6                	test   %esi,%esi
80109b5e:	74 59                	je     80109bb9 <freevm+0x69>
80109b60:	31 c9                	xor    %ecx,%ecx
80109b62:	ba 00 00 00 80       	mov    $0x80000000,%edx
80109b67:	89 f0                	mov    %esi,%eax
80109b69:	e8 c2 f9 ff ff       	call   80109530 <deallocuvm.part.0>
80109b6e:	89 f3                	mov    %esi,%ebx
80109b70:	8d be 00 10 00 00    	lea    0x1000(%esi),%edi
80109b76:	eb 0f                	jmp    80109b87 <freevm+0x37>
80109b78:	90                   	nop
80109b79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80109b80:	83 c3 04             	add    $0x4,%ebx
80109b83:	39 fb                	cmp    %edi,%ebx
80109b85:	74 23                	je     80109baa <freevm+0x5a>
80109b87:	8b 03                	mov    (%ebx),%eax
80109b89:	a8 01                	test   $0x1,%al
80109b8b:	74 f3                	je     80109b80 <freevm+0x30>
80109b8d:	25 00 f0 ff ff       	and    $0xfffff000,%eax
80109b92:	83 ec 0c             	sub    $0xc,%esp
80109b95:	83 c3 04             	add    $0x4,%ebx
80109b98:	05 00 00 00 80       	add    $0x80000000,%eax
80109b9d:	50                   	push   %eax
80109b9e:	e8 5d 91 ff ff       	call   80102d00 <kfree>
80109ba3:	83 c4 10             	add    $0x10,%esp
80109ba6:	39 fb                	cmp    %edi,%ebx
80109ba8:	75 dd                	jne    80109b87 <freevm+0x37>
80109baa:	89 75 08             	mov    %esi,0x8(%ebp)
80109bad:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109bb0:	5b                   	pop    %ebx
80109bb1:	5e                   	pop    %esi
80109bb2:	5f                   	pop    %edi
80109bb3:	5d                   	pop    %ebp
80109bb4:	e9 47 91 ff ff       	jmp    80102d00 <kfree>
80109bb9:	83 ec 0c             	sub    $0xc,%esp
80109bbc:	68 35 f8 10 80       	push   $0x8010f835
80109bc1:	e8 0a 68 ff ff       	call   801003d0 <panic>
80109bc6:	8d 76 00             	lea    0x0(%esi),%esi
80109bc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

80109bd0 <setupkvm>:
80109bd0:	55                   	push   %ebp
80109bd1:	89 e5                	mov    %esp,%ebp
80109bd3:	56                   	push   %esi
80109bd4:	53                   	push   %ebx
80109bd5:	e8 f6 93 ff ff       	call   80102fd0 <kalloc>
80109bda:	85 c0                	test   %eax,%eax
80109bdc:	74 6a                	je     80109c48 <setupkvm+0x78>
80109bde:	83 ec 04             	sub    $0x4,%esp
80109be1:	89 c6                	mov    %eax,%esi
80109be3:	bb 20 d4 11 80       	mov    $0x8011d420,%ebx
80109be8:	68 00 10 00 00       	push   $0x1000
80109bed:	6a 00                	push   $0x0
80109bef:	50                   	push   %eax
80109bf0:	e8 4b cc ff ff       	call   80106840 <memset>
80109bf5:	83 c4 10             	add    $0x10,%esp
80109bf8:	8b 43 04             	mov    0x4(%ebx),%eax
80109bfb:	8b 4b 08             	mov    0x8(%ebx),%ecx
80109bfe:	83 ec 08             	sub    $0x8,%esp
80109c01:	8b 13                	mov    (%ebx),%edx
80109c03:	ff 73 0c             	pushl  0xc(%ebx)
80109c06:	50                   	push   %eax
80109c07:	29 c1                	sub    %eax,%ecx
80109c09:	89 f0                	mov    %esi,%eax
80109c0b:	e8 90 f8 ff ff       	call   801094a0 <mappages>
80109c10:	83 c4 10             	add    $0x10,%esp
80109c13:	85 c0                	test   %eax,%eax
80109c15:	78 19                	js     80109c30 <setupkvm+0x60>
80109c17:	83 c3 10             	add    $0x10,%ebx
80109c1a:	81 fb 60 d4 11 80    	cmp    $0x8011d460,%ebx
80109c20:	75 d6                	jne    80109bf8 <setupkvm+0x28>
80109c22:	89 f0                	mov    %esi,%eax
80109c24:	8d 65 f8             	lea    -0x8(%ebp),%esp
80109c27:	5b                   	pop    %ebx
80109c28:	5e                   	pop    %esi
80109c29:	5d                   	pop    %ebp
80109c2a:	c3                   	ret    
80109c2b:	90                   	nop
80109c2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80109c30:	83 ec 0c             	sub    $0xc,%esp
80109c33:	56                   	push   %esi
80109c34:	e8 17 ff ff ff       	call   80109b50 <freevm>
80109c39:	83 c4 10             	add    $0x10,%esp
80109c3c:	8d 65 f8             	lea    -0x8(%ebp),%esp
80109c3f:	31 c0                	xor    %eax,%eax
80109c41:	5b                   	pop    %ebx
80109c42:	5e                   	pop    %esi
80109c43:	5d                   	pop    %ebp
80109c44:	c3                   	ret    
80109c45:	8d 76 00             	lea    0x0(%esi),%esi
80109c48:	31 c0                	xor    %eax,%eax
80109c4a:	eb d8                	jmp    80109c24 <setupkvm+0x54>
80109c4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

80109c50 <kvmalloc>:
80109c50:	55                   	push   %ebp
80109c51:	89 e5                	mov    %esp,%ebp
80109c53:	83 ec 08             	sub    $0x8,%esp
80109c56:	e8 75 ff ff ff       	call   80109bd0 <setupkvm>
80109c5b:	a3 44 a5 13 80       	mov    %eax,0x8013a544
80109c60:	05 00 00 00 80       	add    $0x80000000,%eax
80109c65:	0f 22 d8             	mov    %eax,%cr3
80109c68:	c9                   	leave  
80109c69:	c3                   	ret    
80109c6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

80109c70 <clearpteu>:
80109c70:	55                   	push   %ebp
80109c71:	31 c9                	xor    %ecx,%ecx
80109c73:	89 e5                	mov    %esp,%ebp
80109c75:	83 ec 08             	sub    $0x8,%esp
80109c78:	8b 55 0c             	mov    0xc(%ebp),%edx
80109c7b:	8b 45 08             	mov    0x8(%ebp),%eax
80109c7e:	e8 9d f7 ff ff       	call   80109420 <walkpgdir>
80109c83:	85 c0                	test   %eax,%eax
80109c85:	74 05                	je     80109c8c <clearpteu+0x1c>
80109c87:	83 20 fb             	andl   $0xfffffffb,(%eax)
80109c8a:	c9                   	leave  
80109c8b:	c3                   	ret    
80109c8c:	83 ec 0c             	sub    $0xc,%esp
80109c8f:	68 46 f8 10 80       	push   $0x8010f846
80109c94:	e8 37 67 ff ff       	call   801003d0 <panic>
80109c99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80109ca0 <copyuvm>:
80109ca0:	55                   	push   %ebp
80109ca1:	89 e5                	mov    %esp,%ebp
80109ca3:	57                   	push   %edi
80109ca4:	56                   	push   %esi
80109ca5:	53                   	push   %ebx
80109ca6:	83 ec 1c             	sub    $0x1c,%esp
80109ca9:	e8 22 ff ff ff       	call   80109bd0 <setupkvm>
80109cae:	85 c0                	test   %eax,%eax
80109cb0:	89 45 e0             	mov    %eax,-0x20(%ebp)
80109cb3:	0f 84 b2 00 00 00    	je     80109d6b <copyuvm+0xcb>
80109cb9:	8b 4d 0c             	mov    0xc(%ebp),%ecx
80109cbc:	85 c9                	test   %ecx,%ecx
80109cbe:	0f 84 9c 00 00 00    	je     80109d60 <copyuvm+0xc0>
80109cc4:	31 f6                	xor    %esi,%esi
80109cc6:	eb 4a                	jmp    80109d12 <copyuvm+0x72>
80109cc8:	90                   	nop
80109cc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80109cd0:	83 ec 04             	sub    $0x4,%esp
80109cd3:	81 c7 00 00 00 80    	add    $0x80000000,%edi
80109cd9:	68 00 10 00 00       	push   $0x1000
80109cde:	57                   	push   %edi
80109cdf:	50                   	push   %eax
80109ce0:	e8 0b cc ff ff       	call   801068f0 <memmove>
80109ce5:	58                   	pop    %eax
80109ce6:	5a                   	pop    %edx
80109ce7:	8d 93 00 00 00 80    	lea    -0x80000000(%ebx),%edx
80109ced:	8b 45 e0             	mov    -0x20(%ebp),%eax
80109cf0:	ff 75 e4             	pushl  -0x1c(%ebp)
80109cf3:	b9 00 10 00 00       	mov    $0x1000,%ecx
80109cf8:	52                   	push   %edx
80109cf9:	89 f2                	mov    %esi,%edx
80109cfb:	e8 a0 f7 ff ff       	call   801094a0 <mappages>
80109d00:	83 c4 10             	add    $0x10,%esp
80109d03:	85 c0                	test   %eax,%eax
80109d05:	78 3e                	js     80109d45 <copyuvm+0xa5>
80109d07:	81 c6 00 10 00 00    	add    $0x1000,%esi
80109d0d:	39 75 0c             	cmp    %esi,0xc(%ebp)
80109d10:	76 4e                	jbe    80109d60 <copyuvm+0xc0>
80109d12:	8b 45 08             	mov    0x8(%ebp),%eax
80109d15:	31 c9                	xor    %ecx,%ecx
80109d17:	89 f2                	mov    %esi,%edx
80109d19:	e8 02 f7 ff ff       	call   80109420 <walkpgdir>
80109d1e:	85 c0                	test   %eax,%eax
80109d20:	74 5a                	je     80109d7c <copyuvm+0xdc>
80109d22:	8b 18                	mov    (%eax),%ebx
80109d24:	f6 c3 01             	test   $0x1,%bl
80109d27:	74 46                	je     80109d6f <copyuvm+0xcf>
80109d29:	89 df                	mov    %ebx,%edi
80109d2b:	81 e3 ff 0f 00 00    	and    $0xfff,%ebx
80109d31:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
80109d34:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi
80109d3a:	e8 91 92 ff ff       	call   80102fd0 <kalloc>
80109d3f:	85 c0                	test   %eax,%eax
80109d41:	89 c3                	mov    %eax,%ebx
80109d43:	75 8b                	jne    80109cd0 <copyuvm+0x30>
80109d45:	83 ec 0c             	sub    $0xc,%esp
80109d48:	ff 75 e0             	pushl  -0x20(%ebp)
80109d4b:	e8 00 fe ff ff       	call   80109b50 <freevm>
80109d50:	83 c4 10             	add    $0x10,%esp
80109d53:	31 c0                	xor    %eax,%eax
80109d55:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109d58:	5b                   	pop    %ebx
80109d59:	5e                   	pop    %esi
80109d5a:	5f                   	pop    %edi
80109d5b:	5d                   	pop    %ebp
80109d5c:	c3                   	ret    
80109d5d:	8d 76 00             	lea    0x0(%esi),%esi
80109d60:	8b 45 e0             	mov    -0x20(%ebp),%eax
80109d63:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109d66:	5b                   	pop    %ebx
80109d67:	5e                   	pop    %esi
80109d68:	5f                   	pop    %edi
80109d69:	5d                   	pop    %ebp
80109d6a:	c3                   	ret    
80109d6b:	31 c0                	xor    %eax,%eax
80109d6d:	eb e6                	jmp    80109d55 <copyuvm+0xb5>
80109d6f:	83 ec 0c             	sub    $0xc,%esp
80109d72:	68 6a f8 10 80       	push   $0x8010f86a
80109d77:	e8 54 66 ff ff       	call   801003d0 <panic>
80109d7c:	83 ec 0c             	sub    $0xc,%esp
80109d7f:	68 50 f8 10 80       	push   $0x8010f850
80109d84:	e8 47 66 ff ff       	call   801003d0 <panic>
80109d89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

80109d90 <uva2ka>:
80109d90:	55                   	push   %ebp
80109d91:	31 c9                	xor    %ecx,%ecx
80109d93:	89 e5                	mov    %esp,%ebp
80109d95:	83 ec 08             	sub    $0x8,%esp
80109d98:	8b 55 0c             	mov    0xc(%ebp),%edx
80109d9b:	8b 45 08             	mov    0x8(%ebp),%eax
80109d9e:	e8 7d f6 ff ff       	call   80109420 <walkpgdir>
80109da3:	8b 00                	mov    (%eax),%eax
80109da5:	89 c2                	mov    %eax,%edx
80109da7:	83 e2 05             	and    $0x5,%edx
80109daa:	83 fa 05             	cmp    $0x5,%edx
80109dad:	75 11                	jne    80109dc0 <uva2ka+0x30>
80109daf:	25 00 f0 ff ff       	and    $0xfffff000,%eax
80109db4:	c9                   	leave  
80109db5:	05 00 00 00 80       	add    $0x80000000,%eax
80109dba:	c3                   	ret    
80109dbb:	90                   	nop
80109dbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80109dc0:	31 c0                	xor    %eax,%eax
80109dc2:	c9                   	leave  
80109dc3:	c3                   	ret    
80109dc4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
80109dca:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

80109dd0 <copyout>:
80109dd0:	55                   	push   %ebp
80109dd1:	89 e5                	mov    %esp,%ebp
80109dd3:	57                   	push   %edi
80109dd4:	56                   	push   %esi
80109dd5:	53                   	push   %ebx
80109dd6:	83 ec 1c             	sub    $0x1c,%esp
80109dd9:	8b 5d 14             	mov    0x14(%ebp),%ebx
80109ddc:	8b 55 0c             	mov    0xc(%ebp),%edx
80109ddf:	8b 7d 10             	mov    0x10(%ebp),%edi
80109de2:	85 db                	test   %ebx,%ebx
80109de4:	75 40                	jne    80109e26 <copyout+0x56>
80109de6:	eb 70                	jmp    80109e58 <copyout+0x88>
80109de8:	90                   	nop
80109de9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80109df0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
80109df3:	89 f1                	mov    %esi,%ecx
80109df5:	29 d1                	sub    %edx,%ecx
80109df7:	81 c1 00 10 00 00    	add    $0x1000,%ecx
80109dfd:	39 d9                	cmp    %ebx,%ecx
80109dff:	0f 47 cb             	cmova  %ebx,%ecx
80109e02:	29 f2                	sub    %esi,%edx
80109e04:	83 ec 04             	sub    $0x4,%esp
80109e07:	01 d0                	add    %edx,%eax
80109e09:	51                   	push   %ecx
80109e0a:	57                   	push   %edi
80109e0b:	50                   	push   %eax
80109e0c:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
80109e0f:	e8 dc ca ff ff       	call   801068f0 <memmove>
80109e14:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
80109e17:	83 c4 10             	add    $0x10,%esp
80109e1a:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx
80109e20:	01 cf                	add    %ecx,%edi
80109e22:	29 cb                	sub    %ecx,%ebx
80109e24:	74 32                	je     80109e58 <copyout+0x88>
80109e26:	89 d6                	mov    %edx,%esi
80109e28:	83 ec 08             	sub    $0x8,%esp
80109e2b:	89 55 e4             	mov    %edx,-0x1c(%ebp)
80109e2e:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi
80109e34:	56                   	push   %esi
80109e35:	ff 75 08             	pushl  0x8(%ebp)
80109e38:	e8 53 ff ff ff       	call   80109d90 <uva2ka>
80109e3d:	83 c4 10             	add    $0x10,%esp
80109e40:	85 c0                	test   %eax,%eax
80109e42:	75 ac                	jne    80109df0 <copyout+0x20>
80109e44:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109e47:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
80109e4c:	5b                   	pop    %ebx
80109e4d:	5e                   	pop    %esi
80109e4e:	5f                   	pop    %edi
80109e4f:	5d                   	pop    %ebp
80109e50:	c3                   	ret    
80109e51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80109e58:	8d 65 f4             	lea    -0xc(%ebp),%esp
80109e5b:	31 c0                	xor    %eax,%eax
80109e5d:	5b                   	pop    %ebx
80109e5e:	5e                   	pop    %esi
80109e5f:	5f                   	pop    %edi
80109e60:	5d                   	pop    %ebp
80109e61:	c3                   	ret    
80109e62:	66 90                	xchg   %ax,%ax
80109e64:	66 90                	xchg   %ax,%ax
80109e66:	66 90                	xchg   %ax,%ax
80109e68:	66 90                	xchg   %ax,%ax
80109e6a:	66 90                	xchg   %ax,%ax
80109e6c:	66 90                	xchg   %ax,%ax
80109e6e:	66 90                	xchg   %ax,%ax

80109e70 <__udivmoddi4>:
80109e70:	55                   	push   %ebp
80109e71:	89 e5                	mov    %esp,%ebp
80109e73:	57                   	push   %edi
80109e74:	56                   	push   %esi
80109e75:	53                   	push   %ebx
80109e76:	83 ec 3c             	sub    $0x3c,%esp
80109e79:	8b 45 0c             	mov    0xc(%ebp),%eax
80109e7c:	8b 55 14             	mov    0x14(%ebp),%edx
80109e7f:	8b 7d 08             	mov    0x8(%ebp),%edi
80109e82:	89 c3                	mov    %eax,%ebx
80109e84:	89 45 d4             	mov    %eax,-0x2c(%ebp)
80109e87:	8b 45 10             	mov    0x10(%ebp),%eax
80109e8a:	85 db                	test   %ebx,%ebx
80109e8c:	89 d1                	mov    %edx,%ecx
80109e8e:	89 55 dc             	mov    %edx,-0x24(%ebp)
80109e91:	89 7d e0             	mov    %edi,-0x20(%ebp)
80109e94:	89 45 d8             	mov    %eax,-0x28(%ebp)
80109e97:	75 3f                	jne    80109ed8 <__udivmoddi4+0x68>
80109e99:	85 d2                	test   %edx,%edx
80109e9b:	0f 85 ef 00 00 00    	jne    80109f90 <__udivmoddi4+0x120>
80109ea1:	8b 45 18             	mov    0x18(%ebp),%eax
80109ea4:	8b 5d d8             	mov    -0x28(%ebp),%ebx
80109ea7:	89 f9                	mov    %edi,%ecx
80109ea9:	85 c0                	test   %eax,%eax
80109eab:	74 17                	je     80109ec4 <__udivmoddi4+0x54>
80109ead:	8b 5d d8             	mov    -0x28(%ebp),%ebx
80109eb0:	89 f8                	mov    %edi,%eax
80109eb2:	31 d2                	xor    %edx,%edx
80109eb4:	89 f9                	mov    %edi,%ecx
80109eb6:	f7 f3                	div    %ebx
80109eb8:	8b 45 18             	mov    0x18(%ebp),%eax
80109ebb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
80109ec2:	89 10                	mov    %edx,(%eax)
80109ec4:	83 c4 3c             	add    $0x3c,%esp
80109ec7:	89 c8                	mov    %ecx,%eax
80109ec9:	31 d2                	xor    %edx,%edx
80109ecb:	f7 f3                	div    %ebx
80109ecd:	5b                   	pop    %ebx
80109ece:	31 d2                	xor    %edx,%edx
80109ed0:	5e                   	pop    %esi
80109ed1:	5f                   	pop    %edi
80109ed2:	5d                   	pop    %ebp
80109ed3:	c3                   	ret    
80109ed4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80109ed8:	8b 55 d8             	mov    -0x28(%ebp),%edx
80109edb:	85 c0                	test   %eax,%eax
80109edd:	89 de                	mov    %ebx,%esi
80109edf:	89 55 e4             	mov    %edx,-0x1c(%ebp)
80109ee2:	75 3c                	jne    80109f20 <__udivmoddi4+0xb0>
80109ee4:	85 c9                	test   %ecx,%ecx
80109ee6:	0f 84 d4 00 00 00    	je     80109fc0 <__udivmoddi4+0x150>
80109eec:	8b 45 e0             	mov    -0x20(%ebp),%eax
80109eef:	85 c0                	test   %eax,%eax
80109ef1:	0f 85 c9 02 00 00    	jne    8010a1c0 <__udivmoddi4+0x350>
80109ef7:	8b 75 18             	mov    0x18(%ebp),%esi
80109efa:	85 f6                	test   %esi,%esi
80109efc:	74 12                	je     80109f10 <__udivmoddi4+0xa0>
80109efe:	89 d8                	mov    %ebx,%eax
80109f00:	31 d2                	xor    %edx,%edx
80109f02:	f7 f1                	div    %ecx
80109f04:	8b 45 18             	mov    0x18(%ebp),%eax
80109f07:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
80109f0d:	89 50 04             	mov    %edx,0x4(%eax)
80109f10:	89 d8                	mov    %ebx,%eax
80109f12:	31 d2                	xor    %edx,%edx
80109f14:	f7 f1                	div    %ecx
80109f16:	31 d2                	xor    %edx,%edx
80109f18:	e9 91 00 00 00       	jmp    80109fae <__udivmoddi4+0x13e>
80109f1d:	8d 76 00             	lea    0x0(%esi),%esi
80109f20:	85 c9                	test   %ecx,%ecx
80109f22:	89 c8                	mov    %ecx,%eax
80109f24:	0f 85 c6 00 00 00    	jne    80109ff0 <__udivmoddi4+0x180>
80109f2a:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
80109f2d:	8d 51 ff             	lea    -0x1(%ecx),%edx
80109f30:	85 d1                	test   %edx,%ecx
80109f32:	0f 85 48 01 00 00    	jne    8010a080 <__udivmoddi4+0x210>
80109f38:	8b 75 18             	mov    0x18(%ebp),%esi
80109f3b:	85 f6                	test   %esi,%esi
80109f3d:	74 0f                	je     80109f4e <__udivmoddi4+0xde>
80109f3f:	23 55 e0             	and    -0x20(%ebp),%edx
80109f42:	8b 45 18             	mov    0x18(%ebp),%eax
80109f45:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
80109f4c:	89 10                	mov    %edx,(%eax)
80109f4e:	89 f8                	mov    %edi,%eax
80109f50:	8b 7d e4             	mov    -0x1c(%ebp),%edi
80109f53:	8b 55 d4             	mov    -0x2c(%ebp),%edx
80109f56:	83 ff 01             	cmp    $0x1,%edi
80109f59:	74 53                	je     80109fae <__udivmoddi4+0x13e>
80109f5b:	31 f6                	xor    %esi,%esi
80109f5d:	89 d8                	mov    %ebx,%eax
80109f5f:	f3 0f bc f7          	tzcnt  %edi,%esi
80109f63:	8b 7d e0             	mov    -0x20(%ebp),%edi
80109f66:	89 f1                	mov    %esi,%ecx
80109f68:	d3 e8                	shr    %cl,%eax
80109f6a:	b9 20 00 00 00       	mov    $0x20,%ecx
80109f6f:	89 45 bc             	mov    %eax,-0x44(%ebp)
80109f72:	29 f1                	sub    %esi,%ecx
80109f74:	89 d8                	mov    %ebx,%eax
80109f76:	d3 e0                	shl    %cl,%eax
80109f78:	89 f1                	mov    %esi,%ecx
80109f7a:	8b 55 bc             	mov    -0x44(%ebp),%edx
80109f7d:	d3 ef                	shr    %cl,%edi
80109f7f:	09 f8                	or     %edi,%eax
80109f81:	89 45 b8             	mov    %eax,-0x48(%ebp)
80109f84:	8b 45 b8             	mov    -0x48(%ebp),%eax
80109f87:	eb 25                	jmp    80109fae <__udivmoddi4+0x13e>
80109f89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
80109f90:	8b 45 18             	mov    0x18(%ebp),%eax
80109f93:	85 c0                	test   %eax,%eax
80109f95:	0f 84 bc 00 00 00    	je     8010a057 <__udivmoddi4+0x1e7>
80109f9b:	8b 45 18             	mov    0x18(%ebp),%eax
80109f9e:	8b 7d e0             	mov    -0x20(%ebp),%edi
80109fa1:	31 d2                	xor    %edx,%edx
80109fa3:	89 38                	mov    %edi,(%eax)
80109fa5:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
80109fac:	31 c0                	xor    %eax,%eax
80109fae:	83 c4 3c             	add    $0x3c,%esp
80109fb1:	5b                   	pop    %ebx
80109fb2:	5e                   	pop    %esi
80109fb3:	5f                   	pop    %edi
80109fb4:	5d                   	pop    %ebp
80109fb5:	c3                   	ret    
80109fb6:	8d 76 00             	lea    0x0(%esi),%esi
80109fb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
80109fc0:	8b 45 18             	mov    0x18(%ebp),%eax
80109fc3:	85 c0                	test   %eax,%eax
80109fc5:	74 12                	je     80109fd9 <__udivmoddi4+0x169>
80109fc7:	89 d8                	mov    %ebx,%eax
80109fc9:	31 d2                	xor    %edx,%edx
80109fcb:	f7 f1                	div    %ecx
80109fcd:	8b 45 18             	mov    0x18(%ebp),%eax
80109fd0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
80109fd7:	89 10                	mov    %edx,(%eax)
80109fd9:	83 c4 3c             	add    $0x3c,%esp
80109fdc:	89 d8                	mov    %ebx,%eax
80109fde:	31 c9                	xor    %ecx,%ecx
80109fe0:	31 d2                	xor    %edx,%edx
80109fe2:	5b                   	pop    %ebx
80109fe3:	f7 f1                	div    %ecx
80109fe5:	5e                   	pop    %esi
80109fe6:	31 d2                	xor    %edx,%edx
80109fe8:	5f                   	pop    %edi
80109fe9:	5d                   	pop    %ebp
80109fea:	c3                   	ret    
80109feb:	90                   	nop
80109fec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
80109ff0:	0f bd c9             	bsr    %ecx,%ecx
80109ff3:	0f bd c3             	bsr    %ebx,%eax
80109ff6:	83 f1 1f             	xor    $0x1f,%ecx
80109ff9:	83 f0 1f             	xor    $0x1f,%eax
80109ffc:	29 c1                	sub    %eax,%ecx
80109ffe:	83 f9 1f             	cmp    $0x1f,%ecx
8010a001:	77 4d                	ja     8010a050 <__udivmoddi4+0x1e0>
8010a003:	8d 41 01             	lea    0x1(%ecx),%eax
8010a006:	83 f8 20             	cmp    $0x20,%eax
8010a009:	89 45 cc             	mov    %eax,-0x34(%ebp)
8010a00c:	0f 84 26 02 00 00    	je     8010a238 <__udivmoddi4+0x3c8>
8010a012:	8b 45 cc             	mov    -0x34(%ebp),%eax
8010a015:	8b 7d e0             	mov    -0x20(%ebp),%edi
8010a018:	ba 20 00 00 00       	mov    $0x20,%edx
8010a01d:	29 c2                	sub    %eax,%edx
8010a01f:	89 fb                	mov    %edi,%ebx
8010a021:	89 d1                	mov    %edx,%ecx
8010a023:	89 55 e4             	mov    %edx,-0x1c(%ebp)
8010a026:	89 f2                	mov    %esi,%edx
8010a028:	d3 e3                	shl    %cl,%ebx
8010a02a:	89 c1                	mov    %eax,%ecx
8010a02c:	d3 ea                	shr    %cl,%edx
8010a02e:	0f b6 4d e4          	movzbl -0x1c(%ebp),%ecx
8010a032:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8010a039:	89 d0                	mov    %edx,%eax
8010a03b:	89 fa                	mov    %edi,%edx
8010a03d:	d3 e6                	shl    %cl,%esi
8010a03f:	0f b6 4d cc          	movzbl -0x34(%ebp),%ecx
8010a043:	d3 ea                	shr    %cl,%edx
8010a045:	09 d6                	or     %edx,%esi
8010a047:	e9 94 00 00 00       	jmp    8010a0e0 <__udivmoddi4+0x270>
8010a04c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010a050:	8b 45 18             	mov    0x18(%ebp),%eax
8010a053:	85 c0                	test   %eax,%eax
8010a055:	75 0c                	jne    8010a063 <__udivmoddi4+0x1f3>
8010a057:	83 c4 3c             	add    $0x3c,%esp
8010a05a:	31 c0                	xor    %eax,%eax
8010a05c:	31 d2                	xor    %edx,%edx
8010a05e:	5b                   	pop    %ebx
8010a05f:	5e                   	pop    %esi
8010a060:	5f                   	pop    %edi
8010a061:	5d                   	pop    %ebp
8010a062:	c3                   	ret    
8010a063:	8b 45 18             	mov    0x18(%ebp),%eax
8010a066:	31 d2                	xor    %edx,%edx
8010a068:	89 38                	mov    %edi,(%eax)
8010a06a:	8b 7d d4             	mov    -0x2c(%ebp),%edi
8010a06d:	89 78 04             	mov    %edi,0x4(%eax)
8010a070:	31 c0                	xor    %eax,%eax
8010a072:	e9 37 ff ff ff       	jmp    80109fae <__udivmoddi4+0x13e>
8010a077:	89 f6                	mov    %esi,%esi
8010a079:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010a080:	0f bd 4d e4          	bsr    -0x1c(%ebp),%ecx
8010a084:	0f bd d3             	bsr    %ebx,%edx
8010a087:	83 f2 1f             	xor    $0x1f,%edx
8010a08a:	83 f1 1f             	xor    $0x1f,%ecx
8010a08d:	89 cb                	mov    %ecx,%ebx
8010a08f:	29 d3                	sub    %edx,%ebx
8010a091:	8d 4b 21             	lea    0x21(%ebx),%ecx
8010a094:	83 f9 20             	cmp    $0x20,%ecx
8010a097:	89 4d cc             	mov    %ecx,-0x34(%ebp)
8010a09a:	0f 84 b0 01 00 00    	je     8010a250 <__udivmoddi4+0x3e0>
8010a0a0:	8b 7d cc             	mov    -0x34(%ebp),%edi
8010a0a3:	83 ff 1f             	cmp    $0x1f,%edi
8010a0a6:	0f 87 b4 01 00 00    	ja     8010a260 <__udivmoddi4+0x3f0>
8010a0ac:	b8 20 00 00 00       	mov    $0x20,%eax
8010a0b1:	8b 5d e0             	mov    -0x20(%ebp),%ebx
8010a0b4:	89 f2                	mov    %esi,%edx
8010a0b6:	29 f8                	sub    %edi,%eax
8010a0b8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8010a0bf:	89 c1                	mov    %eax,%ecx
8010a0c1:	d3 e3                	shl    %cl,%ebx
8010a0c3:	89 f9                	mov    %edi,%ecx
8010a0c5:	d3 ea                	shr    %cl,%edx
8010a0c7:	89 c1                	mov    %eax,%ecx
8010a0c9:	8b 45 e0             	mov    -0x20(%ebp),%eax
8010a0cc:	d3 e6                	shl    %cl,%esi
8010a0ce:	89 f9                	mov    %edi,%ecx
8010a0d0:	d3 e8                	shr    %cl,%eax
8010a0d2:	09 c6                	or     %eax,%esi
8010a0d4:	89 d0                	mov    %edx,%eax
8010a0d6:	8d 76 00             	lea    0x0(%esi),%esi
8010a0d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010a0e0:	8b 55 d8             	mov    -0x28(%ebp),%edx
8010a0e3:	8b 4d dc             	mov    -0x24(%ebp),%ecx
8010a0e6:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8010a0ed:	89 5d d4             	mov    %ebx,-0x2c(%ebp)
8010a0f0:	83 c2 ff             	add    $0xffffffff,%edx
8010a0f3:	83 d1 ff             	adc    $0xffffffff,%ecx
8010a0f6:	89 55 c0             	mov    %edx,-0x40(%ebp)
8010a0f9:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8010a0fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010a100:	89 f7                	mov    %esi,%edi
8010a102:	8d 14 36             	lea    (%esi,%esi,1),%edx
8010a105:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
8010a108:	c1 ef 1f             	shr    $0x1f,%edi
8010a10b:	01 c0                	add    %eax,%eax
8010a10d:	89 7d d0             	mov    %edi,-0x30(%ebp)
8010a110:	8b 7d d4             	mov    -0x2c(%ebp),%edi
8010a113:	89 fe                	mov    %edi,%esi
8010a115:	01 ff                	add    %edi,%edi
8010a117:	c1 ee 1f             	shr    $0x1f,%esi
8010a11a:	89 f1                	mov    %esi,%ecx
8010a11c:	89 de                	mov    %ebx,%esi
8010a11e:	09 d1                	or     %edx,%ecx
8010a120:	8b 55 d0             	mov    -0x30(%ebp),%edx
8010a123:	c1 ee 1f             	shr    $0x1f,%esi
8010a126:	09 f7                	or     %esi,%edi
8010a128:	89 de                	mov    %ebx,%esi
8010a12a:	8b 5d e0             	mov    -0x20(%ebp),%ebx
8010a12d:	89 7d d4             	mov    %edi,-0x2c(%ebp)
8010a130:	01 f6                	add    %esi,%esi
8010a132:	09 c2                	or     %eax,%edx
8010a134:	8b 45 c0             	mov    -0x40(%ebp),%eax
8010a137:	89 d7                	mov    %edx,%edi
8010a139:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8010a13c:	09 f3                	or     %esi,%ebx
8010a13e:	89 ce                	mov    %ecx,%esi
8010a140:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
8010a143:	29 c8                	sub    %ecx,%eax
8010a145:	19 fa                	sbb    %edi,%edx
8010a147:	89 d0                	mov    %edx,%eax
8010a149:	8b 55 d8             	mov    -0x28(%ebp),%edx
8010a14c:	c1 f8 1f             	sar    $0x1f,%eax
8010a14f:	89 c1                	mov    %eax,%ecx
8010a151:	83 e1 01             	and    $0x1,%ecx
8010a154:	89 d3                	mov    %edx,%ebx
8010a156:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8010a159:	8b 4d dc             	mov    -0x24(%ebp),%ecx
8010a15c:	21 c3                	and    %eax,%ebx
8010a15e:	89 5d e8             	mov    %ebx,-0x18(%ebp)
8010a161:	21 c8                	and    %ecx,%eax
8010a163:	2b 75 e8             	sub    -0x18(%ebp),%esi
8010a166:	89 45 ec             	mov    %eax,-0x14(%ebp)
8010a169:	1b 7d ec             	sbb    -0x14(%ebp),%edi
8010a16c:	83 6d cc 01          	subl   $0x1,-0x34(%ebp)
8010a170:	89 f8                	mov    %edi,%eax
8010a172:	75 8c                	jne    8010a100 <__udivmoddi4+0x290>
8010a174:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8010a177:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
8010a17a:	89 7d ec             	mov    %edi,-0x14(%ebp)
8010a17d:	8b 7d e0             	mov    -0x20(%ebp),%edi
8010a180:	89 75 e8             	mov    %esi,-0x18(%ebp)
8010a183:	89 45 b8             	mov    %eax,-0x48(%ebp)
8010a186:	89 5d bc             	mov    %ebx,-0x44(%ebp)
8010a189:	8b 4d b8             	mov    -0x48(%ebp),%ecx
8010a18c:	8b 5d bc             	mov    -0x44(%ebp),%ebx
8010a18f:	0f a4 cb 01          	shld   $0x1,%ecx,%ebx
8010a193:	01 c9                	add    %ecx,%ecx
8010a195:	09 cf                	or     %ecx,%edi
8010a197:	8b 4d 18             	mov    0x18(%ebp),%ecx
8010a19a:	89 da                	mov    %ebx,%edx
8010a19c:	89 f8                	mov    %edi,%eax
8010a19e:	85 c9                	test   %ecx,%ecx
8010a1a0:	0f 84 08 fe ff ff    	je     80109fae <__udivmoddi4+0x13e>
8010a1a6:	8b 7d 18             	mov    0x18(%ebp),%edi
8010a1a9:	8b 5d e8             	mov    -0x18(%ebp),%ebx
8010a1ac:	8b 75 ec             	mov    -0x14(%ebp),%esi
8010a1af:	89 1f                	mov    %ebx,(%edi)
8010a1b1:	89 77 04             	mov    %esi,0x4(%edi)
8010a1b4:	83 c4 3c             	add    $0x3c,%esp
8010a1b7:	5b                   	pop    %ebx
8010a1b8:	5e                   	pop    %esi
8010a1b9:	5f                   	pop    %edi
8010a1ba:	5d                   	pop    %ebp
8010a1bb:	c3                   	ret    
8010a1bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010a1c0:	8d 41 ff             	lea    -0x1(%ecx),%eax
8010a1c3:	85 c1                	test   %eax,%ecx
8010a1c5:	75 29                	jne    8010a1f0 <__udivmoddi4+0x380>
8010a1c7:	8b 55 18             	mov    0x18(%ebp),%edx
8010a1ca:	85 d2                	test   %edx,%edx
8010a1cc:	74 0a                	je     8010a1d8 <__udivmoddi4+0x368>
8010a1ce:	8b 55 18             	mov    0x18(%ebp),%edx
8010a1d1:	21 d8                	and    %ebx,%eax
8010a1d3:	89 3a                	mov    %edi,(%edx)
8010a1d5:	89 42 04             	mov    %eax,0x4(%edx)
8010a1d8:	f3 0f bc c9          	tzcnt  %ecx,%ecx
8010a1dc:	89 d8                	mov    %ebx,%eax
8010a1de:	31 d2                	xor    %edx,%edx
8010a1e0:	d3 e8                	shr    %cl,%eax
8010a1e2:	e9 c7 fd ff ff       	jmp    80109fae <__udivmoddi4+0x13e>
8010a1e7:	89 f6                	mov    %esi,%esi
8010a1e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010a1f0:	0f bd c9             	bsr    %ecx,%ecx
8010a1f3:	0f bd c3             	bsr    %ebx,%eax
8010a1f6:	83 f1 1f             	xor    $0x1f,%ecx
8010a1f9:	83 f0 1f             	xor    $0x1f,%eax
8010a1fc:	29 c1                	sub    %eax,%ecx
8010a1fe:	83 f9 1e             	cmp    $0x1e,%ecx
8010a201:	0f 87 49 fe ff ff    	ja     8010a050 <__udivmoddi4+0x1e0>
8010a207:	8d 41 01             	lea    0x1(%ecx),%eax
8010a20a:	ba 20 00 00 00       	mov    $0x20,%edx
8010a20f:	8b 5d e0             	mov    -0x20(%ebp),%ebx
8010a212:	29 c2                	sub    %eax,%edx
8010a214:	89 c7                	mov    %eax,%edi
8010a216:	89 45 cc             	mov    %eax,-0x34(%ebp)
8010a219:	89 d1                	mov    %edx,%ecx
8010a21b:	89 f0                	mov    %esi,%eax
8010a21d:	d3 e3                	shl    %cl,%ebx
8010a21f:	89 f9                	mov    %edi,%ecx
8010a221:	d3 e8                	shr    %cl,%eax
8010a223:	89 d1                	mov    %edx,%ecx
8010a225:	8b 55 e0             	mov    -0x20(%ebp),%edx
8010a228:	d3 e6                	shl    %cl,%esi
8010a22a:	89 f9                	mov    %edi,%ecx
8010a22c:	d3 ea                	shr    %cl,%edx
8010a22e:	09 d6                	or     %edx,%esi
8010a230:	e9 ab fe ff ff       	jmp    8010a0e0 <__udivmoddi4+0x270>
8010a235:	8d 76 00             	lea    0x0(%esi),%esi
8010a238:	89 fb                	mov    %edi,%ebx
8010a23a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8010a241:	31 c0                	xor    %eax,%eax
8010a243:	e9 98 fe ff ff       	jmp    8010a0e0 <__udivmoddi4+0x270>
8010a248:	90                   	nop
8010a249:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010a250:	89 fb                	mov    %edi,%ebx
8010a252:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8010a259:	e9 82 fe ff ff       	jmp    8010a0e0 <__udivmoddi4+0x270>
8010a25e:	66 90                	xchg   %ax,%ax
8010a260:	b9 40 00 00 00       	mov    $0x40,%ecx
8010a265:	2b 4d cc             	sub    -0x34(%ebp),%ecx
8010a268:	8b 7d e0             	mov    -0x20(%ebp),%edi
8010a26b:	8d 53 01             	lea    0x1(%ebx),%edx
8010a26e:	89 f3                	mov    %esi,%ebx
8010a270:	d3 e7                	shl    %cl,%edi
8010a272:	d3 e3                	shl    %cl,%ebx
8010a274:	89 d1                	mov    %edx,%ecx
8010a276:	89 7d e4             	mov    %edi,-0x1c(%ebp)
8010a279:	8b 7d e0             	mov    -0x20(%ebp),%edi
8010a27c:	d3 ee                	shr    %cl,%esi
8010a27e:	d3 ef                	shr    %cl,%edi
8010a280:	09 fb                	or     %edi,%ebx
8010a282:	e9 59 fe ff ff       	jmp    8010a0e0 <__udivmoddi4+0x270>
8010a287:	89 f6                	mov    %esi,%esi
8010a289:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010a290 <__udivdi3>:
8010a290:	55                   	push   %ebp
8010a291:	89 e5                	mov    %esp,%ebp
8010a293:	83 ec 04             	sub    $0x4,%esp
8010a296:	6a 00                	push   $0x0
8010a298:	ff 75 14             	pushl  0x14(%ebp)
8010a29b:	ff 75 10             	pushl  0x10(%ebp)
8010a29e:	ff 75 0c             	pushl  0xc(%ebp)
8010a2a1:	ff 75 08             	pushl  0x8(%ebp)
8010a2a4:	e8 c7 fb ff ff       	call   80109e70 <__udivmoddi4>
8010a2a9:	c9                   	leave  
8010a2aa:	c3                   	ret    
8010a2ab:	90                   	nop
8010a2ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

8010a2b0 <__umoddi3>:
8010a2b0:	55                   	push   %ebp
8010a2b1:	89 e5                	mov    %esp,%ebp
8010a2b3:	83 ec 14             	sub    $0x14,%esp
8010a2b6:	8d 45 f8             	lea    -0x8(%ebp),%eax
8010a2b9:	50                   	push   %eax
8010a2ba:	ff 75 14             	pushl  0x14(%ebp)
8010a2bd:	ff 75 10             	pushl  0x10(%ebp)
8010a2c0:	ff 75 0c             	pushl  0xc(%ebp)
8010a2c3:	ff 75 08             	pushl  0x8(%ebp)
8010a2c6:	e8 a5 fb ff ff       	call   80109e70 <__udivmoddi4>
8010a2cb:	8b 45 f8             	mov    -0x8(%ebp),%eax
8010a2ce:	8b 55 fc             	mov    -0x4(%ebp),%edx
8010a2d1:	c9                   	leave  
8010a2d2:	c3                   	ret    
8010a2d3:	66 90                	xchg   %ax,%ax
8010a2d5:	66 90                	xchg   %ax,%ax
8010a2d7:	66 90                	xchg   %ax,%ax
8010a2d9:	66 90                	xchg   %ax,%ax
8010a2db:	66 90                	xchg   %ax,%ax
8010a2dd:	66 90                	xchg   %ax,%ax
8010a2df:	90                   	nop

8010a2e0 <steady_clock_now>:
8010a2e0:	55                   	push   %ebp
8010a2e1:	b9 e8 03 00 00       	mov    $0x3e8,%ecx
8010a2e6:	0f 31                	rdtsc  
8010a2e8:	89 e5                	mov    %esp,%ebp
8010a2ea:	57                   	push   %edi
8010a2eb:	56                   	push   %esi
8010a2ec:	69 f2 e8 03 00 00    	imul   $0x3e8,%edx,%esi
8010a2f2:	53                   	push   %ebx
8010a2f3:	f7 e1                	mul    %ecx
8010a2f5:	83 ec 0c             	sub    $0xc,%esp
8010a2f8:	6a 00                	push   $0x0
8010a2fa:	68 98 0e 31 00       	push   $0x310e98
8010a2ff:	01 f2                	add    %esi,%edx
8010a301:	52                   	push   %edx
8010a302:	50                   	push   %eax
8010a303:	e8 88 ff ff ff       	call   8010a290 <__udivdi3>
8010a308:	83 c4 10             	add    $0x10,%esp
8010a30b:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010a30e:	5b                   	pop    %ebx
8010a30f:	5e                   	pop    %esi
8010a310:	5f                   	pop    %edi
8010a311:	5d                   	pop    %ebp
8010a312:	c3                   	ret    
8010a313:	66 90                	xchg   %ax,%ax
8010a315:	66 90                	xchg   %ax,%ax
8010a317:	66 90                	xchg   %ax,%ax
8010a319:	66 90                	xchg   %ax,%ax
8010a31b:	66 90                	xchg   %ax,%ax
8010a31d:	66 90                	xchg   %ax,%ax
8010a31f:	90                   	nop

8010a320 <atoi>:
8010a320:	55                   	push   %ebp
8010a321:	89 e5                	mov    %esp,%ebp
8010a323:	53                   	push   %ebx
8010a324:	8b 4d 08             	mov    0x8(%ebp),%ecx
8010a327:	0f be 11             	movsbl (%ecx),%edx
8010a32a:	84 d2                	test   %dl,%dl
8010a32c:	74 3a                	je     8010a368 <atoi+0x48>
8010a32e:	8d 42 d0             	lea    -0x30(%edx),%eax
8010a331:	3c 09                	cmp    $0x9,%al
8010a333:	77 2b                	ja     8010a360 <atoi+0x40>
8010a335:	83 c1 01             	add    $0x1,%ecx
8010a338:	31 c0                	xor    %eax,%eax
8010a33a:	eb 0f                	jmp    8010a34b <atoi+0x2b>
8010a33c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010a340:	8d 5a d0             	lea    -0x30(%edx),%ebx
8010a343:	83 c1 01             	add    $0x1,%ecx
8010a346:	80 fb 09             	cmp    $0x9,%bl
8010a349:	77 15                	ja     8010a360 <atoi+0x40>
8010a34b:	8d 04 80             	lea    (%eax,%eax,4),%eax
8010a34e:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax
8010a352:	0f be 11             	movsbl (%ecx),%edx
8010a355:	84 d2                	test   %dl,%dl
8010a357:	75 e7                	jne    8010a340 <atoi+0x20>
8010a359:	5b                   	pop    %ebx
8010a35a:	5d                   	pop    %ebp
8010a35b:	c3                   	ret    
8010a35c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010a360:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010a365:	5b                   	pop    %ebx
8010a366:	5d                   	pop    %ebp
8010a367:	c3                   	ret    
8010a368:	31 c0                	xor    %eax,%eax
8010a36a:	eb ed                	jmp    8010a359 <atoi+0x39>
8010a36c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

8010a370 <itoa>:
8010a370:	55                   	push   %ebp
8010a371:	89 e5                	mov    %esp,%ebp
8010a373:	57                   	push   %edi
8010a374:	56                   	push   %esi
8010a375:	53                   	push   %ebx
8010a376:	83 ec 04             	sub    $0x4,%esp
8010a379:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8010a37c:	83 f9 00             	cmp    $0x0,%ecx
8010a37f:	7e 76                	jle    8010a3f7 <itoa+0x87>
8010a381:	89 cb                	mov    %ecx,%ebx
8010a383:	31 f6                	xor    %esi,%esi
8010a385:	bf 67 66 66 66       	mov    $0x66666667,%edi
8010a38a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010a390:	89 d8                	mov    %ebx,%eax
8010a392:	c1 fb 1f             	sar    $0x1f,%ebx
8010a395:	83 c6 01             	add    $0x1,%esi
8010a398:	f7 ef                	imul   %edi
8010a39a:	c1 fa 02             	sar    $0x2,%edx
8010a39d:	29 da                	sub    %ebx,%edx
8010a39f:	89 d3                	mov    %edx,%ebx
8010a3a1:	75 ed                	jne    8010a390 <itoa+0x20>
8010a3a3:	89 f3                	mov    %esi,%ebx
8010a3a5:	89 75 f0             	mov    %esi,-0x10(%ebp)
8010a3a8:	bf 67 66 66 66       	mov    $0x66666667,%edi
8010a3ad:	8b 75 08             	mov    0x8(%ebp),%esi
8010a3b0:	eb 0a                	jmp    8010a3bc <itoa+0x4c>
8010a3b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010a3b8:	85 db                	test   %ebx,%ebx
8010a3ba:	7e 25                	jle    8010a3e1 <itoa+0x71>
8010a3bc:	89 c8                	mov    %ecx,%eax
8010a3be:	f7 ef                	imul   %edi
8010a3c0:	89 c8                	mov    %ecx,%eax
8010a3c2:	c1 f8 1f             	sar    $0x1f,%eax
8010a3c5:	c1 fa 02             	sar    $0x2,%edx
8010a3c8:	29 c2                	sub    %eax,%edx
8010a3ca:	8d 04 92             	lea    (%edx,%edx,4),%eax
8010a3cd:	01 c0                	add    %eax,%eax
8010a3cf:	29 c1                	sub    %eax,%ecx
8010a3d1:	83 c1 30             	add    $0x30,%ecx
8010a3d4:	88 4c 1e ff          	mov    %cl,-0x1(%esi,%ebx,1)
8010a3d8:	83 eb 01             	sub    $0x1,%ebx
8010a3db:	85 d2                	test   %edx,%edx
8010a3dd:	89 d1                	mov    %edx,%ecx
8010a3df:	7f d7                	jg     8010a3b8 <itoa+0x48>
8010a3e1:	8b 75 f0             	mov    -0x10(%ebp),%esi
8010a3e4:	89 f0                	mov    %esi,%eax
8010a3e6:	8b 7d 08             	mov    0x8(%ebp),%edi
8010a3e9:	c6 04 07 00          	movb   $0x0,(%edi,%eax,1)
8010a3ed:	83 c4 04             	add    $0x4,%esp
8010a3f0:	89 f0                	mov    %esi,%eax
8010a3f2:	5b                   	pop    %ebx
8010a3f3:	5e                   	pop    %esi
8010a3f4:	5f                   	pop    %edi
8010a3f5:	5d                   	pop    %ebp
8010a3f6:	c3                   	ret    
8010a3f7:	75 12                	jne    8010a40b <itoa+0x9b>
8010a3f9:	8b 45 08             	mov    0x8(%ebp),%eax
8010a3fc:	be 01 00 00 00       	mov    $0x1,%esi
8010a401:	c6 00 30             	movb   $0x30,(%eax)
8010a404:	b8 01 00 00 00       	mov    $0x1,%eax
8010a409:	eb db                	jmp    8010a3e6 <itoa+0x76>
8010a40b:	31 c0                	xor    %eax,%eax
8010a40d:	31 f6                	xor    %esi,%esi
8010a40f:	eb d5                	jmp    8010a3e6 <itoa+0x76>
8010a411:	eb 0d                	jmp    8010a420 <utoa>
8010a413:	90                   	nop
8010a414:	90                   	nop
8010a415:	90                   	nop
8010a416:	90                   	nop
8010a417:	90                   	nop
8010a418:	90                   	nop
8010a419:	90                   	nop
8010a41a:	90                   	nop
8010a41b:	90                   	nop
8010a41c:	90                   	nop
8010a41d:	90                   	nop
8010a41e:	90                   	nop
8010a41f:	90                   	nop

8010a420 <utoa>:
8010a420:	55                   	push   %ebp
8010a421:	89 e5                	mov    %esp,%ebp
8010a423:	57                   	push   %edi
8010a424:	56                   	push   %esi
8010a425:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8010a428:	53                   	push   %ebx
8010a429:	8b 7d 08             	mov    0x8(%ebp),%edi
8010a42c:	85 c9                	test   %ecx,%ecx
8010a42e:	74 5a                	je     8010a48a <utoa+0x6a>
8010a430:	89 ca                	mov    %ecx,%edx
8010a432:	31 f6                	xor    %esi,%esi
8010a434:	bb cd cc cc cc       	mov    $0xcccccccd,%ebx
8010a439:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010a440:	89 d0                	mov    %edx,%eax
8010a442:	83 c6 01             	add    $0x1,%esi
8010a445:	f7 e3                	mul    %ebx
8010a447:	c1 ea 03             	shr    $0x3,%edx
8010a44a:	85 d2                	test   %edx,%edx
8010a44c:	75 f2                	jne    8010a440 <utoa+0x20>
8010a44e:	89 f3                	mov    %esi,%ebx
8010a450:	eb 0a                	jmp    8010a45c <utoa+0x3c>
8010a452:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010a458:	85 db                	test   %ebx,%ebx
8010a45a:	7e 21                	jle    8010a47d <utoa+0x5d>
8010a45c:	b8 cd cc cc cc       	mov    $0xcccccccd,%eax
8010a461:	f7 e1                	mul    %ecx
8010a463:	c1 ea 03             	shr    $0x3,%edx
8010a466:	8d 04 92             	lea    (%edx,%edx,4),%eax
8010a469:	01 c0                	add    %eax,%eax
8010a46b:	29 c1                	sub    %eax,%ecx
8010a46d:	83 c1 30             	add    $0x30,%ecx
8010a470:	88 4c 1f ff          	mov    %cl,-0x1(%edi,%ebx,1)
8010a474:	83 eb 01             	sub    $0x1,%ebx
8010a477:	85 d2                	test   %edx,%edx
8010a479:	89 d1                	mov    %edx,%ecx
8010a47b:	75 db                	jne    8010a458 <utoa+0x38>
8010a47d:	89 f0                	mov    %esi,%eax
8010a47f:	c6 04 07 00          	movb   $0x0,(%edi,%eax,1)
8010a483:	89 f0                	mov    %esi,%eax
8010a485:	5b                   	pop    %ebx
8010a486:	5e                   	pop    %esi
8010a487:	5f                   	pop    %edi
8010a488:	5d                   	pop    %ebp
8010a489:	c3                   	ret    
8010a48a:	b8 01 00 00 00       	mov    $0x1,%eax
8010a48f:	be 01 00 00 00       	mov    $0x1,%esi
8010a494:	c6 07 30             	movb   $0x30,(%edi)
8010a497:	c6 04 07 00          	movb   $0x0,(%edi,%eax,1)
8010a49b:	89 f0                	mov    %esi,%eax
8010a49d:	5b                   	pop    %ebx
8010a49e:	5e                   	pop    %esi
8010a49f:	5f                   	pop    %edi
8010a4a0:	5d                   	pop    %ebp
8010a4a1:	c3                   	ret    
8010a4a2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010a4a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010a4b0 <intlen>:
8010a4b0:	55                   	push   %ebp
8010a4b1:	89 e5                	mov    %esp,%ebp
8010a4b3:	56                   	push   %esi
8010a4b4:	53                   	push   %ebx
8010a4b5:	8b 4d 08             	mov    0x8(%ebp),%ecx
8010a4b8:	bb 01 00 00 00       	mov    $0x1,%ebx
8010a4bd:	8d 41 09             	lea    0x9(%ecx),%eax
8010a4c0:	83 f8 12             	cmp    $0x12,%eax
8010a4c3:	76 24                	jbe    8010a4e9 <intlen+0x39>
8010a4c5:	be 67 66 66 66       	mov    $0x66666667,%esi
8010a4ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010a4d0:	89 c8                	mov    %ecx,%eax
8010a4d2:	c1 f9 1f             	sar    $0x1f,%ecx
8010a4d5:	83 c3 01             	add    $0x1,%ebx
8010a4d8:	f7 ee                	imul   %esi
8010a4da:	c1 fa 02             	sar    $0x2,%edx
8010a4dd:	29 ca                	sub    %ecx,%edx
8010a4df:	8d 42 09             	lea    0x9(%edx),%eax
8010a4e2:	89 d1                	mov    %edx,%ecx
8010a4e4:	83 f8 12             	cmp    $0x12,%eax
8010a4e7:	77 e7                	ja     8010a4d0 <intlen+0x20>
8010a4e9:	89 d8                	mov    %ebx,%eax
8010a4eb:	5b                   	pop    %ebx
8010a4ec:	5e                   	pop    %esi
8010a4ed:	5d                   	pop    %ebp
8010a4ee:	c3                   	ret    
8010a4ef:	90                   	nop

8010a4f0 <get_file_name_constant>:
8010a4f0:	55                   	push   %ebp
8010a4f1:	89 e5                	mov    %esp,%ebp
8010a4f3:	53                   	push   %ebx
8010a4f4:	89 c3                	mov    %eax,%ebx
8010a4f6:	83 ec 0c             	sub    $0xc,%esp
8010a4f9:	68 a7 f8 10 80       	push   $0x8010f8a7
8010a4fe:	50                   	push   %eax
8010a4ff:	e8 dc c4 ff ff       	call   801069e0 <strcmp>
8010a504:	83 c4 10             	add    $0x10,%esp
8010a507:	85 c0                	test   %eax,%eax
8010a509:	75 0d                	jne    8010a518 <get_file_name_constant+0x28>
8010a50b:	b8 01 00 00 00       	mov    $0x1,%eax
8010a510:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010a513:	c9                   	leave  
8010a514:	c3                   	ret    
8010a515:	8d 76 00             	lea    0x0(%esi),%esi
8010a518:	83 ec 08             	sub    $0x8,%esp
8010a51b:	68 b4 f8 10 80       	push   $0x8010f8b4
8010a520:	53                   	push   %ebx
8010a521:	e8 ba c4 ff ff       	call   801069e0 <strcmp>
8010a526:	89 c2                	mov    %eax,%edx
8010a528:	83 c4 10             	add    $0x10,%esp
8010a52b:	b8 02 00 00 00       	mov    $0x2,%eax
8010a530:	85 d2                	test   %edx,%edx
8010a532:	74 dc                	je     8010a510 <get_file_name_constant+0x20>
8010a534:	83 ec 08             	sub    $0x8,%esp
8010a537:	68 cb f8 10 80       	push   $0x8010f8cb
8010a53c:	53                   	push   %ebx
8010a53d:	e8 9e c4 ff ff       	call   801069e0 <strcmp>
8010a542:	89 c2                	mov    %eax,%edx
8010a544:	83 c4 10             	add    $0x10,%esp
8010a547:	b8 03 00 00 00       	mov    $0x3,%eax
8010a54c:	85 d2                	test   %edx,%edx
8010a54e:	74 c0                	je     8010a510 <get_file_name_constant+0x20>
8010a550:	83 ec 08             	sub    $0x8,%esp
8010a553:	68 e2 f8 10 80       	push   $0x8010f8e2
8010a558:	53                   	push   %ebx
8010a559:	e8 82 c4 ff ff       	call   801069e0 <strcmp>
8010a55e:	89 c2                	mov    %eax,%edx
8010a560:	83 c4 10             	add    $0x10,%esp
8010a563:	b8 04 00 00 00       	mov    $0x4,%eax
8010a568:	85 d2                	test   %edx,%edx
8010a56a:	74 a4                	je     8010a510 <get_file_name_constant+0x20>
8010a56c:	83 ec 08             	sub    $0x8,%esp
8010a56f:	68 f3 f8 10 80       	push   $0x8010f8f3
8010a574:	53                   	push   %ebx
8010a575:	e8 66 c4 ff ff       	call   801069e0 <strcmp>
8010a57a:	89 c2                	mov    %eax,%edx
8010a57c:	83 c4 10             	add    $0x10,%esp
8010a57f:	b8 0d 00 00 00       	mov    $0xd,%eax
8010a584:	85 d2                	test   %edx,%edx
8010a586:	74 88                	je     8010a510 <get_file_name_constant+0x20>
8010a588:	50                   	push   %eax
8010a589:	50                   	push   %eax
8010a58a:	68 06 f9 10 80       	push   $0x8010f906
8010a58f:	53                   	push   %ebx
8010a590:	e8 4b c4 ff ff       	call   801069e0 <strcmp>
8010a595:	89 c2                	mov    %eax,%edx
8010a597:	83 c4 10             	add    $0x10,%esp
8010a59a:	b8 0e 00 00 00       	mov    $0xe,%eax
8010a59f:	85 d2                	test   %edx,%edx
8010a5a1:	0f 84 69 ff ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a5a7:	50                   	push   %eax
8010a5a8:	50                   	push   %eax
8010a5a9:	68 14 f9 10 80       	push   $0x8010f914
8010a5ae:	53                   	push   %ebx
8010a5af:	e8 2c c4 ff ff       	call   801069e0 <strcmp>
8010a5b4:	89 c2                	mov    %eax,%edx
8010a5b6:	83 c4 10             	add    $0x10,%esp
8010a5b9:	b8 0f 00 00 00       	mov    $0xf,%eax
8010a5be:	85 d2                	test   %edx,%edx
8010a5c0:	0f 84 4a ff ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a5c6:	51                   	push   %ecx
8010a5c7:	51                   	push   %ecx
8010a5c8:	68 20 f9 10 80       	push   $0x8010f920
8010a5cd:	53                   	push   %ebx
8010a5ce:	e8 0d c4 ff ff       	call   801069e0 <strcmp>
8010a5d3:	89 c2                	mov    %eax,%edx
8010a5d5:	83 c4 10             	add    $0x10,%esp
8010a5d8:	b8 05 00 00 00       	mov    $0x5,%eax
8010a5dd:	85 d2                	test   %edx,%edx
8010a5df:	0f 84 2b ff ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a5e5:	52                   	push   %edx
8010a5e6:	52                   	push   %edx
8010a5e7:	68 2b f9 10 80       	push   $0x8010f92b
8010a5ec:	53                   	push   %ebx
8010a5ed:	e8 ee c3 ff ff       	call   801069e0 <strcmp>
8010a5f2:	89 c2                	mov    %eax,%edx
8010a5f4:	83 c4 10             	add    $0x10,%esp
8010a5f7:	b8 06 00 00 00       	mov    $0x6,%eax
8010a5fc:	85 d2                	test   %edx,%edx
8010a5fe:	0f 84 0c ff ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a604:	50                   	push   %eax
8010a605:	50                   	push   %eax
8010a606:	68 33 f9 10 80       	push   $0x8010f933
8010a60b:	53                   	push   %ebx
8010a60c:	e8 cf c3 ff ff       	call   801069e0 <strcmp>
8010a611:	89 c2                	mov    %eax,%edx
8010a613:	83 c4 10             	add    $0x10,%esp
8010a616:	b8 10 00 00 00       	mov    $0x10,%eax
8010a61b:	85 d2                	test   %edx,%edx
8010a61d:	0f 84 ed fe ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a623:	50                   	push   %eax
8010a624:	50                   	push   %eax
8010a625:	68 3c f9 10 80       	push   $0x8010f93c
8010a62a:	53                   	push   %ebx
8010a62b:	e8 b0 c3 ff ff       	call   801069e0 <strcmp>
8010a630:	89 c2                	mov    %eax,%edx
8010a632:	83 c4 10             	add    $0x10,%esp
8010a635:	b8 07 00 00 00       	mov    $0x7,%eax
8010a63a:	85 d2                	test   %edx,%edx
8010a63c:	0f 84 ce fe ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a642:	50                   	push   %eax
8010a643:	50                   	push   %eax
8010a644:	68 44 f9 10 80       	push   $0x8010f944
8010a649:	53                   	push   %ebx
8010a64a:	e8 91 c3 ff ff       	call   801069e0 <strcmp>
8010a64f:	89 c2                	mov    %eax,%edx
8010a651:	83 c4 10             	add    $0x10,%esp
8010a654:	b8 11 00 00 00       	mov    $0x11,%eax
8010a659:	85 d2                	test   %edx,%edx
8010a65b:	0f 84 af fe ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a661:	50                   	push   %eax
8010a662:	50                   	push   %eax
8010a663:	68 50 f9 10 80       	push   $0x8010f950
8010a668:	53                   	push   %ebx
8010a669:	e8 72 c3 ff ff       	call   801069e0 <strcmp>
8010a66e:	89 c2                	mov    %eax,%edx
8010a670:	83 c4 10             	add    $0x10,%esp
8010a673:	b8 08 00 00 00       	mov    $0x8,%eax
8010a678:	85 d2                	test   %edx,%edx
8010a67a:	0f 84 90 fe ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a680:	50                   	push   %eax
8010a681:	50                   	push   %eax
8010a682:	68 5c f9 10 80       	push   $0x8010f95c
8010a687:	53                   	push   %ebx
8010a688:	e8 53 c3 ff ff       	call   801069e0 <strcmp>
8010a68d:	89 c2                	mov    %eax,%edx
8010a68f:	83 c4 10             	add    $0x10,%esp
8010a692:	b8 09 00 00 00       	mov    $0x9,%eax
8010a697:	85 d2                	test   %edx,%edx
8010a699:	0f 84 71 fe ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a69f:	50                   	push   %eax
8010a6a0:	50                   	push   %eax
8010a6a1:	68 6a f9 10 80       	push   $0x8010f96a
8010a6a6:	53                   	push   %ebx
8010a6a7:	e8 34 c3 ff ff       	call   801069e0 <strcmp>
8010a6ac:	89 c2                	mov    %eax,%edx
8010a6ae:	83 c4 10             	add    $0x10,%esp
8010a6b1:	b8 12 00 00 00       	mov    $0x12,%eax
8010a6b6:	85 d2                	test   %edx,%edx
8010a6b8:	0f 84 52 fe ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a6be:	51                   	push   %ecx
8010a6bf:	51                   	push   %ecx
8010a6c0:	68 79 f9 10 80       	push   $0x8010f979
8010a6c5:	53                   	push   %ebx
8010a6c6:	e8 15 c3 ff ff       	call   801069e0 <strcmp>
8010a6cb:	89 c2                	mov    %eax,%edx
8010a6cd:	83 c4 10             	add    $0x10,%esp
8010a6d0:	b8 0a 00 00 00       	mov    $0xa,%eax
8010a6d5:	85 d2                	test   %edx,%edx
8010a6d7:	0f 84 33 fe ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a6dd:	52                   	push   %edx
8010a6de:	52                   	push   %edx
8010a6df:	68 84 f9 10 80       	push   $0x8010f984
8010a6e4:	53                   	push   %ebx
8010a6e5:	e8 f6 c2 ff ff       	call   801069e0 <strcmp>
8010a6ea:	89 c2                	mov    %eax,%edx
8010a6ec:	83 c4 10             	add    $0x10,%esp
8010a6ef:	b8 0b 00 00 00       	mov    $0xb,%eax
8010a6f4:	85 d2                	test   %edx,%edx
8010a6f6:	0f 84 14 fe ff ff    	je     8010a510 <get_file_name_constant+0x20>
8010a6fc:	50                   	push   %eax
8010a6fd:	50                   	push   %eax
8010a6fe:	68 8f f9 10 80       	push   $0x8010f98f
8010a703:	53                   	push   %ebx
8010a704:	e8 d7 c2 ff ff       	call   801069e0 <strcmp>
8010a709:	83 c4 10             	add    $0x10,%esp
8010a70c:	83 f8 01             	cmp    $0x1,%eax
8010a70f:	19 c0                	sbb    %eax,%eax
8010a711:	83 e0 14             	and    $0x14,%eax
8010a714:	83 e8 01             	sub    $0x1,%eax
8010a717:	e9 f4 fd ff ff       	jmp    8010a510 <get_file_name_constant+0x20>
8010a71c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

8010a720 <read_file_mem_max.isra.14>:
8010a720:	55                   	push   %ebp
8010a721:	89 e5                	mov    %esp,%ebp
8010a723:	57                   	push   %edi
8010a724:	56                   	push   %esi
8010a725:	53                   	push   %ebx
8010a726:	8d 5d de             	lea    -0x22(%ebp),%ebx
8010a729:	89 c7                	mov    %eax,%edi
8010a72b:	31 c0                	xor    %eax,%eax
8010a72d:	83 ec 34             	sub    $0x34,%esp
8010a730:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
8010a733:	c7 45 de 00 00 00 00 	movl   $0x0,-0x22(%ebp)
8010a73a:	52                   	push   %edx
8010a73b:	53                   	push   %ebx
8010a73c:	c7 45 e2 00 00 00 00 	movl   $0x0,-0x1e(%ebp)
8010a743:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)
8010a747:	e8 d4 fc ff ff       	call   8010a420 <utoa>
8010a74c:	89 1c 24             	mov    %ebx,(%esp)
8010a74f:	e8 7c c3 ff ff       	call   80106ad0 <strlen>
8010a754:	83 c4 0c             	add    $0xc,%esp
8010a757:	89 c6                	mov    %eax,%esi
8010a759:	50                   	push   %eax
8010a75a:	53                   	push   %ebx
8010a75b:	8d 9e c0 d5 11 80    	lea    -0x7fee2a40(%esi),%ebx
8010a761:	68 c0 d5 11 80       	push   $0x8011d5c0
8010a766:	e8 c5 c2 ff ff       	call   80106a30 <strncpy>
8010a76b:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010a772:	e8 59 c3 ff ff       	call   80106ad0 <strlen>
8010a777:	83 c4 0c             	add    $0xc,%esp
8010a77a:	89 c6                	mov    %eax,%esi
8010a77c:	50                   	push   %eax
8010a77d:	68 33 f8 10 80       	push   $0x8010f833
8010a782:	53                   	push   %ebx
8010a783:	01 f3                	add    %esi,%ebx
8010a785:	81 eb c0 d5 11 80    	sub    $0x8011d5c0,%ebx
8010a78b:	e8 a0 c2 ff ff       	call   80106a30 <strncpy>
8010a790:	8b 3f                	mov    (%edi),%edi
8010a792:	83 c4 10             	add    $0x10,%esp
8010a795:	39 fb                	cmp    %edi,%ebx
8010a797:	74 47                	je     8010a7e0 <read_file_mem_max.isra.14+0xc0>
8010a799:	29 fb                	sub    %edi,%ebx
8010a79b:	3b 5d 08             	cmp    0x8(%ebp),%ebx
8010a79e:	0f 47 5d 08          	cmova  0x8(%ebp),%ebx
8010a7a2:	85 db                	test   %ebx,%ebx
8010a7a4:	89 de                	mov    %ebx,%esi
8010a7a6:	7e 38                	jle    8010a7e0 <read_file_mem_max.isra.14+0xc0>
8010a7a8:	0f b6 97 c0 d5 11 80 	movzbl -0x7fee2a40(%edi),%edx
8010a7af:	31 c0                	xor    %eax,%eax
8010a7b1:	84 d2                	test   %dl,%dl
8010a7b3:	74 21                	je     8010a7d6 <read_file_mem_max.isra.14+0xb6>
8010a7b5:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
8010a7b8:	eb 12                	jmp    8010a7cc <read_file_mem_max.isra.14+0xac>
8010a7ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010a7c0:	0f b6 94 07 c0 d5 11 	movzbl -0x7fee2a40(%edi,%eax,1),%edx
8010a7c7:	80 
8010a7c8:	84 d2                	test   %dl,%dl
8010a7ca:	74 0a                	je     8010a7d6 <read_file_mem_max.isra.14+0xb6>
8010a7cc:	88 14 01             	mov    %dl,(%ecx,%eax,1)
8010a7cf:	83 c0 01             	add    $0x1,%eax
8010a7d2:	39 c6                	cmp    %eax,%esi
8010a7d4:	75 ea                	jne    8010a7c0 <read_file_mem_max.isra.14+0xa0>
8010a7d6:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010a7d9:	5b                   	pop    %ebx
8010a7da:	5e                   	pop    %esi
8010a7db:	5f                   	pop    %edi
8010a7dc:	5d                   	pop    %ebp
8010a7dd:	c3                   	ret    
8010a7de:	66 90                	xchg   %ax,%ax
8010a7e0:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010a7e3:	31 c0                	xor    %eax,%eax
8010a7e5:	5b                   	pop    %ebx
8010a7e6:	5e                   	pop    %esi
8010a7e7:	5f                   	pop    %edi
8010a7e8:	5d                   	pop    %ebp
8010a7e9:	c3                   	ret    
8010a7ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

8010a7f0 <unsafe_cg_open>:
8010a7f0:	55                   	push   %ebp
8010a7f1:	89 e5                	mov    %esp,%ebp
8010a7f3:	57                   	push   %edi
8010a7f4:	56                   	push   %esi
8010a7f5:	53                   	push   %ebx
8010a7f6:	83 ec 1c             	sub    $0x1c,%esp
8010a7f9:	8b 45 08             	mov    0x8(%ebp),%eax
8010a7fc:	8b 75 10             	mov    0x10(%ebp),%esi
8010a7ff:	85 c0                	test   %eax,%eax
8010a801:	0f 84 91 00 00 00    	je     8010a898 <unsafe_cg_open+0xa8>
8010a807:	83 f8 01             	cmp    $0x1,%eax
8010a80a:	75 38                	jne    8010a844 <unsafe_cg_open+0x54>
8010a80c:	80 3e 00             	cmpb   $0x0,(%esi)
8010a80f:	74 33                	je     8010a844 <unsafe_cg_open+0x54>
8010a811:	e8 4a 6d ff ff       	call   80101560 <filealloc>
8010a816:	85 c0                	test   %eax,%eax
8010a818:	89 c7                	mov    %eax,%edi
8010a81a:	74 28                	je     8010a844 <unsafe_cg_open+0x54>
8010a81c:	31 db                	xor    %ebx,%ebx
8010a81e:	e8 4d ac ff ff       	call   80105470 <myproc>
8010a823:	90                   	nop
8010a824:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010a828:	8b 54 98 48          	mov    0x48(%eax,%ebx,4),%edx
8010a82c:	85 d2                	test   %edx,%edx
8010a82e:	74 28                	je     8010a858 <unsafe_cg_open+0x68>
8010a830:	83 c3 01             	add    $0x1,%ebx
8010a833:	83 fb 10             	cmp    $0x10,%ebx
8010a836:	75 f0                	jne    8010a828 <unsafe_cg_open+0x38>
8010a838:	83 ec 0c             	sub    $0xc,%esp
8010a83b:	57                   	push   %edi
8010a83c:	e8 df 6d ff ff       	call   80101620 <fileclose>
8010a841:	83 c4 10             	add    $0x10,%esp
8010a844:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
8010a849:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010a84c:	89 d8                	mov    %ebx,%eax
8010a84e:	5b                   	pop    %ebx
8010a84f:	5e                   	pop    %esi
8010a850:	5f                   	pop    %edi
8010a851:	5d                   	pop    %ebp
8010a852:	c3                   	ret    
8010a853:	90                   	nop
8010a854:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010a858:	89 7c 98 48          	mov    %edi,0x48(%eax,%ebx,4)
8010a85c:	8b 45 14             	mov    0x14(%ebp),%eax
8010a85f:	c7 07 03 00 00 00    	movl   $0x3,(%edi)
8010a865:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%edi)
8010a86c:	c6 47 09 00          	movb   $0x0,0x9(%edi)
8010a870:	89 77 10             	mov    %esi,0x10(%edi)
8010a873:	83 e0 01             	and    $0x1,%eax
8010a876:	c6 47 14 00          	movb   $0x0,0x14(%edi)
8010a87a:	83 f0 01             	xor    $0x1,%eax
8010a87d:	88 47 08             	mov    %al,0x8(%edi)
8010a880:	83 86 00 02 00 00 01 	addl   $0x1,0x200(%esi)
8010a887:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010a88a:	89 d8                	mov    %ebx,%eax
8010a88c:	5b                   	pop    %ebx
8010a88d:	5e                   	pop    %esi
8010a88e:	5f                   	pop    %edi
8010a88f:	5d                   	pop    %ebp
8010a890:	c3                   	ret    
8010a891:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010a898:	8b 45 0c             	mov    0xc(%ebp),%eax
8010a89b:	e8 50 fc ff ff       	call   8010a4f0 <get_file_name_constant>
8010a8a0:	83 f8 ff             	cmp    $0xffffffff,%eax
8010a8a3:	89 c1                	mov    %eax,%ecx
8010a8a5:	74 9d                	je     8010a844 <unsafe_cg_open+0x54>
8010a8a7:	8d 40 f3             	lea    -0xd(%eax),%eax
8010a8aa:	31 ff                	xor    %edi,%edi
8010a8ac:	83 f8 06             	cmp    $0x6,%eax
8010a8af:	77 47                	ja     8010a8f8 <unsafe_cg_open+0x108>
8010a8b1:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8010a8b4:	e8 a7 6c ff ff       	call   80101560 <filealloc>
8010a8b9:	85 c0                	test   %eax,%eax
8010a8bb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8010a8be:	74 84                	je     8010a844 <unsafe_cg_open+0x54>
8010a8c0:	e8 ab ab ff ff       	call   80105470 <myproc>
8010a8c5:	8b 4d e0             	mov    -0x20(%ebp),%ecx
8010a8c8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010a8cb:	31 db                	xor    %ebx,%ebx
8010a8cd:	8d 76 00             	lea    0x0(%esi),%esi
8010a8d0:	83 7c 98 48 00       	cmpl   $0x0,0x48(%eax,%ebx,4)
8010a8d5:	74 49                	je     8010a920 <unsafe_cg_open+0x130>
8010a8d7:	83 c3 01             	add    $0x1,%ebx
8010a8da:	83 fb 10             	cmp    $0x10,%ebx
8010a8dd:	75 f1                	jne    8010a8d0 <unsafe_cg_open+0xe0>
8010a8df:	83 ec 0c             	sub    $0xc,%esp
8010a8e2:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
8010a8e7:	52                   	push   %edx
8010a8e8:	e8 33 6d ff ff       	call   80101620 <fileclose>
8010a8ed:	83 c4 10             	add    $0x10,%esp
8010a8f0:	e9 54 ff ff ff       	jmp    8010a849 <unsafe_cg_open+0x59>
8010a8f5:	8d 76 00             	lea    0x0(%esi),%esi
8010a8f8:	8d 41 ff             	lea    -0x1(%ecx),%eax
8010a8fb:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8010a8fe:	83 f8 0b             	cmp    $0xb,%eax
8010a901:	19 ff                	sbb    %edi,%edi
8010a903:	83 e7 02             	and    $0x2,%edi
8010a906:	e8 55 6c ff ff       	call   80101560 <filealloc>
8010a90b:	83 ef 01             	sub    $0x1,%edi
8010a90e:	85 c0                	test   %eax,%eax
8010a910:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8010a913:	75 ab                	jne    8010a8c0 <unsafe_cg_open+0xd0>
8010a915:	e9 2a ff ff ff       	jmp    8010a844 <unsafe_cg_open+0x54>
8010a91a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010a920:	83 e9 05             	sub    $0x5,%ecx
8010a923:	89 54 98 48          	mov    %edx,0x48(%eax,%ebx,4)
8010a927:	83 f9 0e             	cmp    $0xe,%ecx
8010a92a:	77 2d                	ja     8010a959 <unsafe_cg_open+0x169>
8010a92c:	ff 24 8d 0c fb 10 80 	jmp    *-0x7fef04f4(,%ecx,4)
8010a933:	89 55 e4             	mov    %edx,-0x1c(%ebp)
8010a936:	e8 15 2a 00 00       	call   8010d350 <cgroup_root>
8010a93b:	39 c6                	cmp    %eax,%esi
8010a93d:	0f 84 01 ff ff ff    	je     8010a844 <unsafe_cg_open+0x54>
8010a943:	0f b6 86 13 03 00 00 	movzbl 0x313(%esi),%eax
8010a94a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010a94d:	88 42 54             	mov    %al,0x54(%edx)
8010a950:	8b 86 50 03 00 00    	mov    0x350(%esi),%eax
8010a956:	89 42 58             	mov    %eax,0x58(%edx)
8010a959:	8b 45 14             	mov    0x14(%ebp),%eax
8010a95c:	89 72 10             	mov    %esi,0x10(%edx)
8010a95f:	c7 02 03 00 00 00    	movl   $0x3,(%edx)
8010a965:	c7 42 0c 00 00 00 00 	movl   $0x0,0xc(%edx)
8010a96c:	83 e0 01             	and    $0x1,%eax
8010a96f:	83 f0 01             	xor    $0x1,%eax
8010a972:	f6 45 14 03          	testb  $0x3,0x14(%ebp)
8010a976:	88 42 08             	mov    %al,0x8(%edx)
8010a979:	0f 95 c1             	setne  %cl
8010a97c:	85 ff                	test   %edi,%edi
8010a97e:	0f 95 c0             	setne  %al
8010a981:	83 ec 04             	sub    $0x4,%esp
8010a984:	83 c2 14             	add    $0x14,%edx
8010a987:	21 c8                	and    %ecx,%eax
8010a989:	88 42 f5             	mov    %al,-0xb(%edx)
8010a98c:	6a 40                	push   $0x40
8010a98e:	ff 75 0c             	pushl  0xc(%ebp)
8010a991:	52                   	push   %edx
8010a992:	e8 99 c0 ff ff       	call   80106a30 <strncpy>
8010a997:	83 86 00 02 00 00 01 	addl   $0x1,0x200(%esi)
8010a99e:	83 c4 10             	add    $0x10,%esp
8010a9a1:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010a9a4:	89 d8                	mov    %ebx,%eax
8010a9a6:	5b                   	pop    %ebx
8010a9a7:	5e                   	pop    %esi
8010a9a8:	5f                   	pop    %edi
8010a9a9:	5d                   	pop    %ebp
8010a9aa:	c3                   	ret    
8010a9ab:	89 55 e4             	mov    %edx,-0x1c(%ebp)
8010a9ae:	e8 9d 29 00 00       	call   8010d350 <cgroup_root>
8010a9b3:	39 c6                	cmp    %eax,%esi
8010a9b5:	0f 84 89 fe ff ff    	je     8010a844 <unsafe_cg_open+0x54>
8010a9bb:	0f b6 86 13 03 00 00 	movzbl 0x313(%esi),%eax
8010a9c2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010a9c5:	88 42 54             	mov    %al,0x54(%edx)
8010a9c8:	8b 86 40 03 00 00    	mov    0x340(%esi),%eax
8010a9ce:	89 42 58             	mov    %eax,0x58(%edx)
8010a9d1:	8b 86 44 03 00 00    	mov    0x344(%esi),%eax
8010a9d7:	89 42 5c             	mov    %eax,0x5c(%edx)
8010a9da:	8b 86 48 03 00 00    	mov    0x348(%esi),%eax
8010a9e0:	89 42 60             	mov    %eax,0x60(%edx)
8010a9e3:	8b 86 4c 03 00 00    	mov    0x34c(%esi),%eax
8010a9e9:	89 42 64             	mov    %eax,0x64(%edx)
8010a9ec:	e8 cf 85 ff ff       	call   80102fc0 <get_total_memory>
8010a9f1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010a9f4:	c1 e0 0c             	shl    $0xc,%eax
8010a9f7:	89 42 68             	mov    %eax,0x68(%edx)
8010a9fa:	e9 5a ff ff ff       	jmp    8010a959 <unsafe_cg_open+0x169>
8010a9ff:	89 55 e4             	mov    %edx,-0x1c(%ebp)
8010aa02:	e8 49 29 00 00       	call   8010d350 <cgroup_root>
8010aa07:	39 c6                	cmp    %eax,%esi
8010aa09:	0f 84 35 fe ff ff    	je     8010a844 <unsafe_cg_open+0x54>
8010aa0f:	0f b6 86 0d 03 00 00 	movzbl 0x30d(%esi),%eax
8010aa16:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010aa19:	88 42 54             	mov    %al,0x54(%edx)
8010aa1c:	8b 86 5c 03 00 00    	mov    0x35c(%esi),%eax
8010aa22:	89 42 58             	mov    %eax,0x58(%edx)
8010aa25:	8b 86 5c 03 00 00    	mov    0x35c(%esi),%eax
8010aa2b:	c7 42 60 00 00 00 00 	movl   $0x0,0x60(%edx)
8010aa32:	89 42 5c             	mov    %eax,0x5c(%edx)
8010aa35:	8b 86 78 03 00 00    	mov    0x378(%esi),%eax
8010aa3b:	89 42 64             	mov    %eax,0x64(%edx)
8010aa3e:	8b 86 7c 03 00 00    	mov    0x37c(%esi),%eax
8010aa44:	89 42 68             	mov    %eax,0x68(%edx)
8010aa47:	8b 86 80 03 00 00    	mov    0x380(%esi),%eax
8010aa4d:	89 42 6c             	mov    %eax,0x6c(%edx)
8010aa50:	e9 04 ff ff ff       	jmp    8010a959 <unsafe_cg_open+0x169>
8010aa55:	89 55 e4             	mov    %edx,-0x1c(%ebp)
8010aa58:	e8 f3 28 00 00       	call   8010d350 <cgroup_root>
8010aa5d:	39 c6                	cmp    %eax,%esi
8010aa5f:	0f 84 df fd ff ff    	je     8010a844 <unsafe_cg_open+0x54>
8010aa65:	0f b6 86 13 03 00 00 	movzbl 0x313(%esi),%eax
8010aa6c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010aa6f:	88 42 54             	mov    %al,0x54(%edx)
8010aa72:	8b 86 54 03 00 00    	mov    0x354(%esi),%eax
8010aa78:	89 42 58             	mov    %eax,0x58(%edx)
8010aa7b:	e9 d9 fe ff ff       	jmp    8010a959 <unsafe_cg_open+0x169>
8010aa80:	89 55 e4             	mov    %edx,-0x1c(%ebp)
8010aa83:	e8 c8 28 00 00       	call   8010d350 <cgroup_root>
8010aa88:	39 c6                	cmp    %eax,%esi
8010aa8a:	0f 84 b4 fd ff ff    	je     8010a844 <unsafe_cg_open+0x54>
8010aa90:	8b 86 34 03 00 00    	mov    0x334(%esi),%eax
8010aa96:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010aa99:	89 42 54             	mov    %eax,0x54(%edx)
8010aa9c:	e9 b8 fe ff ff       	jmp    8010a959 <unsafe_cg_open+0x169>
8010aaa1:	89 55 e4             	mov    %edx,-0x1c(%ebp)
8010aaa4:	e8 a7 28 00 00       	call   8010d350 <cgroup_root>
8010aaa9:	39 c6                	cmp    %eax,%esi
8010aaab:	0f 84 93 fd ff ff    	je     8010a844 <unsafe_cg_open+0x54>
8010aab1:	0f b6 86 11 03 00 00 	movzbl 0x311(%esi),%eax
8010aab8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010aabb:	88 42 54             	mov    %al,0x54(%edx)
8010aabe:	0f b6 86 30 03 00 00 	movzbl 0x330(%esi),%eax
8010aac5:	89 42 58             	mov    %eax,0x58(%edx)
8010aac8:	e9 8c fe ff ff       	jmp    8010a959 <unsafe_cg_open+0x169>
8010aacd:	89 55 e4             	mov    %edx,-0x1c(%ebp)
8010aad0:	e8 7b 28 00 00       	call   8010d350 <cgroup_root>
8010aad5:	39 c6                	cmp    %eax,%esi
8010aad7:	0f 84 67 fd ff ff    	je     8010a844 <unsafe_cg_open+0x54>
8010aadd:	0f b6 86 0f 03 00 00 	movzbl 0x30f(%esi),%eax
8010aae4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010aae7:	88 42 54             	mov    %al,0x54(%edx)
8010aaea:	8b 86 2c 03 00 00    	mov    0x32c(%esi),%eax
8010aaf0:	89 42 58             	mov    %eax,0x58(%edx)
8010aaf3:	e9 61 fe ff ff       	jmp    8010a959 <unsafe_cg_open+0x169>
8010aaf8:	89 55 e4             	mov    %edx,-0x1c(%ebp)
8010aafb:	e8 50 28 00 00       	call   8010d350 <cgroup_root>
8010ab00:	39 c6                	cmp    %eax,%esi
8010ab02:	0f 84 3c fd ff ff    	je     8010a844 <unsafe_cg_open+0x54>
8010ab08:	8b 86 70 03 00 00    	mov    0x370(%esi),%eax
8010ab0e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010ab11:	89 42 54             	mov    %eax,0x54(%edx)
8010ab14:	8b 86 6c 03 00 00    	mov    0x36c(%esi),%eax
8010ab1a:	89 42 58             	mov    %eax,0x58(%edx)
8010ab1d:	e9 37 fe ff ff       	jmp    8010a959 <unsafe_cg_open+0x169>
8010ab22:	89 55 e4             	mov    %edx,-0x1c(%ebp)
8010ab25:	e8 26 28 00 00       	call   8010d350 <cgroup_root>
8010ab2a:	39 c6                	cmp    %eax,%esi
8010ab2c:	0f 84 12 fd ff ff    	je     8010a844 <unsafe_cg_open+0x54>
8010ab32:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010ab35:	c7 42 54 00 00 00 00 	movl   $0x0,0x54(%edx)
8010ab3c:	e9 18 fe ff ff       	jmp    8010a959 <unsafe_cg_open+0x169>
8010ab41:	eb 0d                	jmp    8010ab50 <unsafe_cg_read>
8010ab43:	90                   	nop
8010ab44:	90                   	nop
8010ab45:	90                   	nop
8010ab46:	90                   	nop
8010ab47:	90                   	nop
8010ab48:	90                   	nop
8010ab49:	90                   	nop
8010ab4a:	90                   	nop
8010ab4b:	90                   	nop
8010ab4c:	90                   	nop
8010ab4d:	90                   	nop
8010ab4e:	90                   	nop
8010ab4f:	90                   	nop

8010ab50 <unsafe_cg_read>:
8010ab50:	55                   	push   %ebp
8010ab51:	89 e5                	mov    %esp,%ebp
8010ab53:	57                   	push   %edi
8010ab54:	56                   	push   %esi
8010ab55:	53                   	push   %ebx
8010ab56:	83 ec 7c             	sub    $0x7c,%esp
8010ab59:	8b 45 08             	mov    0x8(%ebp),%eax
8010ab5c:	8b 7d 0c             	mov    0xc(%ebp),%edi
8010ab5f:	85 c0                	test   %eax,%eax
8010ab61:	0f 84 e4 02 00 00    	je     8010ae4b <unsafe_cg_read+0x2fb>
8010ab67:	83 f8 01             	cmp    $0x1,%eax
8010ab6a:	75 1f                	jne    8010ab8b <unsafe_cg_read+0x3b>
8010ab6c:	83 ec 04             	sub    $0x4,%esp
8010ab6f:	68 00 10 00 00       	push   $0x1000
8010ab74:	6a 00                	push   $0x0
8010ab76:	68 c0 d5 11 80       	push   $0x8011d5c0
8010ab7b:	e8 c0 bc ff ff       	call   80106840 <memset>
8010ab80:	8b 47 10             	mov    0x10(%edi),%eax
8010ab83:	83 c4 10             	add    $0x10,%esp
8010ab86:	80 38 00             	cmpb   $0x0,(%eax)
8010ab89:	75 15                	jne    8010aba0 <unsafe_cg_read+0x50>
8010ab8b:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010ab8e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010ab93:	5b                   	pop    %ebx
8010ab94:	5e                   	pop    %esi
8010ab95:	5f                   	pop    %edi
8010ab96:	5d                   	pop    %ebp
8010ab97:	c3                   	ret    
8010ab98:	90                   	nop
8010ab99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010aba0:	31 c0                	xor    %eax,%eax
8010aba2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010aba8:	c6 80 c0 d5 11 80 20 	movb   $0x20,-0x7fee2a40(%eax)
8010abaf:	83 c0 01             	add    $0x1,%eax
8010abb2:	3d 00 10 00 00       	cmp    $0x1000,%eax
8010abb7:	75 ef                	jne    8010aba8 <unsafe_cg_read+0x58>
8010abb9:	83 ec 0c             	sub    $0xc,%esp
8010abbc:	be 00 d6 11 80       	mov    $0x8011d600,%esi
8010abc1:	68 71 ed 10 80       	push   $0x8010ed71
8010abc6:	e8 05 bf ff ff       	call   80106ad0 <strlen>
8010abcb:	83 c4 0c             	add    $0xc,%esp
8010abce:	50                   	push   %eax
8010abcf:	68 71 ed 10 80       	push   $0x8010ed71
8010abd4:	68 c0 d5 11 80       	push   $0x8011d5c0
8010abd9:	e8 52 be ff ff       	call   80106a30 <strncpy>
8010abde:	8b 5f 10             	mov    0x10(%edi),%ebx
8010abe1:	e8 6a 27 00 00       	call   8010d350 <cgroup_root>
8010abe6:	83 c4 10             	add    $0x10,%esp
8010abe9:	39 c3                	cmp    %eax,%ebx
8010abeb:	74 24                	je     8010ac11 <unsafe_cg_read+0xc1>
8010abed:	83 ec 0c             	sub    $0xc,%esp
8010abf0:	68 70 ed 10 80       	push   $0x8010ed70
8010abf5:	e8 d6 be ff ff       	call   80106ad0 <strlen>
8010abfa:	83 c4 0c             	add    $0xc,%esp
8010abfd:	50                   	push   %eax
8010abfe:	68 70 ed 10 80       	push   $0x8010ed70
8010ac03:	56                   	push   %esi
8010ac04:	be 40 d6 11 80       	mov    $0x8011d640,%esi
8010ac09:	e8 22 be ff ff       	call   80106a30 <strncpy>
8010ac0e:	83 c4 10             	add    $0x10,%esp
8010ac11:	83 ec 0c             	sub    $0xc,%esp
8010ac14:	8d 5e 40             	lea    0x40(%esi),%ebx
8010ac17:	68 a7 f8 10 80       	push   $0x8010f8a7
8010ac1c:	e8 af be ff ff       	call   80106ad0 <strlen>
8010ac21:	83 c4 0c             	add    $0xc,%esp
8010ac24:	50                   	push   %eax
8010ac25:	68 a7 f8 10 80       	push   $0x8010f8a7
8010ac2a:	56                   	push   %esi
8010ac2b:	e8 00 be ff ff       	call   80106a30 <strncpy>
8010ac30:	8b 47 10             	mov    0x10(%edi),%eax
8010ac33:	89 45 84             	mov    %eax,-0x7c(%ebp)
8010ac36:	e8 15 27 00 00       	call   8010d350 <cgroup_root>
8010ac3b:	83 c4 10             	add    $0x10,%esp
8010ac3e:	39 45 84             	cmp    %eax,-0x7c(%ebp)
8010ac41:	0f 84 88 00 00 00    	je     8010accf <unsafe_cg_read+0x17f>
8010ac47:	83 ec 0c             	sub    $0xc,%esp
8010ac4a:	68 f3 f8 10 80       	push   $0x8010f8f3
8010ac4f:	e8 7c be ff ff       	call   80106ad0 <strlen>
8010ac54:	83 c4 0c             	add    $0xc,%esp
8010ac57:	50                   	push   %eax
8010ac58:	68 f3 f8 10 80       	push   $0x8010f8f3
8010ac5d:	53                   	push   %ebx
8010ac5e:	8d 9e 40 01 00 00    	lea    0x140(%esi),%ebx
8010ac64:	e8 c7 bd ff ff       	call   80106a30 <strncpy>
8010ac69:	c7 04 24 b4 f8 10 80 	movl   $0x8010f8b4,(%esp)
8010ac70:	e8 5b be ff ff       	call   80106ad0 <strlen>
8010ac75:	83 c4 0c             	add    $0xc,%esp
8010ac78:	50                   	push   %eax
8010ac79:	8d 86 80 00 00 00    	lea    0x80(%esi),%eax
8010ac7f:	68 b4 f8 10 80       	push   $0x8010f8b4
8010ac84:	50                   	push   %eax
8010ac85:	e8 a6 bd ff ff       	call   80106a30 <strncpy>
8010ac8a:	c7 04 24 06 f9 10 80 	movl   $0x8010f906,(%esp)
8010ac91:	e8 3a be ff ff       	call   80106ad0 <strlen>
8010ac96:	83 c4 0c             	add    $0xc,%esp
8010ac99:	50                   	push   %eax
8010ac9a:	8d 86 c0 00 00 00    	lea    0xc0(%esi),%eax
8010aca0:	68 06 f9 10 80       	push   $0x8010f906
8010aca5:	50                   	push   %eax
8010aca6:	e8 85 bd ff ff       	call   80106a30 <strncpy>
8010acab:	c7 04 24 5c f9 10 80 	movl   $0x8010f95c,(%esp)
8010acb2:	e8 19 be ff ff       	call   80106ad0 <strlen>
8010acb7:	83 c4 0c             	add    $0xc,%esp
8010acba:	50                   	push   %eax
8010acbb:	8d 86 00 01 00 00    	lea    0x100(%esi),%eax
8010acc1:	68 5c f9 10 80       	push   $0x8010f95c
8010acc6:	50                   	push   %eax
8010acc7:	e8 64 bd ff ff       	call   80106a30 <strncpy>
8010accc:	83 c4 10             	add    $0x10,%esp
8010accf:	83 ec 0c             	sub    $0xc,%esp
8010acd2:	8d b3 c0 00 00 00    	lea    0xc0(%ebx),%esi
8010acd8:	68 cb f8 10 80       	push   $0x8010f8cb
8010acdd:	e8 ee bd ff ff       	call   80106ad0 <strlen>
8010ace2:	83 c4 0c             	add    $0xc,%esp
8010ace5:	50                   	push   %eax
8010ace6:	68 cb f8 10 80       	push   $0x8010f8cb
8010aceb:	53                   	push   %ebx
8010acec:	e8 3f bd ff ff       	call   80106a30 <strncpy>
8010acf1:	c7 04 24 e2 f8 10 80 	movl   $0x8010f8e2,(%esp)
8010acf8:	e8 d3 bd ff ff       	call   80106ad0 <strlen>
8010acfd:	83 c4 0c             	add    $0xc,%esp
8010ad00:	50                   	push   %eax
8010ad01:	8d 43 40             	lea    0x40(%ebx),%eax
8010ad04:	68 e2 f8 10 80       	push   $0x8010f8e2
8010ad09:	50                   	push   %eax
8010ad0a:	e8 21 bd ff ff       	call   80106a30 <strncpy>
8010ad0f:	c7 04 24 14 f9 10 80 	movl   $0x8010f914,(%esp)
8010ad16:	e8 b5 bd ff ff       	call   80106ad0 <strlen>
8010ad1b:	83 c4 0c             	add    $0xc,%esp
8010ad1e:	50                   	push   %eax
8010ad1f:	8d 83 80 00 00 00    	lea    0x80(%ebx),%eax
8010ad25:	68 14 f9 10 80       	push   $0x8010f914
8010ad2a:	50                   	push   %eax
8010ad2b:	e8 00 bd ff ff       	call   80106a30 <strncpy>
8010ad30:	8b 47 10             	mov    0x10(%edi),%eax
8010ad33:	89 45 84             	mov    %eax,-0x7c(%ebp)
8010ad36:	e8 15 26 00 00       	call   8010d350 <cgroup_root>
8010ad3b:	83 c4 10             	add    $0x10,%esp
8010ad3e:	39 45 84             	cmp    %eax,-0x7c(%ebp)
8010ad41:	0f 84 24 02 00 00    	je     8010af6b <unsafe_cg_read+0x41b>
8010ad47:	83 ec 0c             	sub    $0xc,%esp
8010ad4a:	68 6a f9 10 80       	push   $0x8010f96a
8010ad4f:	e8 7c bd ff ff       	call   80106ad0 <strlen>
8010ad54:	83 c4 0c             	add    $0xc,%esp
8010ad57:	50                   	push   %eax
8010ad58:	68 6a f9 10 80       	push   $0x8010f96a
8010ad5d:	56                   	push   %esi
8010ad5e:	8d b3 80 01 00 00    	lea    0x180(%ebx),%esi
8010ad64:	e8 c7 bc ff ff       	call   80106a30 <strncpy>
8010ad69:	c7 04 24 33 f9 10 80 	movl   $0x8010f933,(%esp)
8010ad70:	e8 5b bd ff ff       	call   80106ad0 <strlen>
8010ad75:	83 c4 0c             	add    $0xc,%esp
8010ad78:	50                   	push   %eax
8010ad79:	8d 83 00 01 00 00    	lea    0x100(%ebx),%eax
8010ad7f:	68 33 f9 10 80       	push   $0x8010f933
8010ad84:	50                   	push   %eax
8010ad85:	e8 a6 bc ff ff       	call   80106a30 <strncpy>
8010ad8a:	c7 04 24 8f f9 10 80 	movl   $0x8010f98f,(%esp)
8010ad91:	e8 3a bd ff ff       	call   80106ad0 <strlen>
8010ad96:	83 c4 0c             	add    $0xc,%esp
8010ad99:	50                   	push   %eax
8010ad9a:	8d 83 40 01 00 00    	lea    0x140(%ebx),%eax
8010ada0:	68 8f f9 10 80       	push   $0x8010f98f
8010ada5:	50                   	push   %eax
8010ada6:	e8 85 bc ff ff       	call   80106a30 <strncpy>
8010adab:	8b 47 10             	mov    0x10(%edi),%eax
8010adae:	83 c4 10             	add    $0x10,%esp
8010adb1:	80 b8 0d 03 00 00 00 	cmpb   $0x0,0x30d(%eax)
8010adb8:	0f 85 5f 01 00 00    	jne    8010af1d <unsafe_cg_read+0x3cd>
8010adbe:	80 b8 0f 03 00 00 00 	cmpb   $0x0,0x30f(%eax)
8010adc5:	0f 85 28 01 00 00    	jne    8010aef3 <unsafe_cg_read+0x3a3>
8010adcb:	80 b8 11 03 00 00 00 	cmpb   $0x0,0x311(%eax)
8010add2:	0f 85 f1 00 00 00    	jne    8010aec9 <unsafe_cg_read+0x379>
8010add8:	80 b8 13 03 00 00 00 	cmpb   $0x0,0x313(%eax)
8010addf:	0f 85 9c 00 00 00    	jne    8010ae81 <unsafe_cg_read+0x331>
8010ade5:	83 ec 08             	sub    $0x8,%esp
8010ade8:	50                   	push   %eax
8010ade9:	56                   	push   %esi
8010adea:	e8 31 2b 00 00       	call   8010d920 <get_cgroup_names_at_path>
8010adef:	8b 57 0c             	mov    0xc(%edi),%edx
8010adf2:	83 c4 10             	add    $0x10,%esp
8010adf5:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx
8010adfb:	89 d1                	mov    %edx,%ecx
8010adfd:	0f 87 d7 14 00 00    	ja     8010c2da <unsafe_cg_read+0x178a>
8010ae03:	8b 45 14             	mov    0x14(%ebp),%eax
8010ae06:	85 c0                	test   %eax,%eax
8010ae08:	0f 84 cc 14 00 00    	je     8010c2da <unsafe_cg_read+0x178a>
8010ae0e:	8b 5d 10             	mov    0x10(%ebp),%ebx
8010ae11:	8b 75 14             	mov    0x14(%ebp),%esi
8010ae14:	29 d3                	sub    %edx,%ebx
8010ae16:	eb 0c                	jmp    8010ae24 <unsafe_cg_read+0x2d4>
8010ae18:	90                   	nop
8010ae19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010ae20:	39 f0                	cmp    %esi,%eax
8010ae22:	73 1c                	jae    8010ae40 <unsafe_cg_read+0x2f0>
8010ae24:	0f b6 82 c0 d5 11 80 	movzbl -0x7fee2a40(%edx),%eax
8010ae2b:	88 04 13             	mov    %al,(%ebx,%edx,1)
8010ae2e:	83 c2 01             	add    $0x1,%edx
8010ae31:	89 d0                	mov    %edx,%eax
8010ae33:	2b 47 0c             	sub    0xc(%edi),%eax
8010ae36:	81 fa 00 10 00 00    	cmp    $0x1000,%edx
8010ae3c:	89 d1                	mov    %edx,%ecx
8010ae3e:	75 e0                	jne    8010ae20 <unsafe_cg_read+0x2d0>
8010ae40:	89 4f 0c             	mov    %ecx,0xc(%edi)
8010ae43:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010ae46:	5b                   	pop    %ebx
8010ae47:	5e                   	pop    %esi
8010ae48:	5f                   	pop    %edi
8010ae49:	5d                   	pop    %ebp
8010ae4a:	c3                   	ret    
8010ae4b:	8d 47 14             	lea    0x14(%edi),%eax
8010ae4e:	e8 9d f6 ff ff       	call   8010a4f0 <get_file_name_constant>
8010ae53:	85 c0                	test   %eax,%eax
8010ae55:	0f 84 30 fd ff ff    	je     8010ab8b <unsafe_cg_read+0x3b>
8010ae5b:	80 7f 08 00          	cmpb   $0x0,0x8(%edi)
8010ae5f:	0f 84 26 fd ff ff    	je     8010ab8b <unsafe_cg_read+0x3b>
8010ae65:	8b 57 10             	mov    0x10(%edi),%edx
8010ae68:	80 3a 00             	cmpb   $0x0,(%edx)
8010ae6b:	0f 84 1a fd ff ff    	je     8010ab8b <unsafe_cg_read+0x3b>
8010ae71:	83 f8 13             	cmp    $0x13,%eax
8010ae74:	0f 87 54 14 00 00    	ja     8010c2ce <unsafe_cg_read+0x177e>
8010ae7a:	ff 24 85 48 fb 10 80 	jmp    *-0x7fef04b8(,%eax,4)
8010ae81:	83 ec 0c             	sub    $0xc,%esp
8010ae84:	68 79 f9 10 80       	push   $0x8010f979
8010ae89:	e8 42 bc ff ff       	call   80106ad0 <strlen>
8010ae8e:	83 c4 0c             	add    $0xc,%esp
8010ae91:	50                   	push   %eax
8010ae92:	68 79 f9 10 80       	push   $0x8010f979
8010ae97:	56                   	push   %esi
8010ae98:	e8 93 bb ff ff       	call   80106a30 <strncpy>
8010ae9d:	c7 04 24 84 f9 10 80 	movl   $0x8010f984,(%esp)
8010aea4:	e8 27 bc ff ff       	call   80106ad0 <strlen>
8010aea9:	83 c4 0c             	add    $0xc,%esp
8010aeac:	50                   	push   %eax
8010aead:	8d 46 40             	lea    0x40(%esi),%eax
8010aeb0:	68 84 f9 10 80       	push   $0x8010f984
8010aeb5:	83 ee 80             	sub    $0xffffff80,%esi
8010aeb8:	50                   	push   %eax
8010aeb9:	e8 72 bb ff ff       	call   80106a30 <strncpy>
8010aebe:	8b 47 10             	mov    0x10(%edi),%eax
8010aec1:	83 c4 10             	add    $0x10,%esp
8010aec4:	e9 1c ff ff ff       	jmp    8010ade5 <unsafe_cg_read+0x295>
8010aec9:	83 ec 0c             	sub    $0xc,%esp
8010aecc:	68 50 f9 10 80       	push   $0x8010f950
8010aed1:	e8 fa bb ff ff       	call   80106ad0 <strlen>
8010aed6:	83 c4 0c             	add    $0xc,%esp
8010aed9:	50                   	push   %eax
8010aeda:	68 50 f9 10 80       	push   $0x8010f950
8010aedf:	56                   	push   %esi
8010aee0:	83 c6 40             	add    $0x40,%esi
8010aee3:	e8 48 bb ff ff       	call   80106a30 <strncpy>
8010aee8:	8b 47 10             	mov    0x10(%edi),%eax
8010aeeb:	83 c4 10             	add    $0x10,%esp
8010aeee:	e9 e5 fe ff ff       	jmp    8010add8 <unsafe_cg_read+0x288>
8010aef3:	83 ec 0c             	sub    $0xc,%esp
8010aef6:	68 3c f9 10 80       	push   $0x8010f93c
8010aefb:	e8 d0 bb ff ff       	call   80106ad0 <strlen>
8010af00:	83 c4 0c             	add    $0xc,%esp
8010af03:	50                   	push   %eax
8010af04:	68 3c f9 10 80       	push   $0x8010f93c
8010af09:	56                   	push   %esi
8010af0a:	83 c6 40             	add    $0x40,%esi
8010af0d:	e8 1e bb ff ff       	call   80106a30 <strncpy>
8010af12:	8b 47 10             	mov    0x10(%edi),%eax
8010af15:	83 c4 10             	add    $0x10,%esp
8010af18:	e9 ae fe ff ff       	jmp    8010adcb <unsafe_cg_read+0x27b>
8010af1d:	83 ec 0c             	sub    $0xc,%esp
8010af20:	68 20 f9 10 80       	push   $0x8010f920
8010af25:	e8 a6 bb ff ff       	call   80106ad0 <strlen>
8010af2a:	83 c4 0c             	add    $0xc,%esp
8010af2d:	50                   	push   %eax
8010af2e:	68 20 f9 10 80       	push   $0x8010f920
8010af33:	56                   	push   %esi
8010af34:	8d b3 00 02 00 00    	lea    0x200(%ebx),%esi
8010af3a:	e8 f1 ba ff ff       	call   80106a30 <strncpy>
8010af3f:	c7 04 24 2b f9 10 80 	movl   $0x8010f92b,(%esp)
8010af46:	e8 85 bb ff ff       	call   80106ad0 <strlen>
8010af4b:	83 c4 0c             	add    $0xc,%esp
8010af4e:	50                   	push   %eax
8010af4f:	8d 83 c0 01 00 00    	lea    0x1c0(%ebx),%eax
8010af55:	68 2b f9 10 80       	push   $0x8010f92b
8010af5a:	50                   	push   %eax
8010af5b:	e8 d0 ba ff ff       	call   80106a30 <strncpy>
8010af60:	8b 47 10             	mov    0x10(%edi),%eax
8010af63:	83 c4 10             	add    $0x10,%esp
8010af66:	e9 53 fe ff ff       	jmp    8010adbe <unsafe_cg_read+0x26e>
8010af6b:	8b 47 10             	mov    0x10(%edi),%eax
8010af6e:	e9 72 fe ff ff       	jmp    8010ade5 <unsafe_cg_read+0x295>
8010af73:	83 ec 0c             	sub    $0xc,%esp
8010af76:	31 c9                	xor    %ecx,%ecx
8010af78:	31 d2                	xor    %edx,%edx
8010af7a:	68 77 fa 10 80       	push   $0x8010fa77
8010af7f:	31 db                	xor    %ebx,%ebx
8010af81:	31 f6                	xor    %esi,%esi
8010af83:	31 c0                	xor    %eax,%eax
8010af85:	66 89 4d b5          	mov    %cx,-0x4b(%ebp)
8010af89:	66 89 55 aa          	mov    %dx,-0x56(%ebp)
8010af8d:	66 89 5d c0          	mov    %bx,-0x40(%ebp)
8010af91:	66 89 75 cb          	mov    %si,-0x35(%ebp)
8010af95:	c7 45 a2 00 00 00 00 	movl   $0x0,-0x5e(%ebp)
8010af9c:	c7 45 a6 00 00 00 00 	movl   $0x0,-0x5a(%ebp)
8010afa3:	c7 45 ad 00 00 00 00 	movl   $0x0,-0x53(%ebp)
8010afaa:	c7 45 b1 00 00 00 00 	movl   $0x0,-0x4f(%ebp)
8010afb1:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
8010afb8:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
8010afbf:	c7 45 c3 00 00 00 00 	movl   $0x0,-0x3d(%ebp)
8010afc6:	c7 45 c7 00 00 00 00 	movl   $0x0,-0x39(%ebp)
8010afcd:	c7 45 ce 00 00 00 00 	movl   $0x0,-0x32(%ebp)
8010afd4:	c7 45 d2 00 00 00 00 	movl   $0x0,-0x2e(%ebp)
8010afdb:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)
8010afdf:	e8 ec ba ff ff       	call   80106ad0 <strlen>
8010afe4:	89 c3                	mov    %eax,%ebx
8010afe6:	58                   	pop    %eax
8010afe7:	5a                   	pop    %edx
8010afe8:	8d 55 a2             	lea    -0x5e(%ebp),%edx
8010afeb:	ff 77 58             	pushl  0x58(%edi)
8010afee:	52                   	push   %edx
8010afef:	89 55 84             	mov    %edx,-0x7c(%ebp)
8010aff2:	e8 29 f4 ff ff       	call   8010a420 <utoa>
8010aff7:	89 c6                	mov    %eax,%esi
8010aff9:	c7 04 24 85 fa 10 80 	movl   $0x8010fa85,(%esp)
8010b000:	8d 5c 33 01          	lea    0x1(%ebx,%esi,1),%ebx
8010b004:	e8 c7 ba ff ff       	call   80106ad0 <strlen>
8010b009:	59                   	pop    %ecx
8010b00a:	01 c3                	add    %eax,%ebx
8010b00c:	8d 45 ad             	lea    -0x53(%ebp),%eax
8010b00f:	5e                   	pop    %esi
8010b010:	ff 77 5c             	pushl  0x5c(%edi)
8010b013:	50                   	push   %eax
8010b014:	e8 07 f4 ff ff       	call   8010a420 <utoa>
8010b019:	89 c6                	mov    %eax,%esi
8010b01b:	c7 04 24 9e fa 10 80 	movl   $0x8010fa9e,(%esp)
8010b022:	8d 74 33 01          	lea    0x1(%ebx,%esi,1),%esi
8010b026:	e8 a5 ba ff ff       	call   80106ad0 <strlen>
8010b02b:	01 c6                	add    %eax,%esi
8010b02d:	58                   	pop    %eax
8010b02e:	8d 45 b8             	lea    -0x48(%ebp),%eax
8010b031:	5a                   	pop    %edx
8010b032:	ff 77 60             	pushl  0x60(%edi)
8010b035:	50                   	push   %eax
8010b036:	e8 e5 f3 ff ff       	call   8010a420 <utoa>
8010b03b:	89 c3                	mov    %eax,%ebx
8010b03d:	c7 04 24 a9 fa 10 80 	movl   $0x8010faa9,(%esp)
8010b044:	8d 5c 1e 01          	lea    0x1(%esi,%ebx,1),%ebx
8010b048:	e8 83 ba ff ff       	call   80106ad0 <strlen>
8010b04d:	59                   	pop    %ecx
8010b04e:	01 c3                	add    %eax,%ebx
8010b050:	8d 45 c3             	lea    -0x3d(%ebp),%eax
8010b053:	5e                   	pop    %esi
8010b054:	ff 77 64             	pushl  0x64(%edi)
8010b057:	50                   	push   %eax
8010b058:	e8 c3 f3 ff ff       	call   8010a420 <utoa>
8010b05d:	89 c6                	mov    %eax,%esi
8010b05f:	c7 04 24 b7 fa 10 80 	movl   $0x8010fab7,(%esp)
8010b066:	e8 65 ba ff ff       	call   80106ad0 <strlen>
8010b06b:	8d 4c 33 02          	lea    0x2(%ebx,%esi,1),%ecx
8010b06f:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx
8010b072:	8d 4d ce             	lea    -0x32(%ebp),%ecx
8010b075:	58                   	pop    %eax
8010b076:	5a                   	pop    %edx
8010b077:	ff 77 68             	pushl  0x68(%edi)
8010b07a:	51                   	push   %ecx
8010b07b:	89 4d 80             	mov    %ecx,-0x80(%ebp)
8010b07e:	e8 9d f3 ff ff       	call   8010a420 <utoa>
8010b083:	83 c4 0c             	add    $0xc,%esp
8010b086:	01 d8                	add    %ebx,%eax
8010b088:	50                   	push   %eax
8010b089:	6a 00                	push   $0x0
8010b08b:	68 c0 d5 11 80       	push   $0x8011d5c0
8010b090:	e8 ab b7 ff ff       	call   80106840 <memset>
8010b095:	c7 04 24 77 fa 10 80 	movl   $0x8010fa77,(%esp)
8010b09c:	e8 2f ba ff ff       	call   80106ad0 <strlen>
8010b0a1:	83 c4 0c             	add    $0xc,%esp
8010b0a4:	89 c3                	mov    %eax,%ebx
8010b0a6:	50                   	push   %eax
8010b0a7:	68 77 fa 10 80       	push   $0x8010fa77
8010b0ac:	81 c3 c0 d5 11 80    	add    $0x8011d5c0,%ebx
8010b0b2:	68 c0 d5 11 80       	push   $0x8011d5c0
8010b0b7:	e8 74 b9 ff ff       	call   80106a30 <strncpy>
8010b0bc:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010b0bf:	89 14 24             	mov    %edx,(%esp)
8010b0c2:	e8 09 ba ff ff       	call   80106ad0 <strlen>
8010b0c7:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010b0ca:	83 c4 0c             	add    $0xc,%esp
8010b0cd:	89 c6                	mov    %eax,%esi
8010b0cf:	50                   	push   %eax
8010b0d0:	52                   	push   %edx
8010b0d1:	53                   	push   %ebx
8010b0d2:	01 f3                	add    %esi,%ebx
8010b0d4:	e8 57 b9 ff ff       	call   80106a30 <strncpy>
8010b0d9:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b0e0:	e8 eb b9 ff ff       	call   80106ad0 <strlen>
8010b0e5:	83 c4 0c             	add    $0xc,%esp
8010b0e8:	89 c6                	mov    %eax,%esi
8010b0ea:	50                   	push   %eax
8010b0eb:	68 33 f8 10 80       	push   $0x8010f833
8010b0f0:	53                   	push   %ebx
8010b0f1:	e8 3a b9 ff ff       	call   80106a30 <strncpy>
8010b0f6:	01 f3                	add    %esi,%ebx
8010b0f8:	c7 04 24 85 fa 10 80 	movl   $0x8010fa85,(%esp)
8010b0ff:	e8 cc b9 ff ff       	call   80106ad0 <strlen>
8010b104:	83 c4 0c             	add    $0xc,%esp
8010b107:	89 c6                	mov    %eax,%esi
8010b109:	50                   	push   %eax
8010b10a:	68 85 fa 10 80       	push   $0x8010fa85
8010b10f:	53                   	push   %ebx
8010b110:	01 f3                	add    %esi,%ebx
8010b112:	e8 19 b9 ff ff       	call   80106a30 <strncpy>
8010b117:	8d 45 ad             	lea    -0x53(%ebp),%eax
8010b11a:	89 04 24             	mov    %eax,(%esp)
8010b11d:	e8 ae b9 ff ff       	call   80106ad0 <strlen>
8010b122:	83 c4 0c             	add    $0xc,%esp
8010b125:	89 c6                	mov    %eax,%esi
8010b127:	50                   	push   %eax
8010b128:	8d 45 ad             	lea    -0x53(%ebp),%eax
8010b12b:	50                   	push   %eax
8010b12c:	53                   	push   %ebx
8010b12d:	01 f3                	add    %esi,%ebx
8010b12f:	e8 fc b8 ff ff       	call   80106a30 <strncpy>
8010b134:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b13b:	e8 90 b9 ff ff       	call   80106ad0 <strlen>
8010b140:	83 c4 0c             	add    $0xc,%esp
8010b143:	89 c6                	mov    %eax,%esi
8010b145:	50                   	push   %eax
8010b146:	68 33 f8 10 80       	push   $0x8010f833
8010b14b:	53                   	push   %ebx
8010b14c:	01 f3                	add    %esi,%ebx
8010b14e:	e8 dd b8 ff ff       	call   80106a30 <strncpy>
8010b153:	c7 04 24 9e fa 10 80 	movl   $0x8010fa9e,(%esp)
8010b15a:	e8 71 b9 ff ff       	call   80106ad0 <strlen>
8010b15f:	83 c4 0c             	add    $0xc,%esp
8010b162:	89 c6                	mov    %eax,%esi
8010b164:	50                   	push   %eax
8010b165:	68 9e fa 10 80       	push   $0x8010fa9e
8010b16a:	53                   	push   %ebx
8010b16b:	01 f3                	add    %esi,%ebx
8010b16d:	e8 be b8 ff ff       	call   80106a30 <strncpy>
8010b172:	8d 45 b8             	lea    -0x48(%ebp),%eax
8010b175:	89 04 24             	mov    %eax,(%esp)
8010b178:	e8 53 b9 ff ff       	call   80106ad0 <strlen>
8010b17d:	83 c4 0c             	add    $0xc,%esp
8010b180:	89 c6                	mov    %eax,%esi
8010b182:	50                   	push   %eax
8010b183:	8d 45 b8             	lea    -0x48(%ebp),%eax
8010b186:	50                   	push   %eax
8010b187:	53                   	push   %ebx
8010b188:	01 f3                	add    %esi,%ebx
8010b18a:	e8 a1 b8 ff ff       	call   80106a30 <strncpy>
8010b18f:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b196:	e8 35 b9 ff ff       	call   80106ad0 <strlen>
8010b19b:	83 c4 0c             	add    $0xc,%esp
8010b19e:	89 c6                	mov    %eax,%esi
8010b1a0:	50                   	push   %eax
8010b1a1:	68 33 f8 10 80       	push   $0x8010f833
8010b1a6:	53                   	push   %ebx
8010b1a7:	01 f3                	add    %esi,%ebx
8010b1a9:	e8 82 b8 ff ff       	call   80106a30 <strncpy>
8010b1ae:	c7 04 24 a9 fa 10 80 	movl   $0x8010faa9,(%esp)
8010b1b5:	e8 16 b9 ff ff       	call   80106ad0 <strlen>
8010b1ba:	83 c4 0c             	add    $0xc,%esp
8010b1bd:	89 c6                	mov    %eax,%esi
8010b1bf:	50                   	push   %eax
8010b1c0:	68 a9 fa 10 80       	push   $0x8010faa9
8010b1c5:	53                   	push   %ebx
8010b1c6:	01 f3                	add    %esi,%ebx
8010b1c8:	e8 63 b8 ff ff       	call   80106a30 <strncpy>
8010b1cd:	8d 45 c3             	lea    -0x3d(%ebp),%eax
8010b1d0:	89 04 24             	mov    %eax,(%esp)
8010b1d3:	e8 f8 b8 ff ff       	call   80106ad0 <strlen>
8010b1d8:	83 c4 0c             	add    $0xc,%esp
8010b1db:	89 c6                	mov    %eax,%esi
8010b1dd:	50                   	push   %eax
8010b1de:	8d 45 c3             	lea    -0x3d(%ebp),%eax
8010b1e1:	50                   	push   %eax
8010b1e2:	53                   	push   %ebx
8010b1e3:	e8 48 b8 ff ff       	call   80106a30 <strncpy>
8010b1e8:	01 f3                	add    %esi,%ebx
8010b1ea:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b1f1:	e8 da b8 ff ff       	call   80106ad0 <strlen>
8010b1f6:	83 c4 0c             	add    $0xc,%esp
8010b1f9:	89 c6                	mov    %eax,%esi
8010b1fb:	50                   	push   %eax
8010b1fc:	68 33 f8 10 80       	push   $0x8010f833
8010b201:	53                   	push   %ebx
8010b202:	01 f3                	add    %esi,%ebx
8010b204:	e8 27 b8 ff ff       	call   80106a30 <strncpy>
8010b209:	c7 04 24 b7 fa 10 80 	movl   $0x8010fab7,(%esp)
8010b210:	e8 bb b8 ff ff       	call   80106ad0 <strlen>
8010b215:	83 c4 0c             	add    $0xc,%esp
8010b218:	89 c6                	mov    %eax,%esi
8010b21a:	50                   	push   %eax
8010b21b:	68 c1 fa 10 80       	push   $0x8010fac1
8010b220:	53                   	push   %ebx
8010b221:	01 f3                	add    %esi,%ebx
8010b223:	e8 08 b8 ff ff       	call   80106a30 <strncpy>
8010b228:	8b 4d 80             	mov    -0x80(%ebp),%ecx
8010b22b:	89 0c 24             	mov    %ecx,(%esp)
8010b22e:	89 4d 84             	mov    %ecx,-0x7c(%ebp)
8010b231:	e8 9a b8 ff ff       	call   80106ad0 <strlen>
8010b236:	8b 4d 84             	mov    -0x7c(%ebp),%ecx
8010b239:	83 c4 0c             	add    $0xc,%esp
8010b23c:	89 c6                	mov    %eax,%esi
8010b23e:	50                   	push   %eax
8010b23f:	51                   	push   %ecx
8010b240:	53                   	push   %ebx
8010b241:	01 f3                	add    %esi,%ebx
8010b243:	e8 e8 b7 ff ff       	call   80106a30 <strncpy>
8010b248:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b24f:	e8 7c b8 ff ff       	call   80106ad0 <strlen>
8010b254:	83 c4 0c             	add    $0xc,%esp
8010b257:	89 c6                	mov    %eax,%esi
8010b259:	50                   	push   %eax
8010b25a:	68 33 f8 10 80       	push   $0x8010f833
8010b25f:	53                   	push   %ebx
8010b260:	e8 cb b7 ff ff       	call   80106a30 <strncpy>
8010b265:	8d 14 33             	lea    (%ebx,%esi,1),%edx
8010b268:	8b 47 0c             	mov    0xc(%edi),%eax
8010b26b:	83 c4 10             	add    $0x10,%esp
8010b26e:	81 ea c0 d5 11 80    	sub    $0x8011d5c0,%edx
8010b274:	39 c2                	cmp    %eax,%edx
8010b276:	0f 84 55 10 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b27c:	29 c2                	sub    %eax,%edx
8010b27e:	3b 55 14             	cmp    0x14(%ebp),%edx
8010b281:	0f 47 55 14          	cmova  0x14(%ebp),%edx
8010b285:	85 d2                	test   %edx,%edx
8010b287:	0f 8e 44 10 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010b28d:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010b294:	84 c9                	test   %cl,%cl
8010b296:	0f 84 35 10 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b29c:	31 db                	xor    %ebx,%ebx
8010b29e:	8b 75 10             	mov    0x10(%ebp),%esi
8010b2a1:	eb 0c                	jmp    8010b2af <unsafe_cg_read+0x75f>
8010b2a3:	0f b6 8c 18 c0 d5 11 	movzbl -0x7fee2a40(%eax,%ebx,1),%ecx
8010b2aa:	80 
8010b2ab:	84 c9                	test   %cl,%cl
8010b2ad:	74 0a                	je     8010b2b9 <unsafe_cg_read+0x769>
8010b2af:	88 0c 1e             	mov    %cl,(%esi,%ebx,1)
8010b2b2:	83 c3 01             	add    $0x1,%ebx
8010b2b5:	39 da                	cmp    %ebx,%edx
8010b2b7:	75 ea                	jne    8010b2a3 <unsafe_cg_read+0x753>
8010b2b9:	8b 47 0c             	mov    0xc(%edi),%eax
8010b2bc:	89 da                	mov    %ebx,%edx
8010b2be:	e9 a3 08 00 00       	jmp    8010bb66 <unsafe_cg_read+0x1016>
8010b2c3:	8d 75 ce             	lea    -0x32(%ebp),%esi
8010b2c6:	83 ec 08             	sub    $0x8,%esp
8010b2c9:	31 c9                	xor    %ecx,%ecx
8010b2cb:	66 89 4d d6          	mov    %cx,-0x2a(%ebp)
8010b2cf:	c7 45 ce 00 00 00 00 	movl   $0x0,-0x32(%ebp)
8010b2d6:	c7 45 d2 00 00 00 00 	movl   $0x0,-0x2e(%ebp)
8010b2dd:	ff b2 38 03 00 00    	pushl  0x338(%edx)
8010b2e3:	56                   	push   %esi
8010b2e4:	e8 37 f1 ff ff       	call   8010a420 <utoa>
8010b2e9:	89 34 24             	mov    %esi,(%esp)
8010b2ec:	e8 df b7 ff ff       	call   80106ad0 <strlen>
8010b2f1:	83 c4 0c             	add    $0xc,%esp
8010b2f4:	89 c3                	mov    %eax,%ebx
8010b2f6:	50                   	push   %eax
8010b2f7:	56                   	push   %esi
8010b2f8:	81 c3 c0 d5 11 80    	add    $0x8011d5c0,%ebx
8010b2fe:	68 c0 d5 11 80       	push   $0x8011d5c0
8010b303:	e8 28 b7 ff ff       	call   80106a30 <strncpy>
8010b308:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b30f:	e8 bc b7 ff ff       	call   80106ad0 <strlen>
8010b314:	83 c4 0c             	add    $0xc,%esp
8010b317:	89 c6                	mov    %eax,%esi
8010b319:	50                   	push   %eax
8010b31a:	68 33 f8 10 80       	push   $0x8010f833
8010b31f:	53                   	push   %ebx
8010b320:	e8 0b b7 ff ff       	call   80106a30 <strncpy>
8010b325:	8d 14 33             	lea    (%ebx,%esi,1),%edx
8010b328:	8b 47 0c             	mov    0xc(%edi),%eax
8010b32b:	83 c4 10             	add    $0x10,%esp
8010b32e:	81 ea c0 d5 11 80    	sub    $0x8011d5c0,%edx
8010b334:	39 c2                	cmp    %eax,%edx
8010b336:	0f 84 95 0f 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b33c:	29 c2                	sub    %eax,%edx
8010b33e:	3b 55 14             	cmp    0x14(%ebp),%edx
8010b341:	0f 47 55 14          	cmova  0x14(%ebp),%edx
8010b345:	85 d2                	test   %edx,%edx
8010b347:	0f 8e 84 0f 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010b34d:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010b354:	84 c9                	test   %cl,%cl
8010b356:	0f 84 75 0f 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b35c:	31 db                	xor    %ebx,%ebx
8010b35e:	8b 75 10             	mov    0x10(%ebp),%esi
8010b361:	eb 10                	jmp    8010b373 <unsafe_cg_read+0x823>
8010b363:	0f b6 8c 18 c0 d5 11 	movzbl -0x7fee2a40(%eax,%ebx,1),%ecx
8010b36a:	80 
8010b36b:	84 c9                	test   %cl,%cl
8010b36d:	0f 84 46 ff ff ff    	je     8010b2b9 <unsafe_cg_read+0x769>
8010b373:	88 0c 1e             	mov    %cl,(%esi,%ebx,1)
8010b376:	83 c3 01             	add    $0x1,%ebx
8010b379:	39 da                	cmp    %ebx,%edx
8010b37b:	75 e6                	jne    8010b363 <unsafe_cg_read+0x813>
8010b37d:	e9 37 ff ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010b382:	8d 75 ce             	lea    -0x32(%ebp),%esi
8010b385:	83 ec 08             	sub    $0x8,%esp
8010b388:	31 c0                	xor    %eax,%eax
8010b38a:	66 89 45 ce          	mov    %ax,-0x32(%ebp)
8010b38e:	c6 45 d0 00          	movb   $0x0,-0x30(%ebp)
8010b392:	ff b2 04 03 00 00    	pushl  0x304(%edx)
8010b398:	56                   	push   %esi
8010b399:	e8 d2 ef ff ff       	call   8010a370 <itoa>
8010b39e:	c7 04 24 5c fa 10 80 	movl   $0x8010fa5c,(%esp)
8010b3a5:	e8 26 b7 ff ff       	call   80106ad0 <strlen>
8010b3aa:	83 c4 0c             	add    $0xc,%esp
8010b3ad:	89 c3                	mov    %eax,%ebx
8010b3af:	50                   	push   %eax
8010b3b0:	68 5c fa 10 80       	push   $0x8010fa5c
8010b3b5:	81 c3 c0 d5 11 80    	add    $0x8011d5c0,%ebx
8010b3bb:	68 c0 d5 11 80       	push   $0x8011d5c0
8010b3c0:	e8 6b b6 ff ff       	call   80106a30 <strncpy>
8010b3c5:	89 34 24             	mov    %esi,(%esp)
8010b3c8:	e8 03 b7 ff ff       	call   80106ad0 <strlen>
8010b3cd:	83 c4 0c             	add    $0xc,%esp
8010b3d0:	89 45 84             	mov    %eax,-0x7c(%ebp)
8010b3d3:	50                   	push   %eax
8010b3d4:	56                   	push   %esi
8010b3d5:	53                   	push   %ebx
8010b3d6:	e8 55 b6 ff ff       	call   80106a30 <strncpy>
8010b3db:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010b3de:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b3e5:	01 d3                	add    %edx,%ebx
8010b3e7:	e8 e4 b6 ff ff       	call   80106ad0 <strlen>
8010b3ec:	83 c4 0c             	add    $0xc,%esp
8010b3ef:	89 c6                	mov    %eax,%esi
8010b3f1:	50                   	push   %eax
8010b3f2:	68 33 f8 10 80       	push   $0x8010f833
8010b3f7:	53                   	push   %ebx
8010b3f8:	e8 33 b6 ff ff       	call   80106a30 <strncpy>
8010b3fd:	8d 14 33             	lea    (%ebx,%esi,1),%edx
8010b400:	8b 47 0c             	mov    0xc(%edi),%eax
8010b403:	83 c4 10             	add    $0x10,%esp
8010b406:	81 ea c0 d5 11 80    	sub    $0x8011d5c0,%edx
8010b40c:	39 c2                	cmp    %eax,%edx
8010b40e:	0f 84 bd 0e 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b414:	29 c2                	sub    %eax,%edx
8010b416:	3b 55 14             	cmp    0x14(%ebp),%edx
8010b419:	0f 47 55 14          	cmova  0x14(%ebp),%edx
8010b41d:	85 d2                	test   %edx,%edx
8010b41f:	0f 8e ac 0e 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010b425:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010b42c:	84 c9                	test   %cl,%cl
8010b42e:	0f 84 9d 0e 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b434:	31 db                	xor    %ebx,%ebx
8010b436:	8b 75 10             	mov    0x10(%ebp),%esi
8010b439:	eb 10                	jmp    8010b44b <unsafe_cg_read+0x8fb>
8010b43b:	0f b6 8c 18 c0 d5 11 	movzbl -0x7fee2a40(%eax,%ebx,1),%ecx
8010b442:	80 
8010b443:	84 c9                	test   %cl,%cl
8010b445:	0f 84 6e fe ff ff    	je     8010b2b9 <unsafe_cg_read+0x769>
8010b44b:	88 0c 1e             	mov    %cl,(%esi,%ebx,1)
8010b44e:	83 c3 01             	add    $0x1,%ebx
8010b451:	39 da                	cmp    %ebx,%edx
8010b453:	75 e6                	jne    8010b43b <unsafe_cg_read+0x8eb>
8010b455:	e9 5f fe ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010b45a:	31 c0                	xor    %eax,%eax
8010b45c:	8d 75 97             	lea    -0x69(%ebp),%esi
8010b45f:	83 ec 08             	sub    $0x8,%esp
8010b462:	66 89 45 9f          	mov    %ax,-0x61(%ebp)
8010b466:	31 c0                	xor    %eax,%eax
8010b468:	ff 77 58             	pushl  0x58(%edi)
8010b46b:	66 89 45 aa          	mov    %ax,-0x56(%ebp)
8010b46f:	31 c0                	xor    %eax,%eax
8010b471:	56                   	push   %esi
8010b472:	66 89 45 b5          	mov    %ax,-0x4b(%ebp)
8010b476:	31 c0                	xor    %eax,%eax
8010b478:	c7 45 97 00 00 00 00 	movl   $0x0,-0x69(%ebp)
8010b47f:	66 89 45 c0          	mov    %ax,-0x40(%ebp)
8010b483:	31 c0                	xor    %eax,%eax
8010b485:	c7 45 9b 00 00 00 00 	movl   $0x0,-0x65(%ebp)
8010b48c:	66 89 45 cb          	mov    %ax,-0x35(%ebp)
8010b490:	31 c0                	xor    %eax,%eax
8010b492:	c6 45 a1 00          	movb   $0x0,-0x5f(%ebp)
8010b496:	c7 45 a2 00 00 00 00 	movl   $0x0,-0x5e(%ebp)
8010b49d:	c7 45 a6 00 00 00 00 	movl   $0x0,-0x5a(%ebp)
8010b4a4:	c6 45 ac 00          	movb   $0x0,-0x54(%ebp)
8010b4a8:	c7 45 ad 00 00 00 00 	movl   $0x0,-0x53(%ebp)
8010b4af:	c7 45 b1 00 00 00 00 	movl   $0x0,-0x4f(%ebp)
8010b4b6:	c6 45 b7 00          	movb   $0x0,-0x49(%ebp)
8010b4ba:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
8010b4c1:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
8010b4c8:	c6 45 c2 00          	movb   $0x0,-0x3e(%ebp)
8010b4cc:	c7 45 c3 00 00 00 00 	movl   $0x0,-0x3d(%ebp)
8010b4d3:	c7 45 c7 00 00 00 00 	movl   $0x0,-0x39(%ebp)
8010b4da:	c6 45 cd 00          	movb   $0x0,-0x33(%ebp)
8010b4de:	c7 45 ce 00 00 00 00 	movl   $0x0,-0x32(%ebp)
8010b4e5:	c7 45 d2 00 00 00 00 	movl   $0x0,-0x2e(%ebp)
8010b4ec:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)
8010b4f0:	c6 45 d8 00          	movb   $0x0,-0x28(%ebp)
8010b4f4:	e8 77 ee ff ff       	call   8010a370 <itoa>
8010b4f9:	5a                   	pop    %edx
8010b4fa:	8d 45 a2             	lea    -0x5e(%ebp),%eax
8010b4fd:	59                   	pop    %ecx
8010b4fe:	ff 77 5c             	pushl  0x5c(%edi)
8010b501:	50                   	push   %eax
8010b502:	e8 69 ee ff ff       	call   8010a370 <itoa>
8010b507:	5b                   	pop    %ebx
8010b508:	8d 4d ad             	lea    -0x53(%ebp),%ecx
8010b50b:	58                   	pop    %eax
8010b50c:	ff 77 60             	pushl  0x60(%edi)
8010b50f:	51                   	push   %ecx
8010b510:	89 4d 80             	mov    %ecx,-0x80(%ebp)
8010b513:	e8 58 ee ff ff       	call   8010a370 <itoa>
8010b518:	58                   	pop    %eax
8010b519:	8d 45 b8             	lea    -0x48(%ebp),%eax
8010b51c:	5a                   	pop    %edx
8010b51d:	ff 77 64             	pushl  0x64(%edi)
8010b520:	50                   	push   %eax
8010b521:	e8 4a ee ff ff       	call   8010a370 <itoa>
8010b526:	59                   	pop    %ecx
8010b527:	8d 45 c3             	lea    -0x3d(%ebp),%eax
8010b52a:	5b                   	pop    %ebx
8010b52b:	ff 77 68             	pushl  0x68(%edi)
8010b52e:	50                   	push   %eax
8010b52f:	e8 3c ee ff ff       	call   8010a370 <itoa>
8010b534:	58                   	pop    %eax
8010b535:	8d 45 ce             	lea    -0x32(%ebp),%eax
8010b538:	5a                   	pop    %edx
8010b539:	ff 77 6c             	pushl  0x6c(%edi)
8010b53c:	50                   	push   %eax
8010b53d:	e8 2e ee ff ff       	call   8010a370 <itoa>
8010b542:	c7 04 24 e6 f9 10 80 	movl   $0x8010f9e6,(%esp)
8010b549:	e8 82 b5 ff ff       	call   80106ad0 <strlen>
8010b54e:	83 c4 0c             	add    $0xc,%esp
8010b551:	89 c3                	mov    %eax,%ebx
8010b553:	50                   	push   %eax
8010b554:	68 e6 f9 10 80       	push   $0x8010f9e6
8010b559:	81 c3 c0 d5 11 80    	add    $0x8011d5c0,%ebx
8010b55f:	68 c0 d5 11 80       	push   $0x8011d5c0
8010b564:	e8 c7 b4 ff ff       	call   80106a30 <strncpy>
8010b569:	89 34 24             	mov    %esi,(%esp)
8010b56c:	e8 5f b5 ff ff       	call   80106ad0 <strlen>
8010b571:	83 c4 0c             	add    $0xc,%esp
8010b574:	89 45 84             	mov    %eax,-0x7c(%ebp)
8010b577:	50                   	push   %eax
8010b578:	56                   	push   %esi
8010b579:	53                   	push   %ebx
8010b57a:	e8 b1 b4 ff ff       	call   80106a30 <strncpy>
8010b57f:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010b582:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b589:	01 d3                	add    %edx,%ebx
8010b58b:	e8 40 b5 ff ff       	call   80106ad0 <strlen>
8010b590:	83 c4 0c             	add    $0xc,%esp
8010b593:	89 c6                	mov    %eax,%esi
8010b595:	50                   	push   %eax
8010b596:	68 33 f8 10 80       	push   $0x8010f833
8010b59b:	53                   	push   %ebx
8010b59c:	01 f3                	add    %esi,%ebx
8010b59e:	e8 8d b4 ff ff       	call   80106a30 <strncpy>
8010b5a3:	c7 04 24 f4 f9 10 80 	movl   $0x8010f9f4,(%esp)
8010b5aa:	e8 21 b5 ff ff       	call   80106ad0 <strlen>
8010b5af:	83 c4 0c             	add    $0xc,%esp
8010b5b2:	89 c6                	mov    %eax,%esi
8010b5b4:	50                   	push   %eax
8010b5b5:	68 f4 f9 10 80       	push   $0x8010f9f4
8010b5ba:	53                   	push   %ebx
8010b5bb:	01 f3                	add    %esi,%ebx
8010b5bd:	e8 6e b4 ff ff       	call   80106a30 <strncpy>
8010b5c2:	8d 45 a2             	lea    -0x5e(%ebp),%eax
8010b5c5:	89 04 24             	mov    %eax,(%esp)
8010b5c8:	e8 03 b5 ff ff       	call   80106ad0 <strlen>
8010b5cd:	83 c4 0c             	add    $0xc,%esp
8010b5d0:	89 c6                	mov    %eax,%esi
8010b5d2:	50                   	push   %eax
8010b5d3:	8d 45 a2             	lea    -0x5e(%ebp),%eax
8010b5d6:	50                   	push   %eax
8010b5d7:	53                   	push   %ebx
8010b5d8:	e8 53 b4 ff ff       	call   80106a30 <strncpy>
8010b5dd:	01 f3                	add    %esi,%ebx
8010b5df:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b5e6:	e8 e5 b4 ff ff       	call   80106ad0 <strlen>
8010b5eb:	83 c4 0c             	add    $0xc,%esp
8010b5ee:	89 c6                	mov    %eax,%esi
8010b5f0:	50                   	push   %eax
8010b5f1:	68 33 f8 10 80       	push   $0x8010f833
8010b5f6:	53                   	push   %ebx
8010b5f7:	01 f3                	add    %esi,%ebx
8010b5f9:	e8 32 b4 ff ff       	call   80106a30 <strncpy>
8010b5fe:	c7 04 24 01 fa 10 80 	movl   $0x8010fa01,(%esp)
8010b605:	e8 c6 b4 ff ff       	call   80106ad0 <strlen>
8010b60a:	83 c4 0c             	add    $0xc,%esp
8010b60d:	89 c6                	mov    %eax,%esi
8010b60f:	50                   	push   %eax
8010b610:	68 01 fa 10 80       	push   $0x8010fa01
8010b615:	53                   	push   %ebx
8010b616:	01 f3                	add    %esi,%ebx
8010b618:	e8 13 b4 ff ff       	call   80106a30 <strncpy>
8010b61d:	8b 4d 80             	mov    -0x80(%ebp),%ecx
8010b620:	89 0c 24             	mov    %ecx,(%esp)
8010b623:	89 4d 84             	mov    %ecx,-0x7c(%ebp)
8010b626:	e8 a5 b4 ff ff       	call   80106ad0 <strlen>
8010b62b:	8b 4d 84             	mov    -0x7c(%ebp),%ecx
8010b62e:	83 c4 0c             	add    $0xc,%esp
8010b631:	89 c6                	mov    %eax,%esi
8010b633:	50                   	push   %eax
8010b634:	51                   	push   %ecx
8010b635:	53                   	push   %ebx
8010b636:	01 f3                	add    %esi,%ebx
8010b638:	e8 f3 b3 ff ff       	call   80106a30 <strncpy>
8010b63d:	83 c4 10             	add    $0x10,%esp
8010b640:	80 7f 54 00          	cmpb   $0x0,0x54(%edi)
8010b644:	0f 84 15 01 00 00    	je     8010b75f <unsafe_cg_read+0xc0f>
8010b64a:	83 ec 0c             	sub    $0xc,%esp
8010b64d:	68 33 f8 10 80       	push   $0x8010f833
8010b652:	e8 79 b4 ff ff       	call   80106ad0 <strlen>
8010b657:	83 c4 0c             	add    $0xc,%esp
8010b65a:	89 c6                	mov    %eax,%esi
8010b65c:	50                   	push   %eax
8010b65d:	68 33 f8 10 80       	push   $0x8010f833
8010b662:	53                   	push   %ebx
8010b663:	01 f3                	add    %esi,%ebx
8010b665:	e8 c6 b3 ff ff       	call   80106a30 <strncpy>
8010b66a:	c7 04 24 10 fa 10 80 	movl   $0x8010fa10,(%esp)
8010b671:	e8 5a b4 ff ff       	call   80106ad0 <strlen>
8010b676:	83 c4 0c             	add    $0xc,%esp
8010b679:	89 c6                	mov    %eax,%esi
8010b67b:	50                   	push   %eax
8010b67c:	68 10 fa 10 80       	push   $0x8010fa10
8010b681:	53                   	push   %ebx
8010b682:	01 f3                	add    %esi,%ebx
8010b684:	e8 a7 b3 ff ff       	call   80106a30 <strncpy>
8010b689:	8d 45 b8             	lea    -0x48(%ebp),%eax
8010b68c:	89 04 24             	mov    %eax,(%esp)
8010b68f:	e8 3c b4 ff ff       	call   80106ad0 <strlen>
8010b694:	83 c4 0c             	add    $0xc,%esp
8010b697:	89 c6                	mov    %eax,%esi
8010b699:	50                   	push   %eax
8010b69a:	8d 45 b8             	lea    -0x48(%ebp),%eax
8010b69d:	50                   	push   %eax
8010b69e:	53                   	push   %ebx
8010b69f:	01 f3                	add    %esi,%ebx
8010b6a1:	e8 8a b3 ff ff       	call   80106a30 <strncpy>
8010b6a6:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b6ad:	e8 1e b4 ff ff       	call   80106ad0 <strlen>
8010b6b2:	83 c4 0c             	add    $0xc,%esp
8010b6b5:	89 c6                	mov    %eax,%esi
8010b6b7:	50                   	push   %eax
8010b6b8:	68 33 f8 10 80       	push   $0x8010f833
8010b6bd:	53                   	push   %ebx
8010b6be:	01 f3                	add    %esi,%ebx
8010b6c0:	e8 6b b3 ff ff       	call   80106a30 <strncpy>
8010b6c5:	c7 04 24 1e fa 10 80 	movl   $0x8010fa1e,(%esp)
8010b6cc:	e8 ff b3 ff ff       	call   80106ad0 <strlen>
8010b6d1:	83 c4 0c             	add    $0xc,%esp
8010b6d4:	89 c6                	mov    %eax,%esi
8010b6d6:	50                   	push   %eax
8010b6d7:	68 1e fa 10 80       	push   $0x8010fa1e
8010b6dc:	53                   	push   %ebx
8010b6dd:	01 f3                	add    %esi,%ebx
8010b6df:	e8 4c b3 ff ff       	call   80106a30 <strncpy>
8010b6e4:	8d 45 c3             	lea    -0x3d(%ebp),%eax
8010b6e7:	89 04 24             	mov    %eax,(%esp)
8010b6ea:	e8 e1 b3 ff ff       	call   80106ad0 <strlen>
8010b6ef:	83 c4 0c             	add    $0xc,%esp
8010b6f2:	89 c6                	mov    %eax,%esi
8010b6f4:	50                   	push   %eax
8010b6f5:	8d 45 c3             	lea    -0x3d(%ebp),%eax
8010b6f8:	50                   	push   %eax
8010b6f9:	53                   	push   %ebx
8010b6fa:	01 f3                	add    %esi,%ebx
8010b6fc:	e8 2f b3 ff ff       	call   80106a30 <strncpy>
8010b701:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b708:	e8 c3 b3 ff ff       	call   80106ad0 <strlen>
8010b70d:	83 c4 0c             	add    $0xc,%esp
8010b710:	89 c6                	mov    %eax,%esi
8010b712:	50                   	push   %eax
8010b713:	68 33 f8 10 80       	push   $0x8010f833
8010b718:	53                   	push   %ebx
8010b719:	01 f3                	add    %esi,%ebx
8010b71b:	e8 10 b3 ff ff       	call   80106a30 <strncpy>
8010b720:	c7 04 24 2e fa 10 80 	movl   $0x8010fa2e,(%esp)
8010b727:	e8 a4 b3 ff ff       	call   80106ad0 <strlen>
8010b72c:	83 c4 0c             	add    $0xc,%esp
8010b72f:	89 c6                	mov    %eax,%esi
8010b731:	50                   	push   %eax
8010b732:	68 2e fa 10 80       	push   $0x8010fa2e
8010b737:	53                   	push   %ebx
8010b738:	e8 f3 b2 ff ff       	call   80106a30 <strncpy>
8010b73d:	8d 45 ce             	lea    -0x32(%ebp),%eax
8010b740:	01 f3                	add    %esi,%ebx
8010b742:	89 04 24             	mov    %eax,(%esp)
8010b745:	e8 86 b3 ff ff       	call   80106ad0 <strlen>
8010b74a:	83 c4 0c             	add    $0xc,%esp
8010b74d:	89 c6                	mov    %eax,%esi
8010b74f:	50                   	push   %eax
8010b750:	8d 45 ce             	lea    -0x32(%ebp),%eax
8010b753:	50                   	push   %eax
8010b754:	53                   	push   %ebx
8010b755:	01 f3                	add    %esi,%ebx
8010b757:	e8 d4 b2 ff ff       	call   80106a30 <strncpy>
8010b75c:	83 c4 10             	add    $0x10,%esp
8010b75f:	83 ec 0c             	sub    $0xc,%esp
8010b762:	68 33 f8 10 80       	push   $0x8010f833
8010b767:	e8 64 b3 ff ff       	call   80106ad0 <strlen>
8010b76c:	83 c4 0c             	add    $0xc,%esp
8010b76f:	89 c6                	mov    %eax,%esi
8010b771:	50                   	push   %eax
8010b772:	68 33 f8 10 80       	push   $0x8010f833
8010b777:	53                   	push   %ebx
8010b778:	e8 b3 b2 ff ff       	call   80106a30 <strncpy>
8010b77d:	8d 14 33             	lea    (%ebx,%esi,1),%edx
8010b780:	8b 47 0c             	mov    0xc(%edi),%eax
8010b783:	83 c4 10             	add    $0x10,%esp
8010b786:	81 ea c0 d5 11 80    	sub    $0x8011d5c0,%edx
8010b78c:	39 c2                	cmp    %eax,%edx
8010b78e:	0f 84 3d 0b 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b794:	29 c2                	sub    %eax,%edx
8010b796:	3b 55 14             	cmp    0x14(%ebp),%edx
8010b799:	0f 47 55 14          	cmova  0x14(%ebp),%edx
8010b79d:	85 d2                	test   %edx,%edx
8010b79f:	0f 8e 2c 0b 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010b7a5:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010b7ac:	84 c9                	test   %cl,%cl
8010b7ae:	0f 84 1d 0b 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b7b4:	31 db                	xor    %ebx,%ebx
8010b7b6:	8b 75 10             	mov    0x10(%ebp),%esi
8010b7b9:	eb 10                	jmp    8010b7cb <unsafe_cg_read+0xc7b>
8010b7bb:	0f b6 8c 18 c0 d5 11 	movzbl -0x7fee2a40(%eax,%ebx,1),%ecx
8010b7c2:	80 
8010b7c3:	84 c9                	test   %cl,%cl
8010b7c5:	0f 84 ee fa ff ff    	je     8010b2b9 <unsafe_cg_read+0x769>
8010b7cb:	88 0c 1e             	mov    %cl,(%esi,%ebx,1)
8010b7ce:	83 c3 01             	add    $0x1,%ebx
8010b7d1:	39 da                	cmp    %ebx,%edx
8010b7d3:	75 e6                	jne    8010b7bb <unsafe_cg_read+0xc6b>
8010b7d5:	e9 df fa ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010b7da:	8d 75 c3             	lea    -0x3d(%ebp),%esi
8010b7dd:	83 ec 04             	sub    $0x4,%esp
8010b7e0:	6a 03                	push   $0x3
8010b7e2:	6a 00                	push   $0x0
8010b7e4:	56                   	push   %esi
8010b7e5:	e8 56 b0 ff ff       	call   80106840 <memset>
8010b7ea:	8b 47 10             	mov    0x10(%edi),%eax
8010b7ed:	59                   	pop    %ecx
8010b7ee:	5b                   	pop    %ebx
8010b7ef:	ff b0 24 03 00 00    	pushl  0x324(%eax)
8010b7f5:	56                   	push   %esi
8010b7f6:	e8 75 eb ff ff       	call   8010a370 <itoa>
8010b7fb:	8d 45 ce             	lea    -0x32(%ebp),%eax
8010b7fe:	83 c4 0c             	add    $0xc,%esp
8010b801:	6a 03                	push   $0x3
8010b803:	6a 00                	push   $0x0
8010b805:	50                   	push   %eax
8010b806:	e8 35 b0 ff ff       	call   80106840 <memset>
8010b80b:	58                   	pop    %eax
8010b80c:	8b 47 10             	mov    0x10(%edi),%eax
8010b80f:	5a                   	pop    %edx
8010b810:	ff b0 28 03 00 00    	pushl  0x328(%eax)
8010b816:	8d 45 ce             	lea    -0x32(%ebp),%eax
8010b819:	50                   	push   %eax
8010b81a:	e8 51 eb ff ff       	call   8010a370 <itoa>
8010b81f:	c7 04 24 bc f9 10 80 	movl   $0x8010f9bc,(%esp)
8010b826:	e8 a5 b2 ff ff       	call   80106ad0 <strlen>
8010b82b:	83 c4 0c             	add    $0xc,%esp
8010b82e:	89 c3                	mov    %eax,%ebx
8010b830:	50                   	push   %eax
8010b831:	68 bc f9 10 80       	push   $0x8010f9bc
8010b836:	81 c3 c0 d5 11 80    	add    $0x8011d5c0,%ebx
8010b83c:	68 c0 d5 11 80       	push   $0x8011d5c0
8010b841:	e8 ea b1 ff ff       	call   80106a30 <strncpy>
8010b846:	89 34 24             	mov    %esi,(%esp)
8010b849:	e8 82 b2 ff ff       	call   80106ad0 <strlen>
8010b84e:	83 c4 0c             	add    $0xc,%esp
8010b851:	89 45 84             	mov    %eax,-0x7c(%ebp)
8010b854:	50                   	push   %eax
8010b855:	56                   	push   %esi
8010b856:	53                   	push   %ebx
8010b857:	e8 d4 b1 ff ff       	call   80106a30 <strncpy>
8010b85c:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010b85f:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b866:	01 d3                	add    %edx,%ebx
8010b868:	e8 63 b2 ff ff       	call   80106ad0 <strlen>
8010b86d:	83 c4 0c             	add    $0xc,%esp
8010b870:	89 c6                	mov    %eax,%esi
8010b872:	50                   	push   %eax
8010b873:	68 33 f8 10 80       	push   $0x8010f833
8010b878:	53                   	push   %ebx
8010b879:	01 f3                	add    %esi,%ebx
8010b87b:	e8 b0 b1 ff ff       	call   80106a30 <strncpy>
8010b880:	c7 04 24 ce f9 10 80 	movl   $0x8010f9ce,(%esp)
8010b887:	e8 44 b2 ff ff       	call   80106ad0 <strlen>
8010b88c:	83 c4 0c             	add    $0xc,%esp
8010b88f:	89 c6                	mov    %eax,%esi
8010b891:	50                   	push   %eax
8010b892:	68 ce f9 10 80       	push   $0x8010f9ce
8010b897:	53                   	push   %ebx
8010b898:	01 f3                	add    %esi,%ebx
8010b89a:	e8 91 b1 ff ff       	call   80106a30 <strncpy>
8010b89f:	8d 45 ce             	lea    -0x32(%ebp),%eax
8010b8a2:	89 04 24             	mov    %eax,(%esp)
8010b8a5:	e8 26 b2 ff ff       	call   80106ad0 <strlen>
8010b8aa:	83 c4 0c             	add    $0xc,%esp
8010b8ad:	89 c6                	mov    %eax,%esi
8010b8af:	50                   	push   %eax
8010b8b0:	8d 45 ce             	lea    -0x32(%ebp),%eax
8010b8b3:	50                   	push   %eax
8010b8b4:	53                   	push   %ebx
8010b8b5:	01 f3                	add    %esi,%ebx
8010b8b7:	e8 74 b1 ff ff       	call   80106a30 <strncpy>
8010b8bc:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010b8c3:	e8 08 b2 ff ff       	call   80106ad0 <strlen>
8010b8c8:	83 c4 0c             	add    $0xc,%esp
8010b8cb:	89 c6                	mov    %eax,%esi
8010b8cd:	50                   	push   %eax
8010b8ce:	68 33 f8 10 80       	push   $0x8010f833
8010b8d3:	53                   	push   %ebx
8010b8d4:	e8 57 b1 ff ff       	call   80106a30 <strncpy>
8010b8d9:	8d 14 33             	lea    (%ebx,%esi,1),%edx
8010b8dc:	8b 47 0c             	mov    0xc(%edi),%eax
8010b8df:	83 c4 10             	add    $0x10,%esp
8010b8e2:	81 ea c0 d5 11 80    	sub    $0x8011d5c0,%edx
8010b8e8:	39 c2                	cmp    %eax,%edx
8010b8ea:	0f 84 e1 09 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b8f0:	29 c2                	sub    %eax,%edx
8010b8f2:	3b 55 14             	cmp    0x14(%ebp),%edx
8010b8f5:	0f 47 55 14          	cmova  0x14(%ebp),%edx
8010b8f9:	85 d2                	test   %edx,%edx
8010b8fb:	0f 8e d0 09 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010b901:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010b908:	84 c9                	test   %cl,%cl
8010b90a:	0f 84 c1 09 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b910:	31 db                	xor    %ebx,%ebx
8010b912:	8b 75 10             	mov    0x10(%ebp),%esi
8010b915:	eb 10                	jmp    8010b927 <unsafe_cg_read+0xdd7>
8010b917:	0f b6 8c 18 c0 d5 11 	movzbl -0x7fee2a40(%eax,%ebx,1),%ecx
8010b91e:	80 
8010b91f:	84 c9                	test   %cl,%cl
8010b921:	0f 84 92 f9 ff ff    	je     8010b2b9 <unsafe_cg_read+0x769>
8010b927:	88 0c 1e             	mov    %cl,(%esi,%ebx,1)
8010b92a:	83 c3 01             	add    $0x1,%ebx
8010b92d:	39 da                	cmp    %ebx,%edx
8010b92f:	75 e6                	jne    8010b917 <unsafe_cg_read+0xdc7>
8010b931:	e9 83 f9 ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010b936:	b8 0a 00 00 00       	mov    $0xa,%eax
8010b93b:	c7 45 ce 70 6f 70 75 	movl   $0x75706f70,-0x32(%ebp)
8010b942:	c7 45 d2 6c 61 74 65 	movl   $0x6574616c,-0x2e(%ebp)
8010b949:	c7 45 d6 64 20 2d 20 	movl   $0x202d2064,-0x2a(%ebp)
8010b950:	c7 45 da 30 0a 66 72 	movl   $0x72660a30,-0x26(%ebp)
8010b957:	c7 45 de 6f 7a 65 6e 	movl   $0x6e657a6f,-0x22(%ebp)
8010b95e:	c7 45 e2 20 2d 20 30 	movl   $0x30202d20,-0x1e(%ebp)
8010b965:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)
8010b969:	80 ba 14 03 00 00 00 	cmpb   $0x0,0x314(%edx)
8010b970:	74 18                	je     8010b98a <unsafe_cg_read+0xe3a>
8010b972:	83 ec 0c             	sub    $0xc,%esp
8010b975:	68 af f9 10 80       	push   $0x8010f9af
8010b97a:	e8 51 b1 ff ff       	call   80106ad0 <strlen>
8010b97f:	8b 57 10             	mov    0x10(%edi),%edx
8010b982:	c6 44 05 ce 31       	movb   $0x31,-0x32(%ebp,%eax,1)
8010b987:	83 c4 10             	add    $0x10,%esp
8010b98a:	8b b2 34 03 00 00    	mov    0x334(%edx),%esi
8010b990:	85 f6                	test   %esi,%esi
8010b992:	74 14                	je     8010b9a8 <unsafe_cg_read+0xe58>
8010b994:	8d 45 ce             	lea    -0x32(%ebp),%eax
8010b997:	83 ec 0c             	sub    $0xc,%esp
8010b99a:	50                   	push   %eax
8010b99b:	e8 30 b1 ff ff       	call   80106ad0 <strlen>
8010b9a0:	83 c4 10             	add    $0x10,%esp
8010b9a3:	c6 44 05 cc 31       	movb   $0x31,-0x34(%ebp,%eax,1)
8010b9a8:	83 7d 14 1a          	cmpl   $0x1a,0x14(%ebp)
8010b9ac:	b9 1a 00 00 00       	mov    $0x1a,%ecx
8010b9b1:	8b 47 0c             	mov    0xc(%edi),%eax
8010b9b4:	0f 46 4d 14          	cmovbe 0x14(%ebp),%ecx
8010b9b8:	85 c9                	test   %ecx,%ecx
8010b9ba:	0f 84 11 09 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b9c0:	8d 74 05 ce          	lea    -0x32(%ebp,%eax,1),%esi
8010b9c4:	0f b6 16             	movzbl (%esi),%edx
8010b9c7:	84 d2                	test   %dl,%dl
8010b9c9:	0f 84 02 09 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010b9cf:	31 db                	xor    %ebx,%ebx
8010b9d1:	8b 45 10             	mov    0x10(%ebp),%eax
8010b9d4:	eb 0c                	jmp    8010b9e2 <unsafe_cg_read+0xe92>
8010b9d6:	0f b6 14 1e          	movzbl (%esi,%ebx,1),%edx
8010b9da:	84 d2                	test   %dl,%dl
8010b9dc:	0f 84 d7 f8 ff ff    	je     8010b2b9 <unsafe_cg_read+0x769>
8010b9e2:	88 14 18             	mov    %dl,(%eax,%ebx,1)
8010b9e5:	83 c3 01             	add    $0x1,%ebx
8010b9e8:	39 d9                	cmp    %ebx,%ecx
8010b9ea:	75 ea                	jne    8010b9d6 <unsafe_cg_read+0xe86>
8010b9ec:	e9 c8 f8 ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010b9f1:	83 ec 04             	sub    $0x4,%esp
8010b9f4:	31 db                	xor    %ebx,%ebx
8010b9f6:	6a 40                	push   $0x40
8010b9f8:	6a 00                	push   $0x0
8010b9fa:	68 c0 d5 11 80       	push   $0x8011d5c0
8010b9ff:	e8 3c ae ff ff       	call   80106840 <memset>
8010ba04:	8b 47 10             	mov    0x10(%edi),%eax
8010ba07:	83 c4 10             	add    $0x10,%esp
8010ba0a:	80 b8 0c 03 00 00 00 	cmpb   $0x0,0x30c(%eax)
8010ba11:	74 34                	je     8010ba47 <unsafe_cg_read+0xef7>
8010ba13:	83 ec 0c             	sub    $0xc,%esp
8010ba16:	68 9b f9 10 80       	push   $0x8010f99b
8010ba1b:	e8 b0 b0 ff ff       	call   80106ad0 <strlen>
8010ba20:	83 c4 0c             	add    $0xc,%esp
8010ba23:	50                   	push   %eax
8010ba24:	68 9b f9 10 80       	push   $0x8010f99b
8010ba29:	68 c0 d5 11 80       	push   $0x8011d5c0
8010ba2e:	e8 bd ae ff ff       	call   801068f0 <memmove>
8010ba33:	c7 04 24 9b f9 10 80 	movl   $0x8010f99b,(%esp)
8010ba3a:	e8 91 b0 ff ff       	call   80106ad0 <strlen>
8010ba3f:	89 c3                	mov    %eax,%ebx
8010ba41:	8b 47 10             	mov    0x10(%edi),%eax
8010ba44:	83 c4 10             	add    $0x10,%esp
8010ba47:	80 b8 0e 03 00 00 00 	cmpb   $0x0,0x30e(%eax)
8010ba4e:	74 36                	je     8010ba86 <unsafe_cg_read+0xf36>
8010ba50:	83 ec 0c             	sub    $0xc,%esp
8010ba53:	68 a0 f9 10 80       	push   $0x8010f9a0
8010ba58:	e8 73 b0 ff ff       	call   80106ad0 <strlen>
8010ba5d:	83 c4 0c             	add    $0xc,%esp
8010ba60:	50                   	push   %eax
8010ba61:	8d 83 c0 d5 11 80    	lea    -0x7fee2a40(%ebx),%eax
8010ba67:	68 a0 f9 10 80       	push   $0x8010f9a0
8010ba6c:	50                   	push   %eax
8010ba6d:	e8 7e ae ff ff       	call   801068f0 <memmove>
8010ba72:	c7 04 24 a0 f9 10 80 	movl   $0x8010f9a0,(%esp)
8010ba79:	e8 52 b0 ff ff       	call   80106ad0 <strlen>
8010ba7e:	01 c3                	add    %eax,%ebx
8010ba80:	8b 47 10             	mov    0x10(%edi),%eax
8010ba83:	83 c4 10             	add    $0x10,%esp
8010ba86:	80 b8 10 03 00 00 00 	cmpb   $0x0,0x310(%eax)
8010ba8d:	74 36                	je     8010bac5 <unsafe_cg_read+0xf75>
8010ba8f:	83 ec 0c             	sub    $0xc,%esp
8010ba92:	68 a5 f9 10 80       	push   $0x8010f9a5
8010ba97:	e8 34 b0 ff ff       	call   80106ad0 <strlen>
8010ba9c:	83 c4 0c             	add    $0xc,%esp
8010ba9f:	50                   	push   %eax
8010baa0:	8d 83 c0 d5 11 80    	lea    -0x7fee2a40(%ebx),%eax
8010baa6:	68 a5 f9 10 80       	push   $0x8010f9a5
8010baab:	50                   	push   %eax
8010baac:	e8 3f ae ff ff       	call   801068f0 <memmove>
8010bab1:	c7 04 24 a5 f9 10 80 	movl   $0x8010f9a5,(%esp)
8010bab8:	e8 13 b0 ff ff       	call   80106ad0 <strlen>
8010babd:	01 c3                	add    %eax,%ebx
8010babf:	8b 47 10             	mov    0x10(%edi),%eax
8010bac2:	83 c4 10             	add    $0x10,%esp
8010bac5:	80 b8 12 03 00 00 00 	cmpb   $0x0,0x312(%eax)
8010bacc:	74 33                	je     8010bb01 <unsafe_cg_read+0xfb1>
8010bace:	83 ec 0c             	sub    $0xc,%esp
8010bad1:	68 aa f9 10 80       	push   $0x8010f9aa
8010bad6:	e8 f5 af ff ff       	call   80106ad0 <strlen>
8010badb:	83 c4 0c             	add    $0xc,%esp
8010bade:	50                   	push   %eax
8010badf:	8d 83 c0 d5 11 80    	lea    -0x7fee2a40(%ebx),%eax
8010bae5:	68 aa f9 10 80       	push   $0x8010f9aa
8010baea:	50                   	push   %eax
8010baeb:	e8 00 ae ff ff       	call   801068f0 <memmove>
8010baf0:	c7 04 24 aa f9 10 80 	movl   $0x8010f9aa,(%esp)
8010baf7:	e8 d4 af ff ff       	call   80106ad0 <strlen>
8010bafc:	83 c4 10             	add    $0x10,%esp
8010baff:	01 c3                	add    %eax,%ebx
8010bb01:	39 5d 14             	cmp    %ebx,0x14(%ebp)
8010bb04:	8b 47 0c             	mov    0xc(%edi),%eax
8010bb07:	0f 4e 5d 14          	cmovle 0x14(%ebp),%ebx
8010bb0b:	85 db                	test   %ebx,%ebx
8010bb0d:	0f 8e be 07 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010bb13:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010bb1a:	31 d2                	xor    %edx,%edx
8010bb1c:	84 c9                	test   %cl,%cl
8010bb1e:	0f 84 7e 08 00 00    	je     8010c3a2 <unsafe_cg_read+0x1852>
8010bb24:	8b 75 10             	mov    0x10(%ebp),%esi
8010bb27:	eb 10                	jmp    8010bb39 <unsafe_cg_read+0xfe9>
8010bb29:	0f b6 8c 10 c0 d5 11 	movzbl -0x7fee2a40(%eax,%edx,1),%ecx
8010bb30:	80 
8010bb31:	84 c9                	test   %cl,%cl
8010bb33:	0f 84 a8 07 00 00    	je     8010c2e1 <unsafe_cg_read+0x1791>
8010bb39:	88 0c 16             	mov    %cl,(%esi,%edx,1)
8010bb3c:	83 c2 01             	add    $0x1,%edx
8010bb3f:	39 d3                	cmp    %edx,%ebx
8010bb41:	75 e6                	jne    8010bb29 <unsafe_cg_read+0xfd9>
8010bb43:	e9 71 f7 ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010bb48:	8b 57 58             	mov    0x58(%edi),%edx
8010bb4b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8010bb4e:	83 ec 0c             	sub    $0xc,%esp
8010bb51:	8d 47 0c             	lea    0xc(%edi),%eax
8010bb54:	ff 75 14             	pushl  0x14(%ebp)
8010bb57:	e8 c4 eb ff ff       	call   8010a720 <read_file_mem_max.isra.14>
8010bb5c:	89 c3                	mov    %eax,%ebx
8010bb5e:	8b 47 0c             	mov    0xc(%edi),%eax
8010bb61:	83 c4 10             	add    $0x10,%esp
8010bb64:	89 da                	mov    %ebx,%edx
8010bb66:	01 d0                	add    %edx,%eax
8010bb68:	89 47 0c             	mov    %eax,0xc(%edi)
8010bb6b:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010bb6e:	89 d8                	mov    %ebx,%eax
8010bb70:	5b                   	pop    %ebx
8010bb71:	5e                   	pop    %esi
8010bb72:	5f                   	pop    %edi
8010bb73:	5d                   	pop    %ebp
8010bb74:	c3                   	ret    
8010bb75:	8b 57 58             	mov    0x58(%edi),%edx
8010bb78:	8b 4d 10             	mov    0x10(%ebp),%ecx
8010bb7b:	83 ec 0c             	sub    $0xc,%esp
8010bb7e:	8d 47 0c             	lea    0xc(%edi),%eax
8010bb81:	ff 75 14             	pushl  0x14(%ebp)
8010bb84:	e8 97 eb ff ff       	call   8010a720 <read_file_mem_max.isra.14>
8010bb89:	89 c3                	mov    %eax,%ebx
8010bb8b:	83 c4 10             	add    $0x10,%esp
8010bb8e:	8b 47 0c             	mov    0xc(%edi),%eax
8010bb91:	89 da                	mov    %ebx,%edx
8010bb93:	eb d1                	jmp    8010bb66 <unsafe_cg_read+0x1016>
8010bb95:	8b 47 54             	mov    0x54(%edi),%eax
8010bb98:	8d 75 ce             	lea    -0x32(%ebp),%esi
8010bb9b:	83 ec 08             	sub    $0x8,%esp
8010bb9e:	31 db                	xor    %ebx,%ebx
8010bba0:	c7 45 ce 00 00 00 00 	movl   $0x0,-0x32(%ebp)
8010bba7:	c7 45 d2 00 00 00 00 	movl   $0x0,-0x2e(%ebp)
8010bbae:	66 89 5d d6          	mov    %bx,-0x2a(%ebp)
8010bbb2:	c6 45 d8 00          	movb   $0x0,-0x28(%ebp)
8010bbb6:	50                   	push   %eax
8010bbb7:	56                   	push   %esi
8010bbb8:	e8 b3 e7 ff ff       	call   8010a370 <itoa>
8010bbbd:	89 34 24             	mov    %esi,(%esp)
8010bbc0:	e8 0b af ff ff       	call   80106ad0 <strlen>
8010bbc5:	83 c4 0c             	add    $0xc,%esp
8010bbc8:	89 c3                	mov    %eax,%ebx
8010bbca:	50                   	push   %eax
8010bbcb:	56                   	push   %esi
8010bbcc:	81 c3 c0 d5 11 80    	add    $0x8011d5c0,%ebx
8010bbd2:	68 c0 d5 11 80       	push   $0x8011d5c0
8010bbd7:	e8 54 ae ff ff       	call   80106a30 <strncpy>
8010bbdc:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010bbe3:	e8 e8 ae ff ff       	call   80106ad0 <strlen>
8010bbe8:	83 c4 0c             	add    $0xc,%esp
8010bbeb:	89 c6                	mov    %eax,%esi
8010bbed:	50                   	push   %eax
8010bbee:	68 33 f8 10 80       	push   $0x8010f833
8010bbf3:	53                   	push   %ebx
8010bbf4:	e8 37 ae ff ff       	call   80106a30 <strncpy>
8010bbf9:	8d 14 33             	lea    (%ebx,%esi,1),%edx
8010bbfc:	8b 47 0c             	mov    0xc(%edi),%eax
8010bbff:	83 c4 10             	add    $0x10,%esp
8010bc02:	81 ea c0 d5 11 80    	sub    $0x8011d5c0,%edx
8010bc08:	39 c2                	cmp    %eax,%edx
8010bc0a:	0f 84 c1 06 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010bc10:	29 c2                	sub    %eax,%edx
8010bc12:	3b 55 14             	cmp    0x14(%ebp),%edx
8010bc15:	0f 47 55 14          	cmova  0x14(%ebp),%edx
8010bc19:	85 d2                	test   %edx,%edx
8010bc1b:	0f 8e b0 06 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010bc21:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010bc28:	84 c9                	test   %cl,%cl
8010bc2a:	0f 84 a1 06 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010bc30:	31 db                	xor    %ebx,%ebx
8010bc32:	8b 75 10             	mov    0x10(%ebp),%esi
8010bc35:	eb 10                	jmp    8010bc47 <unsafe_cg_read+0x10f7>
8010bc37:	0f b6 8c 18 c0 d5 11 	movzbl -0x7fee2a40(%eax,%ebx,1),%ecx
8010bc3e:	80 
8010bc3f:	84 c9                	test   %cl,%cl
8010bc41:	0f 84 72 f6 ff ff    	je     8010b2b9 <unsafe_cg_read+0x769>
8010bc47:	88 0c 1e             	mov    %cl,(%esi,%ebx,1)
8010bc4a:	83 c3 01             	add    $0x1,%ebx
8010bc4d:	39 da                	cmp    %ebx,%edx
8010bc4f:	75 e6                	jne    8010bc37 <unsafe_cg_read+0x10e7>
8010bc51:	e9 63 f6 ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010bc56:	8b 47 58             	mov    0x58(%edi),%eax
8010bc59:	31 f6                	xor    %esi,%esi
8010bc5b:	83 ec 08             	sub    $0x8,%esp
8010bc5e:	66 89 75 d6          	mov    %si,-0x2a(%ebp)
8010bc62:	8d 75 ce             	lea    -0x32(%ebp),%esi
8010bc65:	c7 45 ce 00 00 00 00 	movl   $0x0,-0x32(%ebp)
8010bc6c:	c7 45 d2 00 00 00 00 	movl   $0x0,-0x2e(%ebp)
8010bc73:	c6 45 d8 00          	movb   $0x0,-0x28(%ebp)
8010bc77:	50                   	push   %eax
8010bc78:	56                   	push   %esi
8010bc79:	e8 f2 e6 ff ff       	call   8010a370 <itoa>
8010bc7e:	c7 04 24 6c fa 10 80 	movl   $0x8010fa6c,(%esp)
8010bc85:	e8 46 ae ff ff       	call   80106ad0 <strlen>
8010bc8a:	83 c4 0c             	add    $0xc,%esp
8010bc8d:	89 c3                	mov    %eax,%ebx
8010bc8f:	50                   	push   %eax
8010bc90:	68 6c fa 10 80       	push   $0x8010fa6c
8010bc95:	81 c3 c0 d5 11 80    	add    $0x8011d5c0,%ebx
8010bc9b:	68 c0 d5 11 80       	push   $0x8011d5c0
8010bca0:	e8 8b ad ff ff       	call   80106a30 <strncpy>
8010bca5:	89 34 24             	mov    %esi,(%esp)
8010bca8:	e8 23 ae ff ff       	call   80106ad0 <strlen>
8010bcad:	83 c4 0c             	add    $0xc,%esp
8010bcb0:	89 45 84             	mov    %eax,-0x7c(%ebp)
8010bcb3:	50                   	push   %eax
8010bcb4:	56                   	push   %esi
8010bcb5:	53                   	push   %ebx
8010bcb6:	e8 75 ad ff ff       	call   80106a30 <strncpy>
8010bcbb:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010bcbe:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010bcc5:	01 d3                	add    %edx,%ebx
8010bcc7:	e8 04 ae ff ff       	call   80106ad0 <strlen>
8010bccc:	83 c4 0c             	add    $0xc,%esp
8010bccf:	89 c6                	mov    %eax,%esi
8010bcd1:	50                   	push   %eax
8010bcd2:	68 33 f8 10 80       	push   $0x8010f833
8010bcd7:	53                   	push   %ebx
8010bcd8:	e8 53 ad ff ff       	call   80106a30 <strncpy>
8010bcdd:	8d 14 33             	lea    (%ebx,%esi,1),%edx
8010bce0:	8b 47 0c             	mov    0xc(%edi),%eax
8010bce3:	83 c4 10             	add    $0x10,%esp
8010bce6:	81 ea c0 d5 11 80    	sub    $0x8011d5c0,%edx
8010bcec:	39 c2                	cmp    %eax,%edx
8010bcee:	0f 84 dd 05 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010bcf4:	29 c2                	sub    %eax,%edx
8010bcf6:	3b 55 14             	cmp    0x14(%ebp),%edx
8010bcf9:	0f 47 55 14          	cmova  0x14(%ebp),%edx
8010bcfd:	85 d2                	test   %edx,%edx
8010bcff:	0f 8e cc 05 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010bd05:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010bd0c:	84 c9                	test   %cl,%cl
8010bd0e:	0f 84 bd 05 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010bd14:	31 db                	xor    %ebx,%ebx
8010bd16:	8b 75 10             	mov    0x10(%ebp),%esi
8010bd19:	eb 10                	jmp    8010bd2b <unsafe_cg_read+0x11db>
8010bd1b:	0f b6 8c 18 c0 d5 11 	movzbl -0x7fee2a40(%eax,%ebx,1),%ecx
8010bd22:	80 
8010bd23:	84 c9                	test   %cl,%cl
8010bd25:	0f 84 8e f5 ff ff    	je     8010b2b9 <unsafe_cg_read+0x769>
8010bd2b:	88 0c 1e             	mov    %cl,(%esi,%ebx,1)
8010bd2e:	83 c3 01             	add    $0x1,%ebx
8010bd31:	39 da                	cmp    %ebx,%edx
8010bd33:	75 e6                	jne    8010bd1b <unsafe_cg_read+0x11cb>
8010bd35:	e9 7f f5 ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010bd3a:	8b 47 58             	mov    0x58(%edi),%eax
8010bd3d:	8d 75 ce             	lea    -0x32(%ebp),%esi
8010bd40:	83 ec 08             	sub    $0x8,%esp
8010bd43:	31 d2                	xor    %edx,%edx
8010bd45:	c7 45 ce 00 00 00 00 	movl   $0x0,-0x32(%ebp)
8010bd4c:	c7 45 d2 00 00 00 00 	movl   $0x0,-0x2e(%ebp)
8010bd53:	66 89 55 d6          	mov    %dx,-0x2a(%ebp)
8010bd57:	c6 45 d8 00          	movb   $0x0,-0x28(%ebp)
8010bd5b:	50                   	push   %eax
8010bd5c:	56                   	push   %esi
8010bd5d:	e8 0e e6 ff ff       	call   8010a370 <itoa>
8010bd62:	c7 04 24 4a fa 10 80 	movl   $0x8010fa4a,(%esp)
8010bd69:	e8 62 ad ff ff       	call   80106ad0 <strlen>
8010bd6e:	83 c4 0c             	add    $0xc,%esp
8010bd71:	89 c3                	mov    %eax,%ebx
8010bd73:	50                   	push   %eax
8010bd74:	68 4a fa 10 80       	push   $0x8010fa4a
8010bd79:	81 c3 c0 d5 11 80    	add    $0x8011d5c0,%ebx
8010bd7f:	68 c0 d5 11 80       	push   $0x8011d5c0
8010bd84:	e8 a7 ac ff ff       	call   80106a30 <strncpy>
8010bd89:	89 34 24             	mov    %esi,(%esp)
8010bd8c:	e8 3f ad ff ff       	call   80106ad0 <strlen>
8010bd91:	83 c4 0c             	add    $0xc,%esp
8010bd94:	89 45 84             	mov    %eax,-0x7c(%ebp)
8010bd97:	50                   	push   %eax
8010bd98:	56                   	push   %esi
8010bd99:	53                   	push   %ebx
8010bd9a:	e8 91 ac ff ff       	call   80106a30 <strncpy>
8010bd9f:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010bda2:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010bda9:	01 d3                	add    %edx,%ebx
8010bdab:	e8 20 ad ff ff       	call   80106ad0 <strlen>
8010bdb0:	83 c4 0c             	add    $0xc,%esp
8010bdb3:	89 c6                	mov    %eax,%esi
8010bdb5:	50                   	push   %eax
8010bdb6:	68 33 f8 10 80       	push   $0x8010f833
8010bdbb:	53                   	push   %ebx
8010bdbc:	e8 6f ac ff ff       	call   80106a30 <strncpy>
8010bdc1:	8d 14 33             	lea    (%ebx,%esi,1),%edx
8010bdc4:	8b 47 0c             	mov    0xc(%edi),%eax
8010bdc7:	83 c4 10             	add    $0x10,%esp
8010bdca:	81 ea c0 d5 11 80    	sub    $0x8011d5c0,%edx
8010bdd0:	39 c2                	cmp    %eax,%edx
8010bdd2:	0f 84 f9 04 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010bdd8:	29 c2                	sub    %eax,%edx
8010bdda:	3b 55 14             	cmp    0x14(%ebp),%edx
8010bddd:	0f 47 55 14          	cmova  0x14(%ebp),%edx
8010bde1:	85 d2                	test   %edx,%edx
8010bde3:	0f 8e e8 04 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010bde9:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010bdf0:	84 c9                	test   %cl,%cl
8010bdf2:	0f 84 d9 04 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010bdf8:	31 db                	xor    %ebx,%ebx
8010bdfa:	8b 75 10             	mov    0x10(%ebp),%esi
8010bdfd:	eb 10                	jmp    8010be0f <unsafe_cg_read+0x12bf>
8010bdff:	0f b6 8c 18 c0 d5 11 	movzbl -0x7fee2a40(%eax,%ebx,1),%ecx
8010be06:	80 
8010be07:	84 c9                	test   %cl,%cl
8010be09:	0f 84 aa f4 ff ff    	je     8010b2b9 <unsafe_cg_read+0x769>
8010be0f:	88 0c 1e             	mov    %cl,(%esi,%ebx,1)
8010be12:	83 c3 01             	add    $0x1,%ebx
8010be15:	39 da                	cmp    %ebx,%edx
8010be17:	75 e6                	jne    8010bdff <unsafe_cg_read+0x12af>
8010be19:	e9 9b f4 ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010be1e:	83 ec 0c             	sub    $0xc,%esp
8010be21:	c7 45 ce 00 00 00 00 	movl   $0x0,-0x32(%ebp)
8010be28:	c7 45 d2 00 00 00 00 	movl   $0x0,-0x2e(%ebp)
8010be2f:	68 4a fa 10 80       	push   $0x8010fa4a
8010be34:	c7 45 d6 00 00 00 00 	movl   $0x0,-0x2a(%ebp)
8010be3b:	c7 45 da 00 00 00 00 	movl   $0x0,-0x26(%ebp)
8010be42:	c7 45 de 00 00 00 00 	movl   $0x0,-0x22(%ebp)
8010be49:	e8 82 ac ff ff       	call   80106ad0 <strlen>
8010be4e:	83 c4 0c             	add    $0xc,%esp
8010be51:	89 c3                	mov    %eax,%ebx
8010be53:	50                   	push   %eax
8010be54:	68 4a fa 10 80       	push   $0x8010fa4a
8010be59:	81 c3 c0 d5 11 80    	add    $0x8011d5c0,%ebx
8010be5f:	68 c0 d5 11 80       	push   $0x8011d5c0
8010be64:	e8 c7 ab ff ff       	call   80106a30 <strncpy>
8010be69:	59                   	pop    %ecx
8010be6a:	5e                   	pop    %esi
8010be6b:	8d 75 ce             	lea    -0x32(%ebp),%esi
8010be6e:	ff 77 54             	pushl  0x54(%edi)
8010be71:	56                   	push   %esi
8010be72:	e8 a9 e5 ff ff       	call   8010a420 <utoa>
8010be77:	83 c4 0c             	add    $0xc,%esp
8010be7a:	89 45 84             	mov    %eax,-0x7c(%ebp)
8010be7d:	50                   	push   %eax
8010be7e:	56                   	push   %esi
8010be7f:	53                   	push   %ebx
8010be80:	e8 ab ab ff ff       	call   80106a30 <strncpy>
8010be85:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010be88:	c7 04 24 51 fa 10 80 	movl   $0x8010fa51,(%esp)
8010be8f:	01 d3                	add    %edx,%ebx
8010be91:	e8 3a ac ff ff       	call   80106ad0 <strlen>
8010be96:	83 c4 0c             	add    $0xc,%esp
8010be99:	89 45 84             	mov    %eax,-0x7c(%ebp)
8010be9c:	50                   	push   %eax
8010be9d:	68 51 fa 10 80       	push   $0x8010fa51
8010bea2:	53                   	push   %ebx
8010bea3:	e8 88 ab ff ff       	call   80106a30 <strncpy>
8010bea8:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010beab:	58                   	pop    %eax
8010beac:	01 d3                	add    %edx,%ebx
8010beae:	5a                   	pop    %edx
8010beaf:	ff 77 58             	pushl  0x58(%edi)
8010beb2:	56                   	push   %esi
8010beb3:	e8 68 e5 ff ff       	call   8010a420 <utoa>
8010beb8:	83 c4 0c             	add    $0xc,%esp
8010bebb:	89 45 84             	mov    %eax,-0x7c(%ebp)
8010bebe:	50                   	push   %eax
8010bebf:	56                   	push   %esi
8010bec0:	53                   	push   %ebx
8010bec1:	e8 6a ab ff ff       	call   80106a30 <strncpy>
8010bec6:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010bec9:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010bed0:	01 d3                	add    %edx,%ebx
8010bed2:	e8 f9 ab ff ff       	call   80106ad0 <strlen>
8010bed7:	83 c4 0c             	add    $0xc,%esp
8010beda:	89 c6                	mov    %eax,%esi
8010bedc:	50                   	push   %eax
8010bedd:	68 33 f8 10 80       	push   $0x8010f833
8010bee2:	53                   	push   %ebx
8010bee3:	e8 48 ab ff ff       	call   80106a30 <strncpy>
8010bee8:	8d 14 33             	lea    (%ebx,%esi,1),%edx
8010beeb:	8b 47 0c             	mov    0xc(%edi),%eax
8010beee:	83 c4 10             	add    $0x10,%esp
8010bef1:	81 ea c0 d5 11 80    	sub    $0x8011d5c0,%edx
8010bef7:	39 c2                	cmp    %eax,%edx
8010bef9:	0f 84 d2 03 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010beff:	29 c2                	sub    %eax,%edx
8010bf01:	3b 55 14             	cmp    0x14(%ebp),%edx
8010bf04:	0f 47 55 14          	cmova  0x14(%ebp),%edx
8010bf08:	85 d2                	test   %edx,%edx
8010bf0a:	0f 8e c1 03 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010bf10:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010bf17:	84 c9                	test   %cl,%cl
8010bf19:	0f 84 b2 03 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010bf1f:	31 db                	xor    %ebx,%ebx
8010bf21:	8b 75 10             	mov    0x10(%ebp),%esi
8010bf24:	eb 10                	jmp    8010bf36 <unsafe_cg_read+0x13e6>
8010bf26:	0f b6 8c 18 c0 d5 11 	movzbl -0x7fee2a40(%eax,%ebx,1),%ecx
8010bf2d:	80 
8010bf2e:	84 c9                	test   %cl,%cl
8010bf30:	0f 84 83 f3 ff ff    	je     8010b2b9 <unsafe_cg_read+0x769>
8010bf36:	88 0c 1e             	mov    %cl,(%esi,%ebx,1)
8010bf39:	83 c3 01             	add    $0x1,%ebx
8010bf3c:	39 da                	cmp    %ebx,%edx
8010bf3e:	75 e6                	jne    8010bf26 <unsafe_cg_read+0x13d6>
8010bf40:	e9 74 f3 ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010bf45:	83 ec 0c             	sub    $0xc,%esp
8010bf48:	c7 45 ce 00 00 00 00 	movl   $0x0,-0x32(%ebp)
8010bf4f:	c7 45 d2 00 00 00 00 	movl   $0x0,-0x2e(%ebp)
8010bf56:	68 40 fa 10 80       	push   $0x8010fa40
8010bf5b:	c7 45 d6 00 00 00 00 	movl   $0x0,-0x2a(%ebp)
8010bf62:	c7 45 da 00 00 00 00 	movl   $0x0,-0x26(%ebp)
8010bf69:	c7 45 de 00 00 00 00 	movl   $0x0,-0x22(%ebp)
8010bf70:	e8 5b ab ff ff       	call   80106ad0 <strlen>
8010bf75:	83 c4 0c             	add    $0xc,%esp
8010bf78:	89 c3                	mov    %eax,%ebx
8010bf7a:	50                   	push   %eax
8010bf7b:	68 40 fa 10 80       	push   $0x8010fa40
8010bf80:	81 c3 c0 d5 11 80    	add    $0x8011d5c0,%ebx
8010bf86:	68 c0 d5 11 80       	push   $0x8011d5c0
8010bf8b:	e8 a0 aa ff ff       	call   80106a30 <strncpy>
8010bf90:	59                   	pop    %ecx
8010bf91:	8d 55 ce             	lea    -0x32(%ebp),%edx
8010bf94:	5e                   	pop    %esi
8010bf95:	ff 77 54             	pushl  0x54(%edi)
8010bf98:	52                   	push   %edx
8010bf99:	89 55 84             	mov    %edx,-0x7c(%ebp)
8010bf9c:	e8 7f e4 ff ff       	call   8010a420 <utoa>
8010bfa1:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010bfa4:	83 c4 0c             	add    $0xc,%esp
8010bfa7:	89 c6                	mov    %eax,%esi
8010bfa9:	50                   	push   %eax
8010bfaa:	52                   	push   %edx
8010bfab:	53                   	push   %ebx
8010bfac:	01 f3                	add    %esi,%ebx
8010bfae:	e8 7d aa ff ff       	call   80106a30 <strncpy>
8010bfb3:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010bfba:	e8 11 ab ff ff       	call   80106ad0 <strlen>
8010bfbf:	83 c4 0c             	add    $0xc,%esp
8010bfc2:	89 c6                	mov    %eax,%esi
8010bfc4:	50                   	push   %eax
8010bfc5:	68 33 f8 10 80       	push   $0x8010f833
8010bfca:	53                   	push   %ebx
8010bfcb:	e8 60 aa ff ff       	call   80106a30 <strncpy>
8010bfd0:	8d 14 33             	lea    (%ebx,%esi,1),%edx
8010bfd3:	8b 47 0c             	mov    0xc(%edi),%eax
8010bfd6:	83 c4 10             	add    $0x10,%esp
8010bfd9:	81 ea c0 d5 11 80    	sub    $0x8011d5c0,%edx
8010bfdf:	39 c2                	cmp    %eax,%edx
8010bfe1:	0f 84 ea 02 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010bfe7:	29 c2                	sub    %eax,%edx
8010bfe9:	3b 55 14             	cmp    0x14(%ebp),%edx
8010bfec:	0f 47 55 14          	cmova  0x14(%ebp),%edx
8010bff0:	85 d2                	test   %edx,%edx
8010bff2:	0f 8e d9 02 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010bff8:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010bfff:	84 c9                	test   %cl,%cl
8010c001:	0f 84 ca 02 00 00    	je     8010c2d1 <unsafe_cg_read+0x1781>
8010c007:	31 db                	xor    %ebx,%ebx
8010c009:	8b 75 10             	mov    0x10(%ebp),%esi
8010c00c:	eb 10                	jmp    8010c01e <unsafe_cg_read+0x14ce>
8010c00e:	0f b6 8c 18 c0 d5 11 	movzbl -0x7fee2a40(%eax,%ebx,1),%ecx
8010c015:	80 
8010c016:	84 c9                	test   %cl,%cl
8010c018:	0f 84 9b f2 ff ff    	je     8010b2b9 <unsafe_cg_read+0x769>
8010c01e:	88 0c 1e             	mov    %cl,(%esi,%ebx,1)
8010c021:	83 c3 01             	add    $0x1,%ebx
8010c024:	39 da                	cmp    %ebx,%edx
8010c026:	75 e6                	jne    8010c00e <unsafe_cg_read+0x14be>
8010c028:	e9 8c f2 ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010c02d:	83 ec 04             	sub    $0x4,%esp
8010c030:	6a 03                	push   $0x3
8010c032:	6a 00                	push   $0x0
8010c034:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c039:	e8 02 a8 ff ff       	call   80106840 <memset>
8010c03e:	8b 47 10             	mov    0x10(%edi),%eax
8010c041:	59                   	pop    %ecx
8010c042:	5b                   	pop    %ebx
8010c043:	ff b0 1c 03 00 00    	pushl  0x31c(%eax)
8010c049:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c04e:	e8 1d e3 ff ff       	call   8010a370 <itoa>
8010c053:	83 c4 10             	add    $0x10,%esp
8010c056:	81 7d 14 00 10 00 00 	cmpl   $0x1000,0x14(%ebp)
8010c05d:	b9 00 10 00 00       	mov    $0x1000,%ecx
8010c062:	0f 46 4d 14          	cmovbe 0x14(%ebp),%ecx
8010c066:	85 c9                	test   %ecx,%ecx
8010c068:	0f 84 60 02 00 00    	je     8010c2ce <unsafe_cg_read+0x177e>
8010c06e:	0f b6 05 c0 d5 11 80 	movzbl 0x8011d5c0,%eax
8010c075:	84 c0                	test   %al,%al
8010c077:	0f 84 6e 02 00 00    	je     8010c2eb <unsafe_cg_read+0x179b>
8010c07d:	31 db                	xor    %ebx,%ebx
8010c07f:	8b 75 10             	mov    0x10(%ebp),%esi
8010c082:	eb 11                	jmp    8010c095 <unsafe_cg_read+0x1545>
8010c084:	0f b6 83 c0 d5 11 80 	movzbl -0x7fee2a40(%ebx),%eax
8010c08b:	89 da                	mov    %ebx,%edx
8010c08d:	84 c0                	test   %al,%al
8010c08f:	0f 84 5a 02 00 00    	je     8010c2ef <unsafe_cg_read+0x179f>
8010c095:	88 04 1e             	mov    %al,(%esi,%ebx,1)
8010c098:	83 c3 01             	add    $0x1,%ebx
8010c09b:	39 d9                	cmp    %ebx,%ecx
8010c09d:	75 e5                	jne    8010c084 <unsafe_cg_read+0x1534>
8010c09f:	e9 15 f2 ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010c0a4:	83 ec 08             	sub    $0x8,%esp
8010c0a7:	ff b2 18 03 00 00    	pushl  0x318(%edx)
8010c0ad:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c0b2:	e8 b9 e2 ff ff       	call   8010a370 <itoa>
8010c0b7:	83 c4 10             	add    $0x10,%esp
8010c0ba:	81 7d 14 00 10 00 00 	cmpl   $0x1000,0x14(%ebp)
8010c0c1:	b9 00 10 00 00       	mov    $0x1000,%ecx
8010c0c6:	0f 46 4d 14          	cmovbe 0x14(%ebp),%ecx
8010c0ca:	85 c9                	test   %ecx,%ecx
8010c0cc:	0f 84 fc 01 00 00    	je     8010c2ce <unsafe_cg_read+0x177e>
8010c0d2:	0f b6 05 c0 d5 11 80 	movzbl 0x8011d5c0,%eax
8010c0d9:	84 c0                	test   %al,%al
8010c0db:	0f 84 0a 02 00 00    	je     8010c2eb <unsafe_cg_read+0x179b>
8010c0e1:	31 db                	xor    %ebx,%ebx
8010c0e3:	8b 75 10             	mov    0x10(%ebp),%esi
8010c0e6:	eb 11                	jmp    8010c0f9 <unsafe_cg_read+0x15a9>
8010c0e8:	0f b6 83 c0 d5 11 80 	movzbl -0x7fee2a40(%ebx),%eax
8010c0ef:	89 da                	mov    %ebx,%edx
8010c0f1:	84 c0                	test   %al,%al
8010c0f3:	0f 84 f6 01 00 00    	je     8010c2ef <unsafe_cg_read+0x179f>
8010c0f9:	88 04 1e             	mov    %al,(%esi,%ebx,1)
8010c0fc:	83 c3 01             	add    $0x1,%ebx
8010c0ff:	39 d9                	cmp    %ebx,%ecx
8010c101:	75 e5                	jne    8010c0e8 <unsafe_cg_read+0x1598>
8010c103:	e9 b1 f1 ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010c108:	83 ec 04             	sub    $0x4,%esp
8010c10b:	31 db                	xor    %ebx,%ebx
8010c10d:	6a 40                	push   $0x40
8010c10f:	6a 00                	push   $0x0
8010c111:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c116:	e8 25 a7 ff ff       	call   80106840 <memset>
8010c11b:	8b 47 10             	mov    0x10(%edi),%eax
8010c11e:	83 c4 10             	add    $0x10,%esp
8010c121:	80 b8 0d 03 00 00 00 	cmpb   $0x0,0x30d(%eax)
8010c128:	74 34                	je     8010c15e <unsafe_cg_read+0x160e>
8010c12a:	83 ec 0c             	sub    $0xc,%esp
8010c12d:	68 9b f9 10 80       	push   $0x8010f99b
8010c132:	e8 99 a9 ff ff       	call   80106ad0 <strlen>
8010c137:	83 c4 0c             	add    $0xc,%esp
8010c13a:	50                   	push   %eax
8010c13b:	68 9b f9 10 80       	push   $0x8010f99b
8010c140:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c145:	e8 a6 a7 ff ff       	call   801068f0 <memmove>
8010c14a:	c7 04 24 9b f9 10 80 	movl   $0x8010f99b,(%esp)
8010c151:	e8 7a a9 ff ff       	call   80106ad0 <strlen>
8010c156:	89 c3                	mov    %eax,%ebx
8010c158:	8b 47 10             	mov    0x10(%edi),%eax
8010c15b:	83 c4 10             	add    $0x10,%esp
8010c15e:	80 b8 0f 03 00 00 00 	cmpb   $0x0,0x30f(%eax)
8010c165:	74 36                	je     8010c19d <unsafe_cg_read+0x164d>
8010c167:	83 ec 0c             	sub    $0xc,%esp
8010c16a:	68 a0 f9 10 80       	push   $0x8010f9a0
8010c16f:	e8 5c a9 ff ff       	call   80106ad0 <strlen>
8010c174:	83 c4 0c             	add    $0xc,%esp
8010c177:	50                   	push   %eax
8010c178:	8d 83 c0 d5 11 80    	lea    -0x7fee2a40(%ebx),%eax
8010c17e:	68 a0 f9 10 80       	push   $0x8010f9a0
8010c183:	50                   	push   %eax
8010c184:	e8 67 a7 ff ff       	call   801068f0 <memmove>
8010c189:	c7 04 24 a0 f9 10 80 	movl   $0x8010f9a0,(%esp)
8010c190:	e8 3b a9 ff ff       	call   80106ad0 <strlen>
8010c195:	01 c3                	add    %eax,%ebx
8010c197:	8b 47 10             	mov    0x10(%edi),%eax
8010c19a:	83 c4 10             	add    $0x10,%esp
8010c19d:	80 b8 11 03 00 00 00 	cmpb   $0x0,0x311(%eax)
8010c1a4:	74 36                	je     8010c1dc <unsafe_cg_read+0x168c>
8010c1a6:	83 ec 0c             	sub    $0xc,%esp
8010c1a9:	68 a5 f9 10 80       	push   $0x8010f9a5
8010c1ae:	e8 1d a9 ff ff       	call   80106ad0 <strlen>
8010c1b3:	83 c4 0c             	add    $0xc,%esp
8010c1b6:	50                   	push   %eax
8010c1b7:	8d 83 c0 d5 11 80    	lea    -0x7fee2a40(%ebx),%eax
8010c1bd:	68 a5 f9 10 80       	push   $0x8010f9a5
8010c1c2:	50                   	push   %eax
8010c1c3:	e8 28 a7 ff ff       	call   801068f0 <memmove>
8010c1c8:	c7 04 24 a5 f9 10 80 	movl   $0x8010f9a5,(%esp)
8010c1cf:	e8 fc a8 ff ff       	call   80106ad0 <strlen>
8010c1d4:	01 c3                	add    %eax,%ebx
8010c1d6:	8b 47 10             	mov    0x10(%edi),%eax
8010c1d9:	83 c4 10             	add    $0x10,%esp
8010c1dc:	80 b8 13 03 00 00 00 	cmpb   $0x0,0x313(%eax)
8010c1e3:	74 33                	je     8010c218 <unsafe_cg_read+0x16c8>
8010c1e5:	83 ec 0c             	sub    $0xc,%esp
8010c1e8:	68 aa f9 10 80       	push   $0x8010f9aa
8010c1ed:	e8 de a8 ff ff       	call   80106ad0 <strlen>
8010c1f2:	83 c4 0c             	add    $0xc,%esp
8010c1f5:	50                   	push   %eax
8010c1f6:	8d 83 c0 d5 11 80    	lea    -0x7fee2a40(%ebx),%eax
8010c1fc:	68 aa f9 10 80       	push   $0x8010f9aa
8010c201:	50                   	push   %eax
8010c202:	e8 e9 a6 ff ff       	call   801068f0 <memmove>
8010c207:	c7 04 24 aa f9 10 80 	movl   $0x8010f9aa,(%esp)
8010c20e:	e8 bd a8 ff ff       	call   80106ad0 <strlen>
8010c213:	83 c4 10             	add    $0x10,%esp
8010c216:	01 c3                	add    %eax,%ebx
8010c218:	39 5d 14             	cmp    %ebx,0x14(%ebp)
8010c21b:	8b 47 0c             	mov    0xc(%edi),%eax
8010c21e:	0f 4e 5d 14          	cmovle 0x14(%ebp),%ebx
8010c222:	85 db                	test   %ebx,%ebx
8010c224:	0f 8e a7 00 00 00    	jle    8010c2d1 <unsafe_cg_read+0x1781>
8010c22a:	0f b6 88 c0 d5 11 80 	movzbl -0x7fee2a40(%eax),%ecx
8010c231:	31 d2                	xor    %edx,%edx
8010c233:	84 c9                	test   %cl,%cl
8010c235:	0f 84 67 01 00 00    	je     8010c3a2 <unsafe_cg_read+0x1852>
8010c23b:	8b 75 10             	mov    0x10(%ebp),%esi
8010c23e:	eb 10                	jmp    8010c250 <unsafe_cg_read+0x1700>
8010c240:	0f b6 8c 10 c0 d5 11 	movzbl -0x7fee2a40(%eax,%edx,1),%ecx
8010c247:	80 
8010c248:	84 c9                	test   %cl,%cl
8010c24a:	0f 84 91 00 00 00    	je     8010c2e1 <unsafe_cg_read+0x1791>
8010c250:	88 0c 16             	mov    %cl,(%esi,%edx,1)
8010c253:	83 c2 01             	add    $0x1,%edx
8010c256:	39 d3                	cmp    %edx,%ebx
8010c258:	75 e6                	jne    8010c240 <unsafe_cg_read+0x16f0>
8010c25a:	e9 5a f0 ff ff       	jmp    8010b2b9 <unsafe_cg_read+0x769>
8010c25f:	8b 47 0c             	mov    0xc(%edi),%eax
8010c262:	89 7d 0c             	mov    %edi,0xc(%ebp)
8010c265:	be 67 66 66 66       	mov    $0x66666667,%esi
8010c26a:	89 45 84             	mov    %eax,-0x7c(%ebp)
8010c26d:	b8 01 00 00 00       	mov    $0x1,%eax
8010c272:	89 c7                	mov    %eax,%edi
8010c274:	8d 47 ff             	lea    -0x1(%edi),%eax
8010c277:	89 45 80             	mov    %eax,-0x80(%ebp)
8010c27a:	8b 84 ba 00 02 00 00 	mov    0x200(%edx,%edi,4),%eax
8010c281:	85 c0                	test   %eax,%eax
8010c283:	74 36                	je     8010c2bb <unsafe_cg_read+0x176b>
8010c285:	83 ec 0c             	sub    $0xc,%esp
8010c288:	bb 01 00 00 00       	mov    $0x1,%ebx
8010c28d:	50                   	push   %eax
8010c28e:	e8 8d 91 ff ff       	call   80105420 <proc_pid>
8010c293:	83 c4 10             	add    $0x10,%esp
8010c296:	85 c0                	test   %eax,%eax
8010c298:	89 c1                	mov    %eax,%ecx
8010c29a:	7e 17                	jle    8010c2b3 <unsafe_cg_read+0x1763>
8010c29c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010c2a0:	89 c8                	mov    %ecx,%eax
8010c2a2:	c1 f9 1f             	sar    $0x1f,%ecx
8010c2a5:	83 c3 01             	add    $0x1,%ebx
8010c2a8:	f7 ee                	imul   %esi
8010c2aa:	c1 fa 02             	sar    $0x2,%edx
8010c2ad:	29 ca                	sub    %ecx,%edx
8010c2af:	89 d1                	mov    %edx,%ecx
8010c2b1:	75 ed                	jne    8010c2a0 <unsafe_cg_read+0x1750>
8010c2b3:	39 5d 84             	cmp    %ebx,-0x7c(%ebp)
8010c2b6:	7c 46                	jl     8010c2fe <unsafe_cg_read+0x17ae>
8010c2b8:	29 5d 84             	sub    %ebx,-0x7c(%ebp)
8010c2bb:	83 c7 01             	add    $0x1,%edi
8010c2be:	83 ff 41             	cmp    $0x41,%edi
8010c2c1:	74 08                	je     8010c2cb <unsafe_cg_read+0x177b>
8010c2c3:	8b 45 0c             	mov    0xc(%ebp),%eax
8010c2c6:	8b 50 10             	mov    0x10(%eax),%edx
8010c2c9:	eb a9                	jmp    8010c274 <unsafe_cg_read+0x1724>
8010c2cb:	8b 7d 0c             	mov    0xc(%ebp),%edi
8010c2ce:	8b 47 0c             	mov    0xc(%edi),%eax
8010c2d1:	31 d2                	xor    %edx,%edx
8010c2d3:	31 db                	xor    %ebx,%ebx
8010c2d5:	e9 8c f8 ff ff       	jmp    8010bb66 <unsafe_cg_read+0x1016>
8010c2da:	31 c0                	xor    %eax,%eax
8010c2dc:	e9 5f eb ff ff       	jmp    8010ae40 <unsafe_cg_read+0x2f0>
8010c2e1:	8b 47 0c             	mov    0xc(%edi),%eax
8010c2e4:	89 d3                	mov    %edx,%ebx
8010c2e6:	e9 7b f8 ff ff       	jmp    8010bb66 <unsafe_cg_read+0x1016>
8010c2eb:	31 d2                	xor    %edx,%edx
8010c2ed:	31 db                	xor    %ebx,%ebx
8010c2ef:	8b 45 10             	mov    0x10(%ebp),%eax
8010c2f2:	c6 04 10 0a          	movb   $0xa,(%eax,%edx,1)
8010c2f6:	8b 47 0c             	mov    0xc(%edi),%eax
8010c2f9:	e9 68 f8 ff ff       	jmp    8010bb66 <unsafe_cg_read+0x1016>
8010c2fe:	8b 7d 0c             	mov    0xc(%ebp),%edi
8010c301:	8b 4d 84             	mov    -0x7c(%ebp),%ecx
8010c304:	31 db                	xor    %ebx,%ebx
8010c306:	8b 75 80             	mov    -0x80(%ebp),%esi
8010c309:	89 da                	mov    %ebx,%edx
8010c30b:	89 fb                	mov    %edi,%ebx
8010c30d:	39 55 14             	cmp    %edx,0x14(%ebp)
8010c310:	7e 6f                	jle    8010c381 <unsafe_cg_read+0x1831>
8010c312:	83 fe 40             	cmp    $0x40,%esi
8010c315:	74 6a                	je     8010c381 <unsafe_cg_read+0x1831>
8010c317:	8b 43 10             	mov    0x10(%ebx),%eax
8010c31a:	8d be 80 00 00 00    	lea    0x80(%esi),%edi
8010c320:	8b 44 b8 04          	mov    0x4(%eax,%edi,4),%eax
8010c324:	85 c0                	test   %eax,%eax
8010c326:	74 72                	je     8010c39a <unsafe_cg_read+0x184a>
8010c328:	83 ec 04             	sub    $0x4,%esp
8010c32b:	89 4d 80             	mov    %ecx,-0x80(%ebp)
8010c32e:	89 55 84             	mov    %edx,-0x7c(%ebp)
8010c331:	6a 05                	push   $0x5
8010c333:	6a 00                	push   $0x0
8010c335:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c33a:	e8 01 a5 ff ff       	call   80106840 <memset>
8010c33f:	58                   	pop    %eax
8010c340:	8b 43 10             	mov    0x10(%ebx),%eax
8010c343:	ff 74 b8 04          	pushl  0x4(%eax,%edi,4)
8010c347:	e8 d4 90 ff ff       	call   80105420 <proc_pid>
8010c34c:	5a                   	pop    %edx
8010c34d:	59                   	pop    %ecx
8010c34e:	50                   	push   %eax
8010c34f:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c354:	e8 17 e0 ff ff       	call   8010a370 <itoa>
8010c359:	8b 4d 80             	mov    -0x80(%ebp),%ecx
8010c35c:	83 c4 10             	add    $0x10,%esp
8010c35f:	8b 55 84             	mov    -0x7c(%ebp),%edx
8010c362:	39 c8                	cmp    %ecx,%eax
8010c364:	7e 27                	jle    8010c38d <unsafe_cg_read+0x183d>
8010c366:	0f b6 81 c0 d5 11 80 	movzbl -0x7fee2a40(%ecx),%eax
8010c36d:	8b 7d 10             	mov    0x10(%ebp),%edi
8010c370:	83 c1 01             	add    $0x1,%ecx
8010c373:	88 07                	mov    %al,(%edi)
8010c375:	83 45 10 01          	addl   $0x1,0x10(%ebp)
8010c379:	83 c2 01             	add    $0x1,%edx
8010c37c:	39 55 14             	cmp    %edx,0x14(%ebp)
8010c37f:	7f 91                	jg     8010c312 <unsafe_cg_read+0x17c2>
8010c381:	89 df                	mov    %ebx,%edi
8010c383:	89 d3                	mov    %edx,%ebx
8010c385:	8b 47 0c             	mov    0xc(%edi),%eax
8010c388:	e9 d9 f7 ff ff       	jmp    8010bb66 <unsafe_cg_read+0x1016>
8010c38d:	8b 45 10             	mov    0x10(%ebp),%eax
8010c390:	83 c6 01             	add    $0x1,%esi
8010c393:	31 c9                	xor    %ecx,%ecx
8010c395:	c6 00 0a             	movb   $0xa,(%eax)
8010c398:	eb db                	jmp    8010c375 <unsafe_cg_read+0x1825>
8010c39a:	83 c6 01             	add    $0x1,%esi
8010c39d:	e9 6b ff ff ff       	jmp    8010c30d <unsafe_cg_read+0x17bd>
8010c3a2:	31 db                	xor    %ebx,%ebx
8010c3a4:	e9 bd f7 ff ff       	jmp    8010bb66 <unsafe_cg_read+0x1016>
8010c3a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010c3b0 <unsafe_cg_write>:
8010c3b0:	55                   	push   %ebp
8010c3b1:	89 e5                	mov    %esp,%ebp
8010c3b3:	57                   	push   %edi
8010c3b4:	56                   	push   %esi
8010c3b5:	53                   	push   %ebx
8010c3b6:	83 ec 5c             	sub    $0x5c,%esp
8010c3b9:	8b 45 08             	mov    0x8(%ebp),%eax
8010c3bc:	8b 75 0c             	mov    0xc(%ebp),%esi
8010c3bf:	83 c0 14             	add    $0x14,%eax
8010c3c2:	e8 29 e1 ff ff       	call   8010a4f0 <get_file_name_constant>
8010c3c7:	8b 7d 08             	mov    0x8(%ebp),%edi
8010c3ca:	80 7f 09 00          	cmpb   $0x0,0x9(%edi)
8010c3ce:	0f 84 da 00 00 00    	je     8010c4ae <unsafe_cg_write+0xfe>
8010c3d4:	8b 57 10             	mov    0x10(%edi),%edx
8010c3d7:	80 3a 00             	cmpb   $0x0,(%edx)
8010c3da:	0f 84 ce 00 00 00    	je     8010c4ae <unsafe_cg_write+0xfe>
8010c3e0:	81 7d 10 00 10 00 00 	cmpl   $0x1000,0x10(%ebp)
8010c3e7:	0f 8f c1 00 00 00    	jg     8010c4ae <unsafe_cg_write+0xfe>
8010c3ed:	83 f8 01             	cmp    $0x1,%eax
8010c3f0:	0f 84 ba 02 00 00    	je     8010c6b0 <unsafe_cg_write+0x300>
8010c3f6:	83 f8 02             	cmp    $0x2,%eax
8010c3f9:	0f 84 04 03 00 00    	je     8010c703 <unsafe_cg_write+0x353>
8010c3ff:	83 f8 03             	cmp    $0x3,%eax
8010c402:	0f 84 4c 04 00 00    	je     8010c854 <unsafe_cg_write+0x4a4>
8010c408:	83 f8 04             	cmp    $0x4,%eax
8010c40b:	0f 84 8c 04 00 00    	je     8010c89d <unsafe_cg_write+0x4ed>
8010c411:	83 f8 06             	cmp    $0x6,%eax
8010c414:	0f 84 a6 00 00 00    	je     8010c4c0 <unsafe_cg_write+0x110>
8010c41a:	83 f8 07             	cmp    $0x7,%eax
8010c41d:	0f 84 fd 01 00 00    	je     8010c620 <unsafe_cg_write+0x270>
8010c423:	83 f8 08             	cmp    $0x8,%eax
8010c426:	0f 85 b4 00 00 00    	jne    8010c4e0 <unsafe_cg_write+0x130>
8010c42c:	31 c0                	xor    %eax,%eax
8010c42e:	80 ba 11 03 00 00 00 	cmpb   $0x0,0x311(%edx)
8010c435:	0f 84 94 00 00 00    	je     8010c4cf <unsafe_cg_write+0x11f>
8010c43b:	c7 44 05 c8 00 00 00 	movl   $0x0,-0x38(%ebp,%eax,1)
8010c442:	00 
8010c443:	83 c0 04             	add    $0x4,%eax
8010c446:	83 f8 20             	cmp    $0x20,%eax
8010c449:	72 f0                	jb     8010c43b <unsafe_cg_write+0x8b>
8010c44b:	0f b6 0e             	movzbl (%esi),%ecx
8010c44e:	31 d2                	xor    %edx,%edx
8010c450:	8d 45 c8             	lea    -0x38(%ebp),%eax
8010c453:	80 f9 2c             	cmp    $0x2c,%cl
8010c456:	74 20                	je     8010c478 <unsafe_cg_write+0xc8>
8010c458:	84 c9                	test   %cl,%cl
8010c45a:	74 1c                	je     8010c478 <unsafe_cg_write+0xc8>
8010c45c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010c460:	88 0c 10             	mov    %cl,(%eax,%edx,1)
8010c463:	83 c2 01             	add    $0x1,%edx
8010c466:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx
8010c46a:	84 c9                	test   %cl,%cl
8010c46c:	74 0a                	je     8010c478 <unsafe_cg_write+0xc8>
8010c46e:	80 f9 2c             	cmp    $0x2c,%cl
8010c471:	74 05                	je     8010c478 <unsafe_cg_write+0xc8>
8010c473:	83 fa 20             	cmp    $0x20,%edx
8010c476:	75 e8                	jne    8010c460 <unsafe_cg_write+0xb0>
8010c478:	83 ec 0c             	sub    $0xc,%esp
8010c47b:	c6 44 15 c8 00       	movb   $0x0,-0x38(%ebp,%edx,1)
8010c480:	50                   	push   %eax
8010c481:	e8 9a de ff ff       	call   8010a320 <atoi>
8010c486:	83 c4 10             	add    $0x10,%esp
8010c489:	83 f8 ff             	cmp    $0xffffffff,%eax
8010c48c:	89 c3                	mov    %eax,%ebx
8010c48e:	74 1e                	je     8010c4ae <unsafe_cg_write+0xfe>
8010c490:	83 ec 08             	sub    $0x8,%esp
8010c493:	50                   	push   %eax
8010c494:	8b 45 08             	mov    0x8(%ebp),%eax
8010c497:	ff 70 10             	pushl  0x10(%eax)
8010c49a:	e8 41 19 00 00       	call   8010dde0 <set_cpu_id>
8010c49f:	83 c0 01             	add    $0x1,%eax
8010c4a2:	83 c4 10             	add    $0x10,%esp
8010c4a5:	83 f8 01             	cmp    $0x1,%eax
8010c4a8:	0f 87 d4 00 00 00    	ja     8010c582 <unsafe_cg_write+0x1d2>
8010c4ae:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010c4b1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010c4b6:	5b                   	pop    %ebx
8010c4b7:	5e                   	pop    %esi
8010c4b8:	5f                   	pop    %edi
8010c4b9:	5d                   	pop    %ebp
8010c4ba:	c3                   	ret    
8010c4bb:	90                   	nop
8010c4bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010c4c0:	31 c0                	xor    %eax,%eax
8010c4c2:	80 ba 0d 03 00 00 00 	cmpb   $0x0,0x30d(%edx)
8010c4c9:	0f 85 7e 04 00 00    	jne    8010c94d <unsafe_cg_write+0x59d>
8010c4cf:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010c4d2:	5b                   	pop    %ebx
8010c4d3:	5e                   	pop    %esi
8010c4d4:	5f                   	pop    %edi
8010c4d5:	5d                   	pop    %ebp
8010c4d6:	c3                   	ret    
8010c4d7:	89 f6                	mov    %esi,%esi
8010c4d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010c4e0:	83 f8 09             	cmp    $0x9,%eax
8010c4e3:	0f 84 3f 05 00 00    	je     8010ca28 <unsafe_cg_write+0x678>
8010c4e9:	83 f8 0a             	cmp    $0xa,%eax
8010c4ec:	0f 84 a1 00 00 00    	je     8010c593 <unsafe_cg_write+0x1e3>
8010c4f2:	83 f8 0b             	cmp    $0xb,%eax
8010c4f5:	b8 00 00 00 00       	mov    $0x0,%eax
8010c4fa:	75 d3                	jne    8010c4cf <unsafe_cg_write+0x11f>
8010c4fc:	80 ba 13 03 00 00 00 	cmpb   $0x0,0x313(%edx)
8010c503:	74 ca                	je     8010c4cf <unsafe_cg_write+0x11f>
8010c505:	c7 44 05 c8 00 00 00 	movl   $0x0,-0x38(%ebp,%eax,1)
8010c50c:	00 
8010c50d:	83 c0 04             	add    $0x4,%eax
8010c510:	83 f8 20             	cmp    $0x20,%eax
8010c513:	72 f0                	jb     8010c505 <unsafe_cg_write+0x155>
8010c515:	0f b6 0e             	movzbl (%esi),%ecx
8010c518:	31 d2                	xor    %edx,%edx
8010c51a:	8d 45 c8             	lea    -0x38(%ebp),%eax
8010c51d:	80 f9 2c             	cmp    $0x2c,%cl
8010c520:	74 26                	je     8010c548 <unsafe_cg_write+0x198>
8010c522:	84 c9                	test   %cl,%cl
8010c524:	74 22                	je     8010c548 <unsafe_cg_write+0x198>
8010c526:	8d 76 00             	lea    0x0(%esi),%esi
8010c529:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010c530:	88 0c 10             	mov    %cl,(%eax,%edx,1)
8010c533:	83 c2 01             	add    $0x1,%edx
8010c536:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx
8010c53a:	84 c9                	test   %cl,%cl
8010c53c:	74 0a                	je     8010c548 <unsafe_cg_write+0x198>
8010c53e:	80 f9 2c             	cmp    $0x2c,%cl
8010c541:	74 05                	je     8010c548 <unsafe_cg_write+0x198>
8010c543:	83 fa 20             	cmp    $0x20,%edx
8010c546:	75 e8                	jne    8010c530 <unsafe_cg_write+0x180>
8010c548:	83 ec 0c             	sub    $0xc,%esp
8010c54b:	c6 44 15 c8 00       	movb   $0x0,-0x38(%ebp,%edx,1)
8010c550:	50                   	push   %eax
8010c551:	e8 ca dd ff ff       	call   8010a320 <atoi>
8010c556:	83 c4 10             	add    $0x10,%esp
8010c559:	83 f8 ff             	cmp    $0xffffffff,%eax
8010c55c:	89 c3                	mov    %eax,%ebx
8010c55e:	0f 84 4a ff ff ff    	je     8010c4ae <unsafe_cg_write+0xfe>
8010c564:	83 ec 08             	sub    $0x8,%esp
8010c567:	50                   	push   %eax
8010c568:	8b 45 08             	mov    0x8(%ebp),%eax
8010c56b:	ff 70 10             	pushl  0x10(%eax)
8010c56e:	e8 2d 1b 00 00       	call   8010e0a0 <set_min_mem>
8010c573:	83 c0 01             	add    $0x1,%eax
8010c576:	83 c4 10             	add    $0x10,%esp
8010c579:	83 f8 01             	cmp    $0x1,%eax
8010c57c:	0f 86 2c ff ff ff    	jbe    8010c4ae <unsafe_cg_write+0xfe>
8010c582:	8b 45 08             	mov    0x8(%ebp),%eax
8010c585:	89 58 58             	mov    %ebx,0x58(%eax)
8010c588:	8b 45 10             	mov    0x10(%ebp),%eax
8010c58b:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010c58e:	5b                   	pop    %ebx
8010c58f:	5e                   	pop    %esi
8010c590:	5f                   	pop    %edi
8010c591:	5d                   	pop    %ebp
8010c592:	c3                   	ret    
8010c593:	31 c0                	xor    %eax,%eax
8010c595:	80 ba 13 03 00 00 00 	cmpb   $0x0,0x313(%edx)
8010c59c:	0f 84 2d ff ff ff    	je     8010c4cf <unsafe_cg_write+0x11f>
8010c5a2:	c7 44 05 c8 00 00 00 	movl   $0x0,-0x38(%ebp,%eax,1)
8010c5a9:	00 
8010c5aa:	83 c0 04             	add    $0x4,%eax
8010c5ad:	83 f8 20             	cmp    $0x20,%eax
8010c5b0:	72 f0                	jb     8010c5a2 <unsafe_cg_write+0x1f2>
8010c5b2:	0f b6 0e             	movzbl (%esi),%ecx
8010c5b5:	31 d2                	xor    %edx,%edx
8010c5b7:	8d 45 c8             	lea    -0x38(%ebp),%eax
8010c5ba:	80 f9 2c             	cmp    $0x2c,%cl
8010c5bd:	74 21                	je     8010c5e0 <unsafe_cg_write+0x230>
8010c5bf:	84 c9                	test   %cl,%cl
8010c5c1:	74 1d                	je     8010c5e0 <unsafe_cg_write+0x230>
8010c5c3:	90                   	nop
8010c5c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010c5c8:	88 0c 10             	mov    %cl,(%eax,%edx,1)
8010c5cb:	83 c2 01             	add    $0x1,%edx
8010c5ce:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx
8010c5d2:	84 c9                	test   %cl,%cl
8010c5d4:	74 0a                	je     8010c5e0 <unsafe_cg_write+0x230>
8010c5d6:	80 f9 2c             	cmp    $0x2c,%cl
8010c5d9:	74 05                	je     8010c5e0 <unsafe_cg_write+0x230>
8010c5db:	83 fa 20             	cmp    $0x20,%edx
8010c5de:	75 e8                	jne    8010c5c8 <unsafe_cg_write+0x218>
8010c5e0:	83 ec 0c             	sub    $0xc,%esp
8010c5e3:	c6 44 15 c8 00       	movb   $0x0,-0x38(%ebp,%edx,1)
8010c5e8:	50                   	push   %eax
8010c5e9:	e8 32 dd ff ff       	call   8010a320 <atoi>
8010c5ee:	83 c4 10             	add    $0x10,%esp
8010c5f1:	83 f8 ff             	cmp    $0xffffffff,%eax
8010c5f4:	89 c3                	mov    %eax,%ebx
8010c5f6:	0f 84 b2 fe ff ff    	je     8010c4ae <unsafe_cg_write+0xfe>
8010c5fc:	83 ec 08             	sub    $0x8,%esp
8010c5ff:	50                   	push   %eax
8010c600:	8b 45 08             	mov    0x8(%ebp),%eax
8010c603:	ff 70 10             	pushl  0x10(%eax)
8010c606:	e8 85 19 00 00       	call   8010df90 <set_max_mem>
8010c60b:	83 c0 01             	add    $0x1,%eax
8010c60e:	83 c4 10             	add    $0x10,%esp
8010c611:	83 f8 01             	cmp    $0x1,%eax
8010c614:	0f 87 68 ff ff ff    	ja     8010c582 <unsafe_cg_write+0x1d2>
8010c61a:	e9 8f fe ff ff       	jmp    8010c4ae <unsafe_cg_write+0xfe>
8010c61f:	90                   	nop
8010c620:	31 c0                	xor    %eax,%eax
8010c622:	80 ba 0f 03 00 00 00 	cmpb   $0x0,0x30f(%edx)
8010c629:	0f 84 a0 fe ff ff    	je     8010c4cf <unsafe_cg_write+0x11f>
8010c62f:	c7 44 05 c8 00 00 00 	movl   $0x0,-0x38(%ebp,%eax,1)
8010c636:	00 
8010c637:	83 c0 04             	add    $0x4,%eax
8010c63a:	83 f8 20             	cmp    $0x20,%eax
8010c63d:	72 f0                	jb     8010c62f <unsafe_cg_write+0x27f>
8010c63f:	0f b6 0e             	movzbl (%esi),%ecx
8010c642:	31 d2                	xor    %edx,%edx
8010c644:	8d 45 c8             	lea    -0x38(%ebp),%eax
8010c647:	80 f9 2c             	cmp    $0x2c,%cl
8010c64a:	74 1c                	je     8010c668 <unsafe_cg_write+0x2b8>
8010c64c:	84 c9                	test   %cl,%cl
8010c64e:	74 18                	je     8010c668 <unsafe_cg_write+0x2b8>
8010c650:	88 0c 10             	mov    %cl,(%eax,%edx,1)
8010c653:	83 c2 01             	add    $0x1,%edx
8010c656:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx
8010c65a:	84 c9                	test   %cl,%cl
8010c65c:	74 0a                	je     8010c668 <unsafe_cg_write+0x2b8>
8010c65e:	80 f9 2c             	cmp    $0x2c,%cl
8010c661:	74 05                	je     8010c668 <unsafe_cg_write+0x2b8>
8010c663:	83 fa 20             	cmp    $0x20,%edx
8010c666:	75 e8                	jne    8010c650 <unsafe_cg_write+0x2a0>
8010c668:	83 ec 0c             	sub    $0xc,%esp
8010c66b:	c6 44 15 c8 00       	movb   $0x0,-0x38(%ebp,%edx,1)
8010c670:	50                   	push   %eax
8010c671:	e8 aa dc ff ff       	call   8010a320 <atoi>
8010c676:	83 c4 10             	add    $0x10,%esp
8010c679:	83 f8 ff             	cmp    $0xffffffff,%eax
8010c67c:	89 c3                	mov    %eax,%ebx
8010c67e:	0f 84 2a fe ff ff    	je     8010c4ae <unsafe_cg_write+0xfe>
8010c684:	83 ec 08             	sub    $0x8,%esp
8010c687:	50                   	push   %eax
8010c688:	8b 45 08             	mov    0x8(%ebp),%eax
8010c68b:	ff 70 10             	pushl  0x10(%eax)
8010c68e:	e8 dd 15 00 00       	call   8010dc70 <set_max_procs>
8010c693:	83 c0 01             	add    $0x1,%eax
8010c696:	83 c4 10             	add    $0x10,%esp
8010c699:	83 f8 01             	cmp    $0x1,%eax
8010c69c:	0f 87 e0 fe ff ff    	ja     8010c582 <unsafe_cg_write+0x1d2>
8010c6a2:	e9 07 fe ff ff       	jmp    8010c4ae <unsafe_cg_write+0xfe>
8010c6a7:	89 f6                	mov    %esi,%esi
8010c6a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010c6b0:	8b 45 10             	mov    0x10(%ebp),%eax
8010c6b3:	83 ec 04             	sub    $0x4,%esp
8010c6b6:	50                   	push   %eax
8010c6b7:	56                   	push   %esi
8010c6b8:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c6bd:	c6 80 c0 d5 11 80 00 	movb   $0x0,-0x7fee2a40(%eax)
8010c6c4:	e8 67 a3 ff ff       	call   80106a30 <strncpy>
8010c6c9:	c7 04 24 c0 d5 11 80 	movl   $0x8011d5c0,(%esp)
8010c6d0:	e8 4b dc ff ff       	call   8010a320 <atoi>
8010c6d5:	83 c4 10             	add    $0x10,%esp
8010c6d8:	85 c0                	test   %eax,%eax
8010c6da:	0f 8e ce fd ff ff    	jle    8010c4ae <unsafe_cg_write+0xfe>
8010c6e0:	83 ec 08             	sub    $0x8,%esp
8010c6e3:	50                   	push   %eax
8010c6e4:	8b 45 08             	mov    0x8(%ebp),%eax
8010c6e7:	ff 70 10             	pushl  0x10(%eax)
8010c6ea:	e8 f1 9c ff ff       	call   801063e0 <cgroup_move_proc>
8010c6ef:	83 c4 10             	add    $0x10,%esp
8010c6f2:	83 f8 ff             	cmp    $0xffffffff,%eax
8010c6f5:	0f 84 b3 fd ff ff    	je     8010c4ae <unsafe_cg_write+0xfe>
8010c6fb:	8b 45 10             	mov    0x10(%ebp),%eax
8010c6fe:	e9 cc fd ff ff       	jmp    8010c4cf <unsafe_cg_write+0x11f>
8010c703:	8b 45 10             	mov    0x10(%ebp),%eax
8010c706:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)
8010c70d:	c6 45 9f 00          	movb   $0x0,-0x61(%ebp)
8010c711:	c6 45 a4 00          	movb   $0x0,-0x5c(%ebp)
8010c715:	c6 45 a5 00          	movb   $0x0,-0x5b(%ebp)
8010c719:	c6 45 a7 00          	movb   $0x0,-0x59(%ebp)
8010c71d:	85 c0                	test   %eax,%eax
8010c71f:	0f 9f 45 a6          	setg   -0x5a(%ebp)
8010c723:	90                   	nop
8010c724:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010c728:	0f b6 06             	movzbl (%esi),%eax
8010c72b:	84 c0                	test   %al,%al
8010c72d:	0f 84 bf 01 00 00    	je     8010c8f2 <unsafe_cg_write+0x542>
8010c733:	80 7d a6 00          	cmpb   $0x0,-0x5a(%ebp)
8010c737:	0f 84 b5 01 00 00    	je     8010c8f2 <unsafe_cg_write+0x542>
8010c73d:	83 e8 2b             	sub    $0x2b,%eax
8010c740:	a8 fd                	test   $0xfd,%al
8010c742:	0f 85 66 fd ff ff    	jne    8010c4ae <unsafe_cg_write+0xfe>
8010c748:	83 ec 04             	sub    $0x4,%esp
8010c74b:	6a 10                	push   $0x10
8010c74d:	6a 00                	push   $0x0
8010c74f:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c754:	e8 e7 a0 ff ff       	call   80106840 <memset>
8010c759:	0f b6 56 01          	movzbl 0x1(%esi),%edx
8010c75d:	83 c4 10             	add    $0x10,%esp
8010c760:	8d 46 01             	lea    0x1(%esi),%eax
8010c763:	f6 c2 df             	test   $0xdf,%dl
8010c766:	0f 84 7a 01 00 00    	je     8010c8e6 <unsafe_cg_write+0x536>
8010c76c:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
8010c770:	0f 84 70 01 00 00    	je     8010c8e6 <unsafe_cg_write+0x536>
8010c776:	8b 7d 10             	mov    0x10(%ebp),%edi
8010c779:	31 db                	xor    %ebx,%ebx
8010c77b:	b9 c0 d5 11 80       	mov    $0x8011d5c0,%ecx
8010c780:	01 f7                	add    %esi,%edi
8010c782:	eb 08                	jmp    8010c78c <unsafe_cg_write+0x3dc>
8010c784:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010c788:	39 f8                	cmp    %edi,%eax
8010c78a:	74 14                	je     8010c7a0 <unsafe_cg_write+0x3f0>
8010c78c:	83 c1 01             	add    $0x1,%ecx
8010c78f:	83 c0 01             	add    $0x1,%eax
8010c792:	88 51 ff             	mov    %dl,-0x1(%ecx)
8010c795:	0f b6 10             	movzbl (%eax),%edx
8010c798:	83 c3 01             	add    $0x1,%ebx
8010c79b:	f6 c2 df             	test   $0xdf,%dl
8010c79e:	75 e8                	jne    8010c788 <unsafe_cg_write+0x3d8>
8010c7a0:	c6 01 00             	movb   $0x0,(%ecx)
8010c7a3:	80 38 20             	cmpb   $0x20,(%eax)
8010c7a6:	0f 94 c0             	sete   %al
8010c7a9:	83 ec 08             	sub    $0x8,%esp
8010c7ac:	68 cc fa 10 80       	push   $0x8010facc
8010c7b1:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c7b6:	0f b6 c0             	movzbl %al,%eax
8010c7b9:	01 c3                	add    %eax,%ebx
8010c7bb:	e8 20 a2 ff ff       	call   801069e0 <strcmp>
8010c7c0:	83 c4 10             	add    $0x10,%esp
8010c7c3:	85 c0                	test   %eax,%eax
8010c7c5:	75 29                	jne    8010c7f0 <unsafe_cg_write+0x440>
8010c7c7:	0f b6 06             	movzbl (%esi),%eax
8010c7ca:	c6 45 a7 01          	movb   $0x1,-0x59(%ebp)
8010c7ce:	3c 2b                	cmp    $0x2b,%al
8010c7d0:	74 0a                	je     8010c7dc <unsafe_cg_write+0x42c>
8010c7d2:	3c 2d                	cmp    $0x2d,%al
8010c7d4:	0f 94 c0             	sete   %al
8010c7d7:	01 c0                	add    %eax,%eax
8010c7d9:	88 45 a7             	mov    %al,-0x59(%ebp)
8010c7dc:	83 c3 01             	add    $0x1,%ebx
8010c7df:	01 5d a0             	add    %ebx,-0x60(%ebp)
8010c7e2:	01 de                	add    %ebx,%esi
8010c7e4:	e9 3f ff ff ff       	jmp    8010c728 <unsafe_cg_write+0x378>
8010c7e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010c7f0:	83 ec 08             	sub    $0x8,%esp
8010c7f3:	68 d0 fa 10 80       	push   $0x8010fad0
8010c7f8:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c7fd:	e8 de a1 ff ff       	call   801069e0 <strcmp>
8010c802:	83 c4 10             	add    $0x10,%esp
8010c805:	85 c0                	test   %eax,%eax
8010c807:	75 17                	jne    8010c820 <unsafe_cg_write+0x470>
8010c809:	0f b6 06             	movzbl (%esi),%eax
8010c80c:	c6 45 a5 01          	movb   $0x1,-0x5b(%ebp)
8010c810:	3c 2b                	cmp    $0x2b,%al
8010c812:	74 c8                	je     8010c7dc <unsafe_cg_write+0x42c>
8010c814:	3c 2d                	cmp    $0x2d,%al
8010c816:	0f 94 c0             	sete   %al
8010c819:	01 c0                	add    %eax,%eax
8010c81b:	88 45 a5             	mov    %al,-0x5b(%ebp)
8010c81e:	eb bc                	jmp    8010c7dc <unsafe_cg_write+0x42c>
8010c820:	83 ec 08             	sub    $0x8,%esp
8010c823:	68 d4 fa 10 80       	push   $0x8010fad4
8010c828:	68 c0 d5 11 80       	push   $0x8011d5c0
8010c82d:	e8 ae a1 ff ff       	call   801069e0 <strcmp>
8010c832:	83 c4 10             	add    $0x10,%esp
8010c835:	85 c0                	test   %eax,%eax
8010c837:	0f 85 73 02 00 00    	jne    8010cab0 <unsafe_cg_write+0x700>
8010c83d:	0f b6 06             	movzbl (%esi),%eax
8010c840:	c6 45 a4 01          	movb   $0x1,-0x5c(%ebp)
8010c844:	3c 2b                	cmp    $0x2b,%al
8010c846:	74 94                	je     8010c7dc <unsafe_cg_write+0x42c>
8010c848:	3c 2d                	cmp    $0x2d,%al
8010c84a:	0f 94 c0             	sete   %al
8010c84d:	01 c0                	add    %eax,%eax
8010c84f:	88 45 a4             	mov    %al,-0x5c(%ebp)
8010c852:	eb 88                	jmp    8010c7dc <unsafe_cg_write+0x42c>
8010c854:	83 ec 0c             	sub    $0xc,%esp
8010c857:	56                   	push   %esi
8010c858:	e8 c3 da ff ff       	call   8010a320 <atoi>
8010c85d:	83 c4 10             	add    $0x10,%esp
8010c860:	85 c0                	test   %eax,%eax
8010c862:	0f 88 46 fc ff ff    	js     8010c4ae <unsafe_cg_write+0xfe>
8010c868:	83 ec 0c             	sub    $0xc,%esp
8010c86b:	56                   	push   %esi
8010c86c:	e8 5f a2 ff ff       	call   80106ad0 <strlen>
8010c871:	83 c4 10             	add    $0x10,%esp
8010c874:	83 f8 02             	cmp    $0x2,%eax
8010c877:	0f 8f 31 fc ff ff    	jg     8010c4ae <unsafe_cg_write+0xfe>
8010c87d:	8b 45 08             	mov    0x8(%ebp),%eax
8010c880:	83 ec 0c             	sub    $0xc,%esp
8010c883:	8b 58 10             	mov    0x10(%eax),%ebx
8010c886:	56                   	push   %esi
8010c887:	e8 94 da ff ff       	call   8010a320 <atoi>
8010c88c:	83 c4 10             	add    $0x10,%esp
8010c88f:	89 83 18 03 00 00    	mov    %eax,0x318(%ebx)
8010c895:	8b 45 10             	mov    0x10(%ebp),%eax
8010c898:	e9 32 fc ff ff       	jmp    8010c4cf <unsafe_cg_write+0x11f>
8010c89d:	83 ec 0c             	sub    $0xc,%esp
8010c8a0:	56                   	push   %esi
8010c8a1:	e8 7a da ff ff       	call   8010a320 <atoi>
8010c8a6:	83 c4 10             	add    $0x10,%esp
8010c8a9:	85 c0                	test   %eax,%eax
8010c8ab:	0f 88 fd fb ff ff    	js     8010c4ae <unsafe_cg_write+0xfe>
8010c8b1:	83 ec 0c             	sub    $0xc,%esp
8010c8b4:	56                   	push   %esi
8010c8b5:	e8 16 a2 ff ff       	call   80106ad0 <strlen>
8010c8ba:	83 c4 10             	add    $0x10,%esp
8010c8bd:	83 f8 02             	cmp    $0x2,%eax
8010c8c0:	0f 8f e8 fb ff ff    	jg     8010c4ae <unsafe_cg_write+0xfe>
8010c8c6:	8b 45 08             	mov    0x8(%ebp),%eax
8010c8c9:	83 ec 0c             	sub    $0xc,%esp
8010c8cc:	8b 58 10             	mov    0x10(%eax),%ebx
8010c8cf:	56                   	push   %esi
8010c8d0:	e8 4b da ff ff       	call   8010a320 <atoi>
8010c8d5:	83 c4 10             	add    $0x10,%esp
8010c8d8:	89 83 1c 03 00 00    	mov    %eax,0x31c(%ebx)
8010c8de:	8b 45 10             	mov    0x10(%ebp),%eax
8010c8e1:	e9 e9 fb ff ff       	jmp    8010c4cf <unsafe_cg_write+0x11f>
8010c8e6:	31 db                	xor    %ebx,%ebx
8010c8e8:	b9 c0 d5 11 80       	mov    $0x8011d5c0,%ecx
8010c8ed:	e9 ae fe ff ff       	jmp    8010c7a0 <unsafe_cg_write+0x3f0>
8010c8f2:	80 7d a7 01          	cmpb   $0x1,-0x59(%ebp)
8010c8f6:	0f 84 08 01 00 00    	je     8010ca04 <unsafe_cg_write+0x654>
8010c8fc:	80 7d a7 02          	cmpb   $0x2,-0x59(%ebp)
8010c900:	0f 84 da 02 00 00    	je     8010cbe0 <unsafe_cg_write+0x830>
8010c906:	80 7d a5 01          	cmpb   $0x1,-0x5b(%ebp)
8010c90a:	0f 84 b0 02 00 00    	je     8010cbc0 <unsafe_cg_write+0x810>
8010c910:	80 7d a5 02          	cmpb   $0x2,-0x5b(%ebp)
8010c914:	0f 84 86 02 00 00    	je     8010cba0 <unsafe_cg_write+0x7f0>
8010c91a:	80 7d a4 01          	cmpb   $0x1,-0x5c(%ebp)
8010c91e:	0f 84 5c 02 00 00    	je     8010cb80 <unsafe_cg_write+0x7d0>
8010c924:	80 7d a4 02          	cmpb   $0x2,-0x5c(%ebp)
8010c928:	0f 84 32 02 00 00    	je     8010cb60 <unsafe_cg_write+0x7b0>
8010c92e:	80 7d 9f 01          	cmpb   $0x1,-0x61(%ebp)
8010c932:	0f 84 00 02 00 00    	je     8010cb38 <unsafe_cg_write+0x788>
8010c938:	80 7d 9f 02          	cmpb   $0x2,-0x61(%ebp)
8010c93c:	0f 84 d5 01 00 00    	je     8010cb17 <unsafe_cg_write+0x767>
8010c942:	8b 45 10             	mov    0x10(%ebp),%eax
8010c945:	2b 45 a0             	sub    -0x60(%ebp),%eax
8010c948:	e9 82 fb ff ff       	jmp    8010c4cf <unsafe_cg_write+0x11f>
8010c94d:	c7 44 05 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%eax,1)
8010c954:	00 
8010c955:	83 c0 04             	add    $0x4,%eax
8010c958:	83 f8 20             	cmp    $0x20,%eax
8010c95b:	72 f0                	jb     8010c94d <unsafe_cg_write+0x59d>
8010c95d:	31 c0                	xor    %eax,%eax
8010c95f:	c7 44 05 c8 00 00 00 	movl   $0x0,-0x38(%ebp,%eax,1)
8010c966:	00 
8010c967:	83 c0 04             	add    $0x4,%eax
8010c96a:	83 f8 20             	cmp    $0x20,%eax
8010c96d:	72 f0                	jb     8010c95f <unsafe_cg_write+0x5af>
8010c96f:	0f b6 16             	movzbl (%esi),%edx
8010c972:	31 c0                	xor    %eax,%eax
8010c974:	8d 5d a8             	lea    -0x58(%ebp),%ebx
8010c977:	80 fa 2c             	cmp    $0x2c,%dl
8010c97a:	74 1e                	je     8010c99a <unsafe_cg_write+0x5ea>
8010c97c:	84 d2                	test   %dl,%dl
8010c97e:	74 1a                	je     8010c99a <unsafe_cg_write+0x5ea>
8010c980:	83 c6 01             	add    $0x1,%esi
8010c983:	88 14 03             	mov    %dl,(%ebx,%eax,1)
8010c986:	83 c0 01             	add    $0x1,%eax
8010c989:	0f b6 16             	movzbl (%esi),%edx
8010c98c:	84 d2                	test   %dl,%dl
8010c98e:	74 0a                	je     8010c99a <unsafe_cg_write+0x5ea>
8010c990:	80 fa 2c             	cmp    $0x2c,%dl
8010c993:	74 05                	je     8010c99a <unsafe_cg_write+0x5ea>
8010c995:	83 f8 20             	cmp    $0x20,%eax
8010c998:	75 e6                	jne    8010c980 <unsafe_cg_write+0x5d0>
8010c99a:	0f b6 4e 01          	movzbl 0x1(%esi),%ecx
8010c99e:	31 d2                	xor    %edx,%edx
8010c9a0:	c6 44 05 a8 00       	movb   $0x0,-0x58(%ebp,%eax,1)
8010c9a5:	8d 45 c8             	lea    -0x38(%ebp),%eax
8010c9a8:	84 c9                	test   %cl,%cl
8010c9aa:	75 09                	jne    8010c9b5 <unsafe_cg_write+0x605>
8010c9ac:	eb 16                	jmp    8010c9c4 <unsafe_cg_write+0x614>
8010c9ae:	66 90                	xchg   %ax,%ax
8010c9b0:	83 fa 20             	cmp    $0x20,%edx
8010c9b3:	74 0f                	je     8010c9c4 <unsafe_cg_write+0x614>
8010c9b5:	88 0c 10             	mov    %cl,(%eax,%edx,1)
8010c9b8:	83 c2 01             	add    $0x1,%edx
8010c9bb:	0f b6 4c 16 01       	movzbl 0x1(%esi,%edx,1),%ecx
8010c9c0:	84 c9                	test   %cl,%cl
8010c9c2:	75 ec                	jne    8010c9b0 <unsafe_cg_write+0x600>
8010c9c4:	83 ec 0c             	sub    $0xc,%esp
8010c9c7:	c6 44 15 c8 00       	movb   $0x0,-0x38(%ebp,%edx,1)
8010c9cc:	53                   	push   %ebx
8010c9cd:	e8 4e d9 ff ff       	call   8010a320 <atoi>
8010c9d2:	83 c4 10             	add    $0x10,%esp
8010c9d5:	83 f8 ff             	cmp    $0xffffffff,%eax
8010c9d8:	89 c3                	mov    %eax,%ebx
8010c9da:	0f 84 ce fa ff ff    	je     8010c4ae <unsafe_cg_write+0xfe>
8010c9e0:	80 7d c8 00          	cmpb   $0x0,-0x38(%ebp)
8010c9e4:	0f 85 01 01 00 00    	jne    8010caeb <unsafe_cg_write+0x73b>
8010c9ea:	8b 45 08             	mov    0x8(%ebp),%eax
8010c9ed:	8b 40 10             	mov    0x10(%eax),%eax
8010c9f0:	89 98 70 03 00 00    	mov    %ebx,0x370(%eax)
8010c9f6:	8b 45 08             	mov    0x8(%ebp),%eax
8010c9f9:	89 58 54             	mov    %ebx,0x54(%eax)
8010c9fc:	8b 45 10             	mov    0x10(%ebp),%eax
8010c9ff:	e9 cb fa ff ff       	jmp    8010c4cf <unsafe_cg_write+0x11f>
8010ca04:	8b 45 08             	mov    0x8(%ebp),%eax
8010ca07:	83 ec 0c             	sub    $0xc,%esp
8010ca0a:	ff 70 10             	pushl  0x10(%eax)
8010ca0d:	e8 de 0c 00 00       	call   8010d6f0 <unsafe_enable_cpu_controller>
8010ca12:	83 c4 10             	add    $0x10,%esp
8010ca15:	85 c0                	test   %eax,%eax
8010ca17:	0f 89 e9 fe ff ff    	jns    8010c906 <unsafe_cg_write+0x556>
8010ca1d:	e9 8c fa ff ff       	jmp    8010c4ae <unsafe_cg_write+0xfe>
8010ca22:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010ca28:	31 c0                	xor    %eax,%eax
8010ca2a:	c7 44 05 c8 00 00 00 	movl   $0x0,-0x38(%ebp,%eax,1)
8010ca31:	00 
8010ca32:	83 c0 04             	add    $0x4,%eax
8010ca35:	83 f8 20             	cmp    $0x20,%eax
8010ca38:	72 f0                	jb     8010ca2a <unsafe_cg_write+0x67a>
8010ca3a:	0f b6 0e             	movzbl (%esi),%ecx
8010ca3d:	31 d2                	xor    %edx,%edx
8010ca3f:	8d 45 c8             	lea    -0x38(%ebp),%eax
8010ca42:	80 f9 2c             	cmp    $0x2c,%cl
8010ca45:	74 21                	je     8010ca68 <unsafe_cg_write+0x6b8>
8010ca47:	84 c9                	test   %cl,%cl
8010ca49:	74 1d                	je     8010ca68 <unsafe_cg_write+0x6b8>
8010ca4b:	90                   	nop
8010ca4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010ca50:	88 0c 10             	mov    %cl,(%eax,%edx,1)
8010ca53:	83 c2 01             	add    $0x1,%edx
8010ca56:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx
8010ca5a:	84 c9                	test   %cl,%cl
8010ca5c:	74 0a                	je     8010ca68 <unsafe_cg_write+0x6b8>
8010ca5e:	80 f9 2c             	cmp    $0x2c,%cl
8010ca61:	74 05                	je     8010ca68 <unsafe_cg_write+0x6b8>
8010ca63:	83 fa 20             	cmp    $0x20,%edx
8010ca66:	75 e8                	jne    8010ca50 <unsafe_cg_write+0x6a0>
8010ca68:	83 ec 0c             	sub    $0xc,%esp
8010ca6b:	c6 44 15 c8 00       	movb   $0x0,-0x38(%ebp,%edx,1)
8010ca70:	50                   	push   %eax
8010ca71:	e8 aa d8 ff ff       	call   8010a320 <atoi>
8010ca76:	83 c4 10             	add    $0x10,%esp
8010ca79:	83 f8 ff             	cmp    $0xffffffff,%eax
8010ca7c:	89 c3                	mov    %eax,%ebx
8010ca7e:	0f 84 2a fa ff ff    	je     8010c4ae <unsafe_cg_write+0xfe>
8010ca84:	83 ec 08             	sub    $0x8,%esp
8010ca87:	50                   	push   %eax
8010ca88:	8b 45 08             	mov    0x8(%ebp),%eax
8010ca8b:	ff 70 10             	pushl  0x10(%eax)
8010ca8e:	e8 bd 14 00 00       	call   8010df50 <frz_grp>
8010ca93:	83 c0 01             	add    $0x1,%eax
8010ca96:	83 c4 10             	add    $0x10,%esp
8010ca99:	83 f8 01             	cmp    $0x1,%eax
8010ca9c:	0f 86 0c fa ff ff    	jbe    8010c4ae <unsafe_cg_write+0xfe>
8010caa2:	8b 45 08             	mov    0x8(%ebp),%eax
8010caa5:	89 58 54             	mov    %ebx,0x54(%eax)
8010caa8:	8b 45 10             	mov    0x10(%ebp),%eax
8010caab:	e9 1f fa ff ff       	jmp    8010c4cf <unsafe_cg_write+0x11f>
8010cab0:	83 ec 08             	sub    $0x8,%esp
8010cab3:	68 75 ee 10 80       	push   $0x8010ee75
8010cab8:	68 c0 d5 11 80       	push   $0x8011d5c0
8010cabd:	e8 1e 9f ff ff       	call   801069e0 <strcmp>
8010cac2:	83 c4 10             	add    $0x10,%esp
8010cac5:	85 c0                	test   %eax,%eax
8010cac7:	0f 85 e1 f9 ff ff    	jne    8010c4ae <unsafe_cg_write+0xfe>
8010cacd:	0f b6 06             	movzbl (%esi),%eax
8010cad0:	c6 45 9f 01          	movb   $0x1,-0x61(%ebp)
8010cad4:	3c 2b                	cmp    $0x2b,%al
8010cad6:	0f 84 00 fd ff ff    	je     8010c7dc <unsafe_cg_write+0x42c>
8010cadc:	3c 2d                	cmp    $0x2d,%al
8010cade:	0f 94 c0             	sete   %al
8010cae1:	01 c0                	add    %eax,%eax
8010cae3:	88 45 9f             	mov    %al,-0x61(%ebp)
8010cae6:	e9 f1 fc ff ff       	jmp    8010c7dc <unsafe_cg_write+0x42c>
8010caeb:	8d 45 c8             	lea    -0x38(%ebp),%eax
8010caee:	83 ec 0c             	sub    $0xc,%esp
8010caf1:	50                   	push   %eax
8010caf2:	e8 29 d8 ff ff       	call   8010a320 <atoi>
8010caf7:	83 c4 10             	add    $0x10,%esp
8010cafa:	83 f8 ff             	cmp    $0xffffffff,%eax
8010cafd:	0f 84 ab f9 ff ff    	je     8010c4ae <unsafe_cg_write+0xfe>
8010cb03:	8b 75 08             	mov    0x8(%ebp),%esi
8010cb06:	8b 56 10             	mov    0x10(%esi),%edx
8010cb09:	89 82 6c 03 00 00    	mov    %eax,0x36c(%edx)
8010cb0f:	89 46 58             	mov    %eax,0x58(%esi)
8010cb12:	e9 d3 fe ff ff       	jmp    8010c9ea <unsafe_cg_write+0x63a>
8010cb17:	8b 45 08             	mov    0x8(%ebp),%eax
8010cb1a:	83 ec 0c             	sub    $0xc,%esp
8010cb1d:	ff 70 10             	pushl  0x10(%eax)
8010cb20:	e8 4b 1b 00 00       	call   8010e670 <unsafe_disable_mem_controller>
8010cb25:	83 c4 10             	add    $0x10,%esp
8010cb28:	85 c0                	test   %eax,%eax
8010cb2a:	0f 89 12 fe ff ff    	jns    8010c942 <unsafe_cg_write+0x592>
8010cb30:	e9 79 f9 ff ff       	jmp    8010c4ae <unsafe_cg_write+0xfe>
8010cb35:	8d 76 00             	lea    0x0(%esi),%esi
8010cb38:	8b 45 08             	mov    0x8(%ebp),%eax
8010cb3b:	83 ec 0c             	sub    $0xc,%esp
8010cb3e:	ff 70 10             	pushl  0x10(%eax)
8010cb41:	e8 9a 1a 00 00       	call   8010e5e0 <unsafe_enable_mem_controller>
8010cb46:	83 c4 10             	add    $0x10,%esp
8010cb49:	85 c0                	test   %eax,%eax
8010cb4b:	0f 89 f1 fd ff ff    	jns    8010c942 <unsafe_cg_write+0x592>
8010cb51:	e9 58 f9 ff ff       	jmp    8010c4ae <unsafe_cg_write+0xfe>
8010cb56:	8d 76 00             	lea    0x0(%esi),%esi
8010cb59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010cb60:	8b 45 08             	mov    0x8(%ebp),%eax
8010cb63:	83 ec 0c             	sub    $0xc,%esp
8010cb66:	ff 70 10             	pushl  0x10(%eax)
8010cb69:	e8 12 13 00 00       	call   8010de80 <unsafe_disable_set_controller>
8010cb6e:	83 c4 10             	add    $0x10,%esp
8010cb71:	85 c0                	test   %eax,%eax
8010cb73:	0f 89 b5 fd ff ff    	jns    8010c92e <unsafe_cg_write+0x57e>
8010cb79:	e9 30 f9 ff ff       	jmp    8010c4ae <unsafe_cg_write+0xfe>
8010cb7e:	66 90                	xchg   %ax,%ax
8010cb80:	8b 45 08             	mov    0x8(%ebp),%eax
8010cb83:	83 ec 0c             	sub    $0xc,%esp
8010cb86:	ff 70 10             	pushl  0x10(%eax)
8010cb89:	e8 82 12 00 00       	call   8010de10 <unsafe_enable_set_controller>
8010cb8e:	83 c4 10             	add    $0x10,%esp
8010cb91:	85 c0                	test   %eax,%eax
8010cb93:	0f 89 95 fd ff ff    	jns    8010c92e <unsafe_cg_write+0x57e>
8010cb99:	e9 10 f9 ff ff       	jmp    8010c4ae <unsafe_cg_write+0xfe>
8010cb9e:	66 90                	xchg   %ax,%ax
8010cba0:	8b 45 08             	mov    0x8(%ebp),%eax
8010cba3:	83 ec 0c             	sub    $0xc,%esp
8010cba6:	ff 70 10             	pushl  0x10(%eax)
8010cba9:	e8 62 11 00 00       	call   8010dd10 <unsafe_disable_pid_controller>
8010cbae:	83 c4 10             	add    $0x10,%esp
8010cbb1:	85 c0                	test   %eax,%eax
8010cbb3:	0f 89 61 fd ff ff    	jns    8010c91a <unsafe_cg_write+0x56a>
8010cbb9:	e9 f0 f8 ff ff       	jmp    8010c4ae <unsafe_cg_write+0xfe>
8010cbbe:	66 90                	xchg   %ax,%ax
8010cbc0:	8b 45 08             	mov    0x8(%ebp),%eax
8010cbc3:	83 ec 0c             	sub    $0xc,%esp
8010cbc6:	ff 70 10             	pushl  0x10(%eax)
8010cbc9:	e8 d2 10 00 00       	call   8010dca0 <unsafe_enable_pid_controller>
8010cbce:	83 c4 10             	add    $0x10,%esp
8010cbd1:	85 c0                	test   %eax,%eax
8010cbd3:	0f 89 41 fd ff ff    	jns    8010c91a <unsafe_cg_write+0x56a>
8010cbd9:	e9 d0 f8 ff ff       	jmp    8010c4ae <unsafe_cg_write+0xfe>
8010cbde:	66 90                	xchg   %ax,%ax
8010cbe0:	8b 45 08             	mov    0x8(%ebp),%eax
8010cbe3:	83 ec 0c             	sub    $0xc,%esp
8010cbe6:	ff 70 10             	pushl  0x10(%eax)
8010cbe9:	e8 a2 0b 00 00       	call   8010d790 <unsafe_disable_cpu_controller>
8010cbee:	83 c4 10             	add    $0x10,%esp
8010cbf1:	85 c0                	test   %eax,%eax
8010cbf3:	0f 89 0d fd ff ff    	jns    8010c906 <unsafe_cg_write+0x556>
8010cbf9:	e9 b0 f8 ff ff       	jmp    8010c4ae <unsafe_cg_write+0xfe>
8010cbfe:	66 90                	xchg   %ax,%ax

8010cc00 <unsafe_cg_close>:
8010cc00:	55                   	push   %ebp
8010cc01:	89 e5                	mov    %esp,%ebp
8010cc03:	53                   	push   %ebx
8010cc04:	83 ec 10             	sub    $0x10,%esp
8010cc07:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010cc0a:	53                   	push   %ebx
8010cc0b:	e8 10 4a ff ff       	call   80101620 <fileclose>
8010cc10:	8b 43 10             	mov    0x10(%ebx),%eax
8010cc13:	83 c4 10             	add    $0x10,%esp
8010cc16:	83 a8 00 02 00 00 01 	subl   $0x1,0x200(%eax)
8010cc1d:	8b 43 10             	mov    0x10(%ebx),%eax
8010cc20:	8b 90 00 02 00 00    	mov    0x200(%eax),%edx
8010cc26:	85 d2                	test   %edx,%edx
8010cc28:	75 05                	jne    8010cc2f <unsafe_cg_close+0x2f>
8010cc2a:	80 38 00             	cmpb   $0x0,(%eax)
8010cc2d:	74 11                	je     8010cc40 <unsafe_cg_close+0x40>
8010cc2f:	31 c0                	xor    %eax,%eax
8010cc31:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010cc34:	c9                   	leave  
8010cc35:	c3                   	ret    
8010cc36:	8d 76 00             	lea    0x0(%esi),%esi
8010cc39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010cc40:	83 ec 0c             	sub    $0xc,%esp
8010cc43:	ff b0 08 03 00 00    	pushl  0x308(%eax)
8010cc49:	e8 22 0e 00 00       	call   8010da70 <decrement_nr_dying_descendants>
8010cc4e:	83 c4 10             	add    $0x10,%esp
8010cc51:	31 c0                	xor    %eax,%eax
8010cc53:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010cc56:	c9                   	leave  
8010cc57:	c3                   	ret    
8010cc58:	90                   	nop
8010cc59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010cc60 <get_base_name>:
8010cc60:	55                   	push   %ebp
8010cc61:	31 c0                	xor    %eax,%eax
8010cc63:	b9 80 00 00 00       	mov    $0x80,%ecx
8010cc68:	89 e5                	mov    %esp,%ebp
8010cc6a:	57                   	push   %edi
8010cc6b:	56                   	push   %esi
8010cc6c:	8d bd e8 fd ff ff    	lea    -0x218(%ebp),%edi
8010cc72:	53                   	push   %ebx
8010cc73:	81 ec 14 02 00 00    	sub    $0x214,%esp
8010cc79:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8010cc7c:	f3 ab                	rep stos %eax,%es:(%edi)
8010cc7e:	8d bd e8 fd ff ff    	lea    -0x218(%ebp),%edi
8010cc84:	ff 75 08             	pushl  0x8(%ebp)
8010cc87:	57                   	push   %edi
8010cc88:	e8 93 04 00 00       	call   8010d120 <format_path>
8010cc8d:	0f b6 95 e8 fd ff ff 	movzbl -0x218(%ebp),%edx
8010cc94:	83 c4 10             	add    $0x10,%esp
8010cc97:	84 d2                	test   %dl,%dl
8010cc99:	74 52                	je     8010cced <get_base_name+0x8d>
8010cc9b:	89 f8                	mov    %edi,%eax
8010cc9d:	89 f9                	mov    %edi,%ecx
8010cc9f:	eb 09                	jmp    8010ccaa <get_base_name+0x4a>
8010cca1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010cca8:	89 f0                	mov    %esi,%eax
8010ccaa:	80 fa 2f             	cmp    $0x2f,%dl
8010ccad:	0f b6 50 01          	movzbl 0x1(%eax),%edx
8010ccb1:	8d 70 01             	lea    0x1(%eax),%esi
8010ccb4:	0f 44 c8             	cmove  %eax,%ecx
8010ccb7:	84 d2                	test   %dl,%dl
8010ccb9:	75 ed                	jne    8010cca8 <get_base_name+0x48>
8010ccbb:	39 f9                	cmp    %edi,%ecx
8010ccbd:	74 2e                	je     8010cced <get_base_name+0x8d>
8010ccbf:	39 c1                	cmp    %eax,%ecx
8010ccc1:	74 2a                	je     8010cced <get_base_name+0x8d>
8010ccc3:	0f b6 41 01          	movzbl 0x1(%ecx),%eax
8010ccc7:	8d 51 01             	lea    0x1(%ecx),%edx
8010ccca:	84 c0                	test   %al,%al
8010cccc:	74 12                	je     8010cce0 <get_base_name+0x80>
8010ccce:	66 90                	xchg   %ax,%ax
8010ccd0:	83 c3 01             	add    $0x1,%ebx
8010ccd3:	83 c2 01             	add    $0x1,%edx
8010ccd6:	88 43 ff             	mov    %al,-0x1(%ebx)
8010ccd9:	0f b6 02             	movzbl (%edx),%eax
8010ccdc:	84 c0                	test   %al,%al
8010ccde:	75 f0                	jne    8010ccd0 <get_base_name+0x70>
8010cce0:	c6 03 00             	movb   $0x0,(%ebx)
8010cce3:	31 c0                	xor    %eax,%eax
8010cce5:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010cce8:	5b                   	pop    %ebx
8010cce9:	5e                   	pop    %esi
8010ccea:	5f                   	pop    %edi
8010cceb:	5d                   	pop    %ebp
8010ccec:	c3                   	ret    
8010cced:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010ccf2:	eb f1                	jmp    8010cce5 <get_base_name+0x85>
8010ccf4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010ccfa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

8010cd00 <get_dir_name>:
8010cd00:	55                   	push   %ebp
8010cd01:	31 c0                	xor    %eax,%eax
8010cd03:	b9 80 00 00 00       	mov    $0x80,%ecx
8010cd08:	89 e5                	mov    %esp,%ebp
8010cd0a:	57                   	push   %edi
8010cd0b:	56                   	push   %esi
8010cd0c:	53                   	push   %ebx
8010cd0d:	8d bd e8 fd ff ff    	lea    -0x218(%ebp),%edi
8010cd13:	8d 9d e8 fd ff ff    	lea    -0x218(%ebp),%ebx
8010cd19:	81 ec 14 02 00 00    	sub    $0x214,%esp
8010cd1f:	f3 ab                	rep stos %eax,%es:(%edi)
8010cd21:	ff 75 08             	pushl  0x8(%ebp)
8010cd24:	53                   	push   %ebx
8010cd25:	e8 f6 03 00 00       	call   8010d120 <format_path>
8010cd2a:	0f b6 b5 e8 fd ff ff 	movzbl -0x218(%ebp),%esi
8010cd31:	83 c4 10             	add    $0x10,%esp
8010cd34:	89 f0                	mov    %esi,%eax
8010cd36:	84 c0                	test   %al,%al
8010cd38:	74 68                	je     8010cda2 <get_dir_name+0xa2>
8010cd3a:	89 f1                	mov    %esi,%ecx
8010cd3c:	89 d8                	mov    %ebx,%eax
8010cd3e:	89 da                	mov    %ebx,%edx
8010cd40:	eb 08                	jmp    8010cd4a <get_dir_name+0x4a>
8010cd42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010cd48:	89 f8                	mov    %edi,%eax
8010cd4a:	80 f9 2f             	cmp    $0x2f,%cl
8010cd4d:	0f b6 48 01          	movzbl 0x1(%eax),%ecx
8010cd51:	8d 78 01             	lea    0x1(%eax),%edi
8010cd54:	0f 44 d0             	cmove  %eax,%edx
8010cd57:	84 c9                	test   %cl,%cl
8010cd59:	75 ed                	jne    8010cd48 <get_dir_name+0x48>
8010cd5b:	39 da                	cmp    %ebx,%edx
8010cd5d:	74 43                	je     8010cda2 <get_dir_name+0xa2>
8010cd5f:	39 c2                	cmp    %eax,%edx
8010cd61:	74 3f                	je     8010cda2 <get_dir_name+0xa2>
8010cd63:	39 da                	cmp    %ebx,%edx
8010cd65:	76 2b                	jbe    8010cd92 <get_dir_name+0x92>
8010cd67:	8b 45 0c             	mov    0xc(%ebp),%eax
8010cd6a:	89 f1                	mov    %esi,%ecx
8010cd6c:	eb 05                	jmp    8010cd73 <get_dir_name+0x73>
8010cd6e:	66 90                	xchg   %ax,%ax
8010cd70:	0f b6 0b             	movzbl (%ebx),%ecx
8010cd73:	83 c3 01             	add    $0x1,%ebx
8010cd76:	83 c0 01             	add    $0x1,%eax
8010cd79:	88 48 ff             	mov    %cl,-0x1(%eax)
8010cd7c:	39 da                	cmp    %ebx,%edx
8010cd7e:	75 f0                	jne    8010cd70 <get_dir_name+0x70>
8010cd80:	8d 45 e8             	lea    -0x18(%ebp),%eax
8010cd83:	29 c2                	sub    %eax,%edx
8010cd85:	8b 45 0c             	mov    0xc(%ebp),%eax
8010cd88:	8d 84 10 00 02 00 00 	lea    0x200(%eax,%edx,1),%eax
8010cd8f:	89 45 0c             	mov    %eax,0xc(%ebp)
8010cd92:	8b 45 0c             	mov    0xc(%ebp),%eax
8010cd95:	c6 00 00             	movb   $0x0,(%eax)
8010cd98:	31 c0                	xor    %eax,%eax
8010cd9a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010cd9d:	5b                   	pop    %ebx
8010cd9e:	5e                   	pop    %esi
8010cd9f:	5f                   	pop    %edi
8010cda0:	5d                   	pop    %ebp
8010cda1:	c3                   	ret    
8010cda2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010cda7:	eb f1                	jmp    8010cd9a <get_dir_name+0x9a>
8010cda9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010cdb0 <unsafe_cg_stat>:
8010cdb0:	55                   	push   %ebp
8010cdb1:	89 e5                	mov    %esp,%ebp
8010cdb3:	57                   	push   %edi
8010cdb4:	56                   	push   %esi
8010cdb5:	53                   	push   %ebx
8010cdb6:	83 ec 0c             	sub    $0xc,%esp
8010cdb9:	8b 45 08             	mov    0x8(%ebp),%eax
8010cdbc:	8b 40 10             	mov    0x10(%eax),%eax
8010cdbf:	80 38 00             	cmpb   $0x0,(%eax)
8010cdc2:	0f 84 75 01 00 00    	je     8010cf3d <unsafe_cg_stat+0x18d>
8010cdc8:	8b 45 08             	mov    0x8(%ebp),%eax
8010cdcb:	80 78 14 00          	cmpb   $0x0,0x14(%eax)
8010cdcf:	8b 45 0c             	mov    0xc(%ebp),%eax
8010cdd2:	74 76                	je     8010ce4a <unsafe_cg_stat+0x9a>
8010cdd4:	ba 04 00 00 00       	mov    $0x4,%edx
8010cdd9:	66 89 10             	mov    %dx,(%eax)
8010cddc:	8b 45 08             	mov    0x8(%ebp),%eax
8010cddf:	83 c0 14             	add    $0x14,%eax
8010cde2:	e8 09 d7 ff ff       	call   8010a4f0 <get_file_name_constant>
8010cde7:	83 f8 01             	cmp    $0x1,%eax
8010cdea:	0f 84 89 00 00 00    	je     8010ce79 <unsafe_cg_stat+0xc9>
8010cdf0:	83 f8 0d             	cmp    $0xd,%eax
8010cdf3:	0f 84 da 00 00 00    	je     8010ced3 <unsafe_cg_stat+0x123>
8010cdf9:	83 f8 02             	cmp    $0x2,%eax
8010cdfc:	0f 84 f7 00 00 00    	je     8010cef9 <unsafe_cg_stat+0x149>
8010ce02:	83 f8 0e             	cmp    $0xe,%eax
8010ce05:	0f 84 75 01 00 00    	je     8010cf80 <unsafe_cg_stat+0x1d0>
8010ce0b:	83 f8 03             	cmp    $0x3,%eax
8010ce0e:	0f 84 0b 01 00 00    	je     8010cf1f <unsafe_cg_stat+0x16f>
8010ce14:	83 f8 04             	cmp    $0x4,%eax
8010ce17:	0f 84 19 02 00 00    	je     8010d036 <unsafe_cg_stat+0x286>
8010ce1d:	83 f8 0f             	cmp    $0xf,%eax
8010ce20:	0f 84 8f 01 00 00    	je     8010cfb5 <unsafe_cg_stat+0x205>
8010ce26:	83 f8 11             	cmp    $0x11,%eax
8010ce29:	0f 84 68 01 00 00    	je     8010cf97 <unsafe_cg_stat+0x1e7>
8010ce2f:	31 db                	xor    %ebx,%ebx
8010ce31:	83 f8 12             	cmp    $0x12,%eax
8010ce34:	0f 84 0d 01 00 00    	je     8010cf47 <unsafe_cg_stat+0x197>
8010ce3a:	8b 45 0c             	mov    0xc(%ebp),%eax
8010ce3d:	89 58 10             	mov    %ebx,0x10(%eax)
8010ce40:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010ce43:	31 c0                	xor    %eax,%eax
8010ce45:	5b                   	pop    %ebx
8010ce46:	5e                   	pop    %esi
8010ce47:	5f                   	pop    %edi
8010ce48:	5d                   	pop    %ebp
8010ce49:	c3                   	ret    
8010ce4a:	b9 05 00 00 00       	mov    $0x5,%ecx
8010ce4f:	83 ec 0c             	sub    $0xc,%esp
8010ce52:	66 89 08             	mov    %cx,(%eax)
8010ce55:	8b 45 08             	mov    0x8(%ebp),%eax
8010ce58:	ff 70 10             	pushl  0x10(%eax)
8010ce5b:	e8 a0 0b 00 00       	call   8010da00 <cgorup_num_of_immidiate_children>
8010ce60:	8b 7d 0c             	mov    0xc(%ebp),%edi
8010ce63:	83 c0 07             	add    $0x7,%eax
8010ce66:	83 c4 10             	add    $0x10,%esp
8010ce69:	c1 e0 06             	shl    $0x6,%eax
8010ce6c:	89 47 10             	mov    %eax,0x10(%edi)
8010ce6f:	31 c0                	xor    %eax,%eax
8010ce71:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010ce74:	5b                   	pop    %ebx
8010ce75:	5e                   	pop    %esi
8010ce76:	5f                   	pop    %edi
8010ce77:	5d                   	pop    %ebp
8010ce78:	c3                   	ret    
8010ce79:	bf 01 00 00 00       	mov    $0x1,%edi
8010ce7e:	31 db                	xor    %ebx,%ebx
8010ce80:	be 67 66 66 66       	mov    $0x66666667,%esi
8010ce85:	8d 76 00             	lea    0x0(%esi),%esi
8010ce88:	8b 45 08             	mov    0x8(%ebp),%eax
8010ce8b:	8b 40 10             	mov    0x10(%eax),%eax
8010ce8e:	8b 84 b8 00 02 00 00 	mov    0x200(%eax,%edi,4),%eax
8010ce95:	85 c0                	test   %eax,%eax
8010ce97:	74 2d                	je     8010cec6 <unsafe_cg_stat+0x116>
8010ce99:	83 ec 0c             	sub    $0xc,%esp
8010ce9c:	50                   	push   %eax
8010ce9d:	e8 7e 85 ff ff       	call   80105420 <proc_pid>
8010cea2:	83 c4 10             	add    $0x10,%esp
8010cea5:	85 c0                	test   %eax,%eax
8010cea7:	89 c1                	mov    %eax,%ecx
8010cea9:	74 18                	je     8010cec3 <unsafe_cg_stat+0x113>
8010ceab:	90                   	nop
8010ceac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010ceb0:	89 c8                	mov    %ecx,%eax
8010ceb2:	c1 f9 1f             	sar    $0x1f,%ecx
8010ceb5:	83 c3 01             	add    $0x1,%ebx
8010ceb8:	f7 ee                	imul   %esi
8010ceba:	c1 fa 02             	sar    $0x2,%edx
8010cebd:	29 ca                	sub    %ecx,%edx
8010cebf:	89 d1                	mov    %edx,%ecx
8010cec1:	75 ed                	jne    8010ceb0 <unsafe_cg_stat+0x100>
8010cec3:	83 c3 01             	add    $0x1,%ebx
8010cec6:	83 c7 01             	add    $0x1,%edi
8010cec9:	83 ff 41             	cmp    $0x41,%edi
8010cecc:	75 ba                	jne    8010ce88 <unsafe_cg_stat+0xd8>
8010cece:	e9 67 ff ff ff       	jmp    8010ce3a <unsafe_cg_stat+0x8a>
8010ced3:	8b 45 08             	mov    0x8(%ebp),%eax
8010ced6:	8b 50 10             	mov    0x10(%eax),%edx
8010ced9:	80 ba 0c 03 00 00 01 	cmpb   $0x1,0x30c(%edx)
8010cee0:	19 db                	sbb    %ebx,%ebx
8010cee2:	f7 d3                	not    %ebx
8010cee4:	83 e3 03             	and    $0x3,%ebx
8010cee7:	80 ba 0e 03 00 00 00 	cmpb   $0x0,0x30e(%edx)
8010ceee:	8d 43 03             	lea    0x3(%ebx),%eax
8010cef1:	0f 45 d8             	cmovne %eax,%ebx
8010cef4:	e9 41 ff ff ff       	jmp    8010ce3a <unsafe_cg_stat+0x8a>
8010cef9:	8b 45 08             	mov    0x8(%ebp),%eax
8010cefc:	8b 50 10             	mov    0x10(%eax),%edx
8010ceff:	80 ba 0d 03 00 00 01 	cmpb   $0x1,0x30d(%edx)
8010cf06:	19 db                	sbb    %ebx,%ebx
8010cf08:	f7 d3                	not    %ebx
8010cf0a:	83 e3 03             	and    $0x3,%ebx
8010cf0d:	80 ba 0f 03 00 00 00 	cmpb   $0x0,0x30f(%edx)
8010cf14:	8d 43 03             	lea    0x3(%ebx),%eax
8010cf17:	0f 45 d8             	cmovne %eax,%ebx
8010cf1a:	e9 1b ff ff ff       	jmp    8010ce3a <unsafe_cg_stat+0x8a>
8010cf1f:	8b 45 08             	mov    0x8(%ebp),%eax
8010cf22:	83 ec 0c             	sub    $0xc,%esp
8010cf25:	8b 40 10             	mov    0x10(%eax),%eax
8010cf28:	ff b0 18 03 00 00    	pushl  0x318(%eax)
8010cf2e:	e8 7d d5 ff ff       	call   8010a4b0 <intlen>
8010cf33:	83 c4 10             	add    $0x10,%esp
8010cf36:	89 c3                	mov    %eax,%ebx
8010cf38:	e9 fd fe ff ff       	jmp    8010ce3a <unsafe_cg_stat+0x8a>
8010cf3d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010cf42:	e9 2a ff ff ff       	jmp    8010ce71 <unsafe_cg_stat+0xc1>
8010cf47:	83 ec 0c             	sub    $0xc,%esp
8010cf4a:	68 f5 fa 10 80       	push   $0x8010faf5
8010cf4f:	e8 7c 9b ff ff       	call   80106ad0 <strlen>
8010cf54:	89 c3                	mov    %eax,%ebx
8010cf56:	58                   	pop    %eax
8010cf57:	8b 45 08             	mov    0x8(%ebp),%eax
8010cf5a:	8b 40 10             	mov    0x10(%eax),%eax
8010cf5d:	ff b0 38 03 00 00    	pushl  0x338(%eax)
8010cf63:	e8 48 d5 ff ff       	call   8010a4b0 <intlen>
8010cf68:	01 c3                	add    %eax,%ebx
8010cf6a:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010cf71:	e8 5a 9b ff ff       	call   80106ad0 <strlen>
8010cf76:	83 c4 10             	add    $0x10,%esp
8010cf79:	01 c3                	add    %eax,%ebx
8010cf7b:	e9 ba fe ff ff       	jmp    8010ce3a <unsafe_cg_stat+0x8a>
8010cf80:	83 ec 0c             	sub    $0xc,%esp
8010cf83:	68 d8 fa 10 80       	push   $0x8010fad8
8010cf88:	e8 43 9b ff ff       	call   80106ad0 <strlen>
8010cf8d:	83 c4 10             	add    $0x10,%esp
8010cf90:	89 c3                	mov    %eax,%ebx
8010cf92:	e9 a3 fe ff ff       	jmp    8010ce3a <unsafe_cg_stat+0x8a>
8010cf97:	83 ec 0c             	sub    $0xc,%esp
8010cf9a:	68 5c fa 10 80       	push   $0x8010fa5c
8010cf9f:	e8 2c 9b ff ff       	call   80106ad0 <strlen>
8010cfa4:	89 c3                	mov    %eax,%ebx
8010cfa6:	8b 45 08             	mov    0x8(%ebp),%eax
8010cfa9:	5a                   	pop    %edx
8010cfaa:	8b 40 10             	mov    0x10(%eax),%eax
8010cfad:	ff b0 04 03 00 00    	pushl  0x304(%eax)
8010cfb3:	eb ae                	jmp    8010cf63 <unsafe_cg_stat+0x1b3>
8010cfb5:	83 ec 0c             	sub    $0xc,%esp
8010cfb8:	68 bc f9 10 80       	push   $0x8010f9bc
8010cfbd:	e8 0e 9b ff ff       	call   80106ad0 <strlen>
8010cfc2:	89 c3                	mov    %eax,%ebx
8010cfc4:	8b 45 08             	mov    0x8(%ebp),%eax
8010cfc7:	59                   	pop    %ecx
8010cfc8:	8b 40 10             	mov    0x10(%eax),%eax
8010cfcb:	ff b0 24 03 00 00    	pushl  0x324(%eax)
8010cfd1:	e8 da d4 ff ff       	call   8010a4b0 <intlen>
8010cfd6:	01 c3                	add    %eax,%ebx
8010cfd8:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010cfdf:	e8 ec 9a ff ff       	call   80106ad0 <strlen>
8010cfe4:	01 c3                	add    %eax,%ebx
8010cfe6:	c7 04 24 ce f9 10 80 	movl   $0x8010f9ce,(%esp)
8010cfed:	e8 de 9a ff ff       	call   80106ad0 <strlen>
8010cff2:	01 c3                	add    %eax,%ebx
8010cff4:	8b 45 08             	mov    0x8(%ebp),%eax
8010cff7:	5e                   	pop    %esi
8010cff8:	8b 40 10             	mov    0x10(%eax),%eax
8010cffb:	ff b0 28 03 00 00    	pushl  0x328(%eax)
8010d001:	e8 aa d4 ff ff       	call   8010a4b0 <intlen>
8010d006:	01 c3                	add    %eax,%ebx
8010d008:	c7 04 24 33 f8 10 80 	movl   $0x8010f833,(%esp)
8010d00f:	e8 bc 9a ff ff       	call   80106ad0 <strlen>
8010d014:	01 c3                	add    %eax,%ebx
8010d016:	c7 04 24 e6 fa 10 80 	movl   $0x8010fae6,(%esp)
8010d01d:	e8 ae 9a ff ff       	call   80106ad0 <strlen>
8010d022:	01 c3                	add    %eax,%ebx
8010d024:	8b 45 08             	mov    0x8(%ebp),%eax
8010d027:	5f                   	pop    %edi
8010d028:	8b 40 10             	mov    0x10(%eax),%eax
8010d02b:	ff b0 04 03 00 00    	pushl  0x304(%eax)
8010d031:	e9 2d ff ff ff       	jmp    8010cf63 <unsafe_cg_stat+0x1b3>
8010d036:	8b 45 08             	mov    0x8(%ebp),%eax
8010d039:	83 ec 0c             	sub    $0xc,%esp
8010d03c:	8b 40 10             	mov    0x10(%eax),%eax
8010d03f:	ff b0 1c 03 00 00    	pushl  0x31c(%eax)
8010d045:	e8 66 d4 ff ff       	call   8010a4b0 <intlen>
8010d04a:	83 c4 10             	add    $0x10,%esp
8010d04d:	89 c3                	mov    %eax,%ebx
8010d04f:	e9 e6 fd ff ff       	jmp    8010ce3a <unsafe_cg_stat+0x8a>
8010d054:	66 90                	xchg   %ax,%ax
8010d056:	66 90                	xchg   %ax,%ax
8010d058:	66 90                	xchg   %ax,%ax
8010d05a:	66 90                	xchg   %ax,%ax
8010d05c:	66 90                	xchg   %ax,%ax
8010d05e:	66 90                	xchg   %ax,%ax

8010d060 <unsafe_cgroup_erase.part.0>:
8010d060:	85 c0                	test   %eax,%eax
8010d062:	74 4b                	je     8010d0af <unsafe_cgroup_erase.part.0+0x4f>
8010d064:	55                   	push   %ebp
8010d065:	89 e5                	mov    %esp,%ebp
8010d067:	53                   	push   %ebx
8010d068:	90                   	nop
8010d069:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010d070:	8b 98 04 03 00 00    	mov    0x304(%eax),%ebx
8010d076:	83 eb 01             	sub    $0x1,%ebx
8010d079:	89 98 04 03 00 00    	mov    %ebx,0x304(%eax)
8010d07f:	8b 0a                	mov    (%edx),%ecx
8010d081:	29 88 38 03 00 00    	sub    %ecx,0x338(%eax)
8010d087:	8b 0a                	mov    (%edx),%ecx
8010d089:	81 c1 ff 0f 00 00    	add    $0xfff,%ecx
8010d08f:	c1 e9 0c             	shr    $0xc,%ecx
8010d092:	29 88 3c 03 00 00    	sub    %ecx,0x33c(%eax)
8010d098:	85 db                	test   %ebx,%ebx
8010d09a:	75 07                	jne    8010d0a3 <unsafe_cgroup_erase.part.0+0x43>
8010d09c:	c6 80 14 03 00 00 00 	movb   $0x0,0x314(%eax)
8010d0a3:	8b 80 08 03 00 00    	mov    0x308(%eax),%eax
8010d0a9:	85 c0                	test   %eax,%eax
8010d0ab:	75 c3                	jne    8010d070 <unsafe_cgroup_erase.part.0+0x10>
8010d0ad:	5b                   	pop    %ebx
8010d0ae:	5d                   	pop    %ebp
8010d0af:	f3 c3                	repz ret 
8010d0b1:	eb 0d                	jmp    8010d0c0 <cginit>
8010d0b3:	90                   	nop
8010d0b4:	90                   	nop
8010d0b5:	90                   	nop
8010d0b6:	90                   	nop
8010d0b7:	90                   	nop
8010d0b8:	90                   	nop
8010d0b9:	90                   	nop
8010d0ba:	90                   	nop
8010d0bb:	90                   	nop
8010d0bc:	90                   	nop
8010d0bd:	90                   	nop
8010d0be:	90                   	nop
8010d0bf:	90                   	nop

8010d0c0 <cginit>:
8010d0c0:	55                   	push   %ebp
8010d0c1:	89 e5                	mov    %esp,%ebp
8010d0c3:	83 ec 10             	sub    $0x10,%esp
8010d0c6:	68 98 fb 10 80       	push   $0x8010fb98
8010d0cb:	68 60 a5 13 80       	push   $0x8013a560
8010d0d0:	e8 fb 94 ff ff       	call   801065d0 <initlock>
8010d0d5:	83 c4 10             	add    $0x10,%esp
8010d0d8:	c9                   	leave  
8010d0d9:	c3                   	ret    
8010d0da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

8010d0e0 <cgroup_lock>:
8010d0e0:	55                   	push   %ebp
8010d0e1:	89 e5                	mov    %esp,%ebp
8010d0e3:	83 ec 14             	sub    $0x14,%esp
8010d0e6:	68 60 a5 13 80       	push   $0x8013a560
8010d0eb:	e8 e0 95 ff ff       	call   801066d0 <acquire>
8010d0f0:	83 c4 10             	add    $0x10,%esp
8010d0f3:	c9                   	leave  
8010d0f4:	c3                   	ret    
8010d0f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010d0f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010d100 <cgroup_unlock>:
8010d100:	55                   	push   %ebp
8010d101:	89 e5                	mov    %esp,%ebp
8010d103:	83 ec 14             	sub    $0x14,%esp
8010d106:	68 60 a5 13 80       	push   $0x8013a560
8010d10b:	e8 e0 96 ff ff       	call   801067f0 <release>
8010d110:	83 c4 10             	add    $0x10,%esp
8010d113:	c9                   	leave  
8010d114:	c3                   	ret    
8010d115:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010d119:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010d120 <format_path>:
8010d120:	55                   	push   %ebp
8010d121:	89 e5                	mov    %esp,%ebp
8010d123:	57                   	push   %edi
8010d124:	56                   	push   %esi
8010d125:	53                   	push   %ebx
8010d126:	83 ec 1c             	sub    $0x1c,%esp
8010d129:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8010d12c:	8b 7d 08             	mov    0x8(%ebp),%edi
8010d12f:	e8 3c 83 ff ff       	call   80105470 <myproc>
8010d134:	80 3b 2f             	cmpb   $0x2f,(%ebx)
8010d137:	89 fe                	mov    %edi,%esi
8010d139:	74 35                	je     8010d170 <format_path+0x50>
8010d13b:	8d b0 ac 00 00 00    	lea    0xac(%eax),%esi
8010d141:	83 ec 0c             	sub    $0xc,%esp
8010d144:	56                   	push   %esi
8010d145:	e8 86 99 ff ff       	call   80106ad0 <strlen>
8010d14a:	83 c4 0c             	add    $0xc,%esp
8010d14d:	50                   	push   %eax
8010d14e:	56                   	push   %esi
8010d14f:	57                   	push   %edi
8010d150:	e8 db 98 ff ff       	call   80106a30 <strncpy>
8010d155:	89 34 24             	mov    %esi,(%esp)
8010d158:	e8 73 99 ff ff       	call   80106ad0 <strlen>
8010d15d:	01 f8                	add    %edi,%eax
8010d15f:	83 c4 10             	add    $0x10,%esp
8010d162:	80 78 ff 2f          	cmpb   $0x2f,-0x1(%eax)
8010d166:	89 c6                	mov    %eax,%esi
8010d168:	74 06                	je     8010d170 <format_path+0x50>
8010d16a:	83 c6 01             	add    $0x1,%esi
8010d16d:	c6 00 2f             	movb   $0x2f,(%eax)
8010d170:	83 ec 0c             	sub    $0xc,%esp
8010d173:	53                   	push   %ebx
8010d174:	e8 57 99 ff ff       	call   80106ad0 <strlen>
8010d179:	8d 44 03 ff          	lea    -0x1(%ebx,%eax,1),%eax
8010d17d:	83 c4 10             	add    $0x10,%esp
8010d180:	39 c3                	cmp    %eax,%ebx
8010d182:	72 17                	jb     8010d19b <format_path+0x7b>
8010d184:	e9 98 00 00 00       	jmp    8010d221 <format_path+0x101>
8010d189:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010d190:	83 e8 01             	sub    $0x1,%eax
8010d193:	39 c3                	cmp    %eax,%ebx
8010d195:	0f 84 c5 00 00 00    	je     8010d260 <format_path+0x140>
8010d19b:	80 38 2f             	cmpb   $0x2f,(%eax)
8010d19e:	74 f0                	je     8010d190 <format_path+0x70>
8010d1a0:	8d 4f ff             	lea    -0x1(%edi),%ecx
8010d1a3:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
8010d1a6:	eb 1d                	jmp    8010d1c5 <format_path+0xa5>
8010d1a8:	90                   	nop
8010d1a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010d1b0:	80 7e ff 2f          	cmpb   $0x2f,-0x1(%esi)
8010d1b4:	0f b6 13             	movzbl (%ebx),%edx
8010d1b7:	74 17                	je     8010d1d0 <format_path+0xb0>
8010d1b9:	88 16                	mov    %dl,(%esi)
8010d1bb:	83 c3 01             	add    $0x1,%ebx
8010d1be:	83 c6 01             	add    $0x1,%esi
8010d1c1:	39 c3                	cmp    %eax,%ebx
8010d1c3:	77 6b                	ja     8010d230 <format_path+0x110>
8010d1c5:	39 f7                	cmp    %esi,%edi
8010d1c7:	72 e7                	jb     8010d1b0 <format_path+0x90>
8010d1c9:	0f b6 13             	movzbl (%ebx),%edx
8010d1cc:	eb eb                	jmp    8010d1b9 <format_path+0x99>
8010d1ce:	66 90                	xchg   %ax,%ax
8010d1d0:	80 fa 2e             	cmp    $0x2e,%dl
8010d1d3:	75 e4                	jne    8010d1b9 <format_path+0x99>
8010d1d5:	0f b6 4b 01          	movzbl 0x1(%ebx),%ecx
8010d1d9:	84 c9                	test   %cl,%cl
8010d1db:	74 7b                	je     8010d258 <format_path+0x138>
8010d1dd:	80 f9 2f             	cmp    $0x2f,%cl
8010d1e0:	74 76                	je     8010d258 <format_path+0x138>
8010d1e2:	80 f9 2e             	cmp    $0x2e,%cl
8010d1e5:	75 d2                	jne    8010d1b9 <format_path+0x99>
8010d1e7:	0f b6 4b 02          	movzbl 0x2(%ebx),%ecx
8010d1eb:	84 c9                	test   %cl,%cl
8010d1ed:	74 05                	je     8010d1f4 <format_path+0xd4>
8010d1ef:	80 f9 2f             	cmp    $0x2f,%cl
8010d1f2:	75 c5                	jne    8010d1b9 <format_path+0x99>
8010d1f4:	8d 56 fe             	lea    -0x2(%esi),%edx
8010d1f7:	39 d7                	cmp    %edx,%edi
8010d1f9:	77 21                	ja     8010d21c <format_path+0xfc>
8010d1fb:	80 7e fe 2f          	cmpb   $0x2f,-0x2(%esi)
8010d1ff:	74 66                	je     8010d267 <format_path+0x147>
8010d201:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
8010d204:	eb 0f                	jmp    8010d215 <format_path+0xf5>
8010d206:	8d 76 00             	lea    0x0(%esi),%esi
8010d209:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010d210:	80 3a 2f             	cmpb   $0x2f,(%edx)
8010d213:	74 52                	je     8010d267 <format_path+0x147>
8010d215:	83 ea 01             	sub    $0x1,%edx
8010d218:	39 ca                	cmp    %ecx,%edx
8010d21a:	75 f4                	jne    8010d210 <format_path+0xf0>
8010d21c:	c6 07 00             	movb   $0x0,(%edi)
8010d21f:	eb 19                	jmp    8010d23a <format_path+0x11a>
8010d221:	0f 86 79 ff ff ff    	jbe    8010d1a0 <format_path+0x80>
8010d227:	89 f6                	mov    %esi,%esi
8010d229:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010d230:	8d 46 ff             	lea    -0x1(%esi),%eax
8010d233:	39 c7                	cmp    %eax,%edi
8010d235:	72 11                	jb     8010d248 <format_path+0x128>
8010d237:	c6 06 00             	movb   $0x0,(%esi)
8010d23a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010d23d:	5b                   	pop    %ebx
8010d23e:	5e                   	pop    %esi
8010d23f:	5f                   	pop    %edi
8010d240:	5d                   	pop    %ebp
8010d241:	c3                   	ret    
8010d242:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010d248:	80 7e ff 2f          	cmpb   $0x2f,-0x1(%esi)
8010d24c:	75 e9                	jne    8010d237 <format_path+0x117>
8010d24e:	c6 46 ff 00          	movb   $0x0,-0x1(%esi)
8010d252:	eb e3                	jmp    8010d237 <format_path+0x117>
8010d254:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010d258:	83 c3 02             	add    $0x2,%ebx
8010d25b:	e9 61 ff ff ff       	jmp    8010d1c1 <format_path+0xa1>
8010d260:	89 d8                	mov    %ebx,%eax
8010d262:	e9 39 ff ff ff       	jmp    8010d1a0 <format_path+0x80>
8010d267:	8d 72 01             	lea    0x1(%edx),%esi
8010d26a:	83 c3 03             	add    $0x3,%ebx
8010d26d:	e9 4f ff ff ff       	jmp    8010d1c1 <format_path+0xa1>
8010d272:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010d279:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010d280 <unsafe_get_cgroup_by_path>:
8010d280:	55                   	push   %ebp
8010d281:	89 e5                	mov    %esp,%ebp
8010d283:	56                   	push   %esi
8010d284:	53                   	push   %ebx
8010d285:	8d b5 f8 fd ff ff    	lea    -0x208(%ebp),%esi
8010d28b:	bb 94 a5 13 80       	mov    $0x8013a594,%ebx
8010d290:	81 ec 08 02 00 00    	sub    $0x208,%esp
8010d296:	50                   	push   %eax
8010d297:	56                   	push   %esi
8010d298:	e8 83 fe ff ff       	call   8010d120 <format_path>
8010d29d:	83 c4 10             	add    $0x10,%esp
8010d2a0:	80 bd f8 fd ff ff 00 	cmpb   $0x0,-0x208(%ebp)
8010d2a7:	75 15                	jne    8010d2be <unsafe_get_cgroup_by_path+0x3e>
8010d2a9:	eb 35                	jmp    8010d2e0 <unsafe_get_cgroup_by_path+0x60>
8010d2ab:	90                   	nop
8010d2ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010d2b0:	81 c3 88 03 00 00    	add    $0x388,%ebx
8010d2b6:	81 fb 94 87 14 80    	cmp    $0x80148794,%ebx
8010d2bc:	74 22                	je     8010d2e0 <unsafe_get_cgroup_by_path+0x60>
8010d2be:	83 ec 08             	sub    $0x8,%esp
8010d2c1:	56                   	push   %esi
8010d2c2:	53                   	push   %ebx
8010d2c3:	e8 18 97 ff ff       	call   801069e0 <strcmp>
8010d2c8:	83 c4 10             	add    $0x10,%esp
8010d2cb:	85 c0                	test   %eax,%eax
8010d2cd:	75 e1                	jne    8010d2b0 <unsafe_get_cgroup_by_path+0x30>
8010d2cf:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010d2d2:	89 d8                	mov    %ebx,%eax
8010d2d4:	5b                   	pop    %ebx
8010d2d5:	5e                   	pop    %esi
8010d2d6:	5d                   	pop    %ebp
8010d2d7:	c3                   	ret    
8010d2d8:	90                   	nop
8010d2d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010d2e0:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010d2e3:	31 c0                	xor    %eax,%eax
8010d2e5:	5b                   	pop    %ebx
8010d2e6:	5e                   	pop    %esi
8010d2e7:	5d                   	pop    %ebp
8010d2e8:	c3                   	ret    
8010d2e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010d2f0 <unsafe_set_cgroup_dir_path>:
8010d2f0:	55                   	push   %ebp
8010d2f1:	89 e5                	mov    %esp,%ebp
8010d2f3:	56                   	push   %esi
8010d2f4:	53                   	push   %ebx
8010d2f5:	8d 9d f8 fd ff ff    	lea    -0x208(%ebp),%ebx
8010d2fb:	89 c6                	mov    %eax,%esi
8010d2fd:	81 ec 08 02 00 00    	sub    $0x208,%esp
8010d303:	52                   	push   %edx
8010d304:	53                   	push   %ebx
8010d305:	e8 16 fe ff ff       	call   8010d120 <format_path>
8010d30a:	0f b6 95 f8 fd ff ff 	movzbl -0x208(%ebp),%edx
8010d311:	83 c4 10             	add    $0x10,%esp
8010d314:	84 d2                	test   %dl,%dl
8010d316:	74 26                	je     8010d33e <unsafe_set_cgroup_dir_path+0x4e>
8010d318:	8d 4e 01             	lea    0x1(%esi),%ecx
8010d31b:	88 16                	mov    %dl,(%esi)
8010d31d:	b8 01 00 00 00       	mov    $0x1,%eax
8010d322:	eb 0e                	jmp    8010d332 <unsafe_set_cgroup_dir_path+0x42>
8010d324:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010d328:	83 c0 01             	add    $0x1,%eax
8010d32b:	3d 00 02 00 00       	cmp    $0x200,%eax
8010d330:	74 0c                	je     8010d33e <unsafe_set_cgroup_dir_path+0x4e>
8010d332:	0f b6 14 03          	movzbl (%ebx,%eax,1),%edx
8010d336:	84 d2                	test   %dl,%dl
8010d338:	88 54 01 ff          	mov    %dl,-0x1(%ecx,%eax,1)
8010d33c:	75 ea                	jne    8010d328 <unsafe_set_cgroup_dir_path+0x38>
8010d33e:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010d341:	5b                   	pop    %ebx
8010d342:	5e                   	pop    %esi
8010d343:	5d                   	pop    %ebp
8010d344:	c3                   	ret    
8010d345:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010d349:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010d350 <cgroup_root>:
8010d350:	55                   	push   %ebp
8010d351:	b8 94 a5 13 80       	mov    $0x8013a594,%eax
8010d356:	89 e5                	mov    %esp,%ebp
8010d358:	5d                   	pop    %ebp
8010d359:	c3                   	ret    
8010d35a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

8010d360 <protect_memory>:
8010d360:	55                   	push   %ebp
8010d361:	89 e5                	mov    %esp,%ebp
8010d363:	57                   	push   %edi
8010d364:	56                   	push   %esi
8010d365:	53                   	push   %ebx
8010d366:	31 ff                	xor    %edi,%edi
8010d368:	83 ec 1c             	sub    $0x1c,%esp
8010d36b:	8b 45 10             	mov    0x10(%ebp),%eax
8010d36e:	8b 75 0c             	mov    0xc(%ebp),%esi
8010d371:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010d374:	05 ff 0f 00 00       	add    $0xfff,%eax
8010d379:	c1 f8 0c             	sar    $0xc,%eax
8010d37c:	81 fe 94 a5 13 80    	cmp    $0x8013a594,%esi
8010d382:	74 33                	je     8010d3b7 <protect_memory+0x57>
8010d384:	80 be 13 03 00 00 00 	cmpb   $0x0,0x313(%esi)
8010d38b:	74 2a                	je     8010d3b7 <protect_memory+0x57>
8010d38d:	8b 8e 58 03 00 00    	mov    0x358(%esi),%ecx
8010d393:	85 c9                	test   %ecx,%ecx
8010d395:	74 20                	je     8010d3b7 <protect_memory+0x57>
8010d397:	8b be 54 03 00 00    	mov    0x354(%esi),%edi
8010d39d:	8d 97 ff 0f 00 00    	lea    0xfff(%edi),%edx
8010d3a3:	89 cf                	mov    %ecx,%edi
8010d3a5:	c1 ea 0c             	shr    $0xc,%edx
8010d3a8:	2b 96 3c 03 00 00    	sub    0x33c(%esi),%edx
8010d3ae:	29 c2                	sub    %eax,%edx
8010d3b0:	29 d7                	sub    %edx,%edi
8010d3b2:	85 d2                	test   %edx,%edx
8010d3b4:	0f 4e f9             	cmovle %ecx,%edi
8010d3b7:	31 d2                	xor    %edx,%edx
8010d3b9:	81 fb 94 a5 13 80    	cmp    $0x8013a594,%ebx
8010d3bf:	74 09                	je     8010d3ca <protect_memory+0x6a>
8010d3c1:	80 bb 13 03 00 00 00 	cmpb   $0x0,0x313(%ebx)
8010d3c8:	75 36                	jne    8010d400 <protect_memory+0xa0>
8010d3ca:	89 d0                	mov    %edx,%eax
8010d3cc:	83 ec 0c             	sub    $0xc,%esp
8010d3cf:	89 55 e4             	mov    %edx,-0x1c(%ebp)
8010d3d2:	29 f8                	sub    %edi,%eax
8010d3d4:	50                   	push   %eax
8010d3d5:	e8 46 5b ff ff       	call   80102f20 <increse_protect_counter>
8010d3da:	83 c4 10             	add    $0x10,%esp
8010d3dd:	85 c0                	test   %eax,%eax
8010d3df:	75 47                	jne    8010d428 <protect_memory+0xc8>
8010d3e1:	29 be 58 03 00 00    	sub    %edi,0x358(%esi)
8010d3e7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8010d3ea:	01 93 58 03 00 00    	add    %edx,0x358(%ebx)
8010d3f0:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010d3f3:	5b                   	pop    %ebx
8010d3f4:	5e                   	pop    %esi
8010d3f5:	5f                   	pop    %edi
8010d3f6:	5d                   	pop    %ebp
8010d3f7:	c3                   	ret    
8010d3f8:	90                   	nop
8010d3f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010d400:	8b 8b 54 03 00 00    	mov    0x354(%ebx),%ecx
8010d406:	81 c1 ff 0f 00 00    	add    $0xfff,%ecx
8010d40c:	c1 e9 0c             	shr    $0xc,%ecx
8010d40f:	01 c8                	add    %ecx,%eax
8010d411:	2b 83 3c 03 00 00    	sub    0x33c(%ebx),%eax
8010d417:	85 c0                	test   %eax,%eax
8010d419:	7e af                	jle    8010d3ca <protect_memory+0x6a>
8010d41b:	2b 83 58 03 00 00    	sub    0x358(%ebx),%eax
8010d421:	89 c2                	mov    %eax,%edx
8010d423:	eb a5                	jmp    8010d3ca <protect_memory+0x6a>
8010d425:	8d 76 00             	lea    0x0(%esi),%esi
8010d428:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010d42b:	b8 01 00 00 00       	mov    $0x1,%eax
8010d430:	5b                   	pop    %ebx
8010d431:	5e                   	pop    %esi
8010d432:	5f                   	pop    %edi
8010d433:	5d                   	pop    %ebp
8010d434:	c3                   	ret    
8010d435:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010d439:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010d440 <unsafe_cgroup_insert>:
8010d440:	55                   	push   %ebp
8010d441:	89 e5                	mov    %esp,%ebp
8010d443:	57                   	push   %edi
8010d444:	56                   	push   %esi
8010d445:	53                   	push   %ebx
8010d446:	83 ec 0c             	sub    $0xc,%esp
8010d449:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010d44c:	8b 75 0c             	mov    0xc(%ebp),%esi
8010d44f:	80 bb 0f 03 00 00 01 	cmpb   $0x1,0x30f(%ebx)
8010d456:	0f 84 0c 01 00 00    	je     8010d568 <unsafe_cgroup_insert+0x128>
8010d45c:	80 bb 13 03 00 00 01 	cmpb   $0x1,0x313(%ebx)
8010d463:	0f 84 1f 01 00 00    	je     8010d588 <unsafe_cgroup_insert+0x148>
8010d469:	31 c0                	xor    %eax,%eax
8010d46b:	31 ff                	xor    %edi,%edi
8010d46d:	31 c9                	xor    %ecx,%ecx
8010d46f:	eb 17                	jmp    8010d488 <unsafe_cgroup_insert+0x48>
8010d471:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010d478:	39 f2                	cmp    %esi,%edx
8010d47a:	0f 84 d8 00 00 00    	je     8010d558 <unsafe_cgroup_insert+0x118>
8010d480:	83 c0 01             	add    $0x1,%eax
8010d483:	83 f8 40             	cmp    $0x40,%eax
8010d486:	74 28                	je     8010d4b0 <unsafe_cgroup_insert+0x70>
8010d488:	85 c9                	test   %ecx,%ecx
8010d48a:	8b 94 83 04 02 00 00 	mov    0x204(%ebx,%eax,4),%edx
8010d491:	75 e5                	jne    8010d478 <unsafe_cgroup_insert+0x38>
8010d493:	85 d2                	test   %edx,%edx
8010d495:	75 e1                	jne    8010d478 <unsafe_cgroup_insert+0x38>
8010d497:	89 c7                	mov    %eax,%edi
8010d499:	83 c0 01             	add    $0x1,%eax
8010d49c:	b9 01 00 00 00       	mov    $0x1,%ecx
8010d4a1:	83 f8 40             	cmp    $0x40,%eax
8010d4a4:	75 e2                	jne    8010d488 <unsafe_cgroup_insert+0x48>
8010d4a6:	8d 76 00             	lea    0x0(%esi),%esi
8010d4a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010d4b0:	85 c9                	test   %ecx,%ecx
8010d4b2:	0f 84 c2 00 00 00    	je     8010d57a <unsafe_cgroup_insert+0x13a>
8010d4b8:	8b 86 ac 02 00 00    	mov    0x2ac(%esi),%eax
8010d4be:	85 c0                	test   %eax,%eax
8010d4c0:	74 53                	je     8010d515 <unsafe_cgroup_insert+0xd5>
8010d4c2:	83 ec 04             	sub    $0x4,%esp
8010d4c5:	ff 36                	pushl  (%esi)
8010d4c7:	53                   	push   %ebx
8010d4c8:	50                   	push   %eax
8010d4c9:	e8 92 fe ff ff       	call   8010d360 <protect_memory>
8010d4ce:	83 c4 10             	add    $0x10,%esp
8010d4d1:	85 c0                	test   %eax,%eax
8010d4d3:	0f 85 a1 00 00 00    	jne    8010d57a <unsafe_cgroup_insert+0x13a>
8010d4d9:	8b 86 ac 02 00 00    	mov    0x2ac(%esi),%eax
8010d4df:	31 d2                	xor    %edx,%edx
8010d4e1:	eb 0d                	jmp    8010d4f0 <unsafe_cgroup_insert+0xb0>
8010d4e3:	90                   	nop
8010d4e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010d4e8:	83 c2 01             	add    $0x1,%edx
8010d4eb:	83 fa 40             	cmp    $0x40,%edx
8010d4ee:	74 25                	je     8010d515 <unsafe_cgroup_insert+0xd5>
8010d4f0:	3b b4 90 04 02 00 00 	cmp    0x204(%eax,%edx,4),%esi
8010d4f7:	75 ef                	jne    8010d4e8 <unsafe_cgroup_insert+0xa8>
8010d4f9:	c7 86 ac 02 00 00 94 	movl   $0x8013a594,0x2ac(%esi)
8010d500:	a5 13 80 
8010d503:	c7 84 90 04 02 00 00 	movl   $0x0,0x204(%eax,%edx,4)
8010d50a:	00 00 00 00 
8010d50e:	89 f2                	mov    %esi,%edx
8010d510:	e8 4b fb ff ff       	call   8010d060 <unsafe_cgroup_erase.part.0>
8010d515:	89 b4 bb 04 02 00 00 	mov    %esi,0x204(%ebx,%edi,4)
8010d51c:	89 9e ac 02 00 00    	mov    %ebx,0x2ac(%esi)
8010d522:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010d528:	83 83 04 03 00 00 01 	addl   $0x1,0x304(%ebx)
8010d52f:	c6 83 14 03 00 00 01 	movb   $0x1,0x314(%ebx)
8010d536:	8b 06                	mov    (%esi),%eax
8010d538:	01 83 38 03 00 00    	add    %eax,0x338(%ebx)
8010d53e:	8b 06                	mov    (%esi),%eax
8010d540:	05 ff 0f 00 00       	add    $0xfff,%eax
8010d545:	c1 e8 0c             	shr    $0xc,%eax
8010d548:	01 83 3c 03 00 00    	add    %eax,0x33c(%ebx)
8010d54e:	8b 9b 08 03 00 00    	mov    0x308(%ebx),%ebx
8010d554:	85 db                	test   %ebx,%ebx
8010d556:	75 d0                	jne    8010d528 <unsafe_cgroup_insert+0xe8>
8010d558:	31 c0                	xor    %eax,%eax
8010d55a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010d55d:	5b                   	pop    %ebx
8010d55e:	5e                   	pop    %esi
8010d55f:	5f                   	pop    %edi
8010d560:	5d                   	pop    %ebp
8010d561:	c3                   	ret    
8010d562:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010d568:	8b 83 2c 03 00 00    	mov    0x32c(%ebx),%eax
8010d56e:	39 83 04 03 00 00    	cmp    %eax,0x304(%ebx)
8010d574:	0f 8c e2 fe ff ff    	jl     8010d45c <unsafe_cgroup_insert+0x1c>
8010d57a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010d57f:	eb d9                	jmp    8010d55a <unsafe_cgroup_insert+0x11a>
8010d581:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010d588:	8b 06                	mov    (%esi),%eax
8010d58a:	03 83 38 03 00 00    	add    0x338(%ebx),%eax
8010d590:	3b 83 50 03 00 00    	cmp    0x350(%ebx),%eax
8010d596:	0f 86 cd fe ff ff    	jbe    8010d469 <unsafe_cgroup_insert+0x29>
8010d59c:	eb dc                	jmp    8010d57a <unsafe_cgroup_insert+0x13a>
8010d59e:	66 90                	xchg   %ax,%ax

8010d5a0 <cgroup_insert>:
8010d5a0:	55                   	push   %ebp
8010d5a1:	89 e5                	mov    %esp,%ebp
8010d5a3:	53                   	push   %ebx
8010d5a4:	83 ec 10             	sub    $0x10,%esp
8010d5a7:	68 60 a5 13 80       	push   $0x8013a560
8010d5ac:	e8 1f 91 ff ff       	call   801066d0 <acquire>
8010d5b1:	58                   	pop    %eax
8010d5b2:	5a                   	pop    %edx
8010d5b3:	ff 75 0c             	pushl  0xc(%ebp)
8010d5b6:	ff 75 08             	pushl  0x8(%ebp)
8010d5b9:	e8 82 fe ff ff       	call   8010d440 <unsafe_cgroup_insert>
8010d5be:	89 c3                	mov    %eax,%ebx
8010d5c0:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010d5c7:	e8 24 92 ff ff       	call   801067f0 <release>
8010d5cc:	89 d8                	mov    %ebx,%eax
8010d5ce:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010d5d1:	c9                   	leave  
8010d5d2:	c3                   	ret    
8010d5d3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010d5d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010d5e0 <calc_dec_dst_protect_pg>:
8010d5e0:	55                   	push   %ebp
8010d5e1:	31 c0                	xor    %eax,%eax
8010d5e3:	89 e5                	mov    %esp,%ebp
8010d5e5:	8b 55 08             	mov    0x8(%ebp),%edx
8010d5e8:	81 fa 94 a5 13 80    	cmp    $0x8013a594,%edx
8010d5ee:	74 35                	je     8010d625 <calc_dec_dst_protect_pg+0x45>
8010d5f0:	80 ba 13 03 00 00 00 	cmpb   $0x0,0x313(%edx)
8010d5f7:	74 2c                	je     8010d625 <calc_dec_dst_protect_pg+0x45>
8010d5f9:	8b 8a 58 03 00 00    	mov    0x358(%edx),%ecx
8010d5ff:	85 c9                	test   %ecx,%ecx
8010d601:	74 22                	je     8010d625 <calc_dec_dst_protect_pg+0x45>
8010d603:	8b 82 54 03 00 00    	mov    0x354(%edx),%eax
8010d609:	05 ff 0f 00 00       	add    $0xfff,%eax
8010d60e:	c1 e8 0c             	shr    $0xc,%eax
8010d611:	2b 82 3c 03 00 00    	sub    0x33c(%edx),%eax
8010d617:	89 c2                	mov    %eax,%edx
8010d619:	2b 55 0c             	sub    0xc(%ebp),%edx
8010d61c:	89 c8                	mov    %ecx,%eax
8010d61e:	29 d0                	sub    %edx,%eax
8010d620:	85 d2                	test   %edx,%edx
8010d622:	0f 4e c1             	cmovle %ecx,%eax
8010d625:	5d                   	pop    %ebp
8010d626:	c3                   	ret    
8010d627:	89 f6                	mov    %esi,%esi
8010d629:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010d630 <calc_inc_src_protect_pg>:
8010d630:	55                   	push   %ebp
8010d631:	31 c0                	xor    %eax,%eax
8010d633:	89 e5                	mov    %esp,%ebp
8010d635:	53                   	push   %ebx
8010d636:	8b 55 08             	mov    0x8(%ebp),%edx
8010d639:	81 fa 94 a5 13 80    	cmp    $0x8013a594,%edx
8010d63f:	74 2f                	je     8010d670 <calc_inc_src_protect_pg+0x40>
8010d641:	80 ba 13 03 00 00 00 	cmpb   $0x0,0x313(%edx)
8010d648:	74 26                	je     8010d670 <calc_inc_src_protect_pg+0x40>
8010d64a:	8b 8a 54 03 00 00    	mov    0x354(%edx),%ecx
8010d650:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8010d653:	81 c1 ff 0f 00 00    	add    $0xfff,%ecx
8010d659:	c1 e9 0c             	shr    $0xc,%ecx
8010d65c:	01 d9                	add    %ebx,%ecx
8010d65e:	2b 8a 3c 03 00 00    	sub    0x33c(%edx),%ecx
8010d664:	85 c9                	test   %ecx,%ecx
8010d666:	7e 08                	jle    8010d670 <calc_inc_src_protect_pg+0x40>
8010d668:	89 c8                	mov    %ecx,%eax
8010d66a:	2b 82 58 03 00 00    	sub    0x358(%edx),%eax
8010d670:	5b                   	pop    %ebx
8010d671:	5d                   	pop    %ebp
8010d672:	c3                   	ret    
8010d673:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010d679:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010d680 <cgroup_erase>:
8010d680:	55                   	push   %ebp
8010d681:	89 e5                	mov    %esp,%ebp
8010d683:	56                   	push   %esi
8010d684:	53                   	push   %ebx
8010d685:	8b 75 0c             	mov    0xc(%ebp),%esi
8010d688:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010d68b:	83 ec 0c             	sub    $0xc,%esp
8010d68e:	68 60 a5 13 80       	push   $0x8013a560
8010d693:	e8 38 90 ff ff       	call   801066d0 <acquire>
8010d698:	83 c4 10             	add    $0x10,%esp
8010d69b:	31 c9                	xor    %ecx,%ecx
8010d69d:	eb 09                	jmp    8010d6a8 <cgroup_erase+0x28>
8010d69f:	90                   	nop
8010d6a0:	83 c1 01             	add    $0x1,%ecx
8010d6a3:	83 f9 40             	cmp    $0x40,%ecx
8010d6a6:	74 27                	je     8010d6cf <cgroup_erase+0x4f>
8010d6a8:	3b b4 8b 04 02 00 00 	cmp    0x204(%ebx,%ecx,4),%esi
8010d6af:	75 ef                	jne    8010d6a0 <cgroup_erase+0x20>
8010d6b1:	c7 86 ac 02 00 00 94 	movl   $0x8013a594,0x2ac(%esi)
8010d6b8:	a5 13 80 
8010d6bb:	89 f2                	mov    %esi,%edx
8010d6bd:	c7 84 8b 04 02 00 00 	movl   $0x0,0x204(%ebx,%ecx,4)
8010d6c4:	00 00 00 00 
8010d6c8:	89 d8                	mov    %ebx,%eax
8010d6ca:	e8 91 f9 ff ff       	call   8010d060 <unsafe_cgroup_erase.part.0>
8010d6cf:	c7 45 08 60 a5 13 80 	movl   $0x8013a560,0x8(%ebp)
8010d6d6:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010d6d9:	5b                   	pop    %ebx
8010d6da:	5e                   	pop    %esi
8010d6db:	5d                   	pop    %ebp
8010d6dc:	e9 0f 91 ff ff       	jmp    801067f0 <release>
8010d6e1:	eb 0d                	jmp    8010d6f0 <unsafe_enable_cpu_controller>
8010d6e3:	90                   	nop
8010d6e4:	90                   	nop
8010d6e5:	90                   	nop
8010d6e6:	90                   	nop
8010d6e7:	90                   	nop
8010d6e8:	90                   	nop
8010d6e9:	90                   	nop
8010d6ea:	90                   	nop
8010d6eb:	90                   	nop
8010d6ec:	90                   	nop
8010d6ed:	90                   	nop
8010d6ee:	90                   	nop
8010d6ef:	90                   	nop

8010d6f0 <unsafe_enable_cpu_controller>:
8010d6f0:	55                   	push   %ebp
8010d6f1:	89 e5                	mov    %esp,%ebp
8010d6f3:	8b 55 08             	mov    0x8(%ebp),%edx
8010d6f6:	85 d2                	test   %edx,%edx
8010d6f8:	74 52                	je     8010d74c <unsafe_enable_cpu_controller+0x5c>
8010d6fa:	80 ba 14 03 00 00 01 	cmpb   $0x1,0x314(%edx)
8010d701:	74 49                	je     8010d74c <unsafe_enable_cpu_controller+0x5c>
8010d703:	80 ba 0d 03 00 00 00 	cmpb   $0x0,0x30d(%edx)
8010d70a:	75 3c                	jne    8010d748 <unsafe_enable_cpu_controller+0x58>
8010d70c:	80 ba 0c 03 00 00 00 	cmpb   $0x0,0x30c(%edx)
8010d713:	74 33                	je     8010d748 <unsafe_enable_cpu_controller+0x58>
8010d715:	c6 82 0d 03 00 00 01 	movb   $0x1,0x30d(%edx)
8010d71c:	b8 24 ac 13 80       	mov    $0x8013ac24,%eax
8010d721:	eb 11                	jmp    8010d734 <unsafe_enable_cpu_controller+0x44>
8010d723:	90                   	nop
8010d724:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010d728:	05 88 03 00 00       	add    $0x388,%eax
8010d72d:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010d732:	74 14                	je     8010d748 <unsafe_enable_cpu_controller+0x58>
8010d734:	3b 10                	cmp    (%eax),%edx
8010d736:	75 f0                	jne    8010d728 <unsafe_enable_cpu_controller+0x38>
8010d738:	c6 40 04 01          	movb   $0x1,0x4(%eax)
8010d73c:	05 88 03 00 00       	add    $0x388,%eax
8010d741:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010d746:	75 ec                	jne    8010d734 <unsafe_enable_cpu_controller+0x44>
8010d748:	31 c0                	xor    %eax,%eax
8010d74a:	5d                   	pop    %ebp
8010d74b:	c3                   	ret    
8010d74c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010d751:	5d                   	pop    %ebp
8010d752:	c3                   	ret    
8010d753:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010d759:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010d760 <enable_cpu_controller>:
8010d760:	55                   	push   %ebp
8010d761:	89 e5                	mov    %esp,%ebp
8010d763:	53                   	push   %ebx
8010d764:	83 ec 10             	sub    $0x10,%esp
8010d767:	68 60 a5 13 80       	push   $0x8013a560
8010d76c:	e8 5f 8f ff ff       	call   801066d0 <acquire>
8010d771:	58                   	pop    %eax
8010d772:	ff 75 08             	pushl  0x8(%ebp)
8010d775:	e8 76 ff ff ff       	call   8010d6f0 <unsafe_enable_cpu_controller>
8010d77a:	89 c3                	mov    %eax,%ebx
8010d77c:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010d783:	e8 68 90 ff ff       	call   801067f0 <release>
8010d788:	89 d8                	mov    %ebx,%eax
8010d78a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010d78d:	c9                   	leave  
8010d78e:	c3                   	ret    
8010d78f:	90                   	nop

8010d790 <unsafe_disable_cpu_controller>:
8010d790:	55                   	push   %ebp
8010d791:	89 e5                	mov    %esp,%ebp
8010d793:	8b 4d 08             	mov    0x8(%ebp),%ecx
8010d796:	85 c9                	test   %ecx,%ecx
8010d798:	74 2e                	je     8010d7c8 <unsafe_disable_cpu_controller+0x38>
8010d79a:	80 b9 0d 03 00 00 00 	cmpb   $0x0,0x30d(%ecx)
8010d7a1:	b8 24 ac 13 80       	mov    $0x8013ac24,%eax
8010d7a6:	89 c2                	mov    %eax,%edx
8010d7a8:	75 14                	jne    8010d7be <unsafe_disable_cpu_controller+0x2e>
8010d7aa:	eb 24                	jmp    8010d7d0 <unsafe_disable_cpu_controller+0x40>
8010d7ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010d7b0:	81 c2 88 03 00 00    	add    $0x388,%edx
8010d7b6:	81 fa 9c 8a 14 80    	cmp    $0x80148a9c,%edx
8010d7bc:	74 1a                	je     8010d7d8 <unsafe_disable_cpu_controller+0x48>
8010d7be:	3b 0a                	cmp    (%edx),%ecx
8010d7c0:	75 ee                	jne    8010d7b0 <unsafe_disable_cpu_controller+0x20>
8010d7c2:	80 7a 05 00          	cmpb   $0x0,0x5(%edx)
8010d7c6:	74 e8                	je     8010d7b0 <unsafe_disable_cpu_controller+0x20>
8010d7c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010d7cd:	5d                   	pop    %ebp
8010d7ce:	c3                   	ret    
8010d7cf:	90                   	nop
8010d7d0:	31 c0                	xor    %eax,%eax
8010d7d2:	5d                   	pop    %ebp
8010d7d3:	c3                   	ret    
8010d7d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010d7d8:	c6 81 0d 03 00 00 00 	movb   $0x0,0x30d(%ecx)
8010d7df:	eb 13                	jmp    8010d7f4 <unsafe_disable_cpu_controller+0x64>
8010d7e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010d7e8:	05 88 03 00 00       	add    $0x388,%eax
8010d7ed:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010d7f2:	74 dc                	je     8010d7d0 <unsafe_disable_cpu_controller+0x40>
8010d7f4:	3b 08                	cmp    (%eax),%ecx
8010d7f6:	75 f0                	jne    8010d7e8 <unsafe_disable_cpu_controller+0x58>
8010d7f8:	c6 40 04 00          	movb   $0x0,0x4(%eax)
8010d7fc:	eb ea                	jmp    8010d7e8 <unsafe_disable_cpu_controller+0x58>
8010d7fe:	66 90                	xchg   %ax,%ax

8010d800 <disable_cpu_controller>:
8010d800:	55                   	push   %ebp
8010d801:	89 e5                	mov    %esp,%ebp
8010d803:	53                   	push   %ebx
8010d804:	83 ec 10             	sub    $0x10,%esp
8010d807:	68 60 a5 13 80       	push   $0x8013a560
8010d80c:	e8 bf 8e ff ff       	call   801066d0 <acquire>
8010d811:	58                   	pop    %eax
8010d812:	ff 75 08             	pushl  0x8(%ebp)
8010d815:	e8 76 ff ff ff       	call   8010d790 <unsafe_disable_cpu_controller>
8010d81a:	89 c3                	mov    %eax,%ebx
8010d81c:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010d823:	e8 c8 8f ff ff       	call   801067f0 <release>
8010d828:	89 d8                	mov    %ebx,%eax
8010d82a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010d82d:	c9                   	leave  
8010d82e:	c3                   	ret    
8010d82f:	90                   	nop

8010d830 <set_cgroup_dir_path>:
8010d830:	55                   	push   %ebp
8010d831:	89 e5                	mov    %esp,%ebp
8010d833:	56                   	push   %esi
8010d834:	53                   	push   %ebx
8010d835:	8b 75 0c             	mov    0xc(%ebp),%esi
8010d838:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010d83b:	83 ec 0c             	sub    $0xc,%esp
8010d83e:	68 60 a5 13 80       	push   $0x8013a560
8010d843:	e8 88 8e ff ff       	call   801066d0 <acquire>
8010d848:	89 f2                	mov    %esi,%edx
8010d84a:	89 d8                	mov    %ebx,%eax
8010d84c:	e8 9f fa ff ff       	call   8010d2f0 <unsafe_set_cgroup_dir_path>
8010d851:	c7 45 08 60 a5 13 80 	movl   $0x8013a560,0x8(%ebp)
8010d858:	83 c4 10             	add    $0x10,%esp
8010d85b:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010d85e:	5b                   	pop    %ebx
8010d85f:	5e                   	pop    %esi
8010d860:	5d                   	pop    %ebp
8010d861:	e9 8a 8f ff ff       	jmp    801067f0 <release>
8010d866:	8d 76 00             	lea    0x0(%esi),%esi
8010d869:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010d870 <get_cgroup_by_path>:
8010d870:	55                   	push   %ebp
8010d871:	89 e5                	mov    %esp,%ebp
8010d873:	53                   	push   %ebx
8010d874:	83 ec 10             	sub    $0x10,%esp
8010d877:	68 60 a5 13 80       	push   $0x8013a560
8010d87c:	e8 4f 8e ff ff       	call   801066d0 <acquire>
8010d881:	8b 45 08             	mov    0x8(%ebp),%eax
8010d884:	e8 f7 f9 ff ff       	call   8010d280 <unsafe_get_cgroup_by_path>
8010d889:	89 c3                	mov    %eax,%ebx
8010d88b:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010d892:	e8 59 8f ff ff       	call   801067f0 <release>
8010d897:	89 d8                	mov    %ebx,%eax
8010d899:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010d89c:	c9                   	leave  
8010d89d:	c3                   	ret    
8010d89e:	66 90                	xchg   %ax,%ax

8010d8a0 <set_max_descendants_value>:
8010d8a0:	55                   	push   %ebp
8010d8a1:	89 e5                	mov    %esp,%ebp
8010d8a3:	8b 55 0c             	mov    0xc(%ebp),%edx
8010d8a6:	8b 45 08             	mov    0x8(%ebp),%eax
8010d8a9:	89 90 18 03 00 00    	mov    %edx,0x318(%eax)
8010d8af:	5d                   	pop    %ebp
8010d8b0:	c3                   	ret    
8010d8b1:	eb 0d                	jmp    8010d8c0 <set_max_depth_value>
8010d8b3:	90                   	nop
8010d8b4:	90                   	nop
8010d8b5:	90                   	nop
8010d8b6:	90                   	nop
8010d8b7:	90                   	nop
8010d8b8:	90                   	nop
8010d8b9:	90                   	nop
8010d8ba:	90                   	nop
8010d8bb:	90                   	nop
8010d8bc:	90                   	nop
8010d8bd:	90                   	nop
8010d8be:	90                   	nop
8010d8bf:	90                   	nop

8010d8c0 <set_max_depth_value>:
8010d8c0:	55                   	push   %ebp
8010d8c1:	89 e5                	mov    %esp,%ebp
8010d8c3:	8b 55 0c             	mov    0xc(%ebp),%edx
8010d8c6:	8b 45 08             	mov    0x8(%ebp),%eax
8010d8c9:	89 90 1c 03 00 00    	mov    %edx,0x31c(%eax)
8010d8cf:	5d                   	pop    %ebp
8010d8d0:	c3                   	ret    
8010d8d1:	eb 0d                	jmp    8010d8e0 <set_nr_descendants>
8010d8d3:	90                   	nop
8010d8d4:	90                   	nop
8010d8d5:	90                   	nop
8010d8d6:	90                   	nop
8010d8d7:	90                   	nop
8010d8d8:	90                   	nop
8010d8d9:	90                   	nop
8010d8da:	90                   	nop
8010d8db:	90                   	nop
8010d8dc:	90                   	nop
8010d8dd:	90                   	nop
8010d8de:	90                   	nop
8010d8df:	90                   	nop

8010d8e0 <set_nr_descendants>:
8010d8e0:	55                   	push   %ebp
8010d8e1:	89 e5                	mov    %esp,%ebp
8010d8e3:	8b 55 0c             	mov    0xc(%ebp),%edx
8010d8e6:	8b 45 08             	mov    0x8(%ebp),%eax
8010d8e9:	89 90 24 03 00 00    	mov    %edx,0x324(%eax)
8010d8ef:	5d                   	pop    %ebp
8010d8f0:	c3                   	ret    
8010d8f1:	eb 0d                	jmp    8010d900 <set_nr_dying_descendants>
8010d8f3:	90                   	nop
8010d8f4:	90                   	nop
8010d8f5:	90                   	nop
8010d8f6:	90                   	nop
8010d8f7:	90                   	nop
8010d8f8:	90                   	nop
8010d8f9:	90                   	nop
8010d8fa:	90                   	nop
8010d8fb:	90                   	nop
8010d8fc:	90                   	nop
8010d8fd:	90                   	nop
8010d8fe:	90                   	nop
8010d8ff:	90                   	nop

8010d900 <set_nr_dying_descendants>:
8010d900:	55                   	push   %ebp
8010d901:	89 e5                	mov    %esp,%ebp
8010d903:	8b 55 0c             	mov    0xc(%ebp),%edx
8010d906:	8b 45 08             	mov    0x8(%ebp),%eax
8010d909:	89 90 28 03 00 00    	mov    %edx,0x328(%eax)
8010d90f:	5d                   	pop    %ebp
8010d910:	c3                   	ret    
8010d911:	eb 0d                	jmp    8010d920 <get_cgroup_names_at_path>
8010d913:	90                   	nop
8010d914:	90                   	nop
8010d915:	90                   	nop
8010d916:	90                   	nop
8010d917:	90                   	nop
8010d918:	90                   	nop
8010d919:	90                   	nop
8010d91a:	90                   	nop
8010d91b:	90                   	nop
8010d91c:	90                   	nop
8010d91d:	90                   	nop
8010d91e:	90                   	nop
8010d91f:	90                   	nop

8010d920 <get_cgroup_names_at_path>:
8010d920:	55                   	push   %ebp
8010d921:	89 e5                	mov    %esp,%ebp
8010d923:	57                   	push   %edi
8010d924:	56                   	push   %esi
8010d925:	53                   	push   %ebx
8010d926:	83 ec 1c             	sub    $0x1c,%esp
8010d929:	8b 45 0c             	mov    0xc(%ebp),%eax
8010d92c:	80 38 00             	cmpb   $0x0,(%eax)
8010d92f:	0f 84 ba 00 00 00    	je     8010d9ef <get_cgroup_names_at_path+0xcf>
8010d935:	bb 1c a9 13 80       	mov    $0x8013a91c,%ebx
8010d93a:	be 01 00 00 00       	mov    $0x1,%esi
8010d93f:	eb 19                	jmp    8010d95a <get_cgroup_names_at_path+0x3a>
8010d941:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010d948:	83 c6 01             	add    $0x1,%esi
8010d94b:	81 c3 88 03 00 00    	add    $0x388,%ebx
8010d951:	83 fe 40             	cmp    $0x40,%esi
8010d954:	0f 84 95 00 00 00    	je     8010d9ef <get_cgroup_names_at_path+0xcf>
8010d95a:	80 3b 00             	cmpb   $0x0,(%ebx)
8010d95d:	74 e9                	je     8010d948 <get_cgroup_names_at_path+0x28>
8010d95f:	83 ec 08             	sub    $0x8,%esp
8010d962:	ff 75 0c             	pushl  0xc(%ebp)
8010d965:	ff b3 08 03 00 00    	pushl  0x308(%ebx)
8010d96b:	e8 70 90 ff ff       	call   801069e0 <strcmp>
8010d970:	83 c4 10             	add    $0x10,%esp
8010d973:	85 c0                	test   %eax,%eax
8010d975:	75 d1                	jne    8010d948 <get_cgroup_names_at_path+0x28>
8010d977:	83 ec 0c             	sub    $0xc,%esp
8010d97a:	ff 75 0c             	pushl  0xc(%ebp)
8010d97d:	e8 4e 91 ff ff       	call   80106ad0 <strlen>
8010d982:	69 ce 88 03 00 00    	imul   $0x388,%esi,%ecx
8010d988:	83 c0 01             	add    $0x1,%eax
8010d98b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8010d98e:	8d bc 08 94 a5 13 80 	lea    -0x7fec5a6c(%eax,%ecx,1),%edi
8010d995:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8010d998:	89 3c 24             	mov    %edi,(%esp)
8010d99b:	e8 30 91 ff ff       	call   80106ad0 <strlen>
8010d9a0:	8b 55 e0             	mov    -0x20(%ebp),%edx
8010d9a3:	89 c1                	mov    %eax,%ecx
8010d9a5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8010d9a8:	83 c4 10             	add    $0x10,%esp
8010d9ab:	0f b6 84 10 94 a5 13 	movzbl -0x7fec5a6c(%eax,%edx,1),%eax
8010d9b2:	80 
8010d9b3:	84 c0                	test   %al,%al
8010d9b5:	74 1c                	je     8010d9d3 <get_cgroup_names_at_path+0xb3>
8010d9b7:	8b 55 08             	mov    0x8(%ebp),%edx
8010d9ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010d9c0:	83 c2 01             	add    $0x1,%edx
8010d9c3:	83 c7 01             	add    $0x1,%edi
8010d9c6:	88 42 ff             	mov    %al,-0x1(%edx)
8010d9c9:	0f b6 07             	movzbl (%edi),%eax
8010d9cc:	84 c0                	test   %al,%al
8010d9ce:	75 f0                	jne    8010d9c0 <get_cgroup_names_at_path+0xa0>
8010d9d0:	89 55 08             	mov    %edx,0x8(%ebp)
8010d9d3:	b8 40 00 00 00       	mov    $0x40,%eax
8010d9d8:	83 c6 01             	add    $0x1,%esi
8010d9db:	81 c3 88 03 00 00    	add    $0x388,%ebx
8010d9e1:	29 c8                	sub    %ecx,%eax
8010d9e3:	01 45 08             	add    %eax,0x8(%ebp)
8010d9e6:	83 fe 40             	cmp    $0x40,%esi
8010d9e9:	0f 85 6b ff ff ff    	jne    8010d95a <get_cgroup_names_at_path+0x3a>
8010d9ef:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010d9f2:	5b                   	pop    %ebx
8010d9f3:	5e                   	pop    %esi
8010d9f4:	5f                   	pop    %edi
8010d9f5:	5d                   	pop    %ebp
8010d9f6:	c3                   	ret    
8010d9f7:	89 f6                	mov    %esi,%esi
8010d9f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010da00 <cgorup_num_of_immidiate_children>:
8010da00:	55                   	push   %ebp
8010da01:	89 e5                	mov    %esp,%ebp
8010da03:	57                   	push   %edi
8010da04:	56                   	push   %esi
8010da05:	53                   	push   %ebx
8010da06:	83 ec 0c             	sub    $0xc,%esp
8010da09:	8b 7d 08             	mov    0x8(%ebp),%edi
8010da0c:	80 3f 00             	cmpb   $0x0,(%edi)
8010da0f:	74 52                	je     8010da63 <cgorup_num_of_immidiate_children+0x63>
8010da11:	bb 94 a5 13 80       	mov    $0x8013a594,%ebx
8010da16:	31 f6                	xor    %esi,%esi
8010da18:	eb 14                	jmp    8010da2e <cgorup_num_of_immidiate_children+0x2e>
8010da1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010da20:	81 c3 88 03 00 00    	add    $0x388,%ebx
8010da26:	81 fb 94 87 14 80    	cmp    $0x80148794,%ebx
8010da2c:	74 2b                	je     8010da59 <cgorup_num_of_immidiate_children+0x59>
8010da2e:	80 3b 00             	cmpb   $0x0,(%ebx)
8010da31:	74 ed                	je     8010da20 <cgorup_num_of_immidiate_children+0x20>
8010da33:	83 ec 08             	sub    $0x8,%esp
8010da36:	57                   	push   %edi
8010da37:	ff b3 08 03 00 00    	pushl  0x308(%ebx)
8010da3d:	e8 9e 8f ff ff       	call   801069e0 <strcmp>
8010da42:	83 c4 10             	add    $0x10,%esp
8010da45:	83 f8 01             	cmp    $0x1,%eax
8010da48:	83 d6 00             	adc    $0x0,%esi
8010da4b:	81 c3 88 03 00 00    	add    $0x388,%ebx
8010da51:	81 fb 94 87 14 80    	cmp    $0x80148794,%ebx
8010da57:	75 d5                	jne    8010da2e <cgorup_num_of_immidiate_children+0x2e>
8010da59:	89 f0                	mov    %esi,%eax
8010da5b:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010da5e:	5b                   	pop    %ebx
8010da5f:	5e                   	pop    %esi
8010da60:	5f                   	pop    %edi
8010da61:	5d                   	pop    %ebp
8010da62:	c3                   	ret    
8010da63:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010da68:	eb f1                	jmp    8010da5b <cgorup_num_of_immidiate_children+0x5b>
8010da6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

8010da70 <decrement_nr_dying_descendants>:
8010da70:	55                   	push   %ebp
8010da71:	89 e5                	mov    %esp,%ebp
8010da73:	8b 45 08             	mov    0x8(%ebp),%eax
8010da76:	85 c0                	test   %eax,%eax
8010da78:	74 17                	je     8010da91 <decrement_nr_dying_descendants+0x21>
8010da7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010da80:	83 a8 28 03 00 00 01 	subl   $0x1,0x328(%eax)
8010da87:	8b 80 08 03 00 00    	mov    0x308(%eax),%eax
8010da8d:	85 c0                	test   %eax,%eax
8010da8f:	75 ef                	jne    8010da80 <decrement_nr_dying_descendants+0x10>
8010da91:	5d                   	pop    %ebp
8010da92:	c3                   	ret    
8010da93:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010da99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010daa0 <cg_open>:
8010daa0:	55                   	push   %ebp
8010daa1:	89 e5                	mov    %esp,%ebp
8010daa3:	53                   	push   %ebx
8010daa4:	83 ec 10             	sub    $0x10,%esp
8010daa7:	68 60 a5 13 80       	push   $0x8013a560
8010daac:	e8 1f 8c ff ff       	call   801066d0 <acquire>
8010dab1:	ff 75 14             	pushl  0x14(%ebp)
8010dab4:	ff 75 10             	pushl  0x10(%ebp)
8010dab7:	ff 75 0c             	pushl  0xc(%ebp)
8010daba:	ff 75 08             	pushl  0x8(%ebp)
8010dabd:	e8 2e cd ff ff       	call   8010a7f0 <unsafe_cg_open>
8010dac2:	83 c4 14             	add    $0x14,%esp
8010dac5:	89 c3                	mov    %eax,%ebx
8010dac7:	68 60 a5 13 80       	push   $0x8013a560
8010dacc:	e8 1f 8d ff ff       	call   801067f0 <release>
8010dad1:	89 d8                	mov    %ebx,%eax
8010dad3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010dad6:	c9                   	leave  
8010dad7:	c3                   	ret    
8010dad8:	90                   	nop
8010dad9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010dae0 <cg_sys_open>:
8010dae0:	55                   	push   %ebp
8010dae1:	89 e5                	mov    %esp,%ebp
8010dae3:	57                   	push   %edi
8010dae4:	56                   	push   %esi
8010dae5:	53                   	push   %ebx
8010dae6:	81 ec 18 04 00 00    	sub    $0x418,%esp
8010daec:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010daef:	53                   	push   %ebx
8010daf0:	e8 7b fd ff ff       	call   8010d870 <get_cgroup_by_path>
8010daf5:	83 c4 10             	add    $0x10,%esp
8010daf8:	85 c0                	test   %eax,%eax
8010dafa:	74 1c                	je     8010db18 <cg_sys_open+0x38>
8010dafc:	ff 75 0c             	pushl  0xc(%ebp)
8010daff:	50                   	push   %eax
8010db00:	6a 00                	push   $0x0
8010db02:	6a 01                	push   $0x1
8010db04:	e8 97 ff ff ff       	call   8010daa0 <cg_open>
8010db09:	83 c4 10             	add    $0x10,%esp
8010db0c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010db0f:	5b                   	pop    %ebx
8010db10:	5e                   	pop    %esi
8010db11:	5f                   	pop    %edi
8010db12:	5d                   	pop    %ebp
8010db13:	c3                   	ret    
8010db14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010db18:	8d b5 e8 fb ff ff    	lea    -0x418(%ebp),%esi
8010db1e:	83 ec 08             	sub    $0x8,%esp
8010db21:	56                   	push   %esi
8010db22:	53                   	push   %ebx
8010db23:	e8 d8 f1 ff ff       	call   8010cd00 <get_dir_name>
8010db28:	83 c4 10             	add    $0x10,%esp
8010db2b:	85 c0                	test   %eax,%eax
8010db2d:	75 41                	jne    8010db70 <cg_sys_open+0x90>
8010db2f:	8d bd e8 fd ff ff    	lea    -0x218(%ebp),%edi
8010db35:	83 ec 08             	sub    $0x8,%esp
8010db38:	57                   	push   %edi
8010db39:	53                   	push   %ebx
8010db3a:	e8 21 f1 ff ff       	call   8010cc60 <get_base_name>
8010db3f:	83 c4 10             	add    $0x10,%esp
8010db42:	85 c0                	test   %eax,%eax
8010db44:	75 2a                	jne    8010db70 <cg_sys_open+0x90>
8010db46:	83 ec 0c             	sub    $0xc,%esp
8010db49:	56                   	push   %esi
8010db4a:	e8 21 fd ff ff       	call   8010d870 <get_cgroup_by_path>
8010db4f:	83 c4 10             	add    $0x10,%esp
8010db52:	85 c0                	test   %eax,%eax
8010db54:	74 1a                	je     8010db70 <cg_sys_open+0x90>
8010db56:	ff 75 0c             	pushl  0xc(%ebp)
8010db59:	50                   	push   %eax
8010db5a:	57                   	push   %edi
8010db5b:	6a 00                	push   $0x0
8010db5d:	e8 3e ff ff ff       	call   8010daa0 <cg_open>
8010db62:	83 c4 10             	add    $0x10,%esp
8010db65:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010db68:	5b                   	pop    %ebx
8010db69:	5e                   	pop    %esi
8010db6a:	5f                   	pop    %edi
8010db6b:	5d                   	pop    %ebp
8010db6c:	c3                   	ret    
8010db6d:	8d 76 00             	lea    0x0(%esi),%esi
8010db70:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010db75:	eb 95                	jmp    8010db0c <cg_sys_open+0x2c>
8010db77:	89 f6                	mov    %esi,%esi
8010db79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010db80 <cg_read>:
8010db80:	55                   	push   %ebp
8010db81:	89 e5                	mov    %esp,%ebp
8010db83:	53                   	push   %ebx
8010db84:	83 ec 10             	sub    $0x10,%esp
8010db87:	68 60 a5 13 80       	push   $0x8013a560
8010db8c:	e8 3f 8b ff ff       	call   801066d0 <acquire>
8010db91:	ff 75 14             	pushl  0x14(%ebp)
8010db94:	ff 75 10             	pushl  0x10(%ebp)
8010db97:	ff 75 0c             	pushl  0xc(%ebp)
8010db9a:	ff 75 08             	pushl  0x8(%ebp)
8010db9d:	e8 ae cf ff ff       	call   8010ab50 <unsafe_cg_read>
8010dba2:	83 c4 14             	add    $0x14,%esp
8010dba5:	89 c3                	mov    %eax,%ebx
8010dba7:	68 60 a5 13 80       	push   $0x8013a560
8010dbac:	e8 3f 8c ff ff       	call   801067f0 <release>
8010dbb1:	89 d8                	mov    %ebx,%eax
8010dbb3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010dbb6:	c9                   	leave  
8010dbb7:	c3                   	ret    
8010dbb8:	90                   	nop
8010dbb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010dbc0 <cg_write>:
8010dbc0:	55                   	push   %ebp
8010dbc1:	89 e5                	mov    %esp,%ebp
8010dbc3:	53                   	push   %ebx
8010dbc4:	83 ec 10             	sub    $0x10,%esp
8010dbc7:	68 60 a5 13 80       	push   $0x8013a560
8010dbcc:	e8 ff 8a ff ff       	call   801066d0 <acquire>
8010dbd1:	83 c4 0c             	add    $0xc,%esp
8010dbd4:	ff 75 10             	pushl  0x10(%ebp)
8010dbd7:	ff 75 0c             	pushl  0xc(%ebp)
8010dbda:	ff 75 08             	pushl  0x8(%ebp)
8010dbdd:	e8 ce e7 ff ff       	call   8010c3b0 <unsafe_cg_write>
8010dbe2:	89 c3                	mov    %eax,%ebx
8010dbe4:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010dbeb:	e8 00 8c ff ff       	call   801067f0 <release>
8010dbf0:	89 d8                	mov    %ebx,%eax
8010dbf2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010dbf5:	c9                   	leave  
8010dbf6:	c3                   	ret    
8010dbf7:	89 f6                	mov    %esi,%esi
8010dbf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010dc00 <cg_close>:
8010dc00:	55                   	push   %ebp
8010dc01:	89 e5                	mov    %esp,%ebp
8010dc03:	53                   	push   %ebx
8010dc04:	83 ec 10             	sub    $0x10,%esp
8010dc07:	68 60 a5 13 80       	push   $0x8013a560
8010dc0c:	e8 bf 8a ff ff       	call   801066d0 <acquire>
8010dc11:	58                   	pop    %eax
8010dc12:	ff 75 08             	pushl  0x8(%ebp)
8010dc15:	e8 e6 ef ff ff       	call   8010cc00 <unsafe_cg_close>
8010dc1a:	89 c3                	mov    %eax,%ebx
8010dc1c:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010dc23:	e8 c8 8b ff ff       	call   801067f0 <release>
8010dc28:	89 d8                	mov    %ebx,%eax
8010dc2a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010dc2d:	c9                   	leave  
8010dc2e:	c3                   	ret    
8010dc2f:	90                   	nop

8010dc30 <cg_stat>:
8010dc30:	55                   	push   %ebp
8010dc31:	89 e5                	mov    %esp,%ebp
8010dc33:	53                   	push   %ebx
8010dc34:	83 ec 10             	sub    $0x10,%esp
8010dc37:	68 60 a5 13 80       	push   $0x8013a560
8010dc3c:	e8 8f 8a ff ff       	call   801066d0 <acquire>
8010dc41:	58                   	pop    %eax
8010dc42:	5a                   	pop    %edx
8010dc43:	ff 75 0c             	pushl  0xc(%ebp)
8010dc46:	ff 75 08             	pushl  0x8(%ebp)
8010dc49:	e8 62 f1 ff ff       	call   8010cdb0 <unsafe_cg_stat>
8010dc4e:	89 c3                	mov    %eax,%ebx
8010dc50:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010dc57:	e8 94 8b ff ff       	call   801067f0 <release>
8010dc5c:	89 d8                	mov    %ebx,%eax
8010dc5e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010dc61:	c9                   	leave  
8010dc62:	c3                   	ret    
8010dc63:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010dc69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010dc70 <set_max_procs>:
8010dc70:	55                   	push   %ebp
8010dc71:	89 e5                	mov    %esp,%ebp
8010dc73:	8b 55 08             	mov    0x8(%ebp),%edx
8010dc76:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8010dc79:	85 d2                	test   %edx,%edx
8010dc7b:	74 14                	je     8010dc91 <set_max_procs+0x21>
8010dc7d:	31 c0                	xor    %eax,%eax
8010dc7f:	83 f9 40             	cmp    $0x40,%ecx
8010dc82:	77 0b                	ja     8010dc8f <set_max_procs+0x1f>
8010dc84:	89 8a 2c 03 00 00    	mov    %ecx,0x32c(%edx)
8010dc8a:	b8 01 00 00 00       	mov    $0x1,%eax
8010dc8f:	5d                   	pop    %ebp
8010dc90:	c3                   	ret    
8010dc91:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010dc96:	5d                   	pop    %ebp
8010dc97:	c3                   	ret    
8010dc98:	90                   	nop
8010dc99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010dca0 <unsafe_enable_pid_controller>:
8010dca0:	55                   	push   %ebp
8010dca1:	89 e5                	mov    %esp,%ebp
8010dca3:	8b 55 08             	mov    0x8(%ebp),%edx
8010dca6:	85 d2                	test   %edx,%edx
8010dca8:	74 52                	je     8010dcfc <unsafe_enable_pid_controller+0x5c>
8010dcaa:	80 ba 14 03 00 00 01 	cmpb   $0x1,0x314(%edx)
8010dcb1:	74 49                	je     8010dcfc <unsafe_enable_pid_controller+0x5c>
8010dcb3:	80 ba 0f 03 00 00 00 	cmpb   $0x0,0x30f(%edx)
8010dcba:	75 3c                	jne    8010dcf8 <unsafe_enable_pid_controller+0x58>
8010dcbc:	80 ba 0e 03 00 00 00 	cmpb   $0x0,0x30e(%edx)
8010dcc3:	74 33                	je     8010dcf8 <unsafe_enable_pid_controller+0x58>
8010dcc5:	c6 82 0f 03 00 00 01 	movb   $0x1,0x30f(%edx)
8010dccc:	b8 24 ac 13 80       	mov    $0x8013ac24,%eax
8010dcd1:	eb 11                	jmp    8010dce4 <unsafe_enable_pid_controller+0x44>
8010dcd3:	90                   	nop
8010dcd4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010dcd8:	05 88 03 00 00       	add    $0x388,%eax
8010dcdd:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010dce2:	74 14                	je     8010dcf8 <unsafe_enable_pid_controller+0x58>
8010dce4:	3b 10                	cmp    (%eax),%edx
8010dce6:	75 f0                	jne    8010dcd8 <unsafe_enable_pid_controller+0x38>
8010dce8:	c6 40 06 01          	movb   $0x1,0x6(%eax)
8010dcec:	05 88 03 00 00       	add    $0x388,%eax
8010dcf1:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010dcf6:	75 ec                	jne    8010dce4 <unsafe_enable_pid_controller+0x44>
8010dcf8:	31 c0                	xor    %eax,%eax
8010dcfa:	5d                   	pop    %ebp
8010dcfb:	c3                   	ret    
8010dcfc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010dd01:	5d                   	pop    %ebp
8010dd02:	c3                   	ret    
8010dd03:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010dd09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010dd10 <unsafe_disable_pid_controller>:
8010dd10:	55                   	push   %ebp
8010dd11:	89 e5                	mov    %esp,%ebp
8010dd13:	8b 4d 08             	mov    0x8(%ebp),%ecx
8010dd16:	85 c9                	test   %ecx,%ecx
8010dd18:	74 2e                	je     8010dd48 <unsafe_disable_pid_controller+0x38>
8010dd1a:	80 b9 0f 03 00 00 00 	cmpb   $0x0,0x30f(%ecx)
8010dd21:	b8 24 ac 13 80       	mov    $0x8013ac24,%eax
8010dd26:	89 c2                	mov    %eax,%edx
8010dd28:	75 14                	jne    8010dd3e <unsafe_disable_pid_controller+0x2e>
8010dd2a:	eb 24                	jmp    8010dd50 <unsafe_disable_pid_controller+0x40>
8010dd2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010dd30:	81 c2 88 03 00 00    	add    $0x388,%edx
8010dd36:	81 fa 9c 8a 14 80    	cmp    $0x80148a9c,%edx
8010dd3c:	74 1a                	je     8010dd58 <unsafe_disable_pid_controller+0x48>
8010dd3e:	3b 0a                	cmp    (%edx),%ecx
8010dd40:	75 ee                	jne    8010dd30 <unsafe_disable_pid_controller+0x20>
8010dd42:	80 7a 07 00          	cmpb   $0x0,0x7(%edx)
8010dd46:	74 e8                	je     8010dd30 <unsafe_disable_pid_controller+0x20>
8010dd48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010dd4d:	5d                   	pop    %ebp
8010dd4e:	c3                   	ret    
8010dd4f:	90                   	nop
8010dd50:	31 c0                	xor    %eax,%eax
8010dd52:	5d                   	pop    %ebp
8010dd53:	c3                   	ret    
8010dd54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010dd58:	c6 81 0f 03 00 00 00 	movb   $0x0,0x30f(%ecx)
8010dd5f:	eb 13                	jmp    8010dd74 <unsafe_disable_pid_controller+0x64>
8010dd61:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010dd68:	05 88 03 00 00       	add    $0x388,%eax
8010dd6d:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010dd72:	74 dc                	je     8010dd50 <unsafe_disable_pid_controller+0x40>
8010dd74:	3b 08                	cmp    (%eax),%ecx
8010dd76:	75 f0                	jne    8010dd68 <unsafe_disable_pid_controller+0x58>
8010dd78:	c6 40 06 00          	movb   $0x0,0x6(%eax)
8010dd7c:	eb ea                	jmp    8010dd68 <unsafe_disable_pid_controller+0x58>
8010dd7e:	66 90                	xchg   %ax,%ax

8010dd80 <enable_pid_controller>:
8010dd80:	55                   	push   %ebp
8010dd81:	89 e5                	mov    %esp,%ebp
8010dd83:	53                   	push   %ebx
8010dd84:	83 ec 10             	sub    $0x10,%esp
8010dd87:	68 60 a5 13 80       	push   $0x8013a560
8010dd8c:	e8 3f 89 ff ff       	call   801066d0 <acquire>
8010dd91:	58                   	pop    %eax
8010dd92:	ff 75 08             	pushl  0x8(%ebp)
8010dd95:	e8 06 ff ff ff       	call   8010dca0 <unsafe_enable_pid_controller>
8010dd9a:	89 c3                	mov    %eax,%ebx
8010dd9c:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010dda3:	e8 48 8a ff ff       	call   801067f0 <release>
8010dda8:	89 d8                	mov    %ebx,%eax
8010ddaa:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010ddad:	c9                   	leave  
8010ddae:	c3                   	ret    
8010ddaf:	90                   	nop

8010ddb0 <disable_pid_controller>:
8010ddb0:	55                   	push   %ebp
8010ddb1:	89 e5                	mov    %esp,%ebp
8010ddb3:	53                   	push   %ebx
8010ddb4:	83 ec 10             	sub    $0x10,%esp
8010ddb7:	68 60 a5 13 80       	push   $0x8013a560
8010ddbc:	e8 0f 89 ff ff       	call   801066d0 <acquire>
8010ddc1:	58                   	pop    %eax
8010ddc2:	ff 75 08             	pushl  0x8(%ebp)
8010ddc5:	e8 46 ff ff ff       	call   8010dd10 <unsafe_disable_pid_controller>
8010ddca:	89 c3                	mov    %eax,%ebx
8010ddcc:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010ddd3:	e8 18 8a ff ff       	call   801067f0 <release>
8010ddd8:	89 d8                	mov    %ebx,%eax
8010ddda:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010dddd:	c9                   	leave  
8010ddde:	c3                   	ret    
8010dddf:	90                   	nop

8010dde0 <set_cpu_id>:
8010dde0:	55                   	push   %ebp
8010dde1:	89 e5                	mov    %esp,%ebp
8010dde3:	8b 55 08             	mov    0x8(%ebp),%edx
8010dde6:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8010dde9:	85 d2                	test   %edx,%edx
8010ddeb:	74 14                	je     8010de01 <set_cpu_id+0x21>
8010dded:	31 c0                	xor    %eax,%eax
8010ddef:	83 f9 09             	cmp    $0x9,%ecx
8010ddf2:	77 0b                	ja     8010ddff <set_cpu_id+0x1f>
8010ddf4:	88 8a 30 03 00 00    	mov    %cl,0x330(%edx)
8010ddfa:	b8 01 00 00 00       	mov    $0x1,%eax
8010ddff:	5d                   	pop    %ebp
8010de00:	c3                   	ret    
8010de01:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010de06:	5d                   	pop    %ebp
8010de07:	c3                   	ret    
8010de08:	90                   	nop
8010de09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010de10 <unsafe_enable_set_controller>:
8010de10:	55                   	push   %ebp
8010de11:	89 e5                	mov    %esp,%ebp
8010de13:	8b 55 08             	mov    0x8(%ebp),%edx
8010de16:	85 d2                	test   %edx,%edx
8010de18:	74 52                	je     8010de6c <unsafe_enable_set_controller+0x5c>
8010de1a:	80 ba 14 03 00 00 01 	cmpb   $0x1,0x314(%edx)
8010de21:	74 49                	je     8010de6c <unsafe_enable_set_controller+0x5c>
8010de23:	80 ba 11 03 00 00 00 	cmpb   $0x0,0x311(%edx)
8010de2a:	75 3c                	jne    8010de68 <unsafe_enable_set_controller+0x58>
8010de2c:	80 ba 10 03 00 00 00 	cmpb   $0x0,0x310(%edx)
8010de33:	74 33                	je     8010de68 <unsafe_enable_set_controller+0x58>
8010de35:	c6 82 11 03 00 00 01 	movb   $0x1,0x311(%edx)
8010de3c:	b8 24 ac 13 80       	mov    $0x8013ac24,%eax
8010de41:	eb 11                	jmp    8010de54 <unsafe_enable_set_controller+0x44>
8010de43:	90                   	nop
8010de44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010de48:	05 88 03 00 00       	add    $0x388,%eax
8010de4d:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010de52:	74 14                	je     8010de68 <unsafe_enable_set_controller+0x58>
8010de54:	3b 10                	cmp    (%eax),%edx
8010de56:	75 f0                	jne    8010de48 <unsafe_enable_set_controller+0x38>
8010de58:	c6 40 08 01          	movb   $0x1,0x8(%eax)
8010de5c:	05 88 03 00 00       	add    $0x388,%eax
8010de61:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010de66:	75 ec                	jne    8010de54 <unsafe_enable_set_controller+0x44>
8010de68:	31 c0                	xor    %eax,%eax
8010de6a:	5d                   	pop    %ebp
8010de6b:	c3                   	ret    
8010de6c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010de71:	5d                   	pop    %ebp
8010de72:	c3                   	ret    
8010de73:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010de79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010de80 <unsafe_disable_set_controller>:
8010de80:	55                   	push   %ebp
8010de81:	89 e5                	mov    %esp,%ebp
8010de83:	8b 4d 08             	mov    0x8(%ebp),%ecx
8010de86:	85 c9                	test   %ecx,%ecx
8010de88:	74 2e                	je     8010deb8 <unsafe_disable_set_controller+0x38>
8010de8a:	80 b9 11 03 00 00 00 	cmpb   $0x0,0x311(%ecx)
8010de91:	b8 24 ac 13 80       	mov    $0x8013ac24,%eax
8010de96:	89 c2                	mov    %eax,%edx
8010de98:	75 14                	jne    8010deae <unsafe_disable_set_controller+0x2e>
8010de9a:	eb 24                	jmp    8010dec0 <unsafe_disable_set_controller+0x40>
8010de9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010dea0:	81 c2 88 03 00 00    	add    $0x388,%edx
8010dea6:	81 fa 9c 8a 14 80    	cmp    $0x80148a9c,%edx
8010deac:	74 1a                	je     8010dec8 <unsafe_disable_set_controller+0x48>
8010deae:	3b 0a                	cmp    (%edx),%ecx
8010deb0:	75 ee                	jne    8010dea0 <unsafe_disable_set_controller+0x20>
8010deb2:	80 7a 09 00          	cmpb   $0x0,0x9(%edx)
8010deb6:	74 e8                	je     8010dea0 <unsafe_disable_set_controller+0x20>
8010deb8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010debd:	5d                   	pop    %ebp
8010debe:	c3                   	ret    
8010debf:	90                   	nop
8010dec0:	31 c0                	xor    %eax,%eax
8010dec2:	5d                   	pop    %ebp
8010dec3:	c3                   	ret    
8010dec4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010dec8:	c6 81 11 03 00 00 00 	movb   $0x0,0x311(%ecx)
8010decf:	eb 13                	jmp    8010dee4 <unsafe_disable_set_controller+0x64>
8010ded1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010ded8:	05 88 03 00 00       	add    $0x388,%eax
8010dedd:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010dee2:	74 dc                	je     8010dec0 <unsafe_disable_set_controller+0x40>
8010dee4:	3b 08                	cmp    (%eax),%ecx
8010dee6:	75 f0                	jne    8010ded8 <unsafe_disable_set_controller+0x58>
8010dee8:	c6 40 08 00          	movb   $0x0,0x8(%eax)
8010deec:	eb ea                	jmp    8010ded8 <unsafe_disable_set_controller+0x58>
8010deee:	66 90                	xchg   %ax,%ax

8010def0 <enable_set_controller>:
8010def0:	55                   	push   %ebp
8010def1:	89 e5                	mov    %esp,%ebp
8010def3:	53                   	push   %ebx
8010def4:	83 ec 10             	sub    $0x10,%esp
8010def7:	68 60 a5 13 80       	push   $0x8013a560
8010defc:	e8 cf 87 ff ff       	call   801066d0 <acquire>
8010df01:	58                   	pop    %eax
8010df02:	ff 75 08             	pushl  0x8(%ebp)
8010df05:	e8 06 ff ff ff       	call   8010de10 <unsafe_enable_set_controller>
8010df0a:	89 c3                	mov    %eax,%ebx
8010df0c:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010df13:	e8 d8 88 ff ff       	call   801067f0 <release>
8010df18:	89 d8                	mov    %ebx,%eax
8010df1a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010df1d:	c9                   	leave  
8010df1e:	c3                   	ret    
8010df1f:	90                   	nop

8010df20 <disable_set_controller>:
8010df20:	55                   	push   %ebp
8010df21:	89 e5                	mov    %esp,%ebp
8010df23:	53                   	push   %ebx
8010df24:	83 ec 10             	sub    $0x10,%esp
8010df27:	68 60 a5 13 80       	push   $0x8013a560
8010df2c:	e8 9f 87 ff ff       	call   801066d0 <acquire>
8010df31:	58                   	pop    %eax
8010df32:	ff 75 08             	pushl  0x8(%ebp)
8010df35:	e8 46 ff ff ff       	call   8010de80 <unsafe_disable_set_controller>
8010df3a:	89 c3                	mov    %eax,%ebx
8010df3c:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010df43:	e8 a8 88 ff ff       	call   801067f0 <release>
8010df48:	89 d8                	mov    %ebx,%eax
8010df4a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010df4d:	c9                   	leave  
8010df4e:	c3                   	ret    
8010df4f:	90                   	nop

8010df50 <frz_grp>:
8010df50:	55                   	push   %ebp
8010df51:	89 e5                	mov    %esp,%ebp
8010df53:	8b 55 08             	mov    0x8(%ebp),%edx
8010df56:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8010df59:	85 d2                	test   %edx,%edx
8010df5b:	74 20                	je     8010df7d <frz_grp+0x2d>
8010df5d:	31 c0                	xor    %eax,%eax
8010df5f:	83 f9 01             	cmp    $0x1,%ecx
8010df62:	76 0c                	jbe    8010df70 <frz_grp+0x20>
8010df64:	5d                   	pop    %ebp
8010df65:	c3                   	ret    
8010df66:	8d 76 00             	lea    0x0(%esi),%esi
8010df69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010df70:	89 8a 34 03 00 00    	mov    %ecx,0x334(%edx)
8010df76:	b8 01 00 00 00       	mov    $0x1,%eax
8010df7b:	5d                   	pop    %ebp
8010df7c:	c3                   	ret    
8010df7d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010df82:	5d                   	pop    %ebp
8010df83:	c3                   	ret    
8010df84:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010df8a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

8010df90 <set_max_mem>:
8010df90:	55                   	push   %ebp
8010df91:	89 e5                	mov    %esp,%ebp
8010df93:	8b 55 08             	mov    0x8(%ebp),%edx
8010df96:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8010df99:	85 d2                	test   %edx,%edx
8010df9b:	74 1f                	je     8010dfbc <set_max_mem+0x2c>
8010df9d:	31 c0                	xor    %eax,%eax
8010df9f:	81 f9 00 00 00 80    	cmp    $0x80000000,%ecx
8010dfa5:	77 13                	ja     8010dfba <set_max_mem+0x2a>
8010dfa7:	3b 8a 54 03 00 00    	cmp    0x354(%edx),%ecx
8010dfad:	72 0b                	jb     8010dfba <set_max_mem+0x2a>
8010dfaf:	89 8a 50 03 00 00    	mov    %ecx,0x350(%edx)
8010dfb5:	b8 01 00 00 00       	mov    $0x1,%eax
8010dfba:	5d                   	pop    %ebp
8010dfbb:	c3                   	ret    
8010dfbc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010dfc1:	5d                   	pop    %ebp
8010dfc2:	c3                   	ret    
8010dfc3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010dfc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010dfd0 <set_protect_mem>:
8010dfd0:	55                   	push   %ebp
8010dfd1:	89 e5                	mov    %esp,%ebp
8010dfd3:	57                   	push   %edi
8010dfd4:	56                   	push   %esi
8010dfd5:	53                   	push   %ebx
8010dfd6:	83 ec 0c             	sub    $0xc,%esp
8010dfd9:	8b 75 08             	mov    0x8(%ebp),%esi
8010dfdc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8010dfdf:	2b 9e 3c 03 00 00    	sub    0x33c(%esi),%ebx
8010dfe5:	85 db                	test   %ebx,%ebx
8010dfe7:	7e 2f                	jle    8010e018 <set_protect_mem+0x48>
8010dfe9:	89 d8                	mov    %ebx,%eax
8010dfeb:	2b 86 58 03 00 00    	sub    0x358(%esi),%eax
8010dff1:	83 ec 0c             	sub    $0xc,%esp
8010dff4:	50                   	push   %eax
8010dff5:	e8 26 4f ff ff       	call   80102f20 <increse_protect_counter>
8010dffa:	83 c4 10             	add    $0x10,%esp
8010dffd:	85 c0                	test   %eax,%eax
8010dfff:	89 c7                	mov    %eax,%edi
8010e001:	75 45                	jne    8010e048 <set_protect_mem+0x78>
8010e003:	89 9e 58 03 00 00    	mov    %ebx,0x358(%esi)
8010e009:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010e00c:	89 f8                	mov    %edi,%eax
8010e00e:	5b                   	pop    %ebx
8010e00f:	5e                   	pop    %esi
8010e010:	5f                   	pop    %edi
8010e011:	5d                   	pop    %ebp
8010e012:	c3                   	ret    
8010e013:	90                   	nop
8010e014:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e018:	8b 86 58 03 00 00    	mov    0x358(%esi),%eax
8010e01e:	31 ff                	xor    %edi,%edi
8010e020:	85 c0                	test   %eax,%eax
8010e022:	74 e5                	je     8010e009 <set_protect_mem+0x39>
8010e024:	83 ec 0c             	sub    $0xc,%esp
8010e027:	50                   	push   %eax
8010e028:	e8 93 4e ff ff       	call   80102ec0 <decrese_protect_counter>
8010e02d:	c7 86 58 03 00 00 00 	movl   $0x0,0x358(%esi)
8010e034:	00 00 00 
8010e037:	83 c4 10             	add    $0x10,%esp
8010e03a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010e03d:	89 f8                	mov    %edi,%eax
8010e03f:	5b                   	pop    %ebx
8010e040:	5e                   	pop    %esi
8010e041:	5f                   	pop    %edi
8010e042:	5d                   	pop    %ebp
8010e043:	c3                   	ret    
8010e044:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e048:	bf ff ff ff ff       	mov    $0xffffffff,%edi
8010e04d:	eb ba                	jmp    8010e009 <set_protect_mem+0x39>
8010e04f:	90                   	nop

8010e050 <set_min_mem.part.10>:
8010e050:	55                   	push   %ebp
8010e051:	89 e5                	mov    %esp,%ebp
8010e053:	56                   	push   %esi
8010e054:	53                   	push   %ebx
8010e055:	89 c3                	mov    %eax,%ebx
8010e057:	8d 82 ff 0f 00 00    	lea    0xfff(%edx),%eax
8010e05d:	89 d6                	mov    %edx,%esi
8010e05f:	83 ec 08             	sub    $0x8,%esp
8010e062:	c1 e8 0c             	shr    $0xc,%eax
8010e065:	50                   	push   %eax
8010e066:	53                   	push   %ebx
8010e067:	e8 64 ff ff ff       	call   8010dfd0 <set_protect_mem>
8010e06c:	83 c4 10             	add    $0x10,%esp
8010e06f:	85 c0                	test   %eax,%eax
8010e071:	75 15                	jne    8010e088 <set_min_mem.part.10+0x38>
8010e073:	89 b3 54 03 00 00    	mov    %esi,0x354(%ebx)
8010e079:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010e07c:	b8 01 00 00 00       	mov    $0x1,%eax
8010e081:	5b                   	pop    %ebx
8010e082:	5e                   	pop    %esi
8010e083:	5d                   	pop    %ebp
8010e084:	c3                   	ret    
8010e085:	8d 76 00             	lea    0x0(%esi),%esi
8010e088:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010e08b:	31 c0                	xor    %eax,%eax
8010e08d:	5b                   	pop    %ebx
8010e08e:	5e                   	pop    %esi
8010e08f:	5d                   	pop    %ebp
8010e090:	c3                   	ret    
8010e091:	eb 0d                	jmp    8010e0a0 <set_min_mem>
8010e093:	90                   	nop
8010e094:	90                   	nop
8010e095:	90                   	nop
8010e096:	90                   	nop
8010e097:	90                   	nop
8010e098:	90                   	nop
8010e099:	90                   	nop
8010e09a:	90                   	nop
8010e09b:	90                   	nop
8010e09c:	90                   	nop
8010e09d:	90                   	nop
8010e09e:	90                   	nop
8010e09f:	90                   	nop

8010e0a0 <set_min_mem>:
8010e0a0:	55                   	push   %ebp
8010e0a1:	89 e5                	mov    %esp,%ebp
8010e0a3:	8b 4d 08             	mov    0x8(%ebp),%ecx
8010e0a6:	8b 55 0c             	mov    0xc(%ebp),%edx
8010e0a9:	85 c9                	test   %ecx,%ecx
8010e0ab:	74 20                	je     8010e0cd <set_min_mem+0x2d>
8010e0ad:	31 c0                	xor    %eax,%eax
8010e0af:	81 fa 00 00 00 80    	cmp    $0x80000000,%edx
8010e0b5:	77 08                	ja     8010e0bf <set_min_mem+0x1f>
8010e0b7:	3b 91 50 03 00 00    	cmp    0x350(%ecx),%edx
8010e0bd:	76 09                	jbe    8010e0c8 <set_min_mem+0x28>
8010e0bf:	5d                   	pop    %ebp
8010e0c0:	c3                   	ret    
8010e0c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010e0c8:	5d                   	pop    %ebp
8010e0c9:	89 c8                	mov    %ecx,%eax
8010e0cb:	eb 83                	jmp    8010e050 <set_min_mem.part.10>
8010e0cd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010e0d2:	5d                   	pop    %ebp
8010e0d3:	c3                   	ret    
8010e0d4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010e0da:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

8010e0e0 <cgroup_delete>:
8010e0e0:	55                   	push   %ebp
8010e0e1:	89 e5                	mov    %esp,%ebp
8010e0e3:	56                   	push   %esi
8010e0e4:	53                   	push   %ebx
8010e0e5:	8b 75 0c             	mov    0xc(%ebp),%esi
8010e0e8:	83 ec 0c             	sub    $0xc,%esp
8010e0eb:	68 60 a5 13 80       	push   $0x8013a560
8010e0f0:	e8 db 85 ff ff       	call   801066d0 <acquire>
8010e0f5:	8b 45 08             	mov    0x8(%ebp),%eax
8010e0f8:	e8 83 f1 ff ff       	call   8010d280 <unsafe_get_cgroup_by_path>
8010e0fd:	83 c4 10             	add    $0x10,%esp
8010e100:	85 c0                	test   %eax,%eax
8010e102:	0f 84 ec 00 00 00    	je     8010e1f4 <cgroup_delete+0x114>
8010e108:	83 ec 08             	sub    $0x8,%esp
8010e10b:	89 c3                	mov    %eax,%ebx
8010e10d:	68 11 f6 10 80       	push   $0x8010f611
8010e112:	56                   	push   %esi
8010e113:	e8 c8 88 ff ff       	call   801069e0 <strcmp>
8010e118:	83 c4 10             	add    $0x10,%esp
8010e11b:	81 fb 94 a5 13 80    	cmp    $0x8013a594,%ebx
8010e121:	74 08                	je     8010e12b <cgroup_delete+0x4b>
8010e123:	85 c0                	test   %eax,%eax
8010e125:	0f 84 ad 00 00 00    	je     8010e1d8 <cgroup_delete+0xf8>
8010e12b:	83 ec 08             	sub    $0x8,%esp
8010e12e:	68 8f f5 10 80       	push   $0x8010f58f
8010e133:	56                   	push   %esi
8010e134:	e8 a7 88 ff ff       	call   801069e0 <strcmp>
8010e139:	83 c4 10             	add    $0x10,%esp
8010e13c:	81 fb 94 a5 13 80    	cmp    $0x8013a594,%ebx
8010e142:	75 08                	jne    8010e14c <cgroup_delete+0x6c>
8010e144:	85 c0                	test   %eax,%eax
8010e146:	0f 84 8c 00 00 00    	je     8010e1d8 <cgroup_delete+0xf8>
8010e14c:	8b 93 24 03 00 00    	mov    0x324(%ebx),%edx
8010e152:	85 d2                	test   %edx,%edx
8010e154:	0f 85 7e 00 00 00    	jne    8010e1d8 <cgroup_delete+0xf8>
8010e15a:	8b 83 04 03 00 00    	mov    0x304(%ebx),%eax
8010e160:	85 c0                	test   %eax,%eax
8010e162:	74 54                	je     8010e1b8 <cgroup_delete+0xd8>
8010e164:	81 fb 94 a5 13 80    	cmp    $0x8013a594,%ebx
8010e16a:	75 6c                	jne    8010e1d8 <cgroup_delete+0xf8>
8010e16c:	8b 83 08 03 00 00    	mov    0x308(%ebx),%eax
8010e172:	c6 03 00             	movb   $0x0,(%ebx)
8010e175:	8b 93 00 02 00 00    	mov    0x200(%ebx),%edx
8010e17b:	85 c0                	test   %eax,%eax
8010e17d:	74 1d                	je     8010e19c <cgroup_delete+0xbc>
8010e17f:	90                   	nop
8010e180:	83 a8 24 03 00 00 01 	subl   $0x1,0x324(%eax)
8010e187:	85 d2                	test   %edx,%edx
8010e189:	7e 07                	jle    8010e192 <cgroup_delete+0xb2>
8010e18b:	83 80 28 03 00 00 01 	addl   $0x1,0x328(%eax)
8010e192:	8b 80 08 03 00 00    	mov    0x308(%eax),%eax
8010e198:	85 c0                	test   %eax,%eax
8010e19a:	75 e4                	jne    8010e180 <cgroup_delete+0xa0>
8010e19c:	83 ec 0c             	sub    $0xc,%esp
8010e19f:	68 60 a5 13 80       	push   $0x8013a560
8010e1a4:	e8 47 86 ff ff       	call   801067f0 <release>
8010e1a9:	83 c4 10             	add    $0x10,%esp
8010e1ac:	31 c0                	xor    %eax,%eax
8010e1ae:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010e1b1:	5b                   	pop    %ebx
8010e1b2:	5e                   	pop    %esi
8010e1b3:	5d                   	pop    %ebp
8010e1b4:	c3                   	ret    
8010e1b5:	8d 76 00             	lea    0x0(%esi),%esi
8010e1b8:	81 fb 94 a5 13 80    	cmp    $0x8013a594,%ebx
8010e1be:	74 ac                	je     8010e16c <cgroup_delete+0x8c>
8010e1c0:	80 bb 13 03 00 00 00 	cmpb   $0x0,0x313(%ebx)
8010e1c7:	74 a3                	je     8010e16c <cgroup_delete+0x8c>
8010e1c9:	31 d2                	xor    %edx,%edx
8010e1cb:	89 d8                	mov    %ebx,%eax
8010e1cd:	e8 7e fe ff ff       	call   8010e050 <set_min_mem.part.10>
8010e1d2:	eb 98                	jmp    8010e16c <cgroup_delete+0x8c>
8010e1d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e1d8:	83 ec 0c             	sub    $0xc,%esp
8010e1db:	68 60 a5 13 80       	push   $0x8013a560
8010e1e0:	e8 0b 86 ff ff       	call   801067f0 <release>
8010e1e5:	83 c4 10             	add    $0x10,%esp
8010e1e8:	8d 65 f8             	lea    -0x8(%ebp),%esp
8010e1eb:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
8010e1f0:	5b                   	pop    %ebx
8010e1f1:	5e                   	pop    %esi
8010e1f2:	5d                   	pop    %ebp
8010e1f3:	c3                   	ret    
8010e1f4:	83 ec 0c             	sub    $0xc,%esp
8010e1f7:	68 60 a5 13 80       	push   $0x8013a560
8010e1fc:	e8 ef 85 ff ff       	call   801067f0 <release>
8010e201:	83 c4 10             	add    $0x10,%esp
8010e204:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010e209:	eb a3                	jmp    8010e1ae <cgroup_delete+0xce>
8010e20b:	90                   	nop
8010e20c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

8010e210 <cgroup_initialize>:
8010e210:	55                   	push   %ebp
8010e211:	89 e5                	mov    %esp,%ebp
8010e213:	53                   	push   %ebx
8010e214:	83 ec 04             	sub    $0x4,%esp
8010e217:	8b 45 10             	mov    0x10(%ebp),%eax
8010e21a:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010e21d:	85 c0                	test   %eax,%eax
8010e21f:	0f 84 cb 01 00 00    	je     8010e3f0 <cgroup_initialize+0x1e0>
8010e225:	89 83 08 03 00 00    	mov    %eax,0x308(%ebx)
8010e22b:	80 b8 0d 03 00 00 00 	cmpb   $0x0,0x30d(%eax)
8010e232:	0f 95 83 0c 03 00 00 	setne  0x30c(%ebx)
8010e239:	80 b8 0f 03 00 00 00 	cmpb   $0x0,0x30f(%eax)
8010e240:	0f 95 83 0e 03 00 00 	setne  0x30e(%ebx)
8010e247:	3d 94 a5 13 80       	cmp    $0x8013a594,%eax
8010e24c:	74 0d                	je     8010e25b <cgroup_initialize+0x4b>
8010e24e:	80 b8 11 03 00 00 00 	cmpb   $0x0,0x311(%eax)
8010e255:	0f 84 85 01 00 00    	je     8010e3e0 <cgroup_initialize+0x1d0>
8010e25b:	c6 83 10 03 00 00 01 	movb   $0x1,0x310(%ebx)
8010e262:	80 b8 13 03 00 00 00 	cmpb   $0x0,0x313(%eax)
8010e269:	c6 83 0f 03 00 00 00 	movb   $0x0,0x30f(%ebx)
8010e270:	c6 83 0d 03 00 00 00 	movb   $0x0,0x30d(%ebx)
8010e277:	c6 83 11 03 00 00 00 	movb   $0x0,0x311(%ebx)
8010e27e:	c6 83 13 03 00 00 00 	movb   $0x0,0x313(%ebx)
8010e285:	8b 55 0c             	mov    0xc(%ebp),%edx
8010e288:	0f 95 83 12 03 00 00 	setne  0x312(%ebx)
8010e28f:	8b 80 20 03 00 00    	mov    0x320(%eax),%eax
8010e295:	83 c0 01             	add    $0x1,%eax
8010e298:	89 83 20 03 00 00    	mov    %eax,0x320(%ebx)
8010e29e:	89 d8                	mov    %ebx,%eax
8010e2a0:	e8 4b f0 ff ff       	call   8010d2f0 <unsafe_set_cgroup_dir_path>
8010e2a5:	81 bb 54 03 00 00 00 	cmpl   $0x80000000,0x354(%ebx)
8010e2ac:	00 00 80 
8010e2af:	c7 83 00 02 00 00 00 	movl   $0x0,0x200(%ebx)
8010e2b6:	00 00 00 
8010e2b9:	c7 83 04 03 00 00 00 	movl   $0x0,0x304(%ebx)
8010e2c0:	00 00 00 
8010e2c3:	c6 83 14 03 00 00 00 	movb   $0x0,0x314(%ebx)
8010e2ca:	c7 83 38 03 00 00 00 	movl   $0x0,0x338(%ebx)
8010e2d1:	00 00 00 
8010e2d4:	c7 83 18 03 00 00 40 	movl   $0x40,0x318(%ebx)
8010e2db:	00 00 00 
8010e2de:	c7 83 1c 03 00 00 40 	movl   $0x40,0x31c(%ebx)
8010e2e5:	00 00 00 
8010e2e8:	c7 83 24 03 00 00 00 	movl   $0x0,0x324(%ebx)
8010e2ef:	00 00 00 
8010e2f2:	c7 83 28 03 00 00 00 	movl   $0x0,0x328(%ebx)
8010e2f9:	00 00 00 
8010e2fc:	c7 83 2c 03 00 00 40 	movl   $0x40,0x32c(%ebx)
8010e303:	00 00 00 
8010e306:	c6 83 30 03 00 00 00 	movb   $0x0,0x330(%ebx)
8010e30d:	c7 83 34 03 00 00 00 	movl   $0x0,0x334(%ebx)
8010e314:	00 00 00 
8010e317:	c7 83 40 03 00 00 00 	movl   $0x0,0x340(%ebx)
8010e31e:	00 00 00 
8010e321:	c7 83 44 03 00 00 00 	movl   $0x0,0x344(%ebx)
8010e328:	00 00 00 
8010e32b:	c7 83 48 03 00 00 00 	movl   $0x0,0x348(%ebx)
8010e332:	00 00 00 
8010e335:	c7 83 4c 03 00 00 00 	movl   $0x0,0x34c(%ebx)
8010e33c:	00 00 00 
8010e33f:	77 0a                	ja     8010e34b <cgroup_initialize+0x13b>
8010e341:	c7 83 50 03 00 00 00 	movl   $0x80000000,0x350(%ebx)
8010e348:	00 00 80 
8010e34b:	89 d8                	mov    %ebx,%eax
8010e34d:	31 d2                	xor    %edx,%edx
8010e34f:	e8 fc fc ff ff       	call   8010e050 <set_min_mem.part.10>
8010e354:	c7 83 3c 03 00 00 00 	movl   $0x0,0x33c(%ebx)
8010e35b:	00 00 00 
8010e35e:	c7 83 58 03 00 00 00 	movl   $0x0,0x358(%ebx)
8010e365:	00 00 00 
8010e368:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%ebx)
8010e36f:	00 00 00 
8010e372:	c7 83 68 03 00 00 00 	movl   $0x0,0x368(%ebx)
8010e379:	00 00 00 
8010e37c:	c7 83 5c 03 00 00 00 	movl   $0x0,0x35c(%ebx)
8010e383:	00 00 00 
8010e386:	c7 83 60 03 00 00 00 	movl   $0x0,0x360(%ebx)
8010e38d:	00 00 00 
8010e390:	c7 83 64 03 00 00 00 	movl   $0x0,0x364(%ebx)
8010e397:	00 00 00 
8010e39a:	c7 83 70 03 00 00 ff 	movl   $0xffffffff,0x370(%ebx)
8010e3a1:	ff ff ff 
8010e3a4:	c7 83 6c 03 00 00 a0 	movl   $0x186a0,0x36c(%ebx)
8010e3ab:	86 01 00 
8010e3ae:	c7 83 78 03 00 00 00 	movl   $0x0,0x378(%ebx)
8010e3b5:	00 00 00 
8010e3b8:	c7 83 7c 03 00 00 00 	movl   $0x0,0x37c(%ebx)
8010e3bf:	00 00 00 
8010e3c2:	c7 83 80 03 00 00 00 	movl   $0x0,0x380(%ebx)
8010e3c9:	00 00 00 
8010e3cc:	c6 83 84 03 00 00 00 	movb   $0x0,0x384(%ebx)
8010e3d3:	83 c4 04             	add    $0x4,%esp
8010e3d6:	5b                   	pop    %ebx
8010e3d7:	5d                   	pop    %ebp
8010e3d8:	c3                   	ret    
8010e3d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010e3e0:	c6 83 10 03 00 00 00 	movb   $0x0,0x310(%ebx)
8010e3e7:	e9 76 fe ff ff       	jmp    8010e262 <cgroup_initialize+0x52>
8010e3ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e3f0:	c6 83 0c 03 00 00 01 	movb   $0x1,0x30c(%ebx)
8010e3f7:	c6 83 0d 03 00 00 01 	movb   $0x1,0x30d(%ebx)
8010e3fe:	c7 83 20 03 00 00 00 	movl   $0x0,0x320(%ebx)
8010e405:	00 00 00 
8010e408:	c6 03 00             	movb   $0x0,(%ebx)
8010e40b:	c7 83 08 03 00 00 00 	movl   $0x0,0x308(%ebx)
8010e412:	00 00 00 
8010e415:	c6 83 0e 03 00 00 01 	movb   $0x1,0x30e(%ebx)
8010e41c:	c6 83 0f 03 00 00 01 	movb   $0x1,0x30f(%ebx)
8010e423:	c6 83 10 03 00 00 01 	movb   $0x1,0x310(%ebx)
8010e42a:	c6 83 11 03 00 00 00 	movb   $0x0,0x311(%ebx)
8010e431:	c6 83 12 03 00 00 01 	movb   $0x1,0x312(%ebx)
8010e438:	c6 83 13 03 00 00 01 	movb   $0x1,0x313(%ebx)
8010e43f:	e9 61 fe ff ff       	jmp    8010e2a5 <cgroup_initialize+0x95>
8010e444:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010e44a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

8010e450 <cgroup_create>:
8010e450:	55                   	push   %ebp
8010e451:	89 e5                	mov    %esp,%ebp
8010e453:	57                   	push   %edi
8010e454:	56                   	push   %esi
8010e455:	53                   	push   %ebx
8010e456:	8d 9d e8 f9 ff ff    	lea    -0x618(%ebp),%ebx
8010e45c:	8d b5 e8 fb ff ff    	lea    -0x418(%ebp),%esi
8010e462:	81 ec 14 06 00 00    	sub    $0x614,%esp
8010e468:	ff 75 08             	pushl  0x8(%ebp)
8010e46b:	53                   	push   %ebx
8010e46c:	e8 af ec ff ff       	call   8010d120 <format_path>
8010e471:	5a                   	pop    %edx
8010e472:	59                   	pop    %ecx
8010e473:	56                   	push   %esi
8010e474:	53                   	push   %ebx
8010e475:	e8 86 e8 ff ff       	call   8010cd00 <get_dir_name>
8010e47a:	83 c4 10             	add    $0x10,%esp
8010e47d:	85 c0                	test   %eax,%eax
8010e47f:	0f 88 14 01 00 00    	js     8010e599 <cgroup_create+0x149>
8010e485:	8d 85 e8 fd ff ff    	lea    -0x218(%ebp),%eax
8010e48b:	83 ec 08             	sub    $0x8,%esp
8010e48e:	50                   	push   %eax
8010e48f:	53                   	push   %ebx
8010e490:	e8 cb e7 ff ff       	call   8010cc60 <get_base_name>
8010e495:	83 c4 10             	add    $0x10,%esp
8010e498:	85 c0                	test   %eax,%eax
8010e49a:	0f 88 f9 00 00 00    	js     8010e599 <cgroup_create+0x149>
8010e4a0:	83 ec 0c             	sub    $0xc,%esp
8010e4a3:	68 60 a5 13 80       	push   $0x8013a560
8010e4a8:	e8 23 82 ff ff       	call   801066d0 <acquire>
8010e4ad:	89 f0                	mov    %esi,%eax
8010e4af:	e8 cc ed ff ff       	call   8010d280 <unsafe_get_cgroup_by_path>
8010e4b4:	83 c4 10             	add    $0x10,%esp
8010e4b7:	85 c0                	test   %eax,%eax
8010e4b9:	89 c6                	mov    %eax,%esi
8010e4bb:	0f 84 c8 00 00 00    	je     8010e589 <cgroup_create+0x139>
8010e4c1:	89 c2                	mov    %eax,%edx
8010e4c3:	31 c9                	xor    %ecx,%ecx
8010e4c5:	8d 76 00             	lea    0x0(%esi),%esi
8010e4c8:	39 8a 1c 03 00 00    	cmp    %ecx,0x31c(%edx)
8010e4ce:	0f 86 cf 00 00 00    	jbe    8010e5a3 <cgroup_create+0x153>
8010e4d4:	8b 82 24 03 00 00    	mov    0x324(%edx),%eax
8010e4da:	39 82 18 03 00 00    	cmp    %eax,0x318(%edx)
8010e4e0:	0f 84 d6 00 00 00    	je     8010e5bc <cgroup_create+0x16c>
8010e4e6:	8b 92 08 03 00 00    	mov    0x308(%edx),%edx
8010e4ec:	83 c1 01             	add    $0x1,%ecx
8010e4ef:	85 d2                	test   %edx,%edx
8010e4f1:	75 d5                	jne    8010e4c8 <cgroup_create+0x78>
8010e4f3:	ba 1c a9 13 80       	mov    $0x8013a91c,%edx
8010e4f8:	b9 01 00 00 00       	mov    $0x1,%ecx
8010e4fd:	eb 0f                	jmp    8010e50e <cgroup_create+0xbe>
8010e4ff:	90                   	nop
8010e500:	83 c1 01             	add    $0x1,%ecx
8010e503:	81 c2 88 03 00 00    	add    $0x388,%edx
8010e509:	83 f9 40             	cmp    $0x40,%ecx
8010e50c:	74 62                	je     8010e570 <cgroup_create+0x120>
8010e50e:	80 3a 00             	cmpb   $0x0,(%edx)
8010e511:	75 ed                	jne    8010e500 <cgroup_create+0xb0>
8010e513:	8b 82 00 02 00 00    	mov    0x200(%edx),%eax
8010e519:	85 c0                	test   %eax,%eax
8010e51b:	75 e3                	jne    8010e500 <cgroup_create+0xb0>
8010e51d:	69 c9 88 03 00 00    	imul   $0x388,%ecx,%ecx
8010e523:	83 ec 04             	sub    $0x4,%esp
8010e526:	56                   	push   %esi
8010e527:	53                   	push   %ebx
8010e528:	8d b9 94 a5 13 80    	lea    -0x7fec5a6c(%ecx),%edi
8010e52e:	57                   	push   %edi
8010e52f:	e8 dc fc ff ff       	call   8010e210 <cgroup_initialize>
8010e534:	83 c4 10             	add    $0x10,%esp
8010e537:	89 f6                	mov    %esi,%esi
8010e539:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010e540:	83 86 24 03 00 00 01 	addl   $0x1,0x324(%esi)
8010e547:	8b b6 08 03 00 00    	mov    0x308(%esi),%esi
8010e54d:	85 f6                	test   %esi,%esi
8010e54f:	75 ef                	jne    8010e540 <cgroup_create+0xf0>
8010e551:	83 ec 0c             	sub    $0xc,%esp
8010e554:	68 60 a5 13 80       	push   $0x8013a560
8010e559:	e8 92 82 ff ff       	call   801067f0 <release>
8010e55e:	83 c4 10             	add    $0x10,%esp
8010e561:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010e564:	89 f8                	mov    %edi,%eax
8010e566:	5b                   	pop    %ebx
8010e567:	5e                   	pop    %esi
8010e568:	5f                   	pop    %edi
8010e569:	5d                   	pop    %ebp
8010e56a:	c3                   	ret    
8010e56b:	90                   	nop
8010e56c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e570:	83 ec 0c             	sub    $0xc,%esp
8010e573:	68 60 a5 13 80       	push   $0x8013a560
8010e578:	e8 73 82 ff ff       	call   801067f0 <release>
8010e57d:	c7 04 24 08 fc 10 80 	movl   $0x8010fc08,(%esp)
8010e584:	e8 47 1e ff ff       	call   801003d0 <panic>
8010e589:	83 ec 0c             	sub    $0xc,%esp
8010e58c:	68 60 a5 13 80       	push   $0x8013a560
8010e591:	e8 5a 82 ff ff       	call   801067f0 <release>
8010e596:	83 c4 10             	add    $0x10,%esp
8010e599:	8d 65 f4             	lea    -0xc(%ebp),%esp
8010e59c:	31 c0                	xor    %eax,%eax
8010e59e:	5b                   	pop    %ebx
8010e59f:	5e                   	pop    %esi
8010e5a0:	5f                   	pop    %edi
8010e5a1:	5d                   	pop    %ebp
8010e5a2:	c3                   	ret    
8010e5a3:	83 ec 0c             	sub    $0xc,%esp
8010e5a6:	68 60 a5 13 80       	push   $0x8013a560
8010e5ab:	e8 40 82 ff ff       	call   801067f0 <release>
8010e5b0:	c7 04 24 a0 fb 10 80 	movl   $0x8010fba0,(%esp)
8010e5b7:	e8 14 1e ff ff       	call   801003d0 <panic>
8010e5bc:	83 ec 0c             	sub    $0xc,%esp
8010e5bf:	68 60 a5 13 80       	push   $0x8013a560
8010e5c4:	e8 27 82 ff ff       	call   801067f0 <release>
8010e5c9:	c7 04 24 cc fb 10 80 	movl   $0x8010fbcc,(%esp)
8010e5d0:	e8 fb 1d ff ff       	call   801003d0 <panic>
8010e5d5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e5d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010e5e0 <unsafe_enable_mem_controller>:
8010e5e0:	55                   	push   %ebp
8010e5e1:	89 e5                	mov    %esp,%ebp
8010e5e3:	53                   	push   %ebx
8010e5e4:	83 ec 04             	sub    $0x4,%esp
8010e5e7:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010e5ea:	85 db                	test   %ebx,%ebx
8010e5ec:	74 79                	je     8010e667 <unsafe_enable_mem_controller+0x87>
8010e5ee:	80 bb 14 03 00 00 01 	cmpb   $0x1,0x314(%ebx)
8010e5f5:	74 70                	je     8010e667 <unsafe_enable_mem_controller+0x87>
8010e5f7:	80 bb 13 03 00 00 00 	cmpb   $0x0,0x313(%ebx)
8010e5fe:	75 60                	jne    8010e660 <unsafe_enable_mem_controller+0x80>
8010e600:	8b 83 54 03 00 00    	mov    0x354(%ebx),%eax
8010e606:	05 ff 0f 00 00       	add    $0xfff,%eax
8010e60b:	c1 e8 0c             	shr    $0xc,%eax
8010e60e:	2b 83 3c 03 00 00    	sub    0x33c(%ebx),%eax
8010e614:	85 c0                	test   %eax,%eax
8010e616:	7e 10                	jle    8010e628 <unsafe_enable_mem_controller+0x48>
8010e618:	83 ec 0c             	sub    $0xc,%esp
8010e61b:	50                   	push   %eax
8010e61c:	e8 ff 48 ff ff       	call   80102f20 <increse_protect_counter>
8010e621:	83 c4 10             	add    $0x10,%esp
8010e624:	85 c0                	test   %eax,%eax
8010e626:	75 3f                	jne    8010e667 <unsafe_enable_mem_controller+0x87>
8010e628:	80 bb 12 03 00 00 00 	cmpb   $0x0,0x312(%ebx)
8010e62f:	74 2f                	je     8010e660 <unsafe_enable_mem_controller+0x80>
8010e631:	c6 83 13 03 00 00 01 	movb   $0x1,0x313(%ebx)
8010e638:	b8 24 ac 13 80       	mov    $0x8013ac24,%eax
8010e63d:	eb 0d                	jmp    8010e64c <unsafe_enable_mem_controller+0x6c>
8010e63f:	90                   	nop
8010e640:	05 88 03 00 00       	add    $0x388,%eax
8010e645:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010e64a:	74 14                	je     8010e660 <unsafe_enable_mem_controller+0x80>
8010e64c:	3b 18                	cmp    (%eax),%ebx
8010e64e:	75 f0                	jne    8010e640 <unsafe_enable_mem_controller+0x60>
8010e650:	c6 40 0a 01          	movb   $0x1,0xa(%eax)
8010e654:	05 88 03 00 00       	add    $0x388,%eax
8010e659:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010e65e:	75 ec                	jne    8010e64c <unsafe_enable_mem_controller+0x6c>
8010e660:	31 c0                	xor    %eax,%eax
8010e662:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010e665:	c9                   	leave  
8010e666:	c3                   	ret    
8010e667:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010e66c:	eb f4                	jmp    8010e662 <unsafe_enable_mem_controller+0x82>
8010e66e:	66 90                	xchg   %ax,%ax

8010e670 <unsafe_disable_mem_controller>:
8010e670:	55                   	push   %ebp
8010e671:	89 e5                	mov    %esp,%ebp
8010e673:	56                   	push   %esi
8010e674:	53                   	push   %ebx
8010e675:	8b 75 08             	mov    0x8(%ebp),%esi
8010e678:	85 f6                	test   %esi,%esi
8010e67a:	74 2a                	je     8010e6a6 <unsafe_disable_mem_controller+0x36>
8010e67c:	80 be 13 03 00 00 00 	cmpb   $0x0,0x313(%esi)
8010e683:	bb 24 ac 13 80       	mov    $0x8013ac24,%ebx
8010e688:	89 d8                	mov    %ebx,%eax
8010e68a:	75 10                	jne    8010e69c <unsafe_disable_mem_controller+0x2c>
8010e68c:	eb 22                	jmp    8010e6b0 <unsafe_disable_mem_controller+0x40>
8010e68e:	66 90                	xchg   %ax,%ax
8010e690:	05 88 03 00 00       	add    $0x388,%eax
8010e695:	3d 9c 8a 14 80       	cmp    $0x80148a9c,%eax
8010e69a:	74 24                	je     8010e6c0 <unsafe_disable_mem_controller+0x50>
8010e69c:	3b 30                	cmp    (%eax),%esi
8010e69e:	75 f0                	jne    8010e690 <unsafe_disable_mem_controller+0x20>
8010e6a0:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)
8010e6a4:	74 ea                	je     8010e690 <unsafe_disable_mem_controller+0x20>
8010e6a6:	5b                   	pop    %ebx
8010e6a7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8010e6ac:	5e                   	pop    %esi
8010e6ad:	5d                   	pop    %ebp
8010e6ae:	c3                   	ret    
8010e6af:	90                   	nop
8010e6b0:	5b                   	pop    %ebx
8010e6b1:	31 c0                	xor    %eax,%eax
8010e6b3:	5e                   	pop    %esi
8010e6b4:	5d                   	pop    %ebp
8010e6b5:	c3                   	ret    
8010e6b6:	8d 76 00             	lea    0x0(%esi),%esi
8010e6b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010e6c0:	31 d2                	xor    %edx,%edx
8010e6c2:	c6 86 13 03 00 00 00 	movb   $0x0,0x313(%esi)
8010e6c9:	89 f0                	mov    %esi,%eax
8010e6cb:	e8 80 f9 ff ff       	call   8010e050 <set_min_mem.part.10>
8010e6d0:	81 be 54 03 00 00 00 	cmpl   $0x80000000,0x354(%esi)
8010e6d7:	00 00 80 
8010e6da:	77 22                	ja     8010e6fe <unsafe_disable_mem_controller+0x8e>
8010e6dc:	c7 86 50 03 00 00 00 	movl   $0x80000000,0x350(%esi)
8010e6e3:	00 00 80 
8010e6e6:	3b 33                	cmp    (%ebx),%esi
8010e6e8:	74 18                	je     8010e702 <unsafe_disable_mem_controller+0x92>
8010e6ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010e6f0:	81 c3 88 03 00 00    	add    $0x388,%ebx
8010e6f6:	81 fb 9c 8a 14 80    	cmp    $0x80148a9c,%ebx
8010e6fc:	74 b2                	je     8010e6b0 <unsafe_disable_mem_controller+0x40>
8010e6fe:	3b 33                	cmp    (%ebx),%esi
8010e700:	75 ee                	jne    8010e6f0 <unsafe_disable_mem_controller+0x80>
8010e702:	c6 43 0a 00          	movb   $0x0,0xa(%ebx)
8010e706:	eb e8                	jmp    8010e6f0 <unsafe_disable_mem_controller+0x80>
8010e708:	90                   	nop
8010e709:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010e710 <enable_mem_controller>:
8010e710:	55                   	push   %ebp
8010e711:	89 e5                	mov    %esp,%ebp
8010e713:	53                   	push   %ebx
8010e714:	83 ec 10             	sub    $0x10,%esp
8010e717:	68 60 a5 13 80       	push   $0x8013a560
8010e71c:	e8 af 7f ff ff       	call   801066d0 <acquire>
8010e721:	58                   	pop    %eax
8010e722:	ff 75 08             	pushl  0x8(%ebp)
8010e725:	e8 b6 fe ff ff       	call   8010e5e0 <unsafe_enable_mem_controller>
8010e72a:	89 c3                	mov    %eax,%ebx
8010e72c:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010e733:	e8 b8 80 ff ff       	call   801067f0 <release>
8010e738:	89 d8                	mov    %ebx,%eax
8010e73a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010e73d:	c9                   	leave  
8010e73e:	c3                   	ret    
8010e73f:	90                   	nop

8010e740 <disable_mem_controller>:
8010e740:	55                   	push   %ebp
8010e741:	89 e5                	mov    %esp,%ebp
8010e743:	53                   	push   %ebx
8010e744:	83 ec 10             	sub    $0x10,%esp
8010e747:	68 60 a5 13 80       	push   $0x8013a560
8010e74c:	e8 7f 7f ff ff       	call   801066d0 <acquire>
8010e751:	58                   	pop    %eax
8010e752:	ff 75 08             	pushl  0x8(%ebp)
8010e755:	e8 16 ff ff ff       	call   8010e670 <unsafe_disable_mem_controller>
8010e75a:	89 c3                	mov    %eax,%ebx
8010e75c:	c7 04 24 60 a5 13 80 	movl   $0x8013a560,(%esp)
8010e763:	e8 88 80 ff ff       	call   801067f0 <release>
8010e768:	89 d8                	mov    %ebx,%eax
8010e76a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8010e76d:	c9                   	leave  
8010e76e:	c3                   	ret    
8010e76f:	90                   	nop

8010e770 <cgroup_mem_stat_file_dirty_incr>:
8010e770:	55                   	push   %ebp
8010e771:	89 e5                	mov    %esp,%ebp
8010e773:	8b 45 08             	mov    0x8(%ebp),%eax
8010e776:	85 c0                	test   %eax,%eax
8010e778:	74 10                	je     8010e78a <cgroup_mem_stat_file_dirty_incr+0x1a>
8010e77a:	3d 94 a5 13 80       	cmp    $0x8013a594,%eax
8010e77f:	74 09                	je     8010e78a <cgroup_mem_stat_file_dirty_incr+0x1a>
8010e781:	80 b8 14 03 00 00 01 	cmpb   $0x1,0x314(%eax)
8010e788:	74 06                	je     8010e790 <cgroup_mem_stat_file_dirty_incr+0x20>
8010e78a:	5d                   	pop    %ebp
8010e78b:	c3                   	ret    
8010e78c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e790:	83 80 40 03 00 00 01 	addl   $0x1,0x340(%eax)
8010e797:	5d                   	pop    %ebp
8010e798:	c3                   	ret    
8010e799:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010e7a0 <cgroup_mem_stat_file_dirty_decr>:
8010e7a0:	55                   	push   %ebp
8010e7a1:	89 e5                	mov    %esp,%ebp
8010e7a3:	8b 45 08             	mov    0x8(%ebp),%eax
8010e7a6:	85 c0                	test   %eax,%eax
8010e7a8:	74 10                	je     8010e7ba <cgroup_mem_stat_file_dirty_decr+0x1a>
8010e7aa:	3d 94 a5 13 80       	cmp    $0x8013a594,%eax
8010e7af:	74 09                	je     8010e7ba <cgroup_mem_stat_file_dirty_decr+0x1a>
8010e7b1:	80 b8 14 03 00 00 01 	cmpb   $0x1,0x314(%eax)
8010e7b8:	74 06                	je     8010e7c0 <cgroup_mem_stat_file_dirty_decr+0x20>
8010e7ba:	5d                   	pop    %ebp
8010e7bb:	c3                   	ret    
8010e7bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e7c0:	83 a8 40 03 00 00 01 	subl   $0x1,0x340(%eax)
8010e7c7:	5d                   	pop    %ebp
8010e7c8:	c3                   	ret    
8010e7c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010e7d0 <cgroup_mem_stat_file_dirty_aggregated_incr>:
8010e7d0:	55                   	push   %ebp
8010e7d1:	89 e5                	mov    %esp,%ebp
8010e7d3:	8b 45 08             	mov    0x8(%ebp),%eax
8010e7d6:	85 c0                	test   %eax,%eax
8010e7d8:	74 10                	je     8010e7ea <cgroup_mem_stat_file_dirty_aggregated_incr+0x1a>
8010e7da:	3d 94 a5 13 80       	cmp    $0x8013a594,%eax
8010e7df:	74 09                	je     8010e7ea <cgroup_mem_stat_file_dirty_aggregated_incr+0x1a>
8010e7e1:	80 b8 14 03 00 00 01 	cmpb   $0x1,0x314(%eax)
8010e7e8:	74 06                	je     8010e7f0 <cgroup_mem_stat_file_dirty_aggregated_incr+0x20>
8010e7ea:	5d                   	pop    %ebp
8010e7eb:	c3                   	ret    
8010e7ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e7f0:	83 80 44 03 00 00 01 	addl   $0x1,0x344(%eax)
8010e7f7:	5d                   	pop    %ebp
8010e7f8:	c3                   	ret    
8010e7f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010e800 <cgroup_mem_stat_pgfault_incr>:
8010e800:	55                   	push   %ebp
8010e801:	89 e5                	mov    %esp,%ebp
8010e803:	8b 45 08             	mov    0x8(%ebp),%eax
8010e806:	85 c0                	test   %eax,%eax
8010e808:	74 10                	je     8010e81a <cgroup_mem_stat_pgfault_incr+0x1a>
8010e80a:	3d 94 a5 13 80       	cmp    $0x8013a594,%eax
8010e80f:	74 09                	je     8010e81a <cgroup_mem_stat_pgfault_incr+0x1a>
8010e811:	80 b8 14 03 00 00 01 	cmpb   $0x1,0x314(%eax)
8010e818:	74 06                	je     8010e820 <cgroup_mem_stat_pgfault_incr+0x20>
8010e81a:	5d                   	pop    %ebp
8010e81b:	c3                   	ret    
8010e81c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e820:	83 80 48 03 00 00 01 	addl   $0x1,0x348(%eax)
8010e827:	5d                   	pop    %ebp
8010e828:	c3                   	ret    
8010e829:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

8010e830 <cgroup_mem_stat_pgmajfault_incr>:
8010e830:	55                   	push   %ebp
8010e831:	89 e5                	mov    %esp,%ebp
8010e833:	8b 45 08             	mov    0x8(%ebp),%eax
8010e836:	85 c0                	test   %eax,%eax
8010e838:	74 10                	je     8010e84a <cgroup_mem_stat_pgmajfault_incr+0x1a>
8010e83a:	3d 94 a5 13 80       	cmp    $0x8013a594,%eax
8010e83f:	74 09                	je     8010e84a <cgroup_mem_stat_pgmajfault_incr+0x1a>
8010e841:	80 b8 14 03 00 00 01 	cmpb   $0x1,0x314(%eax)
8010e848:	74 06                	je     8010e850 <cgroup_mem_stat_pgmajfault_incr+0x20>
8010e84a:	5d                   	pop    %ebp
8010e84b:	c3                   	ret    
8010e84c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e850:	83 80 4c 03 00 00 01 	addl   $0x1,0x34c(%eax)
8010e857:	5d                   	pop    %ebp
8010e858:	c3                   	ret    
8010e859:	66 90                	xchg   %ax,%ax
8010e85b:	66 90                	xchg   %ax,%ax
8010e85d:	66 90                	xchg   %ax,%ax
8010e85f:	90                   	nop

8010e860 <cpu_account_initialize>:
8010e860:	55                   	push   %ebp
8010e861:	89 e5                	mov    %esp,%ebp
8010e863:	8b 45 08             	mov    0x8(%ebp),%eax
8010e866:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8010e86d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8010e874:	c7 40 04 a0 86 01 00 	movl   $0x186a0,0x4(%eax)
8010e87b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8010e881:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
8010e888:	5d                   	pop    %ebp
8010e889:	c3                   	ret    
8010e88a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

8010e890 <cpu_account_schedule_start>:
8010e890:	55                   	push   %ebp
8010e891:	89 e5                	mov    %esp,%ebp
8010e893:	83 ec 08             	sub    $0x8,%esp
8010e896:	e8 45 ba ff ff       	call   8010a2e0 <steady_clock_now>
8010e89b:	8b 55 08             	mov    0x8(%ebp),%edx
8010e89e:	89 02                	mov    %eax,(%edx)
8010e8a0:	c9                   	leave  
8010e8a1:	c3                   	ret    
8010e8a2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010e8a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010e8b0 <cpu_account_schedule_proc_update>:
8010e8b0:	55                   	push   %ebp
8010e8b1:	89 e5                	mov    %esp,%ebp
8010e8b3:	57                   	push   %edi
8010e8b4:	56                   	push   %esi
8010e8b5:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8010e8b8:	53                   	push   %ebx
8010e8b9:	8b 5d 08             	mov    0x8(%ebp),%ebx
8010e8bc:	8b 81 bc 02 00 00    	mov    0x2bc(%ecx),%eax
8010e8c2:	39 43 08             	cmp    %eax,0x8(%ebx)
8010e8c5:	76 36                	jbe    8010e8fd <cpu_account_schedule_proc_update+0x4d>
8010e8c7:	8b 73 04             	mov    0x4(%ebx),%esi
8010e8ca:	39 b1 b4 02 00 00    	cmp    %esi,0x2b4(%ecx)
8010e8d0:	89 f7                	mov    %esi,%edi
8010e8d2:	0f 46 b9 b4 02 00 00 	cmovbe 0x2b4(%ecx),%edi
8010e8d9:	31 d2                	xor    %edx,%edx
8010e8db:	6b c7 64             	imul   $0x64,%edi,%eax
8010e8de:	f7 f6                	div    %esi
8010e8e0:	89 81 b8 02 00 00    	mov    %eax,0x2b8(%ecx)
8010e8e6:	8b 43 08             	mov    0x8(%ebx),%eax
8010e8e9:	89 81 bc 02 00 00    	mov    %eax,0x2bc(%ecx)
8010e8ef:	8b 81 b4 02 00 00    	mov    0x2b4(%ecx),%eax
8010e8f5:	29 f8                	sub    %edi,%eax
8010e8f7:	89 81 b4 02 00 00    	mov    %eax,0x2b4(%ecx)
8010e8fd:	5b                   	pop    %ebx
8010e8fe:	5e                   	pop    %esi
8010e8ff:	5f                   	pop    %edi
8010e900:	5d                   	pop    %ebp
8010e901:	c3                   	ret    
8010e902:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
8010e909:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010e910 <cpu_account_schedule_process_decision>:
8010e910:	55                   	push   %ebp
8010e911:	89 e5                	mov    %esp,%ebp
8010e913:	57                   	push   %edi
8010e914:	56                   	push   %esi
8010e915:	53                   	push   %ebx
8010e916:	83 ec 1c             	sub    $0x1c,%esp
8010e919:	8b 45 0c             	mov    0xc(%ebp),%eax
8010e91c:	8b b8 ac 02 00 00    	mov    0x2ac(%eax),%edi
8010e922:	8b 45 08             	mov    0x8(%ebp),%eax
8010e925:	89 78 10             	mov    %edi,0x10(%eax)
8010e928:	e8 b3 e7 ff ff       	call   8010d0e0 <cgroup_lock>
8010e92d:	85 ff                	test   %edi,%edi
8010e92f:	0f 84 e7 00 00 00    	je     8010ea1c <cpu_account_schedule_process_decision+0x10c>
8010e935:	c6 45 df 01          	movb   $0x1,-0x21(%ebp)
8010e939:	eb 59                	jmp    8010e994 <cpu_account_schedule_process_decision+0x84>
8010e93b:	90                   	nop
8010e93c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010e940:	0f b6 9f 0d 03 00 00 	movzbl 0x30d(%edi),%ebx
8010e947:	84 db                	test   %bl,%bl
8010e949:	0f 84 b0 00 00 00    	je     8010e9ff <cpu_account_schedule_process_decision+0xef>
8010e94f:	8b 87 64 03 00 00    	mov    0x364(%edi),%eax
8010e955:	3b 87 70 03 00 00    	cmp    0x370(%edi),%eax
8010e95b:	0f 86 9e 00 00 00    	jbe    8010e9ff <cpu_account_schedule_process_decision+0xef>
8010e961:	80 bf 84 03 00 00 00 	cmpb   $0x0,0x384(%edi)
8010e968:	75 1c                	jne    8010e986 <cpu_account_schedule_process_decision+0x76>
8010e96a:	03 8f 80 03 00 00    	add    0x380(%edi),%ecx
8010e970:	83 87 7c 03 00 00 01 	addl   $0x1,0x37c(%edi)
8010e977:	c6 87 84 03 00 00 01 	movb   $0x1,0x384(%edi)
8010e97e:	29 c1                	sub    %eax,%ecx
8010e980:	89 8f 80 03 00 00    	mov    %ecx,0x380(%edi)
8010e986:	8b bf 08 03 00 00    	mov    0x308(%edi),%edi
8010e98c:	c6 45 df 00          	movb   $0x0,-0x21(%ebp)
8010e990:	85 ff                	test   %edi,%edi
8010e992:	74 75                	je     8010ea09 <cpu_account_schedule_process_decision+0xf9>
8010e994:	8b 45 08             	mov    0x8(%ebp),%eax
8010e997:	8b 8f 6c 03 00 00    	mov    0x36c(%edi),%ecx
8010e99d:	31 d2                	xor    %edx,%edx
8010e99f:	8b 00                	mov    (%eax),%eax
8010e9a1:	f7 f1                	div    %ecx
8010e9a3:	3b 87 74 03 00 00    	cmp    0x374(%edi),%eax
8010e9a9:	89 c6                	mov    %eax,%esi
8010e9ab:	76 93                	jbe    8010e940 <cpu_account_schedule_process_decision+0x30>
8010e9ad:	8b 87 64 03 00 00    	mov    0x364(%edi),%eax
8010e9b3:	0f b6 9f 0d 03 00 00 	movzbl 0x30d(%edi),%ebx
8010e9ba:	39 c1                	cmp    %eax,%ecx
8010e9bc:	89 45 e0             	mov    %eax,-0x20(%ebp)
8010e9bf:	0f 46 c1             	cmovbe %ecx,%eax
8010e9c2:	84 db                	test   %bl,%bl
8010e9c4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8010e9c7:	74 07                	je     8010e9d0 <cpu_account_schedule_process_decision+0xc0>
8010e9c9:	83 87 78 03 00 00 01 	addl   $0x1,0x378(%edi)
8010e9d0:	6b 45 e4 64          	imul   $0x64,-0x1c(%ebp),%eax
8010e9d4:	31 d2                	xor    %edx,%edx
8010e9d6:	c6 87 84 03 00 00 00 	movb   $0x0,0x384(%edi)
8010e9dd:	89 b7 74 03 00 00    	mov    %esi,0x374(%edi)
8010e9e3:	f7 f1                	div    %ecx
8010e9e5:	89 87 68 03 00 00    	mov    %eax,0x368(%edi)
8010e9eb:	8b 45 e0             	mov    -0x20(%ebp),%eax
8010e9ee:	2b 45 e4             	sub    -0x1c(%ebp),%eax
8010e9f1:	84 db                	test   %bl,%bl
8010e9f3:	89 87 64 03 00 00    	mov    %eax,0x364(%edi)
8010e9f9:	0f 85 50 ff ff ff    	jne    8010e94f <cpu_account_schedule_process_decision+0x3f>
8010e9ff:	8b bf 08 03 00 00    	mov    0x308(%edi),%edi
8010ea05:	85 ff                	test   %edi,%edi
8010ea07:	75 8b                	jne    8010e994 <cpu_account_schedule_process_decision+0x84>
8010ea09:	0f be 5d df          	movsbl -0x21(%ebp),%ebx
8010ea0d:	e8 ee e6 ff ff       	call   8010d100 <cgroup_unlock>
8010ea12:	83 c4 1c             	add    $0x1c,%esp
8010ea15:	89 d8                	mov    %ebx,%eax
8010ea17:	5b                   	pop    %ebx
8010ea18:	5e                   	pop    %esi
8010ea19:	5f                   	pop    %edi
8010ea1a:	5d                   	pop    %ebp
8010ea1b:	c3                   	ret    
8010ea1c:	bb 01 00 00 00       	mov    $0x1,%ebx
8010ea21:	eb ea                	jmp    8010ea0d <cpu_account_schedule_process_decision+0xfd>
8010ea23:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010ea29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010ea30 <cpu_account_before_process_schedule>:
8010ea30:	55                   	push   %ebp
8010ea31:	89 e5                	mov    %esp,%ebp
8010ea33:	83 ec 08             	sub    $0x8,%esp
8010ea36:	e8 a5 b8 ff ff       	call   8010a2e0 <steady_clock_now>
8010ea3b:	8b 55 08             	mov    0x8(%ebp),%edx
8010ea3e:	89 42 0c             	mov    %eax,0xc(%edx)
8010ea41:	c9                   	leave  
8010ea42:	c3                   	ret    
8010ea43:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
8010ea49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010ea50 <cpu_account_after_process_schedule>:
8010ea50:	55                   	push   %ebp
8010ea51:	89 e5                	mov    %esp,%ebp
8010ea53:	57                   	push   %edi
8010ea54:	56                   	push   %esi
8010ea55:	53                   	push   %ebx
8010ea56:	83 ec 0c             	sub    $0xc,%esp
8010ea59:	8b 75 08             	mov    0x8(%ebp),%esi
8010ea5c:	8b 7d 0c             	mov    0xc(%ebp),%edi
8010ea5f:	8b 5e 10             	mov    0x10(%esi),%ebx
8010ea62:	e8 79 b8 ff ff       	call   8010a2e0 <steady_clock_now>
8010ea67:	89 06                	mov    %eax,(%esi)
8010ea69:	2b 46 0c             	sub    0xc(%esi),%eax
8010ea6c:	89 46 0c             	mov    %eax,0xc(%esi)
8010ea6f:	01 87 b0 02 00 00    	add    %eax,0x2b0(%edi)
8010ea75:	8b 46 0c             	mov    0xc(%esi),%eax
8010ea78:	01 87 b4 02 00 00    	add    %eax,0x2b4(%edi)
8010ea7e:	e8 5d e6 ff ff       	call   8010d0e0 <cgroup_lock>
8010ea83:	85 db                	test   %ebx,%ebx
8010ea85:	74 2d                	je     8010eab4 <cpu_account_after_process_schedule+0x64>
8010ea87:	89 f6                	mov    %esi,%esi
8010ea89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
8010ea90:	8b 46 0c             	mov    0xc(%esi),%eax
8010ea93:	31 d2                	xor    %edx,%edx
8010ea95:	01 83 5c 03 00 00    	add    %eax,0x35c(%ebx)
8010ea9b:	11 93 60 03 00 00    	adc    %edx,0x360(%ebx)
8010eaa1:	8b 46 0c             	mov    0xc(%esi),%eax
8010eaa4:	01 83 64 03 00 00    	add    %eax,0x364(%ebx)
8010eaaa:	8b 9b 08 03 00 00    	mov    0x308(%ebx),%ebx
8010eab0:	85 db                	test   %ebx,%ebx
8010eab2:	75 dc                	jne    8010ea90 <cpu_account_after_process_schedule+0x40>
8010eab4:	83 c4 0c             	add    $0xc,%esp
8010eab7:	5b                   	pop    %ebx
8010eab8:	5e                   	pop    %esi
8010eab9:	5f                   	pop    %edi
8010eaba:	5d                   	pop    %ebp
8010eabb:	e9 40 e6 ff ff       	jmp    8010d100 <cgroup_unlock>

8010eac0 <cpu_account_schedule_finish>:
8010eac0:	55                   	push   %ebp
8010eac1:	89 e5                	mov    %esp,%ebp
8010eac3:	5d                   	pop    %ebp
8010eac4:	c3                   	ret    
8010eac5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010eac9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010ead0 <cpu_account_before_hlt>:
8010ead0:	55                   	push   %ebp
8010ead1:	89 e5                	mov    %esp,%ebp
8010ead3:	5d                   	pop    %ebp
8010ead4:	c3                   	ret    
8010ead5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
8010ead9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

8010eae0 <cpu_account_after_hlt>:
8010eae0:	55                   	push   %ebp
8010eae1:	89 e5                	mov    %esp,%ebp
8010eae3:	5d                   	pop    %ebp
8010eae4:	c3                   	ret    
